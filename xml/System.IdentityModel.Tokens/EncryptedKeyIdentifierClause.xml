<Type Name="EncryptedKeyIdentifierClause" FullName="System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
  <TypeSignature Language="C#" Value="public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKeyIdentifierClause sealed : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7034a-101">Représente une clause d'identificateur de clé qui identifie une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-101">Represents a key identifier clause that identifies an encrypted key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-102">En général, l'utilisation de la <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> n'est pas nécessaire, sauf lorsqu'un service d'émission du jeton de sécurité personnalisé est créé.</span><span class="sxs-lookup"><span data-stu-id="7034a-102">Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="7034a-103">Lorsqu'un service d'émission du jeton de sécurité retourne un jeton de sécurité, le jeton de sécurité émis contient des références à des jetons de sécurité attachés et détachés.</span><span class="sxs-lookup"><span data-stu-id="7034a-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="7034a-104">Les références attachées renvoient aux jetons de sécurité qui sont contenus dans l'en-tête de sécurité d'un message SOAP et les références détachées sont des jetons de sécurité qui ne sont pas inclus dans l'en-tête de sécurité d'un message SOAP.</span><span class="sxs-lookup"><span data-stu-id="7034a-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="7034a-105">En général, ces références déclarent l'authenticité du jeton de sécurité émis.</span><span class="sxs-lookup"><span data-stu-id="7034a-105">These references typically affirm the authenticity of the issued security token.</span></span> <span data-ttu-id="7034a-106">La classe <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> permet de référencer une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-106">Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key.</span></span> <span data-ttu-id="7034a-107">La méthode <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> retourne la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-107">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.</span></span>  
  
 <span data-ttu-id="7034a-108">WCF accepte les clés encapsulées qui sont correctes en ce qui concerne le format de transmission.</span><span class="sxs-lookup"><span data-stu-id="7034a-108">WCF accepts wrapped keys that are well formed with respect to the wire format.</span></span> <span data-ttu-id="7034a-109">L'algorithme de chiffrement de clé spécifié sur le câble est accepté et utilisé.</span><span class="sxs-lookup"><span data-stu-id="7034a-109">The key wrap algorithm specified on the wire is accepted and used.</span></span> <span data-ttu-id="7034a-110">Sa compatibilité avec le <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> spécifié par le point de terminaison n'est pas vérifiée.</span><span class="sxs-lookup"><span data-stu-id="7034a-110">It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7034a-111">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7034a-112">Tableau d'<see cref="T:System.Byte" /> qui contient une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-112">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7034a-113">Définit la valeur retournée par la méthode <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-113">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7034a-114">Algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-114">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7034a-115">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <summary><span data-ttu-id="7034a-116">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> à l'aide de la clé chiffrée spécifiée et de l'algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-117">Utilisez les chaînes constantes statiques dans les <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme de chiffrement pour le paramètre `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="7034a-117">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7034a-118"><paramref name="encryptionMethod" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-118"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7034a-119">- ou -</span><span class="sxs-lookup"><span data-stu-id="7034a-119">-or-</span></span>  
  
 <span data-ttu-id="7034a-120"><paramref name="encryptedKey" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-120"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7034a-121"><paramref name="encryptedKey" /> est de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="7034a-121"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7034a-122">Tableau d'<see cref="T:System.Byte" /> qui contient une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-122">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7034a-123">Définit la valeur retournée par la méthode <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-123">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7034a-124">Algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-124">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7034a-125">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-125">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary><span data-ttu-id="7034a-126">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> à l'aide de la clé chiffrée spécifiée, de l'algorithme de chiffrement utilisé pour chiffrer la clé et d'un identificateur de clé pour la clé de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="7034a-126">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-127">Utilisez les chaînes constantes statiques dans les <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme de chiffrement pour le paramètre `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="7034a-127">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7034a-128"><paramref name="encryptionMethod" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-128"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7034a-129">- ou -</span><span class="sxs-lookup"><span data-stu-id="7034a-129">-or-</span></span>  
  
 <span data-ttu-id="7034a-130"><paramref name="encryptedKey" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-130"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7034a-131"><paramref name="encryptedKey" /> est de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="7034a-131"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7034a-132">Tableau d'<see cref="T:System.Byte" /> qui contient une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-132">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7034a-133">Définit la valeur retournée par la méthode <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-133">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7034a-134">Algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-134">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7034a-135">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-135">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName"><span data-ttu-id="7034a-136">Nom lisible par l’utilisateur qui est associé à la clé spécifiée dans le paramètre <c>encryptedKey</c>.</span><span class="sxs-lookup"><span data-stu-id="7034a-136">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span></span> <span data-ttu-id="7034a-137">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-137">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span></span></param>
        <summary><span data-ttu-id="7034a-138">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> à l'aide de la clé chiffrée spécifiée, de l'algorithme de chiffrement utilisé pour chiffrer la clé, d'un identificateur de clé pour la clé de chiffrement et d'un nom lisible par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7034a-138">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-139">Utilisez les chaînes constantes statiques dans les <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme de chiffrement pour le paramètre `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="7034a-139">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7034a-140"><paramref name="encryptionMethod" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-140"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7034a-141">- ou -</span><span class="sxs-lookup"><span data-stu-id="7034a-141">-or-</span></span>  
  
 <span data-ttu-id="7034a-142"><paramref name="encryptedKey" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-142"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7034a-143"><paramref name="encryptedKey" /> est de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="7034a-143"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="4" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="5" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7034a-144">Tableau d'<see cref="T:System.Byte" /> qui contient une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-144">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7034a-145">Définit la valeur retournée par la méthode <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-145">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7034a-146">Algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-146">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7034a-147">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-147">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName"><span data-ttu-id="7034a-148">Nom lisible par l’utilisateur qui est associé à la clé spécifiée dans le paramètre <c>encryptedKey</c>.</span><span class="sxs-lookup"><span data-stu-id="7034a-148">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span></span> <span data-ttu-id="7034a-149">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-149">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span></span></param>
        <param name="derivationNonce"><span data-ttu-id="7034a-150">Tableau d'<see cref="T:System.Byte" /> qui contient la valeur à usage unique utilisée pour créer une clé dérivée.</span><span class="sxs-lookup"><span data-stu-id="7034a-150">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="7034a-151">Définit la valeur retournée par la méthode <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-151">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="derivationLength"><span data-ttu-id="7034a-152">Taille de la clé dérivée.</span><span class="sxs-lookup"><span data-stu-id="7034a-152">The size of the derived key.</span></span> <span data-ttu-id="7034a-153">Définit la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-153">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <summary><span data-ttu-id="7034a-154">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> à l'aide de la clé chiffrée spécifiée, de l'algorithme de chiffrement utilisé pour chiffrer la clé, d'un identificateur de clé pour la clé et d'un nom lisible par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7034a-154">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-155">Lorsque les paramètres `derivationNonce` et `derivationLength` sont spécifiés, la clé dérivée implicite est utilisée au lieu de la clé de sécurité directe du jeton.</span><span class="sxs-lookup"><span data-stu-id="7034a-155">When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="7034a-156">Utilisez les chaînes constantes statiques dans les <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme de chiffrement pour le paramètre `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="7034a-156">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7034a-157"><paramref name="encryptionMethod" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-157"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7034a-158">- ou -</span><span class="sxs-lookup"><span data-stu-id="7034a-158">-or-</span></span>  
  
 <span data-ttu-id="7034a-159"><paramref name="encryptedKey" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-159"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7034a-160"><paramref name="encryptedKey" /> est de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="7034a-160"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7034a-161">Obtient un nom utilisateur lisible associé à la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-161">Gets a user-readable name that is associated with the encrypted key.</span></span></summary>
        <value><span data-ttu-id="7034a-162">Nom utilisateur lisible associé à la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-162">A user-readable name that is associated with the encrypted key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-163">Lorsque le <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> propriété est sérialisée en XML, il est placé dans le <`CarriedKeyName`> élément.</span><span class="sxs-lookup"><span data-stu-id="7034a-163">When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element.</span></span> <span data-ttu-id="7034a-164">Pour les clés de chiffrement, le <`CarriedKeyName`> élément est un élément facultatif qui associe un nom lisible par l’utilisateur à une valeur de clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-164">For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value.</span></span> <span data-ttu-id="7034a-165">Ce nom peut ensuite être utilisé pour référencer la clé à l’aide du <`KeyName`> élément dans le <`KeyInfo`> élément.</span><span class="sxs-lookup"><span data-stu-id="7034a-165">This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element.</span></span> <span data-ttu-id="7034a-166">Le même <`CarriedKeyName`> valeur de l’élément, contrairement à une valeur d’ID, peut se produire plusieurs fois dans un document unique.</span><span class="sxs-lookup"><span data-stu-id="7034a-166">The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document.</span></span> <span data-ttu-id="7034a-167">La valeur de la clé doit être identique dans tous les <`EncryptedKey`> éléments identifiés avec le même <`CarriedKeyName`> nom d’un document XML.</span><span class="sxs-lookup"><span data-stu-id="7034a-167">The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ EncryptingKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7034a-168">Obtient un identificateur de clé pour la clé de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="7034a-168">Gets a key identifier for the encrypting key.</span></span></summary>
        <value><span data-ttu-id="7034a-169"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> qui représente l'identificateur de clé pour la clé de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="7034a-169">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public string EncryptionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7034a-170">Obtient l'algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-170">Gets the cryptographic algorithm that is used to encrypt the key.</span></span></summary>
        <value><span data-ttu-id="7034a-171">Algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-171">The cryptographic algorithm that is used to encrypt the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-172">En général, la valeur de la propriété <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> est l'une des chaînes constantes statiques dans la classe <xref:System.IdentityModel.Tokens.SecurityAlgorithms>.</span><span class="sxs-lookup"><span data-stu-id="7034a-172">Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptedKey">
      <MemberSignature Language="C#" Value="public byte[] GetEncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetEncryptedKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncryptedKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetEncryptedKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7034a-173">Obtient la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-173">Gets the encrypted key.</span></span></summary>
        <returns><span data-ttu-id="7034a-174">Tableau d'<see cref="T:System.Byte" /> qui contient la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-174">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-175">Le tableau retourné par la méthode <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> est un clone de la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-175">The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7034a-176">Retourne une valeur qui indique si l'identificateur de clé pour cette instance équivaut à l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="7034a-176">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="clause">To be added.</param>
        <summary><span data-ttu-id="7034a-177">Retourne une valeur qui indique si l'identificateur de clé pour cette instance équivaut à la clause d'identificateur de clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="7034a-177">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span></span></summary>
        <returns>
          <span data-ttu-id="7034a-178"><see langword="true" /> si <paramref name="keyIdentifierClause" /> est de type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> et a la même clé chiffrée, la même méthode de chiffrement et le même nom d'utilisateur lisible que l'instance en cours ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-178"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7034a-179"><paramref name="keyIdentifierClause" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-179"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] encryptedKey, string encryptionMethod, string carriedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (encryptedKey As Byte(), encryptionMethod As String, carriedKeyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::String ^ carriedKeyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
        <Parameter Name="carriedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7034a-180">Tableau d'<see cref="T:System.Byte" /> qui contient une clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-180">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7034a-181">Algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-181">The cryptographic algorithm that is used to encrypt the key.</span></span></param>
        <param name="carriedKeyName"><span data-ttu-id="7034a-182">Nom utilisateur lisible associé à la clé chiffrée.</span><span class="sxs-lookup"><span data-stu-id="7034a-182">A user-readable name that is associated with the encrypted key.</span></span></param>
        <summary><span data-ttu-id="7034a-183">Retourne une valeur qui indique si l'identificateur de clé pour cette instance équivaut à la clé chiffrée, à la méthode de chiffrement et au nom d'utilisateur lisible spécifiés.</span><span class="sxs-lookup"><span data-stu-id="7034a-183">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</span></span></summary>
        <returns>
          <span data-ttu-id="7034a-184"><see langword="true" /> si les valeurs des paramètres <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> et <paramref name="carriedKeyName" /> retournées respectivement par la méthode <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> et les propriétés <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> et <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> sont les mêmes ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7034a-184"><see langword="true" /> if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7034a-185">Retourne une chaîne qui représente l'objet actuel.</span><span class="sxs-lookup"><span data-stu-id="7034a-185">Returns a string that represents the current object.</span></span></summary>
        <returns><span data-ttu-id="7034a-186">Objet actif.</span><span class="sxs-lookup"><span data-stu-id="7034a-186">The current object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7034a-187">La méthode <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> retourne une chaîne qui contient la clé chiffrée et l'algorithme de chiffrement utilisé pour chiffrer la clé.</span><span class="sxs-lookup"><span data-stu-id="7034a-187">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>