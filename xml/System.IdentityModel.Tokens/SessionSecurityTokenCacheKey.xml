<Type Name="SessionSecurityTokenCacheKey" FullName="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6385f78a445254363bc83f249e22b8518d74d586" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36556592" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenCacheKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenCacheKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente la clé d'une entrée dans un <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lors de la mise en cache un <xref:System.IdentityModel.Tokens.SessionSecurityToken> il y a deux index requis. Un est l’ID de contexte, représenté par le <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> propriété, qui est unique dans tous les jetons de session. L’autre est la génération de clé, représentée par le <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> propriété, qui est unique au sein d’un jeton de session. Lorsqu’un jeton de session est émis qu’il a uniquement un ID de contexte. Lorsque le jeton de session est renouvelé, la génération de clé est ajoutée. Après un renouvellement, le jeton de session renouvelé est identifiable de façon unique par le biais de l’ID de contexte et la génération de clé.  
  
 Objets de type <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> sont utilisés comme les index dans le cache de jeton de session. Un index aura toujours valide <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> propriété spécifiée, mais le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété peut être `null`, selon que le jeton a été renouvelé. Il est également facultative <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A> qui donne le point de terminaison auquel le jeton est étendu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointId, class System.Xml.UniqueId contextId, class System.Xml.UniqueId keyGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpointId As String, contextId As UniqueId, keyGeneration As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenCacheKey(System::String ^ endpointId, System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ keyGeneration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenCacheKey : string * System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenCacheKey (endpointId, contextId, keyGeneration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="keyGeneration" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="endpointId">ID du point de terminaison auquel l'entrée de cache est étendue. Il doit s'agir de la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> du jeton mis en cache.</param>
        <param name="contextId">ID de contexte de l'entrée de cache. Il doit s'agir de la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" /> du jeton mis en cache.</param>
        <param name="keyGeneration">Génération de la clé de l'entrée de cache. Il doit s'agir de la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" /> du jeton mis en cache. Cette valeur est disponible lorsque le jeton est renouvelé. La valeur sera <see langword="null" /> lors de la mise en cache d'un nouveau jeton.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'ID de contexte pour la clé de cache.</summary>
        <value>ID de contexte de la clé de cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela correspond à la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> propriété du jeton mis en cache.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'ID du point de terminaison dont la portée de cette entrée de cache est définie.</summary>
        <value>ID du point de terminaison auquel cette entrée de cache est étendue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela correspond à la <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> propriété du jeton mis en cache.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sessionSecurityTokenCacheKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à comparer à la clé de cache actuelle. Doit être assignable depuis <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />.</param>
        <summary>Détermine si l'objet spécifié correspond à la clé de cache actuelle.</summary>
        <returns><see langword="true" /> si l'objet spécifié correspond à la même instance que la clé de cache actuelle ; sinon  <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> est `true`, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété n’est pas utilisée dans la comparaison.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sessionSecurityTokenCacheKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un code de hachage pour la clé de cache actuelle.</summary>
        <returns>Code de hachage pour la clé de cache actuelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> est `true`, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété n’est pas utilisée pour générer le code de hachage.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreKeyGeneration">
      <MemberSignature Language="C#" Value="public bool IgnoreKeyGeneration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreKeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreKeyGeneration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreKeyGeneration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreKeyGeneration : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'opération de génération de clé peut être ignorée lors de la comparaison d'index.</summary>
        <value><see langword="true" /> pour ignorer la génération de clé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété affecte la façon dont le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété est traitée par les opérateurs et les méthodes suivantes : <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A>, et <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la génération de clé pour la clé de cache.</summary>
        <value>Génération de clé pour la clé de cache</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela correspond à la <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> propriété du jeton mis en cache.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As SessionSecurityTokenCacheKey, second As SessionSecurityTokenCacheKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ first, System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ second);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.IdentityModel.Tokens.SessionSecurityTokenCacheKey * System.IdentityModel.Tokens.SessionSecurityTokenCacheKey -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="second" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="first">Première clé de cache à comparer.</param>
        <param name="second">Deuxième clé de cache à comparer.</param>
        <summary>Implémente l'opérateur d'égalité pour la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />.</summary>
        <returns><see langword="true" /> si les clés de cache sont les mêmes ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> est `true`, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété n’est pas utilisée dans la comparaison.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As SessionSecurityTokenCacheKey, second As SessionSecurityTokenCacheKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ first, System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ second);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.IdentityModel.Tokens.SessionSecurityTokenCacheKey * System.IdentityModel.Tokens.SessionSecurityTokenCacheKey -&gt; bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="second" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="first">Première clé de cache à comparer.</param>
        <param name="second">Deuxième clé de cache à comparer.</param>
        <summary>Implémente l'opérateur d'égalité pour la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />.</summary>
        <returns><see langword="true" /> si les clés de cache sont différentes ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> est `true`, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété n’est pas utilisée dans la comparaison.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sessionSecurityTokenCacheKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remplace <see cref="M:System.Object.ToString" /> pour fournir un identificateur unique.</summary>
        <returns>Clé sous la forme de chaîne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> est `true`, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> propriété n’est pas utilisée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>