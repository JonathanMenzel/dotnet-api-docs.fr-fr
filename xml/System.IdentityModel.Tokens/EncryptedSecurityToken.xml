<Type Name="EncryptedSecurityToken" FullName="System.IdentityModel.Tokens.EncryptedSecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78a3b86d0d777902eb2af504b837e6bf4f8bf3b1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36481205" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <TypeSignature Language="F#" Value="type EncryptedSecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ed81c-101">Jeton d'habillage qui gère le chiffrement pour un jeton qui ne le prend pas en charge en mode natif.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed81c-101">A wrapping-token that handles encryption for a token that does not natively support it.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed81c-102">Par exemple, un <xref:System.IdentityModel.Tokens.SamlSecurityToken> ne peut pas chiffrer elle-même, donc, pour émettre une assertion SAML11 chiffrée, en les encapsulant un <xref:System.IdentityModel.Tokens.SamlSecurityToken> avec un <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> et fournir appropriée <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span><span class="sxs-lookup"><span data-stu-id="ed81c-102">For example, a <xref:System.IdentityModel.Tokens.SamlSecurityToken> cannot encrypt itself, so to issue an encrypted SAML11 assertion, wrap a <xref:System.IdentityModel.Tokens.SamlSecurityToken> with an <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> and provide appropriate <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedSecurityToken (System.IdentityModel.Tokens.SecurityToken token, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityToken token, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedSecurityToken(System::IdentityModel::Tokens::SecurityToken ^ token, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.EncryptedSecurityToken : System.IdentityModel.Tokens.SecurityToken * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.EncryptedSecurityToken" Usage="new System.IdentityModel.Tokens.EncryptedSecurityToken (token, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="ed81c-103">Jeton à chiffrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-103">The token to encrypt.</span>
          </span>
        </param>
        <param name="encryptingCredentials">
          <span data-ttu-id="ed81c-104">Informations d'identification à utiliser pour chiffrer le jeton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-104">The credentials to use to encrypt the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed81c-105">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> pour le jeton spécifié à l'aide des informations d'identification de chiffrement spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> class for the specified token by using the specified encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed81c-106">Hérité de l'objet <xref:System.IdentityModel.Tokens.SecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="ed81c-106">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause override bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="encryptedSecurityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ed81c-107">Type de clause d'identificateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-107">The type of the key identifier clause.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ed81c-108">Obtient une valeur qui indique si le jeton peut créer une clause d'identificateur de clé du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-108">Gets a value that indicates whether the token can create a key identifier clause of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed81c-109">
            <see langword="true" /> si le jeton peut créer une clause d'identificateur de clé du type spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-109">
              <see langword="true" /> if the token can create a key identifier clause of the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed81c-110">Hérité de l'objet <xref:System.IdentityModel.Tokens.SecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="ed81c-110">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause override T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="encryptedSecurityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ed81c-111">Type pour lequel créer la clause d'identificateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-111">The type of the key identifier clause to create.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ed81c-112">Crée une clause d'identificateur de clé du type spécifié pour le jeton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-112">Creates a key identifier clause of the specified type for the token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed81c-113">Clause d'identificateur de clé du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-113">A key identifier clause of the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed81c-114">Obtient les informations d'authentification à utiliser pour le chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-114">Gets the credentials to use for encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed81c-115">Informations d'identification à utiliser pour le chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-115">The credentials to use for encryption.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.EncryptedSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed81c-116">Obtient l'identificateur unique du jeton de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-116">Gets the unique identifier of the security token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed81c-117">Identificateur unique du jeton de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-117">The unique identifier of the security token.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="encryptedSecurityToken.MatchesKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="ed81c-118">Clause de l'identificateur de clé à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-118">A key identifier clause to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed81c-119">Retourne une valeur qui indique si l'identificateur de clé pour cette instance peut être résolu à la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-119">Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed81c-120">
            <see langword="true" /> si la clause d'identificateur de clé spécifiée peut être résolue par cette instance ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-120">
              <see langword="true" /> if the specified key identifier clause can be resolved by this instance; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed81c-121">Hérité de l'objet <xref:System.IdentityModel.Tokens.SecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="ed81c-121">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="encryptedSecurityToken.ResolveKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="ed81c-122">Clause d'identificateur de clé pour laquelle obtenir la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-122">The key identifier clause to get the key for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed81c-123">Obtient la clé pour la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-123">Gets the key for the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed81c-124">Clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-124">The key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed81c-125">Hérité de l'objet <xref:System.IdentityModel.Tokens.SecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="ed81c-125">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed81c-126">Obtient les clés de chiffrement associées au jeton de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-126">Gets the cryptographic keys associated with the security token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed81c-127">Ensemble de clés associé au jeton de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-127">The set of keys associated with the security token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed81c-128">Hérité de l'objet <xref:System.IdentityModel.Tokens.SecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="ed81c-128">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken Token" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ Token { System::IdentityModel::Tokens::SecurityToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.IdentityModel.Tokens.SecurityToken" Usage="System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed81c-129">Obtient le jeton chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-129">Gets the encrypted token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed81c-130">Jeton chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-130">The encrypted token.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed81c-131">Obtient le premier instant auquel le jeton de sécurité est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-131">Gets the first instant in time at which the security token is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed81c-132">Instant auquel le jeton de sécurité est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-132">The instant in time at which the security token is valid.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed81c-133">Obtient le dernier instant auquel le jeton de sécurité est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-133">Gets the last instant in time at which the security token is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed81c-134">Dernier instant auquel le jeton de sécurité est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed81c-134">The last instant in time at which the security token is valid.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
  </Members>
</Type>