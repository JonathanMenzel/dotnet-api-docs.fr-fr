<Type Name="ConfigurationBasedIssuerNameRegistry" FullName="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ee8edac4007c27aaaf12d885d12753ae1d33a50" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36481726" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConfigurationBasedIssuerNameRegistry : System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationBasedIssuerNameRegistry extends System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationBasedIssuerNameRegistry&#xA;Inherits IssuerNameRegistry" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationBasedIssuerNameRegistry : System::IdentityModel::Tokens::IssuerNameRegistry" />
  <TypeSignature Language="F#" Value="type ConfigurationBasedIssuerNameRegistry = class&#xA;    inherit IssuerNameRegistry" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.IssuerNameRegistry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un Registre des noms d'émetteurs qui gère une liste d'émetteurs approuvés chargés à partir des éléments du fichier de configuration de l'application qui associent chaque nom d'émetteur au certificat X.509 nécessaire pour vérifier la signature des jetons produits par l'émetteur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> classe gère un dictionnaire des émetteurs approuvés en mappant le certificat de chaque émetteur approuvé à un nom qui fait référence à cet émetteur. Les certificats sont spécifiés à l’aide de l’ASN.1 forme codée de l’empreinte numérique. Le nom de l’émetteur peut être n’importe quelle chaîne, à condition qu’il soit unique dans la portée de l’application. Ce dictionnaire est accessible via la <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> propriété. La classe peut uniquement résoudre des certificats X.509.  
  
 La table des émetteurs approuvés est spécifiée dans un fichier de configuration en ajoutant des entrées sous la [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) élément. Le `<trustedIssuers>` élément est un élément enfant de le [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) élément et il est valide lorsque le <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> classe est spécifiée dans le `type` attribut de cet élément. Pour plus d’informations, consultez la documentation pour chacun de ces éléments dans le [schéma de Configuration WIF](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9). Pour plus d’informations sur les registres de nom de l’émetteur, consultez la <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe.  
  
 Vous pouvez dériver de <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> pour implémenter votre propre registre de nom de configuration en fonction de l’émetteur. Les méthodes que vous substituez dépend de votre implémentation. Par exemple, vous pouvez remplacer le <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> méthode pour charger la configuration à partir d’un schéma de configuration personnalisée.  
  
   
  
## Examples  
 Le code XML suivant montre la configuration pour un <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> ajoutée pour une collection de gestionnaires de jetons de sécurité. Le `<trustedIssuers>` élément se comporte comme une collection de configuration .NET classique, ce qui permet la `<add>`, `<delete>` et `<clear>` éléments comme des éléments enfants.  
  
```  
<system.identityModel>  
  <identityConfiguration>  
    <securityTokenHandlersCollection>  
      <securityTokenHandlerConfiguration>  
        <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel">  
          <trustedIssuers>  
             <add thumbprint="97249e … 158de" name="contoso.com" />  
         </trustedIssuers>  
        </issuerNameRegistry>  
      </securityTokenHandlerConfiguration>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationBasedIssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationBasedIssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrustedIssuer">
      <MemberSignature Language="C#" Value="public void AddTrustedIssuer (string certificateThumbprint, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTrustedIssuer(string certificateThumbprint, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTrustedIssuer (certificateThumbprint As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTrustedIssuer(System::String ^ certificateThumbprint, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.AddTrustedIssuer : string * string -&gt; unit" Usage="configurationBasedIssuerNameRegistry.AddTrustedIssuer (certificateThumbprint, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateThumbprint" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificateThumbprint">Forme encodée ASN.1 de l'empreinte de certificat de l'émetteur.</param>
        <param name="name">Nom de l'émetteur.</param>
        <summary>Ajoute un émetteur au dictionnaire les émetteurs approuvés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez appeler cette méthode pour ajouter les émetteurs à le <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionnaire. Dans les classes dérivées, vous pouvez appeler cette méthode à partir de la <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> méthode pour ajouter des émetteurs au dictionnaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateThumbprint" /> a la valeur <see langword="null" /> ou est vide.  
  
- ou - 
 <paramref name="name" /> a la valeur <see langword="null" /> ou est vide.</exception>
        <exception cref="T:System.InvalidOperationException">L'émetteur spécifié par <paramref name="certificateThumbprint" /> a déjà été configuré. (L'émetteur existe déjà dans le dictionnaire <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />.)</exception>
      </Docs>
    </Member>
    <Member MemberName="ConfiguredTrustedIssuers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ConfiguredTrustedIssuers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ConfiguredTrustedIssuers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfiguredTrustedIssuers As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ ConfiguredTrustedIssuers { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfiguredTrustedIssuers : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dictionnaire des émetteurs approuvés qui ont été configurés pour cette instance.</summary>
        <value>Dictionnaire qui contient les émetteurs approuvés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clé du dictionnaire est le ASN.1 forme codée de l’empreinte numérique du certificat de l’émetteur approuvé et la valeur est le nom d’émetteur. Le dictionnaire les émetteurs qui ont été spécifiés dans la configuration et émetteurs supplémentaires qui ont été ajoutés avec la <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public override string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="configurationBasedIssuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">Jeton de sécurité pour lequel le nom de l'émetteur est demandé. Doit être assignable sous forme de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</param>
        <summary>Retourne le nom de l'émetteur associé au <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> spécifié en mappant l'empreinte de certificat à un nom dans le dictionnaire d'émetteurs approuvé.</summary>
        <returns>Nom de l'émetteur s'il existe une entrée pour l'empreinte de certificat du jeton dans le dictionnaire <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" /> ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les recherches d’implémentation par défaut le <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionnaire pour l’empreinte numérique du certificat X.509 spécifié dans `securityToken`. Si une entrée est trouvée, le nom de l’émetteur est retourné ; Sinon, `null` est retournée. Si `securityToken` n’est pas attribuable à partir de <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` est retournée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityToken" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfiguration As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfiguration);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="configurationBasedIssuerNameRegistry.LoadCustomConfiguration customConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfiguration" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfiguration">Code XML qui représente la table des émetteurs approuvés spécifiée dans le fichier de configuration.</param>
        <summary>Charge les émetteurs approuvés à partir de la configuration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> méthode est appelée par l’infrastructure de configuration. Lorsque cette méthode est appelée, le `nodelist` contiendra les éléments enfants de niveau supérieur de la [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) élément à partir du fichier de configuration. Chacun d'entre eux peut, à son tour, contient des attributs ou éléments enfants en fonction du schéma de configuration que vous définissez pour votre classe dérivée.  
  
 Cette méthode est appelée par l’infrastructure de configuration. L’implémentation par défaut charge la configuration à partir d’un [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) élément (configuré sous la [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)élément). Vous pouvez remplacer cette méthode pour fournir la prise en charge pour vos propres éléments de configuration personnalisés dans les classes dérivées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customConfiguration" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La configuration contient un ou plusieurs éléments qui ne sont pas reconnus.</exception>
      </Docs>
    </Member>
  </Members>
</Type>