<Type Name="SecurityKeyType" FullName="System.IdentityModel.Tokens.SecurityKeyType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="277821deb1d308519d14c0e85a2bae37f367fb92" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36556682" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SecurityKeyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityKeyType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityKeyType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityKeyType" />
  <TypeSignature Language="F#" Value="type SecurityKeyType = " />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="44967-101">Spécifie le type de clé associé à un jeton de sécurité.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44967-101">Specifies the type of key that is associated with a security token.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44967-102">Utilisez l'énumération <xref:System.IdentityModel.Tokens.SecurityKeyType> pour définir la propriété <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="44967-102">Use the <xref:System.IdentityModel.Tokens.SecurityKeyType> enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.</span></span>  
  
 <span data-ttu-id="44967-103">Le champ BearerKey est utilisé avec le <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="44967-103">The BearerKey field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property.</span></span>  
  
### <a name="bearerkey-requires-wsuid-or-transport-security-with-message-credentials"></a><span data-ttu-id="44967-104">BearerKey requiert Wsu:Id ou une sécurité de transport avec informations d'identification dans le message</span><span class="sxs-lookup"><span data-stu-id="44967-104">BearerKey Requires Wsu:Id or Transport Security with Message Credentials</span></span>  
 <span data-ttu-id="44967-105">Dans les scénarios de fédération, un jeton émis est généralement configuré comme un jeton de prise en charge d'approbation pour la sécurité des messages entre un client et les parties de confiance.</span><span class="sxs-lookup"><span data-stu-id="44967-105">In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties.</span></span> <span data-ttu-id="44967-106">Toutefois, lorsqu’un Service de jeton de sécurité (STS) émet un jeton sans clé (BearerKey), WCF configure alors comme un <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> jeton de prise en charge (WCF ne peut pas approuver sans clé).</span><span class="sxs-lookup"><span data-stu-id="44967-106">However, when a Security Token Service (STS) issues a token with no key (BearerKey), WCF configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> supporting token (WCF cannot endorse without a key).</span></span> <span data-ttu-id="44967-107">Cela implique que le jeton émis soit référencé dans la signature.</span><span class="sxs-lookup"><span data-stu-id="44967-107">This requires the issued token to be referenced in the signature.</span></span> <span data-ttu-id="44967-108">WCF utilise actuellement les éléments suivants : http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id comme mécanisme de référence (wsu : ID).</span><span class="sxs-lookup"><span data-stu-id="44967-108">WCF currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id).</span></span>  
  
 <span data-ttu-id="44967-109">Si un jeton émis ne possède pas d'attribut de ce type, sur un client, une <xref:System.ServiceModel.Security.MessageSecurityException> est levée avec le texte « L'élément à signer doit avoir un identificateur ».</span><span class="sxs-lookup"><span data-stu-id="44967-109">If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text "Element to sign must have id".</span></span> <span data-ttu-id="44967-110">Cela se produit lorsqu'un jeton SAML 1.1 est utilisé en tant que jeton émis (le Wsu:Id n'est pas défini dans la spécification SAML 1.1).</span><span class="sxs-lookup"><span data-stu-id="44967-110">This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).</span></span>  
  
 <span data-ttu-id="44967-111">Pour contourner ce problème, utilisez la sécurité du transport avec informations d’identification de message (par exemple, <xref:System.ServiceModel.Configuration.AuthenticationMode>) ou un STS ajoute le http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (wsu : ID) pour le jeton émis.</span><span class="sxs-lookup"><span data-stu-id="44967-111">To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode>) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token.</span></span>  
  
 <span data-ttu-id="44967-112">Notez que si le Wsu:Id est ajouté à un jeton SAML 1.1, le XML produit n'est alors pas conforme à la spécification SAML 1.1.</span><span class="sxs-lookup"><span data-stu-id="44967-112">Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification.</span></span> <span data-ttu-id="44967-113">L'autre approche consiste à ajouter un Wsu:Id à l'élément `EncryptedData` qui découle du chiffrement du jeton émis.</span><span class="sxs-lookup"><span data-stu-id="44967-113">The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token.</span></span> <span data-ttu-id="44967-114">Cette procédure est conforme à la spécification SAML 1.1 puisque l'élément `EncryptedData` prend en charge l'attribut Wsu:Id.</span><span class="sxs-lookup"><span data-stu-id="44967-114">This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute.</span></span>  
  
 <span data-ttu-id="44967-115">Par conséquent, pour satisfaire à la spécification, le jeton de porteur doit être chiffré par le STS.</span><span class="sxs-lookup"><span data-stu-id="44967-115">So to be compliant with the specification, the bearer token must be encrypted by the STS.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsymmetricKey">
      <MemberSignature Language="C#" Value="AsymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType AsymmetricKey = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="AsymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="AsymmetricKey" />
      <MemberSignature Language="F#" Value="AsymmetricKey = 1" Usage="System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="44967-116">Spécifie que la clé est une clé asymétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44967-116">Specifies that the key is an asymmetric key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKey">
      <MemberSignature Language="C#" Value="BearerKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType BearerKey = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberSignature Language="VB.NET" Value="BearerKey" />
      <MemberSignature Language="C++ CLI" Value="BearerKey" />
      <MemberSignature Language="F#" Value="BearerKey = 2" Usage="System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="44967-117">Spécifie que le jeton de sécurité ne contient pas de clé preuve-de-possession.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44967-117">Specifies that the security token does not contain a proof-of-possession key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKey">
      <MemberSignature Language="C#" Value="SymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType SymmetricKey = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberSignature Language="VB.NET" Value="SymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKey" />
      <MemberSignature Language="F#" Value="SymmetricKey = 0" Usage="System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="44967-118">Spécifie que la clé est une clé symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44967-118">Specifies that the key is a symmetric key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>