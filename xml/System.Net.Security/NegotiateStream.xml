<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a91049778a482fee3308bf1cf44c8c630042c15e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37478074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e7b76-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7b76-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-102">Utilisez la <xref:System.Net.Security.NegotiateStream> classe pour l’authentification et pour aider à sécuriser les informations transmises entre un client et un serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="e7b76-103">À l’aide de <xref:System.Net.Security.NegotiateStream>, vous pouvez procédez comme suit.</span><span class="sxs-lookup"><span data-stu-id="e7b76-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="e7b76-104">Envoyer des informations d’identification du client au serveur pour l’emprunt d’identité ou la délégation.</span><span class="sxs-lookup"><span data-stu-id="e7b76-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="e7b76-105">Exiger une authentification de serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="e7b76-106">Chiffrer et/ou signer les données avant de les transmettre.</span><span class="sxs-lookup"><span data-stu-id="e7b76-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="e7b76-107">L’authentification doit être effectuée avant de transmettre des informations.</span><span class="sxs-lookup"><span data-stu-id="e7b76-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="e7b76-108">Les clients demandent l’authentification à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> méthodes, qui se bloquent jusqu'à ce que l’authentification terminée, ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes, qui ne bloquent pas lors de l’attente pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="e7b76-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="e7b76-109">Serveurs de demandent une authentification à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="e7b76-110">Le client et éventuellement le serveur, est authentifié à l’aide du protocole de sécurité Negotiate.</span><span class="sxs-lookup"><span data-stu-id="e7b76-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="e7b76-111">Sur les systèmes Windows 95/98, Windows NT LAN Manager (NTLM) est le protocole utilisé pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="e7b76-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="e7b76-112">Sur d’autres plateformes Kerberos protocole est utilisé pour l’authentification si le client et le serveur le prennent en charge ; Sinon, NTLM est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="e7b76-113">Pour obtenir une description détaillée de ces protocoles, consultez la documentation Platform SDK sur MSDN, à msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="e7b76-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="e7b76-114">Le <xref:System.Net.Security.NegotiateStream> classe effectue l’authentification à l’aide de la prise en charge Interface SSPI (Security Provider).</span><span class="sxs-lookup"><span data-stu-id="e7b76-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="e7b76-115">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité seront utilisées par le <xref:System.Net.Security.NegotiateStream> pour aider à sécuriser vos données pendant la transmission.</span><span class="sxs-lookup"><span data-stu-id="e7b76-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="e7b76-116">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="e7b76-117">Vous pouvez obtenir des informations sur le client distant ou serveur à l’aide du <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="e7b76-118">Si l’authentification échoue, vous recevrez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-119">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="e7b76-120">Envoyer des données à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.Write%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="e7b76-121">Vous recevez des données à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.Read%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginRead%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="e7b76-122">Si les services de sécurité telles que le chiffrement ou la signature sont activés, ils sont automatiquement appliqués à vos données par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-123">Le <xref:System.Net.Security.NegotiateStream> transmet des données à l’aide d’un flux que vous fournissez lors de la création du <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-124">Lorsque vous fournissez ce flux sous-jacent, vous avez l’option pour spécifier si la fermeture de la <xref:System.Net.Security.NegotiateStream> ferme également le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-125">L’exemple de code suivant montre le côté client d’une connexion client-serveur qui utilise le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-126">Le client s’authentifie et envoie un message au serveur de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7b76-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="e7b76-127">L’exemple de code suivant montre le côté serveur d’une connexion client-serveur qui utilise le <xref:System.Net.Security.NegotiateStream> pour authentifier le client et de lire un message envoyé par le client.</span><span class="sxs-lookup"><span data-stu-id="e7b76-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-129">Pour empêcher le <xref:System.Net.Security.NegotiateStream> de fermer le flux que vous fournissez, utilisez le <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="e7b76-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7b76-132">L’exemple de code suivant illustre l’appel de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="e7b76-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="e7b76-134">
            <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-136">Lorsque vous spécifiez `true` pour le `leaveStreamOpen` paramètre, la fermeture de la <xref:System.Net.Security.NegotiateStream> n’a aucun effet le `innerStream` diffuser en continu ; vous devez fermer explicitement `innerStream` lorsque vous n’avez plus besoin.</span><span class="sxs-lookup"><span data-stu-id="e7b76-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-137">L’exemple de code suivant illustre l’appel de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="e7b76-138">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="e7b76-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-139">
            <paramref name="innerStream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-143">L’authentification utilise le client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-143">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-144">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-144">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-145">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-145">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="e7b76-146">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-146">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-147">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-147">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-148">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-148">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-149">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-149">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-150">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-150">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-151">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-151">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-152">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-152">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-153">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-154">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-155">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-155">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-156">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-156">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-158">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-158">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-159">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-159">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-160">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-160">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-164">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-164">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-165">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-165">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="e7b76-166">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-166">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-167">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-167">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-168">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-168">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-169">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-169">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-170">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-170">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-171">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-172">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-173">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-173">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-174">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-174">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-176">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-176">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-177">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-177">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-178">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-178">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-179">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="e7b76-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-184">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-184">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-185">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-185">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="e7b76-186">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-186">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-187">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-187">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="e7b76-188">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-188">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-189">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-189">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-190">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-190">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-192">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-192">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-193">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-193">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-194">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-194">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-195">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-195">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-196">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-196">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-198">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-198">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-199">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-199">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="e7b76-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-205">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-205">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-206">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-206">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-207">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-207">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-208">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-208">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-209">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-209">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-210">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-210">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-211">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-211">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-212">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-212">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-213">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-213">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-214">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-214">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-215">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-215">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-216">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-216">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-217">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-217">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-218">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-218">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-219">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-219">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-221">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-221">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-222">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-222">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-223">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="e7b76-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="e7b76-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-231">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-231">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-232">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-232">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-233">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-233">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-234">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-234">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-235">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-235">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="e7b76-236">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-236">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-237">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-237">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-238">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-238">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-240">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-240">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-241">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-241">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-242">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-242">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-243">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-243">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-244">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-244">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-245">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-245">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-247">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-247">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-248">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-248">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-252">L’authentification utilise le client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-252">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-253">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-253">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-254">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-254">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="e7b76-255">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-255">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-256">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-256">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-257">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-257">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-258">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-258">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-259">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-259">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-260">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-260">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-261">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-261">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-262">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-262">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-263">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-263">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-264">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-264">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-265">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-265">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-267">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-267">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-268">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-268">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-269">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-269">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-273">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-273">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-275">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-275">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="e7b76-276">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-276">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-277">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-277">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-278">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-278">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-279">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-279">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-280">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-280">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-281">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-281">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-282">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-282">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-283">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-283">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-284">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-284">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-286">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-286">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-287">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-287">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-288">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-288">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-289">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="e7b76-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-294">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-294">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-296">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-296">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="e7b76-297">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-297">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-298">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-298">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="e7b76-299">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-299">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-300">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-300">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-301">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-301">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-303">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-303">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-304">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-304">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-305">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-305">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-306">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-306">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-307">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-307">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-309">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-309">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-310">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-310">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="e7b76-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-316">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-316">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-318">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-318">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-319">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-319">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-320">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-320">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-321">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-321">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-322">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-322">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-323">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-323">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-324">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-324">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-325">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-325">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-326">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-326">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-327">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-327">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-328">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-328">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-329">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-329">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-330">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-330">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-331">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-331">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-333">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-333">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-334">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-334">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-335">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="e7b76-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="e7b76-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-344">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-344">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-345">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-345">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-346">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-346">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-347">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-347">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-348">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-348">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="e7b76-349">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-349">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-350">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-350">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-351">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-351">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-353">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-353">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-354">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-354">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-355">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-355">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-356">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-356">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-357">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-357">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-358">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-358">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-360">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-360">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-361">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-361">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-362">Handles the server side of an authentication for a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-362">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-363">Ces méthodes bloquent pendant que l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="e7b76-363">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="e7b76-364">Pour empêcher l’application à partir de blocage en attendant que l’authentification, utilisez le <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-364">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-366">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-366">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-367">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-367">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-368">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-368">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="e7b76-369">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-369">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-370">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-370">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-371">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-371">This method blocks until the operation completes.</span></span> <span data-ttu-id="e7b76-372">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-372">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-373">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-373">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-374">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-374">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-375">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-376">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-377">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-378">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-379">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-379">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-380">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-380">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-381">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-381">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-382">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="e7b76-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-385">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-385">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-386">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-387">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-388">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="e7b76-389">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-389">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="e7b76-390">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-390">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-391">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-391">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-392">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-392">This method blocks until the operation completes.</span></span> <span data-ttu-id="e7b76-393">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-393">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-394">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-394">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-395">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-395">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-397">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-398">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-399">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-399">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-400">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-400">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-401">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-401">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-402">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-402">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e7b76-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="e7b76-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-408">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-408">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-409">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-409">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-410">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-410">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-411">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-411">This method blocks until the operation completes.</span></span> <span data-ttu-id="e7b76-412">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-412">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-413">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-413">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-414">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-414">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-415">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-415">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-416">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-416">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-417">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-418">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-418">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-419">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-420">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-421">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-421">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-422">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-422">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="e7b76-424">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-424">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-425">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-425">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-426">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-426">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-427">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-427">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="e7b76-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="e7b76-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-434">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-434">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="e7b76-435">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-436">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-437">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="e7b76-438">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-439">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-440">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-442">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-442">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-443">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-443">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-444">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-444">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-445">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-445">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-446">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-446">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-447">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-447">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-448">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="e7b76-450">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-450">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-451">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-451">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-452">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-452">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e7b76-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-457">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-457">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-458">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-458">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-459">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-459">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="e7b76-460">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-460">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-461">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-461">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-462">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-462">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-463">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-463">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-464">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-464">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-465">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-465">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-466">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-466">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-467">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-467">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-468">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-468">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-469">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-469">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-470">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-470">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-471">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="e7b76-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-474">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-474">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-476">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-476">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-477">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-477">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-478">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-478">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="e7b76-479">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-479">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="e7b76-480">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-480">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-481">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-481">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-482">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-482">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-483">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-483">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-485">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-485">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-486">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-486">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-487">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-488">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-489">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-489">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-490">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-490">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e7b76-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="e7b76-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-496">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-496">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-498">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-498">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-499">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-499">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-500">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-500">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-501">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-501">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-502">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-502">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-503">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-503">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-504">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-504">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-505">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-505">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-506">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-506">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-507">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-507">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-508">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-508">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-509">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-509">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="e7b76-511">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-511">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-512">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-512">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-513">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-513">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-514">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-514">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="e7b76-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="e7b76-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="e7b76-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-522">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-522">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="e7b76-523">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-524">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-525">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-526">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-528">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-528">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-529">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-529">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-530">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-530">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-531">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-531">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-532">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-532">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-533">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-533">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-534">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="e7b76-536">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-536">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-537">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-537">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-538">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-538">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e7b76-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-541">Les surcharges de cette méthode ne bloquent pas lorsque l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="e7b76-541">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="e7b76-542">Pour bloquer en attendant que l’authentification, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-542">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-544">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-544">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="e7b76-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-547">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-547">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-549">L’authentification utilise le client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-549">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-550">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-550">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-551">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-551">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="e7b76-552">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-552">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-553">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-553">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-554">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-554">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-555">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-555">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="e7b76-556">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-556">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-557">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-557">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-558">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-558">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-559">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-559">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-560">L’exemple de code suivant illustre l’appel de cette méthode pour commencer une authentification asynchrone pour le client.</span><span class="sxs-lookup"><span data-stu-id="e7b76-560">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-561">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-561">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-562">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-562">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-563">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-563">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-564">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-564">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-565">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-565">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-566">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-566">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-568">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-568">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-569">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-569">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-570">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-570">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-574">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-574">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-577">The authentication process uses the specified credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-577">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="e7b76-578">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-578">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-580">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-580">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-581">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-581">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-582">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-582">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="e7b76-583">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-583">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-584">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-584">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-585">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-585">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-586">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-586">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-587">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-587">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-589">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-590">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-591">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-592">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-593">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-594">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-596">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-596">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-597">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-597">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-598">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-598">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="e7b76-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-603">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-606">The authentication process uses the specified credentials and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-606">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="e7b76-607">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-609">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-610">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-611">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="e7b76-612">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-613">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-614">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-615">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-616">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-618">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-618">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-619">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-619">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-620">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-620">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-621">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-621">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-622">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-622">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-624">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-624">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-625">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-625">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="e7b76-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-631">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-631">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-634">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-634">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="e7b76-635">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-635">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-637">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-637">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-638">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-638">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-639">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-639">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-640">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-640">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-641">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-641">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-642">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-642">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-643">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-643">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="e7b76-644">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-644">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-645">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-645">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-646">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-646">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-647">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-647">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-648">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-648">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-650">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-651">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-652">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-653">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-654">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-654">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-655">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-655">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-657">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-658">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-658">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-659">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-659">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="e7b76-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="e7b76-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="e7b76-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-666">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-666">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="e7b76-670">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-670">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-672">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-672">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-673">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-673">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-674">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-674">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-675">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-675">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-676">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-676">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-677">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-677">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-678">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-678">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="e7b76-679">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-679">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-680">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-680">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-681">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-681">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-682">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-682">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-683">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-683">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7b76-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-685">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-685">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-686">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-686">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-687">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-687">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-688">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-688">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-689">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="e7b76-691">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-691">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-692">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-692">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-694">Les surcharges de cette méthode ne bloquent pas alors que l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="e7b76-694">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="e7b76-695">Pour bloquer en attendant que l’authentification, utilisez le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-695">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-697">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-697">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="e7b76-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-700">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-700">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-702">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-702">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-703">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-703">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-704">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-704">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="e7b76-705">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-705">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-706">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-706">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-707">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-707">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-708">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-708">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-709">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-709">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-710">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-710">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-711">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-711">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-712">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-712">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-713">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-713">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-714">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-714">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-715">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-715">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-716">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-716">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-717">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-717">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="e7b76-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-720">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-720">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-723">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-723">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="e7b76-724">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-724">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-726">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-726">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="e7b76-727">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-727">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="e7b76-728">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-728">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="e7b76-729">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-729">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="e7b76-730">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-730">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-731">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-731">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-732">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-732">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-733">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-733">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-734">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-734">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-736">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-736">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-737">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-737">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-738">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-738">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-739">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-739">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-740">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-740">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-741">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-741">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e7b76-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="e7b76-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-747">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-747">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="e7b76-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-750">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-750">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="e7b76-751">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-751">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-753">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-753">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-754">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-754">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-755">Authentification réussie ne garantit pas que, demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-755">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-756">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-756">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-757">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-757">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-758">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-758">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-759">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-759">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="e7b76-760">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-760">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-761">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-761">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-762">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-762">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-763">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-763">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-764">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-764">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-765">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-765">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-766">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-766">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-767">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-767">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-768">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-768">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-769">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-769">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-770">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-770">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-771">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-771">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="e7b76-773">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-773">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-774">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-774">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e7b76-775">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-775">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="e7b76-776">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-776">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="e7b76-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="e7b76-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="e7b76-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="e7b76-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-782">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-782">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="e7b76-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="e7b76-786">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-786">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-788">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-788">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="e7b76-789">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-789">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="e7b76-790">Authentification réussie ne garantit pas que, demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-790">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="e7b76-791">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-791">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="e7b76-792">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-792">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="e7b76-793">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-793">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-794">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-794">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7b76-795">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-795">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="e7b76-796">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-796">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-797">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-797">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-798">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-798">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-799">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-799">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-801">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7b76-802">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-803">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-804">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-805">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-806">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-807">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-807">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="e7b76-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="e7b76-809">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-809">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-810">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-810">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-811">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-811">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e7b76-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e7b76-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7b76-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7b76-815">The maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-815">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-817">A user-defined object containing information about the read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-817">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="e7b76-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-821">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, l’opération de lecture lit les données dans le flux sous-jacent, vérifie l’intégrité des données et les déchiffre.</span><span class="sxs-lookup"><span data-stu-id="e7b76-821">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="e7b76-822">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode démarre une opération de lecture asynchrone sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-822">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="e7b76-823">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-823">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-824">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-824">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="e7b76-825">L’opération de lecture asynchrone doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndRead%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-825">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="e7b76-826">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-826">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-827">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-827">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-828">Le <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge simultanée de plusieurs opérations de lecture.</span><span class="sxs-lookup"><span data-stu-id="e7b76-828">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="e7b76-829">Si vous essayez de démarrer une opération de lecture pendant la lecture des autre opération s’exécute déjà sur le même flux, un <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-829">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="e7b76-830">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-830">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="e7b76-831">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-831">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-832">L’exemple de code suivant illustre le démarrage d’une opération de lecture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7b76-832">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="e7b76-833">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="e7b76-833">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-834">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-834">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-835">
            <paramref name="offset" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-835">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="e7b76-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="e7b76-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e7b76-838">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-838">The read operation failed.</span>
          </span>
          <span data-ttu-id="e7b76-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-840">There is already a read operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-840">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-841">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-841">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-842">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-842">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e7b76-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7b76-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7b76-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="e7b76-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="e7b76-847">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-847">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="e7b76-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-851">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, cette méthode lit les données à partir de la mémoire tampon, chiffre, se connecte, ou chiffre et signe et transmet à l’aide du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-851">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="e7b76-852">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode démarre une opération d’écriture asynchrone sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-852">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="e7b76-853">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-853">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="e7b76-854">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-854">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="e7b76-855">L’opération de lecture asynchrone doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndWrite%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-855">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="e7b76-856">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7b76-856">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="e7b76-857">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e7b76-857">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="e7b76-858">Le <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</span><span class="sxs-lookup"><span data-stu-id="e7b76-858">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="e7b76-859">Si vous essayez de démarrer une opération d’écriture lorsqu’une autre opération d’écriture est déjà exécutée sur le même flux, un <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-859">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="e7b76-860">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-860">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="e7b76-861">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-861">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-862">L’exemple de code suivant montre le début d’une opération d’écriture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7b76-862">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="e7b76-863">La méthode suivante est appelée lorsque l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-863">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-864">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-864">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-865">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-865">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="e7b76-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="e7b76-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e7b76-868">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-868">The write operation failed.</span>
          </span>
          <span data-ttu-id="e7b76-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-870">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-870">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-871">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-871">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-872">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-872">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-874">
            <see langword="true" /> Si l’authentification s’est produite et le flux sous-jacent est accessible en lecture ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-874">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-875">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanRead%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-875">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-876">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="e7b76-876">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-877">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-877">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-879">Cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-879">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-880">Vous ne devez pas tenter de définir la position de la <xref:System.Net.Security.NegotiateStream> objet ou son flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-880">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="e7b76-881">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="e7b76-881">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-882">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-882">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-884">
            <see langword="true" /> Si le flux sous-jacent prend en charge les délais d’attente ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-884">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-885">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-885">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-886">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="e7b76-886">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-887">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-887">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-889">
            <see langword="true" /> Si l’authentification s’est produite et le flux sous-jacent est accessible en écriture ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-889">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-890">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanWrite%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-890">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-891">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="e7b76-891">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-892">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-892">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e7b76-893">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-893">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-895">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-895">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e7b76-896">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="e7b76-896">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e7b76-897"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="e7b76-897"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e7b76-898">Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Net.Security.NegotiateStream> références.</span><span class="sxs-lookup"><span data-stu-id="e7b76-898">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="e7b76-899">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-899">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e7b76-900">
            <para>
              <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [nettoyage des Resources](~/docs/standard/garbage-collection/unmanaged.md) non managé et [substitution de la méthode Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-900">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e7b76-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-903">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="e7b76-903">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="e7b76-904">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-904">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-905">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-905">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-906">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-906">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-907">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-907">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="e7b76-908">Pour effectuer cette opération de manière synchrone, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-908">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-909">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-909">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-910">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-910">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-911">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-911">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-912">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-912">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-913">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-913">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-914">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-914">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-915">There is no pending client authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-915">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e7b76-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-918">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="e7b76-918">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="e7b76-919">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-919">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="e7b76-920">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="e7b76-920">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="e7b76-921">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-921">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="e7b76-922">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-922">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="e7b76-923">Pour effectuer cette opération de façon synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-923">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-924">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-924">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-925">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-925">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="e7b76-926">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-926">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-927">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-927">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="e7b76-928">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-928">The authentication failed.</span>
          </span>
          <span data-ttu-id="e7b76-929">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-929">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-930">There is no pending authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-930">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e7b76-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-934">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="e7b76-934">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="e7b76-935">Pour effectuer cette opération de façon synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-935">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="e7b76-936">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-936">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="e7b76-937">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-937">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-938">L’exemple de code suivant illustre l’opération de lecture asynchrone de fin.</span><span class="sxs-lookup"><span data-stu-id="e7b76-938">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="e7b76-939">Pour obtenir un exemple qui illustre le démarrage de l’opération, consultez <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-939">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-940">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-940">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-942">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-942">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e7b76-943">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-943">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e7b76-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-946">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="e7b76-946">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="e7b76-947">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-947">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="e7b76-948">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-948">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="e7b76-949">Pour effectuer cette opération de façon synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-949">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-950">L’exemple de code suivant montre une méthode qui est appelée pour terminer l’opération d’écriture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7b76-950">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="e7b76-951">Pour obtenir un exemple qui illustre le démarrage de l’opération, consultez <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-951">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-952">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-952">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-954">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-954">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e7b76-955">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-955">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-956">Causes any buffered data to be written to the underlying device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-956">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-957">Cette méthode appelle <xref:System.IO.Stream.Flush%2A> sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-957">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-958">L’exemple de code suivant montre le flux de données de consommation.</span><span class="sxs-lookup"><span data-stu-id="e7b76-958">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-959">Gets a value that indicates how the server can use the client's credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-959">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-960">Une des valeurs de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-960">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-961">Vous devez vous authentifier avec succès avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-961">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="e7b76-962">Les clients spécifient le niveau d’emprunt d’identité lorsqu’ils demandent l’authentification en appelant une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-962">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="e7b76-963">Si vous vous authentifiez sans spécifier un <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> est utilisé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-963">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-964">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-964">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-965">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-965">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-967">
            <see langword="true" /> Si l’authentification réussie s’est produite ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-967">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-968">Les clients s’authentifient en appelant le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-968">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="e7b76-969">Authentifieront des serveurs en appelant le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-969">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-970">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-970">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-972">
            <see langword="true" /> Si les données sont chiffrées avant d’être transmis sur le réseau et déchiffrées lorsqu’il atteint le point de terminaison distant ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-972">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-973">Le chiffrement permet de protéger la confidentialité des données ; à savoir, il permet de garantir que, lorsque les données sont en transit qu’il ne peut pas être déchiffré par des tiers.</span><span class="sxs-lookup"><span data-stu-id="e7b76-973">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-974">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-974">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-976">
            <see langword="true" /> Si le serveur a été authentifié ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-976">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-977">L’authentification mutuelle est spécifiée par le client lorsque le client souhaite que le serveur de fournir des informations d’identification pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="e7b76-977">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="e7b76-978">Par défaut, les clients demandent l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-978">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="e7b76-979">Le protocole Negotiate sélectionne NTLM ou Kerberos selon les protocoles de sécurité pris en charge par le client et le serveur.</span><span class="sxs-lookup"><span data-stu-id="e7b76-979">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="e7b76-980">NTLM ne prend pas en charge l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="e7b76-980">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-981">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-981">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-983">
            <see langword="true" /> Si le point de terminaison local a été authentifié avec succès comme côté serveur de la connexion authentifiée ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-983">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-984">Si l’authentification a échoué ou n’a été réalisée, cette propriété retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="e7b76-984">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="e7b76-985">Pour vous authentifier en tant que le serveur, appelez le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-985">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-986">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-986">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-988">
            <see langword="true" /> Si les données sont signées avant d’être transmises ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-988">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-989">Signature des données permet de protéger l’intégrité des données. à savoir, il permet le destinataire de déterminer si les données a été falsifiées lors de leur transit.</span><span class="sxs-lookup"><span data-stu-id="e7b76-989">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-990">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-990">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-991">Gets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-991">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-992">Un <see cref="T:System.Int64" /> qui spécifie la longueur du flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-992">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-993">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.Length%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-993">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-994">Si le flux sous-jacent n’est pas identifiable, cette propriété lève généralement une exception.</span><span class="sxs-lookup"><span data-stu-id="e7b76-994">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="e7b76-995">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-995">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-996">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-996">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-998">Gets or sets the current position in the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-998">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-999">Un <see cref="T:System.Int64" /> qui spécifie la position actuelle dans le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-999">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1000">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.Position%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1000">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-1001">Si le flux sous-jacent n’est pas identifiable, cette propriété lève généralement une exception.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1001">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="e7b76-1002">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1002">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-1003">Setting this property is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1003">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="e7b76-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e7b76-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7b76-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7b76-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-1008">Reads data from this stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1008">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="e7b76-1010">When there is no more data to be read, returns 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1010">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1011">La méthode lit un maximum de `count` octets à partir du flux et les stocke dans `buffer` commençant à `offset`.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1011">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="e7b76-1012">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1012">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="e7b76-1013">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1013">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="e7b76-1014">Pour effectuer cette opération de façon asynchrone, utilisez la <xref:System.Net.Security.NegotiateStream.BeginRead%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-1014">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-1015">L’exemple de code suivant illustre la lecture à partir d’un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1015">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e7b76-1016">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1016">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-1017">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1017">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-1020">Un <see cref="T:System.Int32" /> qui spécifie la quantité de temps qui doit s’écouler avant l’échec d’une opération de lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1020">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1021">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.ReadTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1021">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-1022">Lorsque vous définissez cette propriété, le <xref:System.IO.Stream.ReadTimeout%2A> sur le flux sous-jacent a la valeur à la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1022">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="e7b76-1023">Si le flux sous-jacent est un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> est exprimée en millisecondes et a la valeur <xref:System.Threading.Timeout.Infinite> par défaut, de sorte que les opérations n’expirent pas de lecture.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1023">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-1024">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1024">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-1026">Un <see cref="T:System.Security.Principal.IIdentity" /> objet qui décrit l’identité du point de terminaison distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1026">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1027">Lors de l’accès par le client, cette propriété retourne un <xref:System.Security.Principal.GenericIdentity> contenant le nom Principal de Service (SPN) du serveur et le protocole d’authentification utilisé.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1027">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="e7b76-1028">Lors de l’accès par le serveur, cette propriété retourne un <xref:System.Security.Principal.WindowsIdentity> qui décrit le client.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1028">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="e7b76-1029">Si le <xref:System.Security.Principal.WindowsIdentity> est non disponible, les informations sur le client sont retournées au serveur dans un <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1029">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-1030">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-1031">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1031">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e7b76-1032">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1032">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e7b76-1033">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1033">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7b76-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1036">N’appelez pas cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1036">Do not call this method.</span></span> <span data-ttu-id="e7b76-1037">Il est hérité, mais n’est pas pris en charge par <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1037">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7b76-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-1040">Sets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1040">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e7b76-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7b76-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7b76-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7b76-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1045">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, cette méthode lit les données à partir de la mémoire tampon, chiffre, se connecte, ou chiffre et signe et transmet à l’aide du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1045">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="e7b76-1046">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode appelle <xref:System.IO.Stream.Write%2A> sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1046">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="e7b76-1047">Cette méthode se bloque pendant que l’opération d’écriture se termine.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1047">This method blocks while the write operation completes.</span></span> <span data-ttu-id="e7b76-1048">Pour éviter un blocage pendant l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7b76-1048">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="e7b76-1049">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1049">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="e7b76-1050">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1050">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="e7b76-1051">Le <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1051">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="e7b76-1052">Si vous essayez de démarrer une opération d’écriture lorsqu’une autre opération d’écriture est déjà exécutée sur le même flux, un <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1052">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-1053">L’exemple de code suivant illustre l’écriture dans un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1053">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7b76-1054">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1054">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7b76-1055">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1055">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="e7b76-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="e7b76-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e7b76-1058">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1058">The write operation failed.</span>
          </span>
          <span data-ttu-id="e7b76-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7b76-1060">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1060">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7b76-1061">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1061">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7b76-1062">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1062">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b76-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7b76-1064">Un <see cref="T:System.Int32" /> qui spécifie la quantité de temps qui doit s’écouler avant l’échec d’une opération d’écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b76-1064">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b76-1065">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.WriteTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1065">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="e7b76-1066">Pour les opérations de jeu, définit la valeur spécifiée la <xref:System.IO.Stream.WriteTimeout%2A> valeur sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1066">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="e7b76-1067">Si le flux sous-jacent est un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> est exprimée en millisecondes et a la valeur <xref:System.Threading.Timeout.Infinite> par défaut, de sorte que les opérations n’expirent pas d’écriture.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1067">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b76-1068">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e7b76-1068">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>