<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ae3df31823b68c9d75046ac59d310593da4e676" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46654718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8bafa-101">Fournit un flux qui utilise le protocole de sécurité Negotiate pour authentifier le client et éventuellement le serveur, dans les communications client-serveur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8bafa-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-102">Utilisez la <xref:System.Net.Security.NegotiateStream> classe pour l’authentification et pour aider à sécuriser les informations transmises entre un client et un serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="8bafa-103">À l’aide de <xref:System.Net.Security.NegotiateStream>, vous pouvez procédez comme suit.</span><span class="sxs-lookup"><span data-stu-id="8bafa-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="8bafa-104">Envoyer des informations d’identification du client au serveur pour l’emprunt d’identité ou la délégation.</span><span class="sxs-lookup"><span data-stu-id="8bafa-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="8bafa-105">Exiger une authentification de serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="8bafa-106">Chiffrer et/ou signer les données avant de les transmettre.</span><span class="sxs-lookup"><span data-stu-id="8bafa-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="8bafa-107">L’authentification doit être effectuée avant de transmettre des informations.</span><span class="sxs-lookup"><span data-stu-id="8bafa-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="8bafa-108">Les clients demandent l’authentification à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> méthodes, qui se bloquent jusqu'à ce que l’authentification terminée, ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes, qui ne bloquent pas lors de l’attente pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="8bafa-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="8bafa-109">Serveurs de demandent une authentification à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="8bafa-110">Le client et éventuellement le serveur, est authentifié à l’aide du protocole de sécurité Negotiate.</span><span class="sxs-lookup"><span data-stu-id="8bafa-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="8bafa-111">Sur les systèmes Windows 95/98, Windows NT LAN Manager (NTLM) est le protocole utilisé pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="8bafa-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="8bafa-112">Sur d’autres plateformes Kerberos protocole est utilisé pour l’authentification si le client et le serveur le prennent en charge ; Sinon, NTLM est utilisé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="8bafa-113">Pour obtenir une description détaillée de ces protocoles, consultez la documentation Platform SDK sur MSDN, à msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="8bafa-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="8bafa-114">Le <xref:System.Net.Security.NegotiateStream> classe effectue l’authentification à l’aide de la prise en charge Interface SSPI (Security Provider).</span><span class="sxs-lookup"><span data-stu-id="8bafa-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="8bafa-115">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité seront utilisées par le <xref:System.Net.Security.NegotiateStream> pour aider à sécuriser vos données pendant la transmission.</span><span class="sxs-lookup"><span data-stu-id="8bafa-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="8bafa-116">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="8bafa-117">Vous pouvez obtenir des informations sur le client distant ou serveur à l’aide du <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="8bafa-118">Si l’authentification échoue, vous recevrez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-119">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="8bafa-120">Envoyer des données à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.Write%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="8bafa-121">Vous recevez des données à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.Read%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginRead%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="8bafa-122">Si les services de sécurité telles que le chiffrement ou la signature sont activés, ils sont automatiquement appliqués à vos données par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-123">Le <xref:System.Net.Security.NegotiateStream> transmet des données à l’aide d’un flux que vous fournissez lors de la création du <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-124">Lorsque vous fournissez ce flux sous-jacent, vous avez l’option pour spécifier si la fermeture de la <xref:System.Net.Security.NegotiateStream> ferme également le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-125">L’exemple de code suivant montre le côté client d’une connexion client-serveur qui utilise le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-126">Le client s’authentifie et envoie un message au serveur de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="8bafa-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="8bafa-127">L’exemple de code suivant montre le côté serveur d’une connexion client-serveur qui utilise le <xref:System.Net.Security.NegotiateStream> pour authentifier le client et de lire un message envoyé par le client.</span><span class="sxs-lookup"><span data-stu-id="8bafa-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">
      <span data-ttu-id="8bafa-128">Modifications apportées à l’authentification NTLM pour HTTPWebRequest dans la Version 3.5 SP1</span>
      <span class="sxs-lookup">
        <span data-stu-id="8bafa-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-129">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-130">Pour empêcher le <xref:System.Net.Security.NegotiateStream> de fermer le flux que vous fournissez, utilisez le <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="8bafa-131">Objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.NegotiateStream" /> pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-132">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.NegotiateStream" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8bafa-133">L’exemple de code suivant illustre l’appel de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="8bafa-134">Objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.NegotiateStream" /> pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="8bafa-135">
            <see langword="true" /> pour indiquer que la fermeture de ce <see cref="T:System.Net.Security.NegotiateStream" /> n’a aucun effet sur <c>innerstream</c> ; <see langword="false" /> pour indiquer que la fermeture de ce <see cref="T:System.Net.Security.NegotiateStream" /> ferme également <c>innerStream</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-135">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-136">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.NegotiateStream" /> en utilisant le <see cref="T:System.IO.Stream" /> et le comportement de clôture de flux spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-137">Lorsque vous spécifiez `true` pour le `leaveStreamOpen` paramètre, la fermeture de la <xref:System.Net.Security.NegotiateStream> n’a aucun effet le `innerStream` diffuser en continu ; vous devez fermer explicitement `innerStream` lorsque vous n’avez plus besoin.</span><span class="sxs-lookup"><span data-stu-id="8bafa-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-138">L’exemple de code suivant illustre l’appel de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-138">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="8bafa-139">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8bafa-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-140">
            <paramref name="innerStream" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-140">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-141">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-141">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-142">
            <paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-142">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-143">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-144">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-145">L’authentification utilise le client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-146">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-147">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="8bafa-148">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-149">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-150">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-151">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-152">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-153">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-154">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-155">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-155">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-156">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-156">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-157">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-157">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-158">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-158">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-159">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-159">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-160">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-160">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-161">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-161">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-162">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-163">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-164">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-165">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-166">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-167">Le processus d'authentification utilise les informations d'identification du client spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-167">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-168">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="8bafa-169">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-170">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-171">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-172">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-172">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-173">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-173">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-174">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-174">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-175">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-175">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-176">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-176">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-177">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-177">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-178">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-178">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-179">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-179">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-180">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-180">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-181">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-181">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-182">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-183">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-184">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="8bafa-185">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-186">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-187">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-188">Le processus d'authentification utilise les informations d'identification du client et la liaison de canal spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-188">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-189">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="8bafa-190">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-191">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="8bafa-192">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-193">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-194">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-194">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-195">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-195">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-196">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-196">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-197">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-197">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-198">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-198">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-199">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-199">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-200">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-200">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-201">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-201">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-202">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-202">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-203">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-203">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-204">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-204">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-205">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-205">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-206">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-206">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-207">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-208">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-209">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="8bafa-210">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-211">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-212">Le processus d'authentification utilise les options d'authentification et les informations d'identification spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-212">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-213">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-214">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-215">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-216">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-217">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-218">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-219">
            <paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-219">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-220">
            <paramref name="targetName" /> a la valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-220">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-221">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-221">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-222">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-222">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-223">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-223">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-224">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-224">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-225">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-225">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-226">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-226">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-227">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-227">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-228">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-228">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-229">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-229">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-230">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-231">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-232">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="8bafa-233">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-234">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-235">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="8bafa-236">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-237">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-238">Le processus d'authentification utilise les informations d'identification du client, les options d'authentification et la liaison de canal spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-238">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-239">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-240">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-241">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-242">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-243">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="8bafa-244">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-245">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-246">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-246">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-247">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-247">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-248">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-248">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-249">
            <paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-249">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-250">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-250">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-251">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-251">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-252">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-252">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-253">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-253">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-254">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-254">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-255">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-255">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-256">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-256">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-257">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-257">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-258">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-258">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-259">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-259">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-260">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-261">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-262">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-262">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-263">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-263">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-264">L’authentification utilise le client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-264">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-265">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-265">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-266">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-266">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="8bafa-267">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-267">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-268">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-268">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-269">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-269">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-270">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-270">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-271">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-271">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-272">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-272">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-273">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-273">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-274">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-274">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-275">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-275">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-276">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-276">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-277">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-277">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-278">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-278">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-279">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-279">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-280">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-280">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-281">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-281">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-282">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-282">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-283">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-283">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-284">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-284">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-285">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-285">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-286">Le processus d'authentification utilise les informations d'identification du client spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-286">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-287">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-287">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-288">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-288">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-289">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-289">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="8bafa-290">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-290">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-291">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-291">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-292">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-292">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-293">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-293">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-294">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-294">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-295">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-295">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-296">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-296">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-297">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-297">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-298">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-298">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-299">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-299">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-300">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-300">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-301">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-301">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-302">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-302">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-303">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-303">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-304">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-304">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-305">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-305">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="8bafa-306">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-306">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-307">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-307">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-308">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-308">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-309">Le processus d'authentification utilise les informations d'identification du client et la liaison de canal spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-309">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-310">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-310">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-311">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-311">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-312">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-312">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="8bafa-313">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-313">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-314">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-314">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="8bafa-315">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-315">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-316">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-316">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-317">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-317">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-318">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-318">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-319">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-319">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-320">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-320">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-321">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-321">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-322">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-322">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-323">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-323">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-324">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-324">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-325">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-325">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-326">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-326">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-327">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-327">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-328">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-328">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-329">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-329">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-330">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-330">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-331">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-331">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-332">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-332">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="8bafa-333">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-333">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-334">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-334">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-335">Le processus d'authentification utilise les options d'authentification et les informations d'identification spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-335">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-336">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-336">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-337">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-337">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-338">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-338">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-339">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-339">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-340">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-340">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-341">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-341">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-342">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-342">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-343">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-343">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-344">
            <paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-344">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-345">
            <paramref name="targetName" /> a la valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-345">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-346">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-346">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-347">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-347">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-348">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-348">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-349">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-349">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-350">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-350">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-351">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-351">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-352">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-352">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-353">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-353">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-354">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-354">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-355">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-355">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-356">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-356">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-357">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-357">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="8bafa-358">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-358">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-359">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-359">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-360">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-360">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="8bafa-361">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-361">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-362">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-362">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-363">Le processus d'authentification utilise les informations d'identification du client, les options d'authentification et la liaison de canal spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-363">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-364">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-364">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-365">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-365">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-366">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-366">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-367">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-367">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-368">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-368">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-369">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-369">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-370">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre sera récupéré par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété sur associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-370">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="8bafa-371">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-371">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-372">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-372">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-373">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-373">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-374">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-374">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-375">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-375">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-376">
            <paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-376">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-377">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-378">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-379">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-379">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-380">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-380">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-381">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-381">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-382">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-382">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-383">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-383">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-384">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-384">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-385">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-385">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-386">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-386">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-387">Gère le côté serveur d'une authentification pour une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-387">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-388">Ces méthodes bloquent pendant que l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="8bafa-388">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="8bafa-389">Pour empêcher l’application à partir de blocage en attendant que l’authentification, utilisez le <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-389">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-390">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-390">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-391">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-391">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-392">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-392">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-393">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-393">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="8bafa-394">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-394">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-395">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-395">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-396">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-396">This method blocks until the operation completes.</span></span> <span data-ttu-id="8bafa-397">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-397">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-398">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-398">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-399">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-399">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-400">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-400">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-401">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-401">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-402">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-402">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-403">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-403">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-404">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-404">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-405">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-405">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-406">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-406">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-407">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-407">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="8bafa-408">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-408">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-409">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-409">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-410">Le processus d'authentification utilise la stratégie de protection étendue spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-410">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-411">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-411">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-412">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-412">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-413">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-413">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="8bafa-414">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-414">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="8bafa-415">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-415">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-416">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-416">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-417">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-417">This method blocks until the operation completes.</span></span> <span data-ttu-id="8bafa-418">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-418">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-419">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-419">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-420">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-420">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-421">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-421">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-422">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-422">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-423">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-423">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-424">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-424">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-425">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-425">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-426">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-426">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-427">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-427">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8bafa-428">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-428">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-429">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-429">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-430">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-430">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-431">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-431">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="8bafa-432">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-432">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-433">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-433">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-434">Le processus d'authentification utilise les options d'authentification et les informations d'identification du serveur spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-434">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-435">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-436">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-437">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="8bafa-438">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-439">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-440">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-441">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-441">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-442">
            <paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-442">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-443">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-443">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-444">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-444">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-445">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-445">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-446">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-446">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-447">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-447">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-448">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-449">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-449">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-450">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-450">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="8bafa-451">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-451">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-452">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-452">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-453">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-453">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-454">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-455">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-455">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="8bafa-456">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-456">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-457">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-457">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="8bafa-458">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-458">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-459">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-459">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-460">Le processus d'authentification utilise les informations d'identification du serveur, les options d'authentification et la stratégie de protection étendue spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-460">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-461">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-461">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="8bafa-462">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-462">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-463">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-463">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-464">Cette méthode se bloque jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-464">This method blocks until the operation completes.</span></span> <span data-ttu-id="8bafa-465">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-465">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-466">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-466">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-467">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-467">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-468">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-468">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-469">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-469">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-470">
            <paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-470">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-471">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-471">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-472">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-472">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-473">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-473">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-474">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-474">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-475">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-475">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-476">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-476">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-477">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-477">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="8bafa-478">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-478">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-479">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-479">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-480">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-480">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8bafa-481">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-481">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-482">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-482">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-483">Gère le côté serveur d'une authentification d'une connexion client-serveur en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-483">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-484">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-484">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-485">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-485">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-486">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-486">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-487">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-487">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-488">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-488">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-489">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-489">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="8bafa-490">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-490">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-491">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-491">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-492">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-492">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-493">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-493">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-494">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-494">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-495">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-495">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-496">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-496">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-497">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-497">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-498">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-498">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-499">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-499">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-500">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-500">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-501">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-501">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="8bafa-502">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-502">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-503">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-503">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-504">Le processus d'authentification utilise la stratégie de protection étendue spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-504">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-505">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-505">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-506">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-506">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-507">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-507">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-508">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-508">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-509">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-509">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="8bafa-510">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-510">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="8bafa-511">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-511">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-512">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-512">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-513">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-513">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-514">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-514">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-515">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-515">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-516">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-516">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-517">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-517">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-518">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-518">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-519">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-519">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-520">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-520">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-521">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-521">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8bafa-522">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-522">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-523">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-523">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-524">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-524">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-525">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-525">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="8bafa-526">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-526">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-527">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-527">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-528">Le processus d'authentification utilise les options d'authentification et les informations d'identification du serveur spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-528">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-529">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-529">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-530">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-530">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-531">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-531">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-532">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-532">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-533">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-533">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-534">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-534">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-535">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-535">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-536">
            <paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-536">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-537">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-537">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-538">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-538">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-539">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-539">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-540">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-540">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-541">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-541">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-542">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-542">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-543">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-543">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-544">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-544">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="8bafa-545">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-545">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-546">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-546">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-547">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-547">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-548">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-548">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-549">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-549">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="8bafa-550">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-550">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-551">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-551">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="8bafa-552">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-552">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-553">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-553">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="8bafa-554">Le processus d'authentification utilise les informations d'identification du serveur, les options d'authentification et la stratégie de protection étendue spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-554">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-555">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-555">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8bafa-556">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-556">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-557">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-557">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="8bafa-558">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-558">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-559">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-559">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-560">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-560">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-561">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-561">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-562">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-562">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-563">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-563">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-564">
            <paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-564">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-565">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-565">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-566">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-566">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-567">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-567">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-568">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-568">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-569">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-569">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-570">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-570">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-571">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-571">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="8bafa-572">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-572">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-573">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-573">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-574">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-574">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8bafa-575">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-575">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-576">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-576">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-577">Commence une opération asynchrone pour authentifier le côté client d'une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-577">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-578">Les surcharges de cette méthode ne bloquent pas lorsque l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="8bafa-578">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="8bafa-579">Pour bloquer en attendant que l’authentification, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-579">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-580">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-580">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-581">Objet défini par l'utilisateur comportant des informations sur l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-581">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="8bafa-582">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-582">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-583">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-583">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-584">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-584">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-585">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-585">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-586">L’authentification utilise le client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-586">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-587">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-587">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-588">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-588">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="8bafa-589">Le <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-589">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-590">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-590">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-591">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-591">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-592">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-592">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="8bafa-593">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-593">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-594">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-594">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-595">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-595">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-596">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-596">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-597">L’exemple de code suivant illustre l’appel de cette méthode pour commencer une authentification asynchrone pour le client.</span><span class="sxs-lookup"><span data-stu-id="8bafa-597">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-598">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-598">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-599">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-599">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-600">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-600">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-601">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-601">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-602">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-602">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-603">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-603">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-604">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-604">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-605">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-605">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-606">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-606">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-607">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-607">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-608">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-608">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-609">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-609">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-610">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-610">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-611">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-611">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-612">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-612">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-613">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-613">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-614">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-614">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-615">Le processus d'authentification utilise les informations d'identification spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-615">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="8bafa-616">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-616">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-617">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-617">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-618">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-618">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-619">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-619">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-620">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-620">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="8bafa-621">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-621">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-622">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-622">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-623">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-623">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-624">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-624">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-625">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-625">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-626">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-626">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-627">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-627">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-628">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-628">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-629">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-629">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-630">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-630">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-631">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-631">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-632">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-632">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-633">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-633">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-634">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-634">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-635">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-635">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-636">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-636">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-637">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-637">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-638">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-638">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-639">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-639">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="8bafa-640">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-640">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-641">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-641">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-642">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-642">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-643">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-643">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-644">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-644">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-645">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-645">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-646">Le processus d'authentification utilise les informations d'identification et la liaison de canal spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-646">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="8bafa-647">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-647">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-648">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-648">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-649">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-649">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-650">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-650">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-651">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-651">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="8bafa-652">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-652">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-653">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-653">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-654">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-654">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-655">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-655">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-656">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-656">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-657">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-657">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-658">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-658">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-659">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-659">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-660">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-660">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-661">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-661">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-662">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-662">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-663">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-663">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-664">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-664">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-665">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-665">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-666">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-666">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-667">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-667">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-668">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-668">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-669">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-669">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-670">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-670">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-671">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-671">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="8bafa-672">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-672">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-673">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-673">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-674">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-674">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-675">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-675">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-676">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-676">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-677">Le processus d'authentification utilise les options d'authentification et les informations d'identification spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-677">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="8bafa-678">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-678">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-679">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-679">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-680">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-680">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-681">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-681">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-682">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-682">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-683">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-683">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-684">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-684">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-685">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-685">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-686">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-686">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="8bafa-687">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-687">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-688">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-688">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-689">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-689">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-690">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-690">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-691">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-691">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-692">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-692">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-693">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-693">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-694">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-694">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-695">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-695">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-696">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-696">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-697">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-697">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-698">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-698">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-699">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-699">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-700">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-700">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-701">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-701">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-702">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-702">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-703">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-703">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-704">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-704">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-705">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-705">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="8bafa-706">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-706">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="8bafa-707">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-707">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-708">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-708">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="8bafa-709">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-709">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-710">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-710">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-711">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-711">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-712">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-712">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-713">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-713">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-714">Le processus d'authentification utilise les informations d'identification, les options d'authentification et la liaison de canal spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-714">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="8bafa-715">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-715">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-716">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-716">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-717">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-717">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-718">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-718">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-719">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-719">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-720">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-720">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-721">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-721">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-722">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-722">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-723">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-723">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="8bafa-724">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-724">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-725">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-725">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-726">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-726">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-727">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-727">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-728">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-728">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8bafa-729">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-729">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-730">
            <paramref name="targetName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-730">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-731">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-731">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-732">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-732">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-733">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-733">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-734">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-734">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-735">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-735">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-736">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-736">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-737">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-737">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="8bafa-738">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-738">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-739">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-739">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-740">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-740">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-741">Commence une opération asynchrone pour gérer le côté serveur de l'authentification d'une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-741">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-742">Les surcharges de cette méthode ne bloquent pas alors que l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="8bafa-742">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="8bafa-743">Pour bloquer en attendant que l’authentification, utilisez le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-743">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-744">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-744">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-745">Objet défini par l'utilisateur comportant des informations sur l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-745">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="8bafa-746">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-746">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-747">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-747">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-748">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-748">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-749">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-749">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-750">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-750">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-751">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-751">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-752">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-752">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="8bafa-753">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-753">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-754">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-754">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-755">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-755">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-756">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-756">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-757">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-757">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-758">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-758">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-759">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-759">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-760">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-760">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-761">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-761">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-762">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-762">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-763">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-763">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-764">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-764">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-765">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-765">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="8bafa-766">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-766">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-767">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-767">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-768">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-768">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-769">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-769">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-770">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-770">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-771">Le processus d'authentification utilise la stratégie de protection étendue spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-771">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="8bafa-772">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-772">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-773">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-773">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-774">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-774">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="8bafa-775">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-775">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="8bafa-776">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-776">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="8bafa-777">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-777">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="8bafa-778">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-778">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-779">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-779">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-780">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-780">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-781">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-781">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-782">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-782">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-783">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-783">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-784">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-784">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-785">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-785">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-786">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-786">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-787">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-787">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-788">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-788">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-789">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-789">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8bafa-790">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-790">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-791">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-791">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-792">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-792">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-793">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-793">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="8bafa-794">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-794">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-795">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-795">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-796">Objet défini par l'utilisateur comportant des informations sur l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-796">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="8bafa-797">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-797">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-798">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-798">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-799">Le processus d'authentification utilise les options d'authentification et les informations d'identification du serveur spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-799">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="8bafa-800">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-800">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-801">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-801">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-802">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-802">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-803">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-803">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-804">Authentification réussie ne garantit pas que, demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-804">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-805">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-805">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-806">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-806">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-807">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-807">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-808">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-808">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="8bafa-809">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-809">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-810">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-810">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-811">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-811">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-812">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-812">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-813">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-813">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-814">
            <paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-814">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-815">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-815">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-816">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-816">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-817">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-817">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-818">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-818">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-819">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-819">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-820">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-820">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-821">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-821">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-822">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-822">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="8bafa-823">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-823">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-824">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-824">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="8bafa-825">Pour utiliser l’explicite <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-825">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="8bafa-826">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-826">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="8bafa-827">
            <see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-827">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="8bafa-828">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-828">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="8bafa-829">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-829">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="8bafa-830">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-830">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-831">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-831">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-832">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-832">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-833">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-833">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-834">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-834">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="8bafa-835">Le processus d'authentification utilise les informations d'identification du serveur, les options d'authentification et la stratégie de protection étendue spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-835">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="8bafa-836">Cette méthode ne provoque pas de blocage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-836">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-837">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-837">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-838">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-838">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="8bafa-839">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-839">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="8bafa-840">Authentification réussie ne garantit pas que, demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-840">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="8bafa-841">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-841">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="8bafa-842">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> défini sur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-842">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="8bafa-843">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-843">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-844">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-844">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8bafa-845">L’opération asynchrone d’authentification doit être effectuée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-845">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="8bafa-846">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-846">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-847">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-847">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-848">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-848">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-849">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-849">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-850">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-850">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-851">
            <paramref name="credential" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-851">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bafa-852">
            <paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-852">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-853">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-853">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-854">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-854">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-855">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-855">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-856">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-856">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-857">L’authentification a déjà eu lieu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-857">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="8bafa-858">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-858">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-859">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-859">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="8bafa-860">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-860">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-861">Windows 95 et Windows 98 ne sont pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-861">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-862">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-862">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8bafa-863">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-863">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="8bafa-864">Authentification Windows intégrée avec protection étendue</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-864">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8bafa-865">Tableau <see cref="T:System.Byte" /> qui reçoit les octets lus dans le flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-865">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8bafa-866">Emplacement de base zéro dans <c>buffer</c> à partir duquel commencer le stockage des données lues dans ce flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-866">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8bafa-867">Nombre maximal d'octets à lire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-867">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-868">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler lorsque l'opération de lecture est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-868">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-869">Objet défini par l'utilisateur comportant des informations sur l'opération de lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-869">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="8bafa-870">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-870">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-871">Commence une opération de lecture asynchrone qui lit des données du flux et les stocke dans le tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-871">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-872">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-872">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-873">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, l’opération de lecture lit les données dans le flux sous-jacent, vérifie l’intégrité des données et les déchiffre.</span><span class="sxs-lookup"><span data-stu-id="8bafa-873">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="8bafa-874">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode démarre une opération de lecture asynchrone sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-874">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="8bafa-875">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-875">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-876">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-876">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="8bafa-877">L’opération de lecture asynchrone doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndRead%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-877">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="8bafa-878">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-878">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-879">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-879">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-880">Le <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge simultanée de plusieurs opérations de lecture.</span><span class="sxs-lookup"><span data-stu-id="8bafa-880">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="8bafa-881">Si vous essayez de démarrer une opération de lecture pendant la lecture des autre opération s’exécute déjà sur le même flux, un <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-881">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="8bafa-882">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-882">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="8bafa-883">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-883">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-884">L’exemple de code suivant illustre le démarrage d’une opération de lecture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="8bafa-884">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="8bafa-885">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8bafa-885">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-886">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-886">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-887">
            <paramref name="offset" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-887">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="8bafa-888">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-888">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-889">
            <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-889">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="8bafa-890">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-890">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-891">
            <paramref name="offset" /> plus <paramref name="count" /> est supérieur à la longueur de <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-891">
              <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8bafa-892">L'opération de lecture a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-892">The read operation failed.</span>
          </span>
          <span data-ttu-id="8bafa-893">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-893">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-894">Le chiffrement est utilisé, mais les données n'ont pas pu être déchiffrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-894">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-895">Une opération de lecture est déjà en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-895">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-896">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-896">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-897">L'authentification n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-897">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8bafa-898">Tableau de <see cref="T:System.Byte" /> qui fournit les octets à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-898">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8bafa-899">Emplacement de base zéro dans <c>buffer</c> à partir duquel commencer la lecture des octets à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-899">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8bafa-900">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre d’octets à lire dans <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-900">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="8bafa-901">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler lorsque l'opération d'écriture est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-901">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="8bafa-902">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-902">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="8bafa-903">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-903">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-904">Commence une opération d'écriture asynchrone qui écrit des <see cref="T:System.Byte" />s de la mémoire tampon spécifiée vers le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-904">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-905">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-905">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-906">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, cette méthode lit les données à partir de la mémoire tampon, chiffre, se connecte, ou chiffre et signe et transmet à l’aide du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-906">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="8bafa-907">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode démarre une opération d’écriture asynchrone sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-907">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="8bafa-908">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-908">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="8bafa-909">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-909">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="8bafa-910">L’opération de lecture asynchrone doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndWrite%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-910">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="8bafa-911">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="8bafa-911">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="8bafa-912">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="8bafa-912">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="8bafa-913">Le <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</span><span class="sxs-lookup"><span data-stu-id="8bafa-913">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="8bafa-914">Si vous essayez de démarrer une opération d’écriture lorsqu’une autre opération d’écriture est déjà exécutée sur le même flux, un <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-914">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="8bafa-915">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-915">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="8bafa-916">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-916">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-917">L’exemple de code suivant montre le début d’une opération d’écriture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="8bafa-917">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="8bafa-918">La méthode suivante est appelée lorsque l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-918">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-919">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-919">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-920">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-920">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="8bafa-921">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-921">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-922">
            <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-922">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="8bafa-923">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-923">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-924">
            <paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-924">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8bafa-925">L'opération d'écriture a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-925">The write operation failed.</span>
          </span>
          <span data-ttu-id="8bafa-926">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-926">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-927">Le chiffrement est utilisé, mais les données n'ont pas pu être chiffrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-927">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-928">Une opération d'écriture est déjà en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-928">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-929">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-929">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-930">L'authentification n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-930">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-931">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent est accessible en lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-931">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-932">
            <see langword="true" /> si l'authentification s'est produite et que le flux sous-jacent est accessible en lecture ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-932">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-933">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanRead%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-933">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-934">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8bafa-934">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-935">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-935">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-936">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent peut faire l'objet d'une recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-936">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-937">Cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-937">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-938">Vous ne devez pas tenter de définir la position de la <xref:System.Net.Security.NegotiateStream> objet ou son flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-938">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="8bafa-939">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8bafa-939">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-940">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-940">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-941">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent prend en charge les délais d'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-941">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-942">
            <see langword="true" /> si le flux de données prend en charge les délais d'attente ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-942">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-943">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-943">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-944">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8bafa-944">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-945">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-945">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-946">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent est accessible en écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-946">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-947">
            <see langword="true" /> si l'authentification s'est produite et que le flux sous-jacent est accessible en écriture ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-947">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-948">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanWrite%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-948">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-949">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8bafa-949">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-950">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-950">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8bafa-951">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-951">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-952">Libère les ressources non managées utilisées par <see cref="T:System.Net.Security.NegotiateStream" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-952">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-953">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-953">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8bafa-954">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="8bafa-954">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8bafa-955"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="8bafa-955"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8bafa-956">Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Net.Security.NegotiateStream> références.</span><span class="sxs-lookup"><span data-stu-id="8bafa-956">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="8bafa-957">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-957">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8bafa-958">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8bafa-958">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="8bafa-959">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8bafa-959">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="8bafa-960">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="8bafa-960">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="8bafa-961">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="8bafa-961">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8bafa-962">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-962">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-963">Termine une opération d'authentification du client asynchrone en attente qui a été démarrée avec un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-963">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-964">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="8bafa-964">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="8bafa-965">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-965">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-966">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-966">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-967">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-967">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-968">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-968">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="8bafa-969">Pour effectuer cette opération de manière synchrone, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-969">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-970">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-970">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-971">
            <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-971">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-972">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-972">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-973">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-973">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-974">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-974">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-975">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-975">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-976">Aucune authentification de client n'est en attente d'achèvement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-976">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8bafa-977">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-977">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-978">Termine une opération d'authentification du client asynchrone en attente qui a été démarrée avec un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-978">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-979">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="8bafa-979">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="8bafa-980">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer quels services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-980">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="8bafa-981">Vérifier le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété afin de déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="8bafa-981">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="8bafa-982">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-982">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="8bafa-983">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-983">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="8bafa-984">Pour effectuer cette opération de façon synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-984">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-985">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-985">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-986">
            <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-986">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="8bafa-987">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-987">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-988">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-988">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="8bafa-989">L'authentification a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-989">The authentication failed.</span>
          </span>
          <span data-ttu-id="8bafa-990">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-990">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-991">Aucune authentification n'est en attente d'achèvement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-991">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8bafa-992">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-992">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-993">Termine une opération de lecture asynchrone qui a été démarrée avec un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-993">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-994">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre d'octets lus dans le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-994">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-995">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="8bafa-995">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="8bafa-996">Pour effectuer cette opération de façon synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-996">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="8bafa-997">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-997">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="8bafa-998">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-998">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-999">L’exemple de code suivant illustre l’opération de lecture asynchrone de fin.</span><span class="sxs-lookup"><span data-stu-id="8bafa-999">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="8bafa-1000">Pour obtenir un exemple qui illustre le démarrage de l’opération, consultez <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1000">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-1001">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1001">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-1002">asyncResult n'a pas été créé par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1002">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-1003">L'authentification n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1003">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8bafa-1004">L'opération de lecture a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1004">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8bafa-1005">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1005">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-1006">Termine une opération d'écriture asynchrone qui a été démarrée avec un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1006">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1007">Si l’opération n’est pas terminée, cette méthode se bloque jusqu'à ce que c’est le cas.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1007">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="8bafa-1008">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1008">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="8bafa-1009">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1009">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="8bafa-1010">Pour effectuer cette opération de façon synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-1010">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1011">L’exemple de code suivant montre une méthode qui est appelée pour terminer l’opération d’écriture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1011">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="8bafa-1012">Pour obtenir un exemple qui illustre le démarrage de l’opération, consultez <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1012">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-1013">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1013">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-1014">asyncResult n'a pas été créé par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1014">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-1015">L'authentification n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1015">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8bafa-1016">L'opération d'écriture a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1016">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1017">Provoque l'écriture des données mises en mémoire tampon sur le périphérique sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1017">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1018">Cette méthode appelle <xref:System.IO.Stream.Flush%2A> sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1018">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1019">L’exemple de code suivant montre le flux de données de consommation.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1019">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1020">Obtient une valeur qui indique comment le serveur peut utiliser les informations d'identification du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1020">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1021">Une des valeurs de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1021">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1022">Vous devez vous authentifier avec succès avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1022">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="8bafa-1023">Les clients spécifient le niveau d’emprunt d’identité lorsqu’ils demandent l’authentification en appelant une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1023">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="8bafa-1024">Si vous vous authentifiez sans spécifier un <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> est utilisé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1024">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1025">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1025">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-1026">L'authentification a échoué ou n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1026">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1027">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si l'authentification a réussi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1028">
            <see langword="true" /> si l'authentification réalisée a réussi ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1028">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1029">Les clients s’authentifient en appelant le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1029">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="8bafa-1030">Authentifieront des serveurs en appelant le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1030">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1031">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1031">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1032">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si ce <see cref="T:System.Net.Security.NegotiateStream" /> utilise le chiffrement de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1032">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1033">
            <see langword="true" /> si les données sont chiffrées avant d'être transmises sur le réseau et déchiffrées lorsqu'elles atteignent le point de terminaison distant ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1033">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1034">Le chiffrement permet de protéger la confidentialité des données ; à savoir, il permet de garantir que, lorsque les données sont en transit qu’il ne peut pas être déchiffré par des tiers.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1034">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1035">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1035">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1036">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le serveur et le client ont tous les deux été authentifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1036">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1037">
            <see langword="true" /> si le serveur a été authentifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1037">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1038">L’authentification mutuelle est spécifiée par le client lorsque le client souhaite que le serveur de fournir des informations d’identification pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1038">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="8bafa-1039">Par défaut, les clients demandent l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1039">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="8bafa-1040">Le protocole Negotiate sélectionne NTLM ou Kerberos selon les protocoles de sécurité pris en charge par le client et le serveur.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1040">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="8bafa-1041">NTLM ne prend pas en charge l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1041">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1042">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1042">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1043">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le côté local de la connexion utilisée par ce <see cref="T:System.Net.Security.NegotiateStream" /> a été authentifié comme serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1043">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1044">
            <see langword="true" /> si le point de terminaison local a été authentifié avec succès comme côté serveur de la connexion authentifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1044">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1045">Si l’authentification a échoué ou n’a été réalisée, cette propriété retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1045">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="8bafa-1046">Pour vous authentifier en tant que le serveur, appelez le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1046">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1047">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1047">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1048">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si les données envoyées à l'aide de ce flux sont signées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1048">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1049">
            <see langword="true" /> si les données sont signées avant d'être transmises ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1049">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1050">Signature des données permet de protéger l’intégrité des données. à savoir, il permet le destinataire de déterminer si les données a été falsifiées lors de leur transit.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1050">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1051">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1051">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1052">Obtient la longueur du flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1052">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1053">
            <see cref="T:System.Int64" /> qui spécifie la longueur du flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1053">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1054">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.Length%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1054">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-1055">Si le flux sous-jacent n’est pas identifiable, cette propriété lève généralement une exception.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1055">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="8bafa-1056">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1056">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1057">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1057">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-1058">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1058">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1059">Obtient ou définit la position actuelle dans le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1059">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1060">
            <see cref="T:System.Int64" /> qui spécifie la position actuelle dans le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1060">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1061">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.Position%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1061">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-1062">Si le flux sous-jacent n’est pas identifiable, cette propriété lève généralement une exception.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1062">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="8bafa-1063">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1063">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-1064">La définition de cette propriété n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1064">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="8bafa-1065">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1065">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-1066">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1066">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8bafa-1067">Tableau <see cref="T:System.Byte" /> qui reçoit les octets lus dans le flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1067">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8bafa-1068">
            <see cref="T:System.Int32" /> contenant l’emplacement de base zéro dans <c>buffer</c> à partir duquel commencer le stockage des données lues dans ce flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1068">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8bafa-1069">
            <see cref="T:System.Int32" /> contenant le nombre maximal d'octets à lire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1069">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-1070">Lit les données de ce flux et les stocke dans le tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1070">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-1071">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre d'octets lus dans le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1071">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="8bafa-1072">Lorsqu'il n'y a plus de données à lire, retourne 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1072">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1073">La méthode lit un maximum de `count` octets à partir du flux et les stocke dans `buffer` commençant à `offset`.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1073">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="8bafa-1074">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1074">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="8bafa-1075">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1075">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="8bafa-1076">Pour effectuer cette opération de façon asynchrone, utilisez la <xref:System.Net.Security.NegotiateStream.BeginRead%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-1076">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1077">L’exemple de code suivant illustre la lecture à partir d’un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1077">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8bafa-1078">L'opération de lecture a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1078">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-1079">L'authentification n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1079">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-1080">Une opération <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> est en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1080">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1081">Obtient ou définit la durée pendant laquelle une opération de lecture reste bloquée en attendant des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1081">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1082">
            <see cref="T:System.Int32" /> spécifiant le temps qui doit s'écouler avant l'échec d'une opération de lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1082">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1083">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.ReadTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1083">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-1084">Lorsque vous définissez cette propriété, le <xref:System.IO.Stream.ReadTimeout%2A> sur le flux sous-jacent a la valeur à la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1084">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="8bafa-1085">Si le flux sous-jacent est un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> est exprimée en millisecondes et a la valeur <xref:System.Threading.Timeout.Infinite> par défaut, de sorte que les opérations n’expirent pas de lecture.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1085">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1086">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1086">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1087">Obtient des informations à propos de l'identité du tiers distant qui partage ce flux authentifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1087">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1088">Objet <see cref="T:System.Security.Principal.IIdentity" /> qui décrit l'identité du point de terminaison distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1088">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1089">Lors de l’accès par le client, cette propriété retourne un <xref:System.Security.Principal.GenericIdentity> contenant le nom Principal de Service (SPN) du serveur et le protocole d’authentification utilisé.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1089">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="8bafa-1090">Lors de l’accès par le serveur, cette propriété retourne un <xref:System.Security.Principal.WindowsIdentity> qui décrit le client.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1090">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="8bafa-1091">Si le <xref:System.Security.Principal.WindowsIdentity> est non disponible, les informations sur le client sont retournées au serveur dans un <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1091">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1092">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1092">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-1093">L'authentification a échoué ou n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1093">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="8bafa-1094">Cette valeur est ignorée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1094">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="8bafa-1095">Cette valeur est ignorée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1095">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-1096">Lève <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1096">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bafa-1097">Lève toujours une exception <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1097">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1098">N'appelez pas cette méthode.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1098">Do not call this method.</span></span> <span data-ttu-id="8bafa-1099">Il est hérité, mais n’est pas pris en charge par <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1099">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-1100">La recherche n'est pas prise en charge sur <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1100">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8bafa-1101">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur du flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1101">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-1102">Définit la longueur du flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1102">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8bafa-1103">Tableau de <see cref="T:System.Byte" /> qui fournit les octets écrits dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1103">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8bafa-1104">
            <see cref="T:System.Int32" /> contenant l’emplacement de base zéro dans <c>buffer</c> à partir duquel commencer la lecture des octets à écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1104">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8bafa-1105">
            <see cref="T:System.Int32" /> contenant le nombre d’octets à lire dans <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1105">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bafa-1106">Écrivez le nombre spécifié de <see cref="T:System.Byte" />s dans le flux sous-jacent à l'aide de la mémoire tampon et de l'offset spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1106">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1107">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, cette méthode lit les données à partir de la mémoire tampon, chiffre, se connecte, ou chiffre et signe et transmet à l’aide du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1107">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="8bafa-1108">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode appelle <xref:System.IO.Stream.Write%2A> sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1108">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="8bafa-1109">Cette méthode se bloque pendant que l’opération d’écriture se termine.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1109">This method blocks while the write operation completes.</span></span> <span data-ttu-id="8bafa-1110">Pour éviter un blocage pendant l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8bafa-1110">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="8bafa-1111">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez été authentifié.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1111">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="8bafa-1112">Pour l’authentification, appelez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1112">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="8bafa-1113">Le <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1113">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="8bafa-1114">Si vous essayez de démarrer une opération d’écriture lorsqu’une autre opération d’écriture est déjà exécutée sur le même flux, un <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1114">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1115">L’exemple de code suivant illustre l’écriture dans un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1115">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bafa-1116">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1116">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bafa-1117">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1117">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="8bafa-1118">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1118">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-1119">
            <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1119">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="8bafa-1120">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1120">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-1121">
            <paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1121">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8bafa-1122">L'opération d'écriture a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1122">The write operation failed.</span>
          </span>
          <span data-ttu-id="8bafa-1123">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1123">\- or -</span>
          </span>
          <span data-ttu-id="8bafa-1124">Le chiffrement est utilisé, mais les données n'ont pas pu être chiffrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1124">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8bafa-1125">Une opération d'écriture est déjà en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1125">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8bafa-1126">L’objet a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1126">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8bafa-1127">L'authentification n'a pas été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1127">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bafa-1128">Obtient ou définit la durée pendant laquelle une opération d'écriture reste bloquée en attendant des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1128">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bafa-1129">
            <see cref="T:System.Int32" /> spécifiant le temps qui doit s'écouler avant l'échec d'une opération d'écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bafa-1129">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bafa-1130">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.WriteTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1130">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="8bafa-1131">Pour les opérations de jeu, définit la valeur spécifiée la <xref:System.IO.Stream.WriteTimeout%2A> valeur sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1131">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="8bafa-1132">Si le flux sous-jacent est un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> est exprimée en millisecondes et a la valeur <xref:System.Threading.Timeout.Infinite> par défaut, de sorte que les opérations n’expirent pas d’écriture.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1132">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bafa-1133">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="8bafa-1133">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>