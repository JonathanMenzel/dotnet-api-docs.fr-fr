<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f7545-101">Fournit un flux qui utilise le protocole de sécurité Negotiate pour authentifier le client et éventuellement le serveur, dans les communications client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-102">Utilisez la <xref:System.Net.Security.NegotiateStream> classe pour l’authentification et pour aider à sécuriser les informations transmises entre un client et un serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="f7545-103">À l’aide de <xref:System.Net.Security.NegotiateStream>, vous pouvez procédez comme suit.</span><span class="sxs-lookup"><span data-stu-id="f7545-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="f7545-104">Envoyer des informations d’identification du client au serveur pour l’emprunt d’identité ou la délégation.</span><span class="sxs-lookup"><span data-stu-id="f7545-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="f7545-105">Demander l’authentification du serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="f7545-106">Chiffrer ou signer les données avant de les transmettre.</span><span class="sxs-lookup"><span data-stu-id="f7545-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="f7545-107">L’authentification doit être effectuée avant de transmettre des informations.</span><span class="sxs-lookup"><span data-stu-id="f7545-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="f7545-108">Les clients demandent l’authentification à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> , ces méthodes bloquent jusqu'à la fin de l’authentification, ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> , ces méthodes ne bloquent pas pendant l’attente de l’authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="f7545-109">Demandent d’authentification à l’aide de l’une de serveurs <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="f7545-110">Le client et éventuellement le serveur, est authentifié à l’aide du protocole de sécurité Negotiate.</span><span class="sxs-lookup"><span data-stu-id="f7545-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="f7545-111">Sur les systèmes Windows 95/98, Windows NT LAN Manager (NTLM) est le protocole utilisé pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="f7545-112">Sur d’autres plateformes Kerberos protocole est utilisé pour l’authentification du client et le serveur de prise en charge ; Sinon, NTLM est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f7545-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="f7545-113">Pour obtenir une description détaillée de ces protocoles, consultez la documentation de développement Platform SDK sur MSDN, à msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="f7545-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="f7545-114">La <xref:System.Net.Security.NegotiateStream> classe effectue l’authentification à l’aide de l’Interface de fournisseur de prise en charge de sécurité (SSPI).</span><span class="sxs-lookup"><span data-stu-id="f7545-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="f7545-115">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés afin de déterminer les services de sécurité seront utilisées par le <xref:System.Net.Security.NegotiateStream> pour aider à sécuriser vos données pendant la transmission.</span><span class="sxs-lookup"><span data-stu-id="f7545-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="f7545-116">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="f7545-117">Vous pouvez obtenir des informations sur le client distant ou serveur à l’aide du <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="f7545-118">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-119">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="f7545-120">Envoyer des données à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.Write%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="f7545-121">Réception de données à l’aide de la commande synchrone <xref:System.Net.Security.NegotiateStream.Read%2A> ou asynchrone <xref:System.Net.Security.NegotiateStream.BeginRead%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="f7545-122">Si les services de sécurité telles que le chiffrement ou la signature sont activés, ils sont automatiquement appliqués à vos données par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-123">Le <xref:System.Net.Security.NegotiateStream> transmet des données à l’aide d’un flux de données que vous fournissez lors de la création du <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-124">Lorsque vous fournissez ce flux sous-jacent, vous pouvez spécifier si la fermeture du <xref:System.Net.Security.NegotiateStream> ferme également le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-125">L’exemple de code suivant montre le côté client d’une connexion client-serveur qui utilise le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-126">Le client s’authentifie et envoie un message sur le serveur de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="f7545-127">L’exemple de code suivant montre le côté serveur d’une connexion client-serveur qui utilise le <xref:System.Net.Security.NegotiateStream> pour authentifier le client et de lire un message envoyé par le client.</span><span class="sxs-lookup"><span data-stu-id="f7545-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-128">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.NegotiateStream" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-129">Pour empêcher le <xref:System.Net.Security.NegotiateStream> de fermer le flux que vous fournissez, utilisez le <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="f7545-130">Objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.NegotiateStream" /> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="f7545-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="f7545-131">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.NegotiateStream" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7545-132">L’exemple de code suivant illustre l’appel de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="f7545-133">Objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.NegotiateStream" /> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="f7545-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="f7545-134"><see langword="true" /> pour indiquer que la fermeture de ce <see cref="T:System.Net.Security.NegotiateStream" /> n’a aucun effet sur <c>innerstream</c> ; <see langword="false" /> pour indiquer que la fermeture de ce <see cref="T:System.Net.Security.NegotiateStream" /> ferme également <c>innerStream</c>.</span><span class="sxs-lookup"><span data-stu-id="f7545-134"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span></span></param>
        <summary><span data-ttu-id="f7545-135">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.NegotiateStream" /> en utilisant le <see cref="T:System.IO.Stream" /> et le comportement de clôture de flux spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f7545-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-136">Lorsque vous spécifiez `true` pour le `leaveStreamOpen` paramètre, la fermeture de la <xref:System.Net.Security.NegotiateStream> n’a aucun effet le `innerStream` diffuser en continu ; vous devez fermer explicitement `innerStream` lorsque vous n’avez plus besoin.</span><span class="sxs-lookup"><span data-stu-id="f7545-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-137">L’exemple de code suivant illustre l’appel de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="f7545-138">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="f7545-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-139"><paramref name="innerStream" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-139"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-140">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-140">\- or -</span></span>  
  
 <span data-ttu-id="f7545-141"><paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-141"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-142">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7545-143">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-144">L’authentification du client utilise le <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-144">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-145">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-145">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-146">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="f7545-146">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="f7545-147">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-147">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-148">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-148">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-149">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-149">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-150">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-150">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-151">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-151">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-152">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-152">The authentication failed.</span></span> <span data-ttu-id="f7545-153">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-153">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-154">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-154">The authentication failed.</span></span> <span data-ttu-id="f7545-155">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-155">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-156">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-156">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-157">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-157">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-158">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-158">\- or -</span></span>  
  
 <span data-ttu-id="f7545-159">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-159">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-160">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-160">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-161">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-161">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-162">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-162">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-163"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-163">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-164">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-164">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="f7545-165">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-165">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-166">Le processus d'authentification utilise les informations d'identification du client spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-166">The authentication process uses the specified client credential.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-167">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="f7545-167">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="f7545-168">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-168">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-169">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-169">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-170">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-170">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-171">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-171">The authentication failed.</span></span> <span data-ttu-id="f7545-172">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-172">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-173">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-173">The authentication failed.</span></span> <span data-ttu-id="f7545-174">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-174">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-175">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-175">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-176">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-176">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-177">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-177">\- or -</span></span>  
  
 <span data-ttu-id="f7545-178">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-178">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-179">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-179">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-180"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-180"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-181">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-181">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-182">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-183"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-183">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="f7545-184"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-184">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-185">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-185">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="f7545-186">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-186">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-187">Le processus d'authentification utilise les informations d'identification du client et la liaison de canal spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-187">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-188">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="f7545-188">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="f7545-189">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-189">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-190">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre serait extrait par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-190">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="f7545-191">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-191">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-192">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-192">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-193"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-193"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-194">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-194">\- or -</span></span>  
  
 <span data-ttu-id="f7545-195"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-195"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-196">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-196">The authentication failed.</span></span> <span data-ttu-id="f7545-197">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-197">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-198">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-198">The authentication failed.</span></span> <span data-ttu-id="f7545-199">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-199">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-200">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-200">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-201">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-201">\- or -</span></span>  
  
 <span data-ttu-id="f7545-202">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-202">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-203">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-203">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-204">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-204">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-205"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-205">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-206">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-206">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-207">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-207">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="f7545-208">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-208">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-209">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-209">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-210">Le processus d'authentification utilise les options d'authentification et les informations d'identification spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-210">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-211">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-211">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-212">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-212">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-213">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-213">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-214">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-214">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-215">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-215">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-216">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-216">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-217"><paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="f7545-217"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-218"><paramref name="targetName" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f7545-218"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-219">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-219">The authentication failed.</span></span> <span data-ttu-id="f7545-220">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-220">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-221">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-221">The authentication failed.</span></span> <span data-ttu-id="f7545-222">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-222">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-223">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-223">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-224">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-224">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-225">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-225">\- or -</span></span>  
  
 <span data-ttu-id="f7545-226">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-226">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-227">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-227">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-228">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-228">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-229">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-229">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-230"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-230">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="f7545-231"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-231">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-232">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-232">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-233">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-233">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="f7545-234">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-234">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-235">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-235">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-236">Le processus d'authentification utilise les informations d'identification du client, les options d'authentification et la liaison de canal spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-236">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-237">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-237">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-238">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-238">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-239">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-239">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-240">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-240">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-241">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre serait extrait par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-241">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="f7545-242">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-242">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-243">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-243">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-244"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-244"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-245">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-245">\- or -</span></span>  
  
 <span data-ttu-id="f7545-246"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-246"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-247"><paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="f7545-247"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-248">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-248">The authentication failed.</span></span> <span data-ttu-id="f7545-249">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-249">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-250">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-250">The authentication failed.</span></span> <span data-ttu-id="f7545-251">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-251">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-252">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-252">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-253">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-253">\- or -</span></span>  
  
 <span data-ttu-id="f7545-254">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-254">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-255">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-255">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-256">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-256">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-257">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-257">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7545-258">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-258">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="f7545-259">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-259">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-260">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-260">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-261">L’authentification du client utilise le <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-261">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-262">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-262">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-263">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="f7545-263">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="f7545-264">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-264">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-265">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-265">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-266">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-266">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-267">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-267">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-268">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-268">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-269">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-269">The authentication failed.</span></span> <span data-ttu-id="f7545-270">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-270">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-271">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-271">The authentication failed.</span></span> <span data-ttu-id="f7545-272">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-272">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-273">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-273">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-274">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-274">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-275">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-275">\- or -</span></span>  
  
 <span data-ttu-id="f7545-276">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-276">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-277">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-277">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-278">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-278">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-279">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-279">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-280"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-280">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-281">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-281">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="f7545-282">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-282">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-283">Le processus d'authentification utilise les informations d'identification du client spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-283">The authentication process uses the specified client credential.</span></span></summary>
        <returns><span data-ttu-id="f7545-284">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-284">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-285">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-285">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-286">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="f7545-286">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="f7545-287">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-287">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-288">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-288">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-289">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-289">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-290">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-290">The authentication failed.</span></span> <span data-ttu-id="f7545-291">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-291">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-292">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-292">The authentication failed.</span></span> <span data-ttu-id="f7545-293">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-293">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-294">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-294">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-295">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-295">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-296">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-296">\- or -</span></span>  
  
 <span data-ttu-id="f7545-297">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-297">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-298">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-298">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-299"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-299"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-300">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-300">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-301">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-301">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-302"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-302">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="f7545-303"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-303">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-304">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-304">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="f7545-305">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-305">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-306">Le processus d'authentification utilise les informations d'identification du client et la liaison de canal spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-306">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <returns><span data-ttu-id="f7545-307">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-307">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-308">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-308">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-309">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, et l’authentification mutuelle est demandée.</span><span class="sxs-lookup"><span data-stu-id="f7545-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="f7545-310">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-311">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre serait extrait par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="f7545-312">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-313">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-314"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-314"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-315">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-315">\- or -</span></span>  
  
 <span data-ttu-id="f7545-316"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-316"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-317">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-317">The authentication failed.</span></span> <span data-ttu-id="f7545-318">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-318">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-319">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-319">The authentication failed.</span></span> <span data-ttu-id="f7545-320">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-320">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-321">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-321">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-322">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-322">\- or -</span></span>  
  
 <span data-ttu-id="f7545-323">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-323">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-324">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-324">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-325">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-325">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-326"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-326">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-327">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-327">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-328">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-328">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="f7545-329">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-329">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-330">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-330">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-331">Le processus d'authentification utilise les options d'authentification et les informations d'identification spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-331">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="f7545-332">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-332">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-333">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-333">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-334">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-335">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-336">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-337">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-338">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-339">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-340"><paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="f7545-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-341"><paramref name="targetName" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f7545-341"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-342">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-342">The authentication failed.</span></span> <span data-ttu-id="f7545-343">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-343">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-344">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-344">The authentication failed.</span></span> <span data-ttu-id="f7545-345">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-345">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-346">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-346">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-347">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-347">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-348">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-348">\- or -</span></span>  
  
 <span data-ttu-id="f7545-349">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-349">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-350">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-350">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-351">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-352">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-353"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="f7545-354"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-355">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-356">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="f7545-357">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-358">Appelé par les clients pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-359">Le processus d'authentification utilise les informations d'identification du client, les options d'authentification et la liaison de canal spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-359">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <returns><span data-ttu-id="f7545-360">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-360">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-361">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-361">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-362">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-362">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-363">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-363">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-364">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-364">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-365">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-365">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-366">Le <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilisé pour la protection étendue qui est passée à cette méthode dans le `binding` paramètre serait extrait par une application à partir de <xref:System.Net.Security.SslStream.TransportContext%2A> propriété associé <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-366">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="f7545-367">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-367">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-368">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-368">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-369"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-369"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-370">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-370">\- or -</span></span>  
  
 <span data-ttu-id="f7545-371"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-371"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-372"><paramref name="allowedImpersonationLevel" /> n’est pas une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="f7545-372"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-373">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-373">The authentication failed.</span></span> <span data-ttu-id="f7545-374">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-374">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-375">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-375">The authentication failed.</span></span> <span data-ttu-id="f7545-376">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-376">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-377">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-377">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-378">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-378">\- or -</span></span>  
  
 <span data-ttu-id="f7545-379">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-379">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-380">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-380">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-381">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-381">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-382">Gère le côté serveur d'une authentification pour une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-382">Handles the server side of an authentication for a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-383">Ces méthodes bloquent pendant que l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="f7545-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="f7545-384">Pour empêcher l’application à partir de blocage en attendant que l’authentification, utilisez le <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7545-385">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-386">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-387">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-388">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="f7545-389">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-390">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-391">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="f7545-392">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-393">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-394">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-395">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-395">The authentication failed.</span></span> <span data-ttu-id="f7545-396">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-396">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-397">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-397">The authentication failed.</span></span> <span data-ttu-id="f7545-398">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-398">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-399">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-399">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-400">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-400">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-401">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-402">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="f7545-403"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="f7545-404">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-405">Le processus d'authentification utilise la stratégie de protection étendue spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f7545-405">The authentication process uses the specified extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-406">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-407">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-408">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="f7545-409">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> la valeur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f7545-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="f7545-410">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-411">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-412">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="f7545-413">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-414">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-415">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-416">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-417">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-417">The authentication failed.</span></span> <span data-ttu-id="f7545-418">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-418">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-419">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-419">The authentication failed.</span></span> <span data-ttu-id="f7545-420">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-420">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-421">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-421">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-422">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-422">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f7545-423">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-424"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-424">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-425">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-425">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="f7545-426">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-426">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-427">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-427">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-428">Le processus d'authentification utilise les options d'authentification et les informations d'identification du serveur spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-428">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-429">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-429">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-430">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-430">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-431">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-431">This method blocks until the operation completes.</span></span> <span data-ttu-id="f7545-432">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-432">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-433">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-433">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-434">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-434">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-435"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-435"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-436"><paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span><span class="sxs-lookup"><span data-stu-id="f7545-436"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-437">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-437">The authentication failed.</span></span> <span data-ttu-id="f7545-438">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-438">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-439">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-439">The authentication failed.</span></span> <span data-ttu-id="f7545-440">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-440">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-441">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-441">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-442">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-442">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-443">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-443">\- or -</span></span>  
  
 <span data-ttu-id="f7545-444">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-444">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="f7545-445">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-445">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-446">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-446">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-447">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-447">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-448">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-449"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-449">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="f7545-450"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-450">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-451">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-451">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="f7545-452">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-452">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-453">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-453">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-454">Le processus d'authentification utilise les informations d'identification du serveur, les options d'authentification et la stratégie de protection étendue spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-454">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-455">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> la valeur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f7545-455">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="f7545-456">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-456">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-457">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-457">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-458">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-458">This method blocks until the operation completes.</span></span> <span data-ttu-id="f7545-459">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-459">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-460">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-460">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-461">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-461">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-462">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-462">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-463"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-463"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-464"><paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span><span class="sxs-lookup"><span data-stu-id="f7545-464"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-465">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-465">The authentication failed.</span></span> <span data-ttu-id="f7545-466">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-466">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-467">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-467">The authentication failed.</span></span> <span data-ttu-id="f7545-468">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-468">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-469">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-469">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-470">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-470">\- or -</span></span>  
  
 <span data-ttu-id="f7545-471">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-471">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="f7545-472">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-472">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-473">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-473">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-474">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-474">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f7545-475">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-475">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-476">Gère le côté serveur d'une authentification d'une connexion client-serveur en tant qu'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-476">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7545-477">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-477">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="f7545-478">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-478">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-479">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-479">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-480">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-480">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-481">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-481">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-482">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-482">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="f7545-483">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-483">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-484">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-484">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-485">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-485">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-486">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-486">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-487">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-487">The authentication failed.</span></span> <span data-ttu-id="f7545-488">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-488">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-489">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-489">The authentication failed.</span></span> <span data-ttu-id="f7545-490">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-490">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-491">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-491">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-492">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-492">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-493">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-493">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-494">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-494">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="f7545-495"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-495">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="f7545-496">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-496">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-497">Le processus d'authentification utilise la stratégie de protection étendue spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f7545-497">The authentication process uses the specified extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="f7545-498">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-498">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-499">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-499">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-500">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-501">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-502">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="f7545-503">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> la valeur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f7545-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="f7545-504">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-505">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-506">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-507">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-508">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-509">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-509">The authentication failed.</span></span> <span data-ttu-id="f7545-510">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-510">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-511">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-511">The authentication failed.</span></span> <span data-ttu-id="f7545-512">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-512">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-513">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-513">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-514">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-514">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f7545-515">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-516"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-516">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-517">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="f7545-518">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-519">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-520">Le processus d'authentification utilise les options d'authentification et les informations d'identification du serveur spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-520">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="f7545-521">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-521">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-522">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-522">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-523">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-524">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-525">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-526">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-527"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-527"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-528"><paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span><span class="sxs-lookup"><span data-stu-id="f7545-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-529">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-529">The authentication failed.</span></span> <span data-ttu-id="f7545-530">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-530">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-531">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-531">The authentication failed.</span></span> <span data-ttu-id="f7545-532">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-532">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-533">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-533">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-534">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-534">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-535">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-535">\- or -</span></span>  
  
 <span data-ttu-id="f7545-536">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-536">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="f7545-537">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-537">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-538">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-538">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-539">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-540">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-541"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="f7545-542"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-543">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="f7545-544">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="f7545-545">Appelé par les serveurs pour authentifier le client, et éventuellement le serveur, dans une connexion client-serveur sous forme d'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="f7545-546">Le processus d'authentification utilise les informations d'identification du serveur, les options d'authentification et la stratégie de protection étendue spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="f7545-547">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-547">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="f7545-548">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-548">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-549">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> la valeur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f7545-549">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="f7545-550">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-550">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-551">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-551">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-552">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-552">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-553">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-553">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-554">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-554">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-555"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-555"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-556"><paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span><span class="sxs-lookup"><span data-stu-id="f7545-556"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-557">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-557">The authentication failed.</span></span> <span data-ttu-id="f7545-558">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-558">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-559">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-559">The authentication failed.</span></span> <span data-ttu-id="f7545-560">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-560">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-561">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-561">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-562">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-562">\- or -</span></span>  
  
 <span data-ttu-id="f7545-563">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-563">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="f7545-564">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-564">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-565">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-565">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-566">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-566">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f7545-567">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-567">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-568">Commence une opération asynchrone pour authentifier le côté client d'une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-569">Les surcharges de cette méthode ne bloquent pas si l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="f7545-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="f7545-570">Pour bloquer en attendant que l’authentification, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="f7545-571">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-572">Objet défini par l'utilisateur comportant des informations sur l'opération.</span><span class="sxs-lookup"><span data-stu-id="f7545-572">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="f7545-573">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-573">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-574">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-575">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-575">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-576">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-577">L’authentification du client utilise le <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-578">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-579">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, et le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="f7545-580">La <xref:System.Net.Security.NegotiateStream> classe construit le SPN utilisé pour l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-581">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-582">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-583">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="f7545-584">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-585">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-586">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-587">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-588">L’exemple de code suivant montre comment appeler cette méthode pour commencer une authentification asynchrone pour le client.</span><span class="sxs-lookup"><span data-stu-id="f7545-588">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-589">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-589">The authentication failed.</span></span> <span data-ttu-id="f7545-590">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-590">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-591">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-591">The authentication failed.</span></span> <span data-ttu-id="f7545-592">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-592">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-593">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-593">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-594">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-594">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-595">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-595">\- or -</span></span>  
  
 <span data-ttu-id="f7545-596">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-596">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-597">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-597">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-598">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-599">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-600"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-601">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-602">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-603">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-603">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-604">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-605">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-606">Le processus d'authentification utilise les informations d'identification spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-606">The authentication process uses the specified credentials.</span></span> <span data-ttu-id="f7545-607">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-607">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-608">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-609">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-610">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-611">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="f7545-612">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-613">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-614">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-615">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-616"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-616"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-617">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-617">\- or -</span></span>  
  
 <span data-ttu-id="f7545-618"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-618"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-619">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-619">The authentication failed.</span></span> <span data-ttu-id="f7545-620">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-620">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-621">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-621">The authentication failed.</span></span> <span data-ttu-id="f7545-622">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-622">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-623">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-623">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-624">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-624">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-625">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-625">\- or -</span></span>  
  
 <span data-ttu-id="f7545-626">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-626">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-627">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-627">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-628">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-629">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-630"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="f7545-631"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-632">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-633">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-634">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-634">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-635">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-635">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-636">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-637">Le processus d'authentification utilise les informations d'identification et la liaison de canal spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-637">The authentication process uses the specified credentials and channel binding.</span></span> <span data-ttu-id="f7545-638">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-638">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-639">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-640">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-641">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-642">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="f7545-643">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-644">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-645">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-646">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-647"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-647"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-648">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-648">\- or -</span></span>  
  
 <span data-ttu-id="f7545-649"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-649"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-650">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-650">The authentication failed.</span></span> <span data-ttu-id="f7545-651">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-651">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-652">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-652">The authentication failed.</span></span> <span data-ttu-id="f7545-653">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-653">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-654">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-654">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-655">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-655">\- or -</span></span>  
  
 <span data-ttu-id="f7545-656">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-656">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-657">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-657">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-658">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-658">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-659"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-659">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-660">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-660">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-661">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-661">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="f7545-662">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-662">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-663">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-663">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-664">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-664">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-665">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-665">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-666">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-666">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-667">Le processus d'authentification utilise les options d'authentification et les informations d'identification spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-667">The authentication process uses the specified credentials and authentication options.</span></span> <span data-ttu-id="f7545-668">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-668">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-669">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-669">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-670">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-670">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-671">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-671">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-672">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-672">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-673">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-673">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-674">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-674">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-675">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-675">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-676">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-676">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="f7545-677">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-677">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-678">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-678">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-679">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-679">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-680">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-680">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-681"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-681"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-682">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-682">\- or -</span></span>  
  
 <span data-ttu-id="f7545-683"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-683"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-684">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-684">The authentication failed.</span></span> <span data-ttu-id="f7545-685">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-685">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-686">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-686">The authentication failed.</span></span> <span data-ttu-id="f7545-687">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-687">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-688">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-688">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-689">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-689">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-690">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-690">\- or -</span></span>  
  
 <span data-ttu-id="f7545-691">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-691">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-692">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-692">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-693">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-693">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-694">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-694">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-695"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-695">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="f7545-696"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-696">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="f7545-697">Nom de principal du service (SPN) qui identifie de manière unique le serveur à authentifier.</span><span class="sxs-lookup"><span data-stu-id="f7545-697">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-698">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-698">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="f7545-699">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-699">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-700">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-700">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-701">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-701">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-702">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-702">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-703">Appelé par les clients pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-703">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-704">Le processus d'authentification utilise les informations d'identification, les options d'authentification et la liaison de canal spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-704">The authentication process uses the specified credentials, authentication options, and channel binding.</span></span> <span data-ttu-id="f7545-705">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-705">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-706">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-706">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-707">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-707">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-708">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-708">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-709">Authentification réussie ne garantit pas que demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-709">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-710">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-710">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-711">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-711">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-712">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-712">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-713">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-713">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="f7545-714">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-714">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-715">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-715">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-716">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-716">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-717">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-717">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-718"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-718"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="f7545-719">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-719">\- or -</span></span>  
  
 <span data-ttu-id="f7545-720"><paramref name="targetName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-720"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-721">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-721">The authentication failed.</span></span> <span data-ttu-id="f7545-722">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-722">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-723">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-723">The authentication failed.</span></span> <span data-ttu-id="f7545-724">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-724">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-725">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-725">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-726">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-726">\- or -</span></span>  
  
 <span data-ttu-id="f7545-727">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-727">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="f7545-728">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-728">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-729">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-729">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7545-730">Commence une opération asynchrone pour gérer le côté serveur de l'authentification d'une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-730">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-731">Les surcharges de cette méthode ne bloquent pas pendant que l’authentification est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="f7545-731">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="f7545-732">Pour bloquer en attendant que l’authentification, utilisez le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-732">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="f7545-733">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-733">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-734">Objet défini par l'utilisateur comportant des informations sur l'opération.</span><span class="sxs-lookup"><span data-stu-id="f7545-734">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="f7545-735">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-735">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-736">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-736">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-737">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-737">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-738">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-738">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-739">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-739">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-740">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-740">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-741">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-741">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="f7545-742">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-742">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-743">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-743">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-744">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-744">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-745">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-745">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-746">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-746">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-747">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-747">The authentication failed.</span></span> <span data-ttu-id="f7545-748">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-748">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-749">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-749">The authentication failed.</span></span> <span data-ttu-id="f7545-750">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-750">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-751">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-751">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-752">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-752">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-753">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-753">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-754">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-754">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="f7545-755"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-755">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-756">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-756">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-757">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-757">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-758">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-758">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-759">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-759">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-760">Le processus d'authentification utilise la stratégie de protection étendue spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f7545-760">The authentication process uses the specified extended protection policy.</span></span> <span data-ttu-id="f7545-761">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-761">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-762">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-762">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-763">L’authentification utilise le serveur <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-763">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="f7545-764">Aucun nom de Principal du Service (SPN) est spécifié pour le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-764">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="f7545-765">Le niveau d’emprunt d’identité est <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, le niveau de sécurité est <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="f7545-765">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="f7545-766">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> la valeur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f7545-766">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="f7545-767">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-767">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-768">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-768">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-769">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-769">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-770">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-770">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-771">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-771">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-772">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-772">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-773">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-773">The authentication failed.</span></span> <span data-ttu-id="f7545-774">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-774">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-775">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-775">The authentication failed.</span></span> <span data-ttu-id="f7545-776">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-776">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-777">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-777">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-778">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-778">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f7545-779">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-779">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-780"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-780">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-781">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-781">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="f7545-782">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-782">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-783">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-783">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-784">Objet défini par l'utilisateur comportant des informations sur l'opération.</span><span class="sxs-lookup"><span data-stu-id="f7545-784">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="f7545-785">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-785">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-786">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-786">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-787">Le processus d'authentification utilise les options d'authentification et les informations d'identification du serveur spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-787">The authentication process uses the specified server credentials and authentication options.</span></span> <span data-ttu-id="f7545-788">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-788">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-789">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-789">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-790">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-790">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-791">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-791">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-792">Authentification réussie ne garantit pas que, demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-792">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-793">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-793">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-794">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-794">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-795">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-795">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-796">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-796">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="f7545-797">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-797">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-798">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-798">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-799">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-799">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-800">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-800">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-801"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-801"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-802"><paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span><span class="sxs-lookup"><span data-stu-id="f7545-802"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-803">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-803">The authentication failed.</span></span> <span data-ttu-id="f7545-804">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-804">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-805">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-805">The authentication failed.</span></span> <span data-ttu-id="f7545-806">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-806">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-807">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-807">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-808">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-808">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-809">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-809">\- or -</span></span>  
  
 <span data-ttu-id="f7545-810">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-810">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="f7545-811">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-811">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-812">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-812">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f7545-813">Pour utiliser explicites <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-813">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="f7545-814">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-814">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="f7545-815"><see cref="T:System.Net.NetworkCredential" /> utilisé pour établir l'identité du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-815">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="f7545-816"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui est utilisé comme protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-816">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="f7545-817">L'une des valeurs <see cref="T:System.Net.Security.ProtectionLevel" />, indiquant les services de sécurité pour le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-817">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="f7545-818">L'une des valeurs <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, indiquant comment le serveur peut utiliser les informations d'identification du client pour accéder aux ressources.</span><span class="sxs-lookup"><span data-stu-id="f7545-818">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-819">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’authentification est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-819">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-820">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-820">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-821">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-821">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-822">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-822">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="f7545-823">Le processus d'authentification utilise les informations d'identification du serveur, les options d'authentification et la stratégie de protection étendue spécifiées.</span><span class="sxs-lookup"><span data-stu-id="f7545-823">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span> <span data-ttu-id="f7545-824">Cette méthode ne provoque pas de blocage.</span><span class="sxs-lookup"><span data-stu-id="f7545-824">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="f7545-825">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-825">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-826">Utilisez le `requiredProtectionLevel` paramètre pour demander des services de sécurité pour les données transmises à l’aide du flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-826">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="f7545-827">Par exemple, pour que les données chiffrées et signées, spécifiez la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valeur.</span><span class="sxs-lookup"><span data-stu-id="f7545-827">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="f7545-828">Authentification réussie ne garantit pas que, demandé <xref:System.Net.Security.ProtectionLevel> a été accordé.</span><span class="sxs-lookup"><span data-stu-id="f7545-828">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="f7545-829">Vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-829">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="f7545-830">Si le `policy` paramètre est `null`, puis une stratégie de protection étendue utilisée est <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> la valeur <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f7545-830">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="f7545-831">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-831">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-832">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-832">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f7545-833">L’opération asynchrone d’authentification doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-833">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="f7545-834">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-834">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-835">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-835">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-836">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-836">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-837">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-837">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-838">Le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> et le <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> sur la stratégie de protection étendue passée dans le paramètre <paramref name="policy" /> sont tous les deux <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-838">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-839"><paramref name="credential" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-839"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7545-840"><paramref name="requiredImpersonationLevel" /> doit être <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> ou <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /></span><span class="sxs-lookup"><span data-stu-id="f7545-840"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-841">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-841">The authentication failed.</span></span> <span data-ttu-id="f7545-842">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-842">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-843">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-843">The authentication failed.</span></span> <span data-ttu-id="f7545-844">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-844">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-845">L’authentification a déjà eu lieu.</span><span class="sxs-lookup"><span data-stu-id="f7545-845">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="f7545-846">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-846">\- or -</span></span>  
  
 <span data-ttu-id="f7545-847">Ce flux a été utilisé précédemment pour tenter d'effectuer l'authentification en tant que client.</span><span class="sxs-lookup"><span data-stu-id="f7545-847">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="f7545-848">Vous ne pouvez pas utiliser le flux pour faire une nouvelle tentative d'authentification en tant que serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-848">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-849">Windows 95 et Windows 98 ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-849">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-850">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-850">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f7545-851">Le paramètre <paramref name="policy" /> avait la valeur <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> sur une plateforme qui ne prend pas en charge protection étendue.</span><span class="sxs-lookup"><span data-stu-id="f7545-851">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f7545-852">Tableau <see cref="T:System.Byte" /> qui reçoit les octets lus dans le flux de données.</span><span class="sxs-lookup"><span data-stu-id="f7545-852">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="f7545-853">Emplacement de base zéro dans <c>buffer</c> à partir duquel commencer le stockage des données lues dans ce flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-853">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="f7545-854">Nombre maximal d'octets à lire dans le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-854">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-855">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler lorsque l'opération de lecture est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-855">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-856">Objet défini par l'utilisateur comportant des informations sur l'opération de lecture.</span><span class="sxs-lookup"><span data-stu-id="f7545-856">A user-defined object containing information about the read operation.</span></span> <span data-ttu-id="f7545-857">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-857">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-858">Commence une opération de lecture asynchrone qui lit des données du flux et les stocke dans le tableau spécifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-858">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="f7545-859">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-859">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-860">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, l’opération de lecture lit les données dans le flux sous-jacent, vérifie l’intégrité des données et les déchiffre.</span><span class="sxs-lookup"><span data-stu-id="f7545-860">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="f7545-861">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode démarre une opération de lecture asynchrone sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-861">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="f7545-862">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-862">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-863">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-863">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="f7545-864">L’opération de lecture asynchrone doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndRead%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-864">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="f7545-865">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-865">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-866">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-866">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-867">La <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge simultanée de plusieurs opérations de lecture.</span><span class="sxs-lookup"><span data-stu-id="f7545-867">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="f7545-868">Si vous essayez de démarrer une opération de lecture pendant la lecture des autre opération s’exécute déjà sur le même flux, une <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="f7545-868">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="f7545-869">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-869">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="f7545-870">Pour l’authentification, appelez l’une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-870">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-871">L’exemple de code suivant illustre le démarrage d’une opération de lecture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-871">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="f7545-872">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="f7545-872">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-873"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-873"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7545-874"><paramref name="offset" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="f7545-874"><paramref name="offset" /> is less than 0.</span></span>  
  
 <span data-ttu-id="f7545-875">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-875">\- or -</span></span>  
  
 <span data-ttu-id="f7545-876"><paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-876"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="f7545-877">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-877">\- or -</span></span>  
  
 <span data-ttu-id="f7545-878"><paramref name="offset" /> plus <paramref name="count" /> est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-878"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f7545-879">L'opération de lecture a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-879">The read operation failed.</span></span>  
  
 <span data-ttu-id="f7545-880">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-880">\- or -</span></span>  
  
 <span data-ttu-id="f7545-881">Le chiffrement est utilisé, mais les données n'ont pas pu être déchiffrées.</span><span class="sxs-lookup"><span data-stu-id="f7545-881">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-882">Une opération de lecture est déjà en cours.</span><span class="sxs-lookup"><span data-stu-id="f7545-882">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-883">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-883">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-884">L'authentification n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-884">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f7545-885">Tableau de <see cref="T:System.Byte" /> qui fournit les octets à écrire dans le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-885">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="f7545-886">Emplacement de base zéro dans <c>buffer</c> à partir duquel commencer la lecture des octets à écrire dans le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-886">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="f7545-887">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre d’octets à lire dans <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="f7545-887">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="f7545-888">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler lorsque l'opération d'écriture est terminée.</span><span class="sxs-lookup"><span data-stu-id="f7545-888">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="f7545-889">Objet défini par l'utilisateur comportant des informations sur l'opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-889">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="f7545-890">Cet objet est passé au délégué <c>asyncCallback</c> quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-890">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="f7545-891">Commence une opération d'écriture asynchrone qui écrit des <see cref="T:System.Byte" />s de la mémoire tampon spécifiée vers le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-891">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="f7545-892">Objet <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-892">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-893">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, cette méthode lit les données de la mémoire tampon, chiffre, les signe ou chiffre et signe et transmet à l’aide du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-893">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="f7545-894">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode démarre une opération d’écriture asynchrone sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-894">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="f7545-895">Cette méthode est asynchrone et ne bloque pas pendant l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-895">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="f7545-896">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-896">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="f7545-897">L’opération de lecture asynchrone doit être terminée en appelant le <xref:System.Net.Security.NegotiateStream.EndWrite%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-897">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="f7545-898">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="f7545-898">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="f7545-899">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f7545-899">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="f7545-900">La <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</span><span class="sxs-lookup"><span data-stu-id="f7545-900">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="f7545-901">Si vous essayez de démarrer une opération d’écriture pendant qu’une autre opération d’écriture s’exécute déjà sur le même flux, une <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="f7545-901">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="f7545-902">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-902">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="f7545-903">Pour l’authentification, appelez l’une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-903">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-904">L’exemple de code suivant illustre le début d’une opération d’écriture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-904">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="f7545-905">La méthode suivante est appelée lorsque l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-905">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-906"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-906"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7545-907"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-907"><paramref name="offset is less than 0" />.</span></span>  
  
 <span data-ttu-id="f7545-908">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-908">\- or -</span></span>  
  
 <span data-ttu-id="f7545-909"><paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-909"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="f7545-910">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-910">\- or -</span></span>  
  
 <span data-ttu-id="f7545-911"><paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-911"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f7545-912">L'opération d'écriture a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-912">The write operation failed.</span></span>  
  
 <span data-ttu-id="f7545-913">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-913">\- or -</span></span>  
  
 <span data-ttu-id="f7545-914">Le chiffrement est utilisé, mais les données n'ont pas pu être chiffrées.</span><span class="sxs-lookup"><span data-stu-id="f7545-914">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-915">Une opération d'écriture est déjà en cours.</span><span class="sxs-lookup"><span data-stu-id="f7545-915">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-916">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-916">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-917">L'authentification n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-917">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-918">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent est accessible en lecture.</span><span class="sxs-lookup"><span data-stu-id="f7545-918">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-919"><see langword="true" /> si l'authentification s'est produite et que le flux sous-jacent est accessible en lecture ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-919"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-920">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanRead%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-920">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-921">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="f7545-921">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-922">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-922">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-923">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent peut faire l'objet d'une recherche.</span><span class="sxs-lookup"><span data-stu-id="f7545-923">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="f7545-924">Cette propriété retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-924">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-925">Vous ne devez pas essayer de définir la position de la <xref:System.Net.Security.NegotiateStream> objet ou son flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-925">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="f7545-926">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="f7545-926">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-927">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-927">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-928">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent prend en charge les délais d'attente.</span><span class="sxs-lookup"><span data-stu-id="f7545-928">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-929"><see langword="true" /> si le flux de données prend en charge les délais d'attente ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-929"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-930">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-930">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-931">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="f7545-931">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-932">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-932">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-933">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent est accessible en écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-933">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-934"><see langword="true" /> si l'authentification s'est produite et que le flux sous-jacent est accessible en écriture ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-934"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-935">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.CanWrite%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-935">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-936">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="f7545-936">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-937">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-937">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f7545-938"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="f7545-938"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f7545-939">Libère les ressources non managées utilisées par <see cref="T:System.Net.Security.NegotiateStream" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="f7545-939">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-940">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-940">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f7545-941">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="f7545-941">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f7545-942"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="f7545-942"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f7545-943">Lorsque le `disposing` paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Security.NegotiateStream> références.</span><span class="sxs-lookup"><span data-stu-id="f7545-943">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="f7545-944">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="f7545-944">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f7545-945"><see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="f7545-945"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="f7545-946">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-946">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="f7545-947">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f7545-947">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="f7545-948">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="f7545-948">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="f7545-949">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-949">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="f7545-950">Termine une opération d'authentification du client asynchrone en attente qui a été démarrée avec un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-950">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-951">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</span><span class="sxs-lookup"><span data-stu-id="f7545-951">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="f7545-952">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-952">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-953">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-953">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-954">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-954">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-955">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-955">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="f7545-956">Pour effectuer cette opération de manière synchrone, utilisez une de la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-956">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-957"><paramref name="asyncResult" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-957"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7545-958"><paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-958"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-959">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-959">The authentication failed.</span></span> <span data-ttu-id="f7545-960">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-960">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-961">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-961">The authentication failed.</span></span> <span data-ttu-id="f7545-962">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-962">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-963">Aucune authentification de client n'est en attente d'achèvement.</span><span class="sxs-lookup"><span data-stu-id="f7545-963">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="f7545-964">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-964">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="f7545-965">Termine une opération d'authentification du client asynchrone en attente qui a été démarrée avec un appel à <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-965">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-966">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</span><span class="sxs-lookup"><span data-stu-id="f7545-966">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="f7545-967">Lorsque l’authentification réussit, vous devez vérifier le <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> et <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propriétés pour déterminer les services de sécurité sont utilisés par le <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-967">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="f7545-968">Vérifiez le <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propriété pour déterminer si l’authentification mutuelle s’est produite.</span><span class="sxs-lookup"><span data-stu-id="f7545-968">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="f7545-969">Si l’authentification échoue, vous recevez un <xref:System.Security.Authentication.AuthenticationException> ou <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="f7545-969">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="f7545-970">Dans ce cas, vous pouvez réessayer l’authentification avec les informations d’identification différentes.</span><span class="sxs-lookup"><span data-stu-id="f7545-970">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="f7545-971">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-971">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-972"><paramref name="asyncResult" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-972"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7545-973"><paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-973"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="f7545-974">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-974">The authentication failed.</span></span> <span data-ttu-id="f7545-975">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-975">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="f7545-976">L'authentification a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-976">The authentication failed.</span></span> <span data-ttu-id="f7545-977">Vous pouvez utiliser cet objet pour faire une nouvelle tentative d'authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-977">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-978">Aucune authentification n'est en attente d'achèvement.</span><span class="sxs-lookup"><span data-stu-id="f7545-978">There is no pending authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="f7545-979">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-979">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="f7545-980">Termine une opération de lecture asynchrone qui a été démarrée avec un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-980">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="f7545-981">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre d'octets lus dans le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-981">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-982">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</span><span class="sxs-lookup"><span data-stu-id="f7545-982">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="f7545-983">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-983">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="f7545-984">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-984">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="f7545-985">Pour l’authentification, appelez l’une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-985">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-986">L’exemple de code suivant illustre l’opération de lecture asynchrone de fin.</span><span class="sxs-lookup"><span data-stu-id="f7545-986">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="f7545-987">Pour obtenir un exemple qui illustre le démarrage de l’opération, consultez <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-987">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-988"><paramref name="asyncResult" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-988"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-989">asyncResult n'a pas été créé par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-989">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-990">L'authentification n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-990">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f7545-991">L'opération de lecture a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-991">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="f7545-992">Instance de <see cref="T:System.IAsyncResult" /> retournée par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-992">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="f7545-993">Termine une opération d'écriture asynchrone qui a été démarrée avec un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-993">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-994">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</span><span class="sxs-lookup"><span data-stu-id="f7545-994">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="f7545-995">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-995">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="f7545-996">Pour l’authentification, appelez l’une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-996">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="f7545-997">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Security.NegotiateStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-997">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-998">L’exemple de code suivant montre une méthode qui est appelée pour terminer l’opération d’écriture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f7545-998">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="f7545-999">Pour obtenir un exemple qui illustre le démarrage de l’opération, consultez <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7545-999">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-1000"><paramref name="asyncResult" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1000"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7545-1001">asyncResult n'a pas été créé par un appel à <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1001">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-1002">L'authentification n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1002">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f7545-1003">L'opération d'écriture a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-1003">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7545-1004">Provoque l'écriture des données mises en mémoire tampon sur le périphérique sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1004">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1005">Cette méthode appelle <xref:System.IO.Stream.Flush%2A> sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1005">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1006">L’exemple de code suivant illustre le vidage du flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-1006">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1007">Obtient une valeur qui indique comment le serveur peut utiliser les informations d'identification du client.</span><span class="sxs-lookup"><span data-stu-id="f7545-1007">Gets a value that indicates how the server can use the client's credentials.</span></span></summary>
        <value><span data-ttu-id="f7545-1008">Une des valeurs de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1008">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1009">Vous devez vous authentifier avec succès avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-1009">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="f7545-1010">Les clients spécifier le niveau d’emprunt d’identité lorsqu’elles demandent l’authentification en appelant une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-1010">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="f7545-1011">Si vous authentifiez sans spécifier un <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f7545-1011">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1012">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1012">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-1013">L'authentification a échoué ou n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1013">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1014">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si l'authentification a réussi.</span><span class="sxs-lookup"><span data-stu-id="f7545-1014">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-1015"><see langword="true" /> si l'authentification réalisée a réussi ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1015"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1016">Les clients s’authentifient en appelant le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-1016">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="f7545-1017">Les serveurs s’authentifient en appelant le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-1017">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1018">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1018">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1019">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si ce <see cref="T:System.Net.Security.NegotiateStream" /> utilise le chiffrement de données.</span><span class="sxs-lookup"><span data-stu-id="f7545-1019">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-1020"><see langword="true" /> si les données sont chiffrées avant d'être transmises sur le réseau et déchiffrées lorsqu'elles atteignent le point de terminaison distant ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1020"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1021">Le chiffrement permet de protéger la confidentialité des données ; à savoir, il permet de se pour assurer que, pendant des données en transit il ne peut pas être déchiffrée par des tiers.</span><span class="sxs-lookup"><span data-stu-id="f7545-1021">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1022">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1022">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1023">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le serveur et le client ont tous les deux été authentifiés.</span><span class="sxs-lookup"><span data-stu-id="f7545-1023">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-1024"><see langword="true" /> si le serveur a été authentifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1024"><see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1025">L’authentification mutuelle est spécifiée par le client lorsque le client souhaite que le serveur pour fournir des informations d’identification pour l’authentification.</span><span class="sxs-lookup"><span data-stu-id="f7545-1025">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="f7545-1026">Par défaut, les clients demandent l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-1026">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="f7545-1027">Le protocole Negotiate sélectionne NTLM ou Kerberos selon les protocoles de sécurité pris en charge par le client et le serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-1027">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="f7545-1028">NTLM ne prend pas en charge l’authentification mutuelle.</span><span class="sxs-lookup"><span data-stu-id="f7545-1028">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1029">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1029">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1030">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le côté local de la connexion utilisée par ce <see cref="T:System.Net.Security.NegotiateStream" /> a été authentifié comme serveur.</span><span class="sxs-lookup"><span data-stu-id="f7545-1030">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-1031"><see langword="true" /> si le point de terminaison local a été authentifié avec succès comme côté serveur de la connexion authentifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1031"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1032">Si l’authentification a échoué ou n’a été réalisée, cette propriété retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f7545-1032">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="f7545-1033">Pour l’authentification en tant que le serveur, appelez le <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-1033">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1034">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1034">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1035">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si les données envoyées à l'aide de ce flux sont signées.</span><span class="sxs-lookup"><span data-stu-id="f7545-1035">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value>
          <span data-ttu-id="f7545-1036"><see langword="true" /> si les données sont signées avant d'être transmises ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1036"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1037">Signature des données permet de protéger l’intégrité des données ; à savoir, il permet le destinataire de déterminer si les données a été falsifiées lors de leur transit.</span><span class="sxs-lookup"><span data-stu-id="f7545-1037">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1038">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1038">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1039">Obtient la longueur du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1039">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="f7545-1040"><see cref="T:System.Int64" /> qui spécifie la longueur du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1040">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1041">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.Length%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1041">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-1042">Si le flux sous-jacent n’est pas identifiable, cette propriété lève généralement une exception.</span><span class="sxs-lookup"><span data-stu-id="f7545-1042">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="f7545-1043">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1043">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1044">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1044">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-1045">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1045">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1046">Obtient ou définit la position actuelle dans le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1046">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="f7545-1047"><see cref="T:System.Int64" /> qui spécifie la position actuelle dans le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1047">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1048">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.Position%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1048">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-1049">Si le flux sous-jacent n’est pas identifiable, cette propriété lève généralement une exception.</span><span class="sxs-lookup"><span data-stu-id="f7545-1049">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="f7545-1050">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1050">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-1051">La définition de cette propriété n'est pas prise en charge.</span><span class="sxs-lookup"><span data-stu-id="f7545-1051">Setting this property is not supported.</span></span>  
  
 <span data-ttu-id="f7545-1052">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-1052">\- or -</span></span>  
  
 <span data-ttu-id="f7545-1053">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1053">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f7545-1054">Tableau <see cref="T:System.Byte" /> qui reçoit les octets lus dans le flux de données.</span><span class="sxs-lookup"><span data-stu-id="f7545-1054">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="f7545-1055"><see cref="T:System.Int32" /> contenant l’emplacement de base zéro dans <c>buffer</c> à partir duquel commencer le stockage des données lues dans ce flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-1055">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="f7545-1056"><see cref="T:System.Int32" /> contenant le nombre maximal d'octets à lire dans le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-1056">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span></span></param>
        <summary><span data-ttu-id="f7545-1057">Lit les données de ce flux et les stocke dans le tableau spécifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-1057">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="f7545-1058">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre d'octets lus dans le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1058">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span> <span data-ttu-id="f7545-1059">Lorsqu'il n'y a plus de données à lire, retourne 0.</span><span class="sxs-lookup"><span data-stu-id="f7545-1059">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1060">La méthode lit un maximum de `count` octets à partir du flux et les stocke dans `buffer` commençant à `offset`.</span><span class="sxs-lookup"><span data-stu-id="f7545-1060">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="f7545-1061">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-1061">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="f7545-1062">Pour l’authentification, appelez l’une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-1062">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="f7545-1063">Pour effectuer cette opération de façon asynchrone, utilisez la <xref:System.Net.Security.NegotiateStream.BeginRead%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-1063">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1064">L’exemple de code suivant illustre la lecture dans un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-1064">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f7545-1065">L'opération de lecture a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-1065">The read operation failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-1066">L'authentification n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1066">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-1067">Une opération <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="f7545-1067">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1068">Obtient ou définit la durée pendant laquelle une opération de lecture reste bloquée en attendant des données.</span><span class="sxs-lookup"><span data-stu-id="f7545-1068">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="f7545-1069"><see cref="T:System.Int32" /> spécifiant le temps qui doit s'écouler avant l'échec d'une opération de lecture.</span><span class="sxs-lookup"><span data-stu-id="f7545-1069">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1070">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.ReadTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1070">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-1071">Lorsque vous définissez cette propriété, le <xref:System.IO.Stream.ReadTimeout%2A> sur le flux sous-jacent est la valeur à la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1071">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="f7545-1072">Si le flux sous-jacent est un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> est exprimée en millisecondes et a la valeur <xref:System.Threading.Timeout.Infinite> par défaut afin que les opérations n’expirent pas de lecture.</span><span class="sxs-lookup"><span data-stu-id="f7545-1072">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1073">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1073">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1074">Obtient des informations à propos de l'identité du tiers distant qui partage ce flux authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-1074">Gets information about the identity of the remote party sharing this authenticated stream.</span></span></summary>
        <value><span data-ttu-id="f7545-1075">Objet <see cref="T:System.Security.Principal.IIdentity" /> qui décrit l'identité du point de terminaison distant.</span><span class="sxs-lookup"><span data-stu-id="f7545-1075">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1076">Lors de l’accès par le client, cette propriété retourne un <xref:System.Security.Principal.GenericIdentity> contenant le nom Principal de Service (SPN) du serveur et le protocole d’authentification utilisé.</span><span class="sxs-lookup"><span data-stu-id="f7545-1076">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="f7545-1077">Lors de l’accès par le serveur, cette propriété retourne un <xref:System.Security.Principal.WindowsIdentity> qui décrit le client.</span><span class="sxs-lookup"><span data-stu-id="f7545-1077">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="f7545-1078">Si le <xref:System.Security.Principal.WindowsIdentity> est non disponible, les informations de client sont retournées au serveur dans un <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="f7545-1078">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1079">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1079">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-1080">L'authentification a échoué ou n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1080">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="f7545-1081">Cette valeur est ignorée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1081">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="f7545-1082">Cette valeur est ignorée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1082">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="f7545-1083">Lève <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1083">Throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="f7545-1084">Lève toujours une exception <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1084">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1085">N'appelez pas cette méthode.</span><span class="sxs-lookup"><span data-stu-id="f7545-1085">Do not call this method.</span></span> <span data-ttu-id="f7545-1086">Elle est héritée, mais n’est pas pris en charge par <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-1086">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-1087">La recherche n'est pas prise en charge sur <see cref="T:System.Net.Security.NegotiateStream" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1087">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7545-1088">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur du flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-1088">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="f7545-1089">Définit la longueur du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1089">Sets the length of the underlying stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f7545-1090">Tableau de <see cref="T:System.Byte" /> qui fournit les octets écrits dans le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-1090">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="f7545-1091"><see cref="T:System.Int32" /> contenant l’emplacement de base zéro dans <c>buffer</c> à partir duquel commencer la lecture des octets à écrire dans le flux.</span><span class="sxs-lookup"><span data-stu-id="f7545-1091">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="f7545-1092"><see cref="T:System.Int32" /> contenant le nombre d’octets à lire dans <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="f7545-1092">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span></span></param>
        <summary><span data-ttu-id="f7545-1093">Écrivez le nombre spécifié de <see cref="T:System.Byte" />s dans le flux sous-jacent à l'aide de la mémoire tampon et de l'offset spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f7545-1093">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1094">Si le chiffrement, la signature, ou le chiffrement et la signature sont activés, cette méthode lit les données de la mémoire tampon, chiffre, les signe ou chiffre et signe et transmet à l’aide du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1094">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="f7545-1095">Si aucun service de sécurité telles que la signature ou le chiffrement de données sont en cours d’utilisation, cette méthode appelle <xref:System.IO.Stream.Write%2A> sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1095">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="f7545-1096">Cette méthode est bloquée pendant que l’opération d’écriture se termine.</span><span class="sxs-lookup"><span data-stu-id="f7545-1096">This method blocks while the write operation completes.</span></span> <span data-ttu-id="f7545-1097">Pour éviter un blocage pendant l’opération est terminée, utilisez le <xref:System.Net.Security.NegotiateStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f7545-1097">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="f7545-1098">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</span><span class="sxs-lookup"><span data-stu-id="f7545-1098">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="f7545-1099">Pour l’authentification, appelez l’une de le <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, ou <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f7545-1099">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="f7545-1100">La <xref:System.Net.Security.NegotiateStream> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</span><span class="sxs-lookup"><span data-stu-id="f7545-1100">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="f7545-1101">Si vous essayez de démarrer une opération d’écriture pendant qu’une autre opération d’écriture s’exécute déjà sur le même flux, une <xref:System.NotSupportedException> exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1101">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1102">L’exemple de code suivant illustre l’écriture dans un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="f7545-1102">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7545-1103"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1103"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7545-1104"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1104"><paramref name="offset is less than 0" />.</span></span>  
  
 <span data-ttu-id="f7545-1105">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-1105">\- or -</span></span>  
  
 <span data-ttu-id="f7545-1106"><paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1106"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="f7545-1107">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-1107">\- or -</span></span>  
  
 <span data-ttu-id="f7545-1108"><paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f7545-1108"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f7545-1109">L'opération d'écriture a échoué.</span><span class="sxs-lookup"><span data-stu-id="f7545-1109">The write operation failed.</span></span>  
  
 <span data-ttu-id="f7545-1110">\- ou -</span><span class="sxs-lookup"><span data-stu-id="f7545-1110">\- or -</span></span>  
  
 <span data-ttu-id="f7545-1111">Le chiffrement est utilisé, mais les données n'ont pas pu être chiffrées.</span><span class="sxs-lookup"><span data-stu-id="f7545-1111">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f7545-1112">Une opération d'écriture est déjà en cours.</span><span class="sxs-lookup"><span data-stu-id="f7545-1112">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f7545-1113">L’objet a été fermé.</span><span class="sxs-lookup"><span data-stu-id="f7545-1113">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7545-1114">L'authentification n'a pas été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f7545-1114">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7545-1115">Obtient ou définit la durée pendant laquelle une opération d'écriture reste bloquée en attendant des données.</span><span class="sxs-lookup"><span data-stu-id="f7545-1115">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="f7545-1116"><see cref="T:System.Int32" /> spécifiant le temps qui doit s'écouler avant l'échec d'une opération d'écriture.</span><span class="sxs-lookup"><span data-stu-id="f7545-1116">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7545-1117">Cette propriété retourne la valeur retournée en appelant le <xref:System.IO.Stream.WriteTimeout%2A> propriété sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1117">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="f7545-1118">Pour les opérations de jeu, définit la valeur spécifiée du <xref:System.IO.Stream.WriteTimeout%2A> valeur sur le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="f7545-1118">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="f7545-1119">Si le flux sous-jacent est un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> est exprimée en millisecondes et a la valeur <xref:System.Threading.Timeout.Infinite> par défaut afin que d’écriture opérations n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="f7545-1119">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7545-1120">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f7545-1120">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>