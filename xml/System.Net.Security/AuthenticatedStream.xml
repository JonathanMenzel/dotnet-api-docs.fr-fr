<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AuthenticatedStream.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b832715225eb5210e665ec01b31aa01c2856f0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b832715225eb5210e665ec01b31aa01c2856f0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Security.AuthenticatedStream">
          <source>Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.</source>
          <target state="translated">Fournit des méthodes pour passer des informations d'identification via un flux et demander ou exécuter l'authentification pour des applications client-serveur.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>This abstract class provides methods and properties that are common to authenticated streams.</source>
          <target state="translated">Cette classe abstraite fournit des méthodes et propriétés qui sont communes aux flux authentifiés.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>Authenticated streams can provide authentication, data signing, and encryption services that can help maintain the integrity and confidentiality of data transmitted using the <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream.InnerStream%2A&gt;</ph>.</source>
          <target state="translated">Flux authentifiés peuvent fournir l’authentification, la signature de données et les services de chiffrement qui peuvent aider à maintenir l’intégrité et la confidentialité des données transmises à l’aide de la <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream.InnerStream%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The security protocol implemented by a class that derives from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> together with the security protocols supported on the client and server will determine the security features that are available to an application.</source>
          <target state="translated">Le protocole de sécurité implémenté par une classe qui dérive de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> avec la sécurité de protocoles pris en charge sur le client et le serveur détermine les fonctionnalités de sécurité qui sont disponibles pour une application.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> classes inherit from <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> and implement the Negotiate and Secure Sockets Layer security protocols, respectively.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> héritent de classes <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> et implémenter les protocoles de sécurité Negotiate et le protocole SSL (Secure Sockets Layer), respectivement.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The following code example demonstrates displaying the properties of an authenticated stream.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage des propriétés d’un flux authentifié.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The following members must be overridden in a derived class: <ph id="ph1">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsServer" /&gt;</ph>, and <ph id="ph5">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" /&gt;</ph>.</source>
          <target state="translated">Les membres suivants doivent être substituées dans une classe dérivée : <ph id="ph1">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsServer" /&gt;</ph>, et <ph id="ph5">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether closing this <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> object also closes <bpt id="p1">&lt;c&gt;</bpt>innerStream<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si la fermeture de cet objet <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> ferme également <bpt id="p1">&lt;c&gt;</bpt>innerStream<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream.</source>
          <target state="translated">Lorsque vous spécifiez <ph id="ph1">`true`</ph> pour le <ph id="ph2">`leaveStreamOpen`</ph> paramètre, la fermeture de la <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> n’a aucun effet le <ph id="ph4">`innerStream`</ph> flux.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>This constructor is provided for implementers of authenticated streams, and can be called only by classes that are derived from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</source>
          <target state="translated">Ce constructeur est fourni pour les implémenteurs de flux authentifiés et peut être appelé uniquement par les classes dérivées de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">`Dispose()`</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> appelle la méthode protégée <ph id="ph2">`Dispose(Boolean)`</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">`Dispose`</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> references.</source>
          <target state="translated">Lorsque le <ph id="ph1">`disposing`</ph> paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> références.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose()`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>substitution de la méthode Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>Gets the stream used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Obtient le flux utilisé par ce <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> can use this property to access the stream passed to the <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>.</source>
          <target state="translated">Les classes qui héritent de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> pouvez utiliser cette propriété pour accéder au flux passé à la <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether authentication was successful.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si l'authentification a réussi.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful authentication occurred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'authentification réalisée a réussi ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>The methods called to perform authentication are defined in the classes that inherit from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</source>
          <target state="translated">Les méthodes appelées pour effectuer l’authentification sont définies dans les classes qui héritent de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether data sent using this <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> is encrypted.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si les données envoyées à l'aide de ce <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> sont chiffrées.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les données sont chiffrées avant d'être transmises sur le réseau et déchiffrées lorsqu'elles atteignent le point de terminaison distant ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</source>
          <target state="translated">Le chiffrement permet de protéger la confidentialité des données ; à savoir, il permet de se pour assurer que, tandis que les données sont en transit, il ne peut pas être déchiffrée par des tiers.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether both server and client have been authenticated.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le serveur et le client ont tous les deux été authentifiés.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client and server have been authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le client et le serveur ont été authentifiés ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>Not all security protocols support mutual authentication.</source>
          <target state="translated">Pas de tous les protocoles de sécurité prend en charge l’authentification mutuelle.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>To determine whether mutual authentication is supported by the security protocol implemented in a class that inherits from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>, check the class documentation.</source>
          <target state="translated">Pour déterminer si l’authentification mutuelle est prise en charge par le protocole de sécurité implémenté dans une classe qui hérite de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>, consultez la documentation de la classe.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the local side of the connection was authenticated as the server.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le côté local de la connexion a été authentifié comme serveur.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the local endpoint was authenticated as the server side of a client-server authenticated connection; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the local endpoint was authenticated as the client.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point de terminaison local a été authentifié comme le côté serveur d'une connexion authentifiée client-serveur ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si le point de terminaison local a été authentifié comme client.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>Most security protocols used for client-server authentication define specific behavior and requirements for supplying credentials for authentication based on whether you are the client or the server.</source>
          <target state="translated">La plupart des protocoles de sécurité utilisés pour l’authentification du client-serveur définissent le comportement spécifique et la configuration requise pour fournir les informations d’identification pour l’authentification selon que vous êtes le client ou le serveur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si les données envoyées à l'aide de ce flux sont signées.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is signed before being transmitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les données sont signées avant d'être transmises ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">Signature des données permet de protéger l’intégrité des données ; à savoir, il permet le destinataire de déterminer si les données a été falsifiées lors de leur transit.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>Gets whether the stream used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data has been left open.</source>
          <target state="translated">Obtient une valeur indiquant si le flux utilisé par ce <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> pour envoyer et recevoir des données a été laissé ouvert.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner stream has been left open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le flux interne a été laissé ouvert ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>When set to <ph id="ph1">`true`</ph>, the stream passed to the constructor of this class will not be closed after the instance of this class is closed.</source>
          <target state="translated">Lorsque la valeur <ph id="ph1">`true`</ph>, le flux passé au constructeur de cette classe ne sera pas fermé après la fermeture de l’instance de cette classe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>When set to <ph id="ph1">`false`</ph>, closing the instance of this class will also close the underlined transport stream.</source>
          <target state="translated">Lorsque la valeur <ph id="ph1">`false`</ph>, fermeture de l’instance de cette classe ferme également le flux de transport souligné.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>The default value of this property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">La valeur par défaut de cette propriété est <ph id="ph1">`false`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>