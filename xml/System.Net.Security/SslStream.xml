<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SslStream.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac517b8021c3a62ef2b497b5743b4a33789c31fd692.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17b8021c3a62ef2b497b5743b4a33789c31fd692</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</source>
          <target state="translated">Fournit un flux utilisé pour la communication client-serveur qui passe par le protocole de sécurité Secure Socket Layer (SSL) pour authentifier le serveur et éventuellement le client.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Protocole SSL permet d’assurer la confidentialité et vérifier l’intégrité des messages transmis à l’aide un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>An SSL connection, such as that provided by <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>, should be used when communicating sensitive information between a client and a server.</source>
          <target state="translated">Une connexion SSL, telle que celle fournie par <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>, doit être utilisée lorsque communiquer des informations sensibles entre un client et un serveur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Using an <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</source>
          <target state="translated">À l’aide un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> vous aide à empêcher la lecture et la falsification des informations en transit sur le réseau.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>An <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance transmits data using a stream that you supply when creating the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance transmet des données à l’aide d’un flux de données que vous fournissez lors de la création du <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>When you supply this underlying stream, you have the option to specify whether closing the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> also closes the underlying stream.</source>
          <target state="translated">Lorsque vous fournissez ce flux sous-jacent, vous pouvez spécifier si la fermeture du <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> ferme également le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class is used with the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> classes.</source>
          <target state="translated">En règle générale, les <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe est utilisée avec la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method provides a <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> suitable for use with the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode fournit un <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> approprié pour une utilisation avec la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>After creating an <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>, the server and optionally, the client must be authenticated.</source>
          <target state="translated">Après avoir créé un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>, le serveur et éventuellement, le client doivent être authentifiés.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</source>
          <target state="translated">Le serveur doit fournir un X509 certificat qui établit la preuve de son identité et peut demander que le client également le faire.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Authentication must be performed before transmitting information using an <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">L’authentification doit être effectuée avant de transmettre des informations à l’aide un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Clients initiate authentication using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> methods, which block until the authentication completes, or the asynchronous <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph> methods, which do not block waiting for the authentication to complete.</source>
          <target state="translated">Les clients initient l’authentification à l’aide de la commande synchrone <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> , ces méthodes bloquent jusqu'à la fin de l’authentification, ou asynchrone <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph> , ces méthodes ne bloquent pas en attente pour l’authentification.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Servers initiate authentication using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Serveurs initialisent l’authentification à l’aide de la commande synchrone <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> ou asynchrone <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Both client and server must initiate the authentication.</source>
          <target state="translated">Client et le serveur doivent initialiser l’authentification.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The authentication is handled by the Security Support Provider (SSPI) channel provider.</source>
          <target state="translated">L’authentification est gérée par le fournisseur de canal SSPI (Security Support Provider Interface).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The client is given an opportunity to control validation of the server's certificate by specifying a <ph id="ph1">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> delegate when creating an <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Le client a la possibilité de contrôler la validation du certificat du serveur en spécifiant un <ph id="ph1">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> delegate lors de la création d’un <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The server can also control validation by supplying a <ph id="ph1">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> delegate.</source>
          <target state="translated">Le serveur peut également contrôler la validation en fournissant un <ph id="ph1">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</source>
          <target state="translated">La méthode référencée par le délégué inclut le certificat du tiers distant et les erreurs SSPI rencontré lors de la validation du certificat.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</source>
          <target state="translated">Notez que si le serveur Spécifie un délégué, la méthode du délégué est appelée indépendamment de si le serveur a demandé l’authentification du client.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</source>
          <target state="translated">Si le serveur n’a pas demandé l’authentification du client, la méthode du serveur délégué reçoit un certificat nul et un tableau vide d’erreurs de certificat.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If the server requires client authentication, the client must specify one or more certificates for authentication.</source>
          <target state="translated">Si le serveur requiert l’authentification du client, le client doit spécifier un ou plusieurs certificats pour l’authentification.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If the client has more than one certificate, the client can provide a <ph id="ph1">&lt;xref:System.Net.Security.LocalCertificateSelectionCallback&gt;</ph> delegate to select the correct certificate for the server.</source>
          <target state="translated">Si le client possède plusieurs certificats, le client peut fournir un <ph id="ph1">&lt;xref:System.Net.Security.LocalCertificateSelectionCallback&gt;</ph> délégué pour sélectionner le certificat approprié pour le serveur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The client's certificates must be located in the current user's "My" certificate store.</source>
          <target state="translated">Les certificats du client doivent se trouver dans « Mon » magasin de certificats l’utilisateur actuel.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Client authentication via certificates is not supported for the <ph id="ph1">&lt;xref:System.Security.Authentication.SslProtocols.Ssl2&gt;</ph> (SSL version 2) protocol.</source>
          <target state="translated">L’authentification du client via des certificats n’est pas pris en charge pour le <ph id="ph1">&lt;xref:System.Security.Authentication.SslProtocols.Ssl2&gt;</ph> protocole (SSL version 2).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et le <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> can be used by the client and server to exchange messages.</source>
          <target state="translated">Lorsque le processus d’authentification, également appelée la négociation SSL, réussit, l’identité du serveur (et éventuellement, le client) est établie et <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> peut être utilisé par le client et le serveur pour échanger des messages.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Before sending or receiving information, the client and server should check the security services and levels provided by the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</source>
          <target state="translated">Avant d’envoyer ou recevoir des informations, le client et le serveur doivent vérifier les services de sécurité et les niveaux fournies par le <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> pour déterminer si le protocole, les algorithmes et les forces sélectionnées répondent aux exigences d’intégrité et la confidentialité.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If the current settings are not sufficient, the stream should be closed.</source>
          <target state="translated">Si les paramètres actuels ne sont pas suffisants, le flux doit être fermé.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>You can check the security services provided by the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> using the <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez vérifier les services de sécurité fournis par le <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</source>
          <target state="translated">Le tableau suivant présente les éléments qui indiquent les paramètres de chiffrement utilisés pour l’authentification, le chiffrement et signature de données.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Members</source>
          <target state="translated">Membres</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The security protocol used to authenticate the server and, optionally, the client.</source>
          <target state="translated">Le protocole de sécurité utilisé pour authentifier le serveur et, éventuellement, le client.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream.SslProtocol%2A&gt;</ph> property and the associated <ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> enumeration.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.SslProtocol%2A&gt;</ph> associé et propriété <ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The key exchange algorithm.</source>
          <target state="translated">L’algorithme d’échange de clés.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A&gt;</ph> property and the associated <ph id="ph2">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;</ph> enumeration.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A&gt;</ph> associé et propriété <ph id="ph2">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The message integrity algorithm.</source>
          <target state="translated">L’algorithme d’intégrité de message.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream.HashAlgorithm%2A&gt;</ph> property and the associated <ph id="ph2">&lt;xref:System.Security.Authentication.HashAlgorithmType&gt;</ph> enumeration.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.HashAlgorithm%2A&gt;</ph> associé et propriété <ph id="ph2">&lt;xref:System.Security.Authentication.HashAlgorithmType&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The message confidentiality algorithm.</source>
          <target state="translated">L’algorithme de la confidentialité des messages.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;</ph> property and the associated <ph id="ph2">&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;</ph> enumeration.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;</ph> associé et propriété <ph id="ph2">&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The strengths of the selected algorithms.</source>
          <target state="translated">Les avantages offerts par les algorithmes sélectionnés.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream.KeyExchangeStrength%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.SslStream.HashStrength%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.Security.SslStream.CipherStrength%2A&gt;</ph> properties.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.KeyExchangeStrength%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.SslStream.HashStrength%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Net.Security.SslStream.CipherStrength%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>After a successful authentication, you can send data using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Write%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> methods.</source>
          <target state="translated">Après une authentification réussie, vous pouvez envoyer des données à l’aide de la commande synchrone <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Write%2A&gt;</ph> ou asynchrone <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>You can receive data using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;</ph> methods.</source>
          <target state="translated">Vous pouvez recevoir des données à l’aide de la commande synchrone <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> ou asynchrone <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If you specified to the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt;</ph> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</source>
          <target state="translated">Si vous avez spécifié pour le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt;</ph> que le flux sous-jacent doit être laissé ouvert, vous êtes chargé de fermer ce flux de données lorsque vous avez terminé de l’utiliser.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>If the application that creates the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</source>
          <target state="translated">Si l’application qui crée le <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> objet s’exécute avec les informations d’identification d’un utilisateur Normal, l’application ne sera pas en mesure d’accéder aux certificats installés dans le magasin de l’ordinateur local, sauf si l’autorisation a été explicitement accordée à l’utilisateur à le faire.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source><ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> assumes that a timeout along with any other <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> when one is thrown from the inner stream will be treated as fatal by its caller.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> suppose qu’un délai d’attente avec tous les autres <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> quand une exception est levée à partir du flux interne est considérée comme irrécupérables par son appelant.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Reusing a <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance after a timeout will return garbage.</source>
          <target state="translated">Réutiliser un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> après un délai d’attente retourne le garbage de l’instance.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>An application should <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> and throw an exception in these cases.</source>
          <target state="translated">Une application doit <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> le <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> et lève une exception dans ce cas.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</source>
          <target state="translated">Le .NET Framework 4.6 inclut une nouvelle fonctionnalité de sécurité qui bloque le chiffrement non sécurisé et pour les connexions, les algorithmes de hachage.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</source>
          <target state="translated">Les applications à l’aide de TLS/SSL via des API telles que HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. et le ciblage de .NET Framework 4.6 obtenir le comportement plus sécurisés par défaut.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</source>
          <target state="translated">Les développeurs peuvent faire désactiver ce comportement afin de maintenir l’interopérabilité avec leurs services existants SSL3 TLS ou avec les services de RC4.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source><bpt id="p1">[</bpt>This article<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.</source>
          <target state="translated"><bpt id="p1">[</bpt>Cet article<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept> explique comment modifier votre code afin que le nouveau comportement est désactivé.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in <bpt id="p1">[</bpt>SCHANNEL<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)</ept>.</source>
          <target state="translated">Le 4.7 Framework .NET ajoute de nouvelles surcharges pour les méthodes qui s’authentifient SslStreams qui ne spécifient pas de version TLS, mais à la place utiliser la version TLS définie comme la valeur par défaut du système dans <bpt id="p1">[</bpt>SCHANNEL<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</source>
          <target state="translated">Utilisez ces méthodes dans votre application afin de pouvoir modifier ultérieurement les valeurs par défaut en tant que TLS version meilleures pratiques change au fil du temps, sans devoir régénérer et redéployer votre application.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The following code example demonstrates creating an <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> that uses the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> class to communicate with clients.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> qui utilise le <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe pour communiquer avec les clients.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> that uses the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> class to communicate with a server.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> qui utilise le <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe pour communiquer avec un serveur.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>To prevent the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> from closing the stream that you supply, use the <ph id="ph2">&lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Pour empêcher le <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> de fermer le flux que vous fournissez, utilisez le <ph id="ph2">&lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.</source>
          <target state="translated">Si une valeur n’est pas spécifiée dans le fichier de configuration d’encryptionpolicy, le <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> par défaut est <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> pour la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance qui est construit.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source>The use of the Null cipher is required when the encryption policy is set to <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’utilisation du chiffrement Null est nécessaire lorsque la stratégie de chiffrement a la valeur <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en lecture.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A Boolean value that indicates the closure behavior of the <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Valeur booléenne qui indique le comportement de fermeture de l'objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour l'envoi et la réception de données.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">Ce paramètre indique si le flux interne est resté ouvert.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and stream closure behavior.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> en utilisant le <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> et le comportement de clôture de flux spécifiés.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream; you must explicitly close <ph id="ph5">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">Lorsque vous spécifiez <ph id="ph1">`true`</ph> pour le <ph id="ph2">`leaveStreamOpen`</ph> paramètre, la fermeture de la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’a aucun effet le <ph id="ph4">`innerStream`</ph> diffuser en continu ; vous devez fermer explicitement <ph id="ph5">`innerStream`</ph> lorsque vous n’avez plus besoin.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.</source>
          <target state="translated">Si une valeur n’est pas spécifiée dans le fichier de configuration d’encryptionpolicy, le <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> par défaut est <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> pour la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance qui est construit.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>The use of the Null cipher is required when the encryption policy is set to <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’utilisation du chiffrement Null est nécessaire lorsque la stratégie de chiffrement a la valeur <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">L’exemple de code suivant illustre l’appel de ce constructeur.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en lecture.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>A Boolean value that indicates the closure behavior of the <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Valeur booléenne qui indique le comportement de fermeture de l'objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour l'envoi et la réception de données.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">Ce paramètre indique si le flux interne est resté ouvert.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /&gt;</ph> delegate responsible for validating the certificate supplied by the remote party.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /&gt;</ph> responsable de la validation du certificat fourni par le tiers distant.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, stream closure behavior and certificate validation delegate.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> en utilisant <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, le comportement de clôture de flux et le délégué de validation de certificat spécifiés.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream; you must explicitly close <ph id="ph5">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">Lorsque vous spécifiez <ph id="ph1">`true`</ph> pour le <ph id="ph2">`leaveStreamOpen`</ph> paramètre, la fermeture de la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’a aucun effet le <ph id="ph4">`innerStream`</ph> diffuser en continu ; vous devez fermer explicitement <ph id="ph5">`innerStream`</ph> lorsque vous n’avez plus besoin.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>The <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's <ph id="ph2">`certificateErrors`</ph> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</source>
          <target state="translated">Le <ph id="ph1">`userCertificateValidationCallback`</ph> du délégué <ph id="ph2">`certificateErrors`</ph> argument contient les codes d’erreur Windows retournées par le canal SSPI Security Support Provider Interface ().</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>The return value of the method invoked by the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate determines whether authentication succeeds.</source>
          <target state="translated">La valeur de retour de la méthode appelée par le <ph id="ph1">`userCertificateValidationCallback`</ph> délégué détermine si l’authentification réussit.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>The security protocol and cryptographic algorithms are already selected when the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's method is invoked.</source>
          <target state="translated">Le protocole de sécurité et les algorithmes de chiffrement sont déjà sélectionné lorsque le <ph id="ph1">`userCertificateValidationCallback`</ph> méthode du délégué est appelée.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</source>
          <target state="translated">Vous pouvez utiliser la méthode pour déterminer si les points forts des algorithmes de chiffrement sélectionnés sont suffisantes pour votre application.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>If not, the method should return <ph id="ph1">`false`</ph> to prevent the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> from being created.</source>
          <target state="translated">Si non, la méthode doit retourner <ph id="ph1">`false`</ph> pour empêcher la <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> d’être créé.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.</source>
          <target state="translated">Si une valeur n’est pas spécifiée dans le fichier de configuration d’encryptionpolicy, le <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> par défaut est <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> pour la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance qui est construit.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>The use of the Null cipher is required when the encryption policy is set to <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’utilisation du chiffrement Null est nécessaire lorsque la stratégie de chiffrement a la valeur <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">Le Framework met en cache les sessions SSL comme elles sont créées et essaie de réutiliser une session mise en cache pour une nouvelle demande, si possible.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.</source>
          <target state="translated">Lorsque vous tentez de réutiliser une session SSL, le Framework utilise le premier élément de <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (s’il en existe un), ou essaie de réutiliser une session anonyme si <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> and initiates the client portion of the authentication.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> et initialise la partie cliente de l’authentification.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en lecture.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>A Boolean value that indicates the closure behavior of the <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Valeur booléenne qui indique le comportement de fermeture de l'objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour l'envoi et la réception de données.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">Ce paramètre indique si le flux interne est resté ouvert.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /&gt;</ph> delegate responsible for validating the certificate supplied by the remote party.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /&gt;</ph> responsable de la validation du certificat fourni par le tiers distant.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /&gt;</ph> delegate responsible for selecting the certificate used for authentication.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /&gt;</ph> responsable de la sélection du certificat utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, stream closure behavior, certificate validation delegate and certificate selection delegate.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> en utilisant <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, le comportement de clôture de flux, le délégué de validation de certificat et le délégué de sélection de certificat spécifiés.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream; you must explicitly close <ph id="ph5">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">Lorsque vous spécifiez <ph id="ph1">`true`</ph> pour le <ph id="ph2">`leaveStreamOpen`</ph> paramètre, la fermeture de la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’a aucun effet le <ph id="ph4">`innerStream`</ph> diffuser en continu ; vous devez fermer explicitement <ph id="ph5">`innerStream`</ph> lorsque vous n’avez plus besoin.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's <ph id="ph2">`certificateErrors`</ph> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</source>
          <target state="translated">Le <ph id="ph1">`userCertificateValidationCallback`</ph> du délégué <ph id="ph2">`certificateErrors`</ph> argument contient les codes d’erreur Windows retournées par le canal SSPI Security Support Provider Interface ().</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The return value of the method invoked by the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate determines whether authentication succeeds.</source>
          <target state="translated">La valeur de retour de la méthode appelée par le <ph id="ph1">`userCertificateValidationCallback`</ph> délégué détermine si l’authentification réussit.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The security protocol and cryptographic algorithms are already selected when the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's method is invoked.</source>
          <target state="translated">Le protocole de sécurité et les algorithmes de chiffrement sont déjà sélectionné lorsque le <ph id="ph1">`userCertificateValidationCallback`</ph> méthode du délégué est appelée.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</source>
          <target state="translated">Vous pouvez utiliser la méthode pour déterminer si les points forts des algorithmes de chiffrement sélectionnés sont suffisantes pour votre application.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>If not, the method should return <ph id="ph1">`false`</ph> to prevent the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> from being created.</source>
          <target state="translated">Si non, la méthode doit retourner <ph id="ph1">`false`</ph> pour empêcher la <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> d’être créé.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The <ph id="ph1">`userCertificateSelectionCallback`</ph> delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</source>
          <target state="translated">Le <ph id="ph1">`userCertificateSelectionCallback`</ph> délégué est utile lorsque votre application possède plusieurs certificats et doit choisir un certificat de manière dynamique.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>Certificates in the "MY" store are passed to the method invoked by the delegate.</source>
          <target state="translated">Certificats dans le magasin « MY » sont passés à la méthode appelée par le délégué.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.</source>
          <target state="translated">Si une valeur n’est pas spécifiée dans le fichier de configuration d’encryptionpolicy, le <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> par défaut est <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType&gt;</ph> pour la <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance qui est construit.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The use of the Null cipher is required when the encryption policy is set to <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’utilisation du chiffrement Null est nécessaire lorsque la stratégie de chiffrement a la valeur <ph id="ph1">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">Le Framework met en cache les sessions SSL comme elles sont créées et essaie de réutiliser une session mise en cache pour une nouvelle demande, si possible.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</source>
          <target state="translated">Lorsque vous tentez de réutiliser une session SSL, le Framework utilise le premier élément de P:System.Net.HttpWebRequest.ClientCertificates (si elle existe), ou essaie de réutiliser une session anonyme si P:System.Net.HttpWebRequest.ClientCertificates est vide.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">L’exemple de code suivant illustre l’appel de ce constructeur.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Cet exemple fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en lecture.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>A Boolean value that indicates the closure behavior of the <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Valeur booléenne qui indique le comportement de fermeture de l'objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> utilisé par <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> pour l'envoi et la réception de données.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">Ce paramètre indique si le flux interne est resté ouvert.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /&gt;</ph> delegate responsible for validating the certificate supplied by the remote party.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /&gt;</ph> responsable de la validation du certificat fourni par le tiers distant.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /&gt;</ph> delegate responsible for selecting the certificate used for authentication.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /&gt;</ph> responsable de la sélection du certificat utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Security.EncryptionPolicy" /&gt;</ph> to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.EncryptionPolicy" /&gt;</ph> à utiliser.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph></source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>The use of the Null cipher is required when the <ph id="ph1">`encryptionPolicy`</ph> parameter is set to <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’utilisation du chiffrement Null est nécessaire lorsque la <ph id="ph1">`encryptionPolicy`</ph> paramètre est défini sur <ph id="ph2">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en lecture.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> n’est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source><ph id="ph1">&lt;paramref name="encryptionPolicy" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionPolicy" /&gt;</ph> n'est pas valide.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Authenticate the client side of a client-server connection.</source>
          <target state="translated">Authentifiez le côté client d'une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>The name of the server that shares this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partage ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection.</source>
          <target state="translated">Appelé par les clients pour authentifier le serveur et éventuellement le client dans une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> No client certificates are used in the authentication.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> Les certificats clients sont utilisés dans l’authentification.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">La liste de révocation de certificats n’est pas vérifiée lors de l’authentification.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">La valeur spécifiée pour <ph id="ph1">`targetHost`</ph> doit correspondre au nom sur le certificat du serveur.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The name of the server that will share this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partagera ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> that contains client certificates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> contenant les certificats clients.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection.</source>
          <target state="translated">Appelé par les clients pour authentifier le serveur et éventuellement le client dans une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The authentication process uses the specified certificate collection, and the system default SSL protocol.</source>
          <target state="translated">Le processus d’authentification utilise la collection de certificats spécifiée et le protocole SSL par défaut du système.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The name of the server that will share this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partagera ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> that contains client certificates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> contenant les certificats clients.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection.</source>
          <target state="translated">Appelé par les clients pour authentifier le serveur et éventuellement le client dans une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The authentication process uses the specified certificate collection and SSL protocol.</source>
          <target state="translated">Le processus d'authentification utilise la collection de certificats spécifiée et le protocole SSL.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Authenticate the client side of a client-server connection as an asynchronous operation.</source>
          <target state="translated">Authentifier le côté client d'une connexion client-serveur sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>The name of the server that shares this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partage ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</source>
          <target state="translated">Appelé par les clients pour authentifier le serveur et éventuellement le client dans une connexion client-serveur en tant qu’opération asynchrone.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> No client certificates are used in the authentication.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> Les certificats clients sont utilisés dans l’authentification.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">La liste de révocation de certificats n’est pas vérifiée lors de l’authentification.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">La valeur spécifiée pour <ph id="ph1">`targetHost`</ph> doit correspondre au nom sur le certificat du serveur.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The name of the server that will share this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partagera ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> that contains client certificates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> contenant les certificats clients.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</source>
          <target state="translated">Appelé par les clients pour authentifier le serveur et éventuellement le client dans une connexion client-serveur en tant qu’opération asynchrone.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The authentication process uses the specified certificate collection and the system default SSL protocol.</source>
          <target state="translated">Le processus d’authentification utilise la collection de certificats spécifiée et le protocole SSL par défaut du système.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The name of the server that will share this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partagera ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> that contains client certificates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> contenant les certificats clients.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</source>
          <target state="translated">Appelé par les clients pour authentifier le serveur et éventuellement le client dans une connexion client-serveur en tant qu’opération asynchrone.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The authentication process uses the specified certificate collection and SSL protocol.</source>
          <target state="translated">Le processus d'authentification utilise la collection de certificats spécifiée et le protocole SSL.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The certificate used to authenticate the server.</source>
          <target state="translated">Certificat utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur à l'aide du certificat spécifié.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> The certificate revocation list is not checked during authentication.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> La liste de révocation de certificats n’est pas vérifiée lors de l’authentification.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The client is not required to provide a certificate for authentication.</source>
          <target state="translated">Le client n’est pas requis pour fournir un certificat pour l’authentification.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Client authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du client avec ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si le client est invité à fournir un certificat d’authentification.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">Notez qu’il s’agit uniquement d’une demande : si aucun certificat n’est fourni, le serveur accepte tout de même la demande de connexion.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur et éventuellement le client dans une connexion client-serveur à l’aide des certificats spécifiés, de la configuration requise et avec le protocole de sécurité par défaut du système.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Client authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du client avec ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si le client est invité à fournir un certificat d’authentification.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">Notez qu’il s’agit uniquement d’une demande : si aucun certificat n’est fourni, le serveur accepte tout de même la demande de connexion.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur et éventuellement le client dans une connexion client-serveur à l’aide des certificats spécifiés, de la configuration requise et du protocole de sécurité.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">Cette méthode est bloquée jusqu'à ce que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour éviter un blocage jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="enabledSslProtocols" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enabledSslProtocols" /&gt;</ph> n’est pas une valeur de <ph id="ph2">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> valide.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Client authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du client avec ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The certificate used to authenticate the server.</source>
          <target state="translated">Certificat utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur en utilisant le certificat spécifié sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>This method authenticates using <ph id="ph1">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.</source>
          <target state="translated">Cette méthode s’authentifie à l’aide de <ph id="ph1">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">La liste de révocation de certificats n’est pas vérifiée lors de l’authentification.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The client is not required to provide a certificate for authentication.</source>
          <target state="translated">Le client n’est pas requis pour fournir un certificat pour l’authentification.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Client authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du client avec ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si le client est invité à fournir un certificat d’authentification.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">Notez qu’il s’agit uniquement d’une demande : si aucun certificat n’est fourni, le serveur accepte tout de même la demande de connexion.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur et éventuellement le client dans une connexion client-serveur à l’aide des certificats spécifiés, de la configuration requise et du protocole de sécurité au cours d’une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si le client est invité à fournir un certificat d’authentification.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">Notez qu’il s’agit uniquement d’une demande : si aucun certificat n’est fourni, le serveur accepte tout de même la demande de connexion.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</source>
          <target state="translated">Appelé par les serveurs pour authentifier le serveur et éventuellement le client dans une connexion client-serveur à l’aide des certificats spécifiés, de la configuration requise et du protocole de sécurité au cours d’une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Begins an operation to authenticate the client side of a client-server connection.</source>
          <target state="translated">Commence une opération pour authentifier le côté client d'une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The overloads of this method do not block while authentication is in progress.</source>
          <target state="translated">Les surcharges de cette méthode ne bloquent pas si l’authentification est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>To block while waiting for the authentication to complete, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">Pour bloquer en attendant que l’authentification, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>The name of the server that shares this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partage ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l’authentification est terminée.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</source>
          <target state="translated">Appelé par les clients pour commencer une opération asynchrone pour authentifier le serveur et, éventuellement, le client.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> No client certificates are used in the authentication.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> Les certificats clients sont utilisés dans l’authentification.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">La liste de révocation de certificats n’est pas vérifiée lors de l’authentification.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">La valeur spécifiée pour <ph id="ph1">`targetHost`</ph> doit correspondre au nom sur le certificat du serveur.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone d’authentification doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, cette <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The name of the server that shares this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partage ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> containing client certificates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> contenant les certificats clients.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l’authentification est terminée.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</source>
          <target state="translated">Appelé par les clients pour lancer une opération asynchrone d’authentification du serveur et éventuellement du client à l’aide des certificats spécifiés et du protocole de sécurité par défaut du système.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">La valeur spécifiée pour <ph id="ph1">`targetHost`</ph> doit correspondre au nom sur le certificat du serveur.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone d’authentification doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, cette <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The name of the server that shares this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Le nom du serveur qui partage ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> containing client certificates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> contenant les certificats clients.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l’authentification est terminée.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</source>
          <target state="translated">Appelé par les clients pour commencer une opération asynchrone pour authentifier le serveur et éventuellement le client à l'aide des certificats spécifiés et du protocole de sécurité.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">La valeur spécifiée pour <ph id="ph1">`targetHost`</ph> doit correspondre au nom sur le certificat du serveur.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone d’authentification doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, cette <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">Les certificats clients ne sont pas pris en charge dans la version 2 du protocole SSL.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetHost" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enabledSslProtocols" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enabledSslProtocols" /&gt;</ph> n’est pas une valeur de <ph id="ph2">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> valide.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</source>
          <target state="translated">Commence une opération asynchrone pour gérer le côté serveur de l'authentification d'une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>The overloads of this method do not block while authentication is in progress.</source>
          <target state="translated">Les surcharges de cette méthode ne bloquent pas si l’authentification est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.SslStream">
          <source>To block while waiting for the authentication to complete, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour bloquer en attendant que l’authentification, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l’authentification est terminée.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</source>
          <target state="translated">Appelé par les serveurs pour commencer une opération asynchrone d'authentification du client, et éventuellement du serveur, dans une connexion client-serveur.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> indiquant l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> The certificate revocation list is not checked during authentication.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]</ph> La liste de révocation de certificats n’est pas vérifiée lors de l’authentification.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>The client is not required to provide a certificate for authentication.</source>
          <target state="translated">Le client n’est pas requis pour fournir un certificat pour l’authentification.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone d’authentification doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, cette <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>Client authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du client avec ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si le client est invité à fournir un certificat d’authentification.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">Notez qu’il s’agit uniquement d’une demande : si aucun certificat n’est fourni, le serveur accepte tout de même la demande de connexion.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l’authentification est terminée.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</source>
          <target state="translated">Appelé par les serveurs pour lancer une opération asynchrone d’authentification du serveur et éventuellement du client à l’aide des certificats spécifiés, de la configuration requise et du protocole de sécurité par défaut du système.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone d’authentification doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, cette <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">Le X509Certificate utilisé pour authentifier le serveur.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si le client est invité à fournir un certificat d’authentification.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">Notez qu’il s’agit uniquement d’une demande : si aucun certificat n’est fourni, le serveur accepte tout de même la demande de connexion.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si la liste de révocation des certificats est vérifiée pendant l’authentification.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l’authentification est terminée.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</source>
          <target state="translated">Appelé par les serveurs pour lancer une opération asynchrone d’authentification du serveur et éventuellement du client à l’aide des certificats spécifiés, de la configuration requise et du protocole de sécurité.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">L’opération asynchrone d’authentification doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, cette <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverCertificate" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enabledSslProtocols" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enabledSslProtocols" /&gt;</ph> n’est pas une valeur de <ph id="ph2">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> valide.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">L’authentification a déjà eu lieu.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Server authentication using this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was tried previously.</source>
          <target state="translated">L’authentification du serveur avec cette <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a déjà été tentée.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Authentication is already in progress.</source>
          <target state="translated">L’authentification est déjà en cours.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph> n’est pas prise en charge sur Windows 95, Windows 98 et Windows Millennium.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that receives the bytes read from the stream.</source>
          <target state="translated">Tableau <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui reçoit les octets lus dans le flux de données.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from this stream.</source>
          <target state="translated">Emplacement de base zéro dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> à partir duquel commencer le stockage des données lues dans ce flux.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read from the stream.</source>
          <target state="translated">Nombre maximal d'octets à lire dans le flux.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the read operation is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler lorsque l'opération de lecture est terminée.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the read operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération de lecture.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</source>
          <target state="translated">Commence une opération de lecture asynchrone qui lit des données du flux et les stocke dans le tableau spécifié.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui indique l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</source>
          <target state="translated">Si le chiffrement et/ou la signature est activée, l’opération de lecture lit les données dans le flux sous-jacent, vérifie l’intégrité des données et/ou déchiffre.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous read operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndRead%2A&gt;</ph> method.</source>
          <target state="translated">L’opération de lecture asynchrone doit être terminée en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.EndRead%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class does not support multiple simultaneous read operations.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe ne prend pas en charge simultanée de plusieurs opérations de lecture.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To authenticate call one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour authentifier un appel de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates starting an asynchronous read operation.</source>
          <target state="translated">L’exemple de code suivant illustre le démarrage d’une opération de lecture asynchrone.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following method is called when the read completes.</source>
          <target state="translated">La méthode suivante est appelée lorsque la lecture est terminée.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> longueur de <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + count <ph id="ph2">&amp;gt;</ph> the length of <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + nombre <ph id="ph2">&amp;gt;</ph> longueur de <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The read operation failed.</source>
          <target state="translated">L'opération de lecture a échoué.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Encryption is in use, but the data could not be decrypted.</source>
          <target state="translated">Le chiffrement est utilisé, mais les données n'ont pas pu être déchiffrées.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>There is already a read operation in progress.</source>
          <target state="translated">Une opération de lecture est déjà en cours.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes to be written to the stream.</source>
          <target state="translated">Tableau de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui fournit les octets à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated">Emplacement de base zéro dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> à partir duquel commencer la lecture des octets à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes to read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui spécifie le nombre d’octets à lire dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the write operation is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler lorsque l'opération d'écriture est terminée.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the write operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'écriture.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération se termine.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation that writes <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s from the specified buffer to the stream.</source>
          <target state="translated">Commence une opération d'écriture asynchrone qui écrit des <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s de la mémoire tampon spécifiée vers le flux.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> indiquant l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> longueur de <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + count <ph id="ph2">&amp;gt;</ph> the length of <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + nombre <ph id="ph2">&amp;gt;</ph> longueur de <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The write operation failed.</source>
          <target state="translated">L'opération d'écriture a échoué.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>There is already a write operation in progress.</source>
          <target state="translated">Une opération d'écriture est déjà en cours.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CanRead">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is readable.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le flux sous-jacent est accessible en lecture.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if authentication has occurred and the underlying stream is readable; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'authentification s'est produite et que le flux sous-jacent est accessible en lecture ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanRead">
          <source>If successful authentication has occurred, this property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanRead">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanRead">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CanSeek">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is seekable.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le flux sous-jacent peut faire l'objet d'une recherche.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanSeek">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette propriété retourne toujours <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanSeek">
          <source>Do not attempt to set the position of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> object or its underlying stream.</source>
          <target state="translated">N’essayez pas de définir la position de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> objet ou son flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanSeek">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CanTimeout">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream supports time-outs.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le flux sous-jacent prend en charge les délais d'attente.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanTimeout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying stream supports time-outs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le flux de données prend en charge les délais d'attente ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanTimeout">
          <source>This property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanTimeout">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CanWrite">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is writable.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le flux sous-jacent est accessible en écriture.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if authentication has occurred and the underlying stream is writable; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'authentification s'est produite et que le flux sous-jacent est accessible en écriture ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanWrite">
          <source>If successful authentication has occurred, this property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Si l’authentification réussie a eu lieu, cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanWrite">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Le flux sous-jacent est spécifié lorsque vous créez une instance de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CanWrite">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the certificate revocation list is checked during the certificate validation process.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si la liste de révocation de certificats est vérifiée au cours du processus de validation des certificats.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the certificate revocation list is checked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la liste de révocation de certificats est vérifiée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
          <source>The certificate revocation list contains certificates that have been revoked by the issuer.</source>
          <target state="translated">La liste de révocation de certificats contient les certificats qui ont été révoqués par l’émetteur.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
          <source>Checking the list negatively impacts performance but improves application security.</source>
          <target state="translated">Vérification de la liste a un impact négatif affecte les performances mais améliore la sécurité de l’application.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>Gets a value that identifies the bulk encryption algorithm used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Obtient une valeur qui identifie l'algorithme de chiffrement en bloc utilisé par ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.CipherAlgorithmType" /&gt;</ph> value.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.CipherAlgorithmType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>A value of <ph id="ph1">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> is required for the <ph id="ph2">&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;</ph> property when the <ph id="ph3">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption&gt;</ph> enumeration value is used to construct a <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> est requis pour le <ph id="ph2">&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;</ph> propriété lorsque le <ph id="ph3">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption&gt;</ph> valeur d’énumération est utilisée pour construire un <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source><ph id="ph1">[!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]</ph> and <ph id="ph2">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> do not support the <ph id="ph3">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]</ph> et <ph id="ph2">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> ne gèrent pas la <ph id="ph3">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>So even if the <ph id="ph1">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> value is used to construct the <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance, the <ph id="ph3">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> property will be <ph id="ph4">&lt;xref:System.Security.Authentication.CipherAlgorithmType.None&gt;</ph>.</source>
          <target state="translated">Par conséquent, même si le <ph id="ph1">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> valeur est utilisée pour construire la <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance, le <ph id="ph3">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> propriété sera <ph id="ph4">&lt;xref:System.Security.Authentication.CipherAlgorithmType.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> value is only returned on Windows Vista and later.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> valeur est retournée uniquement sous Windows Vista et versions ultérieures.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>The following code example displays the cryptography settings for the specified stream.</source>
          <target state="translated">L’exemple de code suivant affiche les paramètres de chiffrement pour le flux spécifié.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CipherAlgorithm">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /&gt;</ph> property was accessed before the completion of the authentication process or the authentication process failed.</source>
          <target state="translated">L'accès à la propriété <ph id="ph1">&lt;see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /&gt;</ph> a été effectué avant la fin du processus d'authentification ou le processus d'authentification a échoué.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>Gets a value that identifies the strength of the cipher algorithm used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Obtient une valeur qui identifie la puissance de l'algorithme de chiffrement utilisé par ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the strength of the algorithm, in bits.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui spécifie la puissance de l'algorithme, en bits.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>The value of this property is zero until the authentication occurs.</source>
          <target state="translated">La valeur de cette propriété est zéro jusqu'à ce que l’authentification se produit.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>This property returns one of the following values:</source>
          <target state="translated">Cette propriété retourne l’une des valeurs suivantes :</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>40</source>
          <target state="translated">40</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>56</source>
          <target state="translated">56</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>80</source>
          <target state="translated">80</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>128</source>
          <target state="translated">128</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>168</source>
          <target state="translated">168</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>192</source>
          <target state="translated">192</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>256</source>
          <target state="translated">256</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.CipherStrength">
          <source>The following code example displays the cryptography settings for the specified stream.</source>
          <target state="translated">L’exemple de code suivant affiche les paramètres de chiffrement pour le flux spécifié.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">`Dispose()`</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> appelle la méthode protégée <ph id="ph2">`Dispose(Boolean)`</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">`Dispose`</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> references.</source>
          <target state="translated">Lorsque le <ph id="ph1">`disposing`</ph> paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> références.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose()`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>substitution de la méthode Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retournée par un appel à <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>Ends a pending asynchronous server authentication operation started with a previous call to <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated">Termine une opération d'authentification du serveur asynchrone en attente, démarrée avec un appel précédent à <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>When the authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>To perform this operation synchronously, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour effectuer cette opération de manière synchrone, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> n'a pas été créé par un appel à la méthode <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>There is no pending server authentication to complete.</source>
          <target state="translated">Aucune authentification de serveur n'est en attente d'achèvement.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retournée par un appel à <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>Ends a pending asynchronous client authentication operation started with a previous call to <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated">Termine une opération d'authentification du client asynchrone en attente, démarrée avec un appel précédent à <ph id="ph1">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>When the authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">Lorsque l’authentification réussit, vous devez vérifier le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> propriétés pour déterminer les services de sécurité sont utilisés par le <ph id="ph3">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">Vérifiez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> propriété pour déterminer si l’authentification mutuelle s’est produite.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>If the authentication fails, you receive a <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.</source>
          <target state="translated">Si l’authentification échoue, vous recevez un <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>et cela <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> n’est plus utilisable.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">Vous devez fermer cet objet et supprimer toutes les références à ce dernier afin qu’il peut être recueilli par le garbage collector.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>To perform this operation synchronously, use one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">Pour effectuer cette opération de manière synchrone, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> n'a pas été créé par un appel à la méthode <ph id="ph2">&lt;see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">L’authentification a échoué et a laissé cet objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>There is no pending client authentication to complete.</source>
          <target state="translated">Aucune authentification de client n'est en attente d'achèvement.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retournée par un appel à <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>Ends an asynchronous read operation started with a previous call to <ph id="ph1">&lt;see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Termine une opération de lecture asynchrone démarrée avec un appel précédent à <ph id="ph1">&lt;see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes read from the underlying stream.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui spécifie le nombre d'octets lus dans le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">Pour effectuer cette opération de manière synchrone, utilisez la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>To authenticate call one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour authentifier un appel de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>The following code example demonstrates ending an asynchronous read operation.</source>
          <target state="translated">L’exemple de code suivant illustre l’opération de lecture asynchrone de fin.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> n'a pas été créé par un appel à la méthode <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
          <source>The read operation failed.</source>
          <target state="translated">L'opération de lecture a échoué.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retournée par un appel à <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation started with a previous call to <ph id="ph1">&lt;see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Termine une opération d'écriture asynchrone démarrée avec un appel précédent à <ph id="ph1">&lt;see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">Si l’opération n’est pas terminée, cette méthode est bloquée jusqu'à ce qu’il effectue.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>An application cannot call this method until you have successfully authenticated.</source>
          <target state="translated">Une application ne peut pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour l’authentification, appelez l’une de le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">Pour effectuer cette opération de manière synchrone, utilisez la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.Write%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>The following code example demonstrates ending an asynchronous write operation.</source>
          <target state="translated">L’exemple de code suivant illustre la fin d’une opération d’écriture asynchrone.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> n'a pas été créé par un appel à la méthode <ph id="ph2">&lt;see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
          <source>The write operation failed.</source>
          <target state="translated">L'opération d'écriture a échoué.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Flush">
          <source>Causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Provoque l'écriture des données mises en mémoire tampon sur le périphérique sous-jacent.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Flush">
          <source>This method invokes <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Cette méthode appelle <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Flush">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.HashAlgorithm">
          <source>Gets the algorithm used for generating message authentication codes (MACs).</source>
          <target state="translated">Obtient l'algorithme utilisé pour générer des codes d'authentification de messages (MAC).</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashAlgorithm">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.HashAlgorithmType" /&gt;</ph> value.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.HashAlgorithmType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashAlgorithm">
          <source>Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</source>
          <target state="translated">Algorithmes d’authentification de message génèrent des hachages de message et les signatures permet de détecter toute falsification et contrefaçon.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashAlgorithm">
          <source>The following code example displays the cryptography settings for the specified stream.</source>
          <target state="translated">L’exemple de code suivant affiche les paramètres de chiffrement pour le flux spécifié.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.HashAlgorithm">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.Security.SslStream.HashAlgorithm" /&gt;</ph> property was accessed before the completion of the authentication process or the authentication process failed.</source>
          <target state="translated">L'accès à la propriété <ph id="ph1">&lt;see cref="P:System.Net.Security.SslStream.HashAlgorithm" /&gt;</ph> a été effectué avant la fin du processus d'authentification ou le processus d'authentification a échoué.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.HashStrength">
          <source>Gets a value that identifies the strength of the hash algorithm used by this instance.</source>
          <target state="translated">Obtient une valeur qui identifie la puissance de l'algorithme de hachage utilisé par cette instance.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashStrength">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the strength of the <ph id="ph2">&lt;see cref="T:System.Security.Authentication.HashAlgorithmType" /&gt;</ph> algorithm, in bits.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui spécifie la puissance de l'algorithme <ph id="ph2">&lt;see cref="T:System.Security.Authentication.HashAlgorithmType" /&gt;</ph>, en bits.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashStrength">
          <source>Valid values are 128 or 160.</source>
          <target state="translated">Les valeurs autorisées sont 128 ou 160.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashStrength">
          <source>The value of this property is zero until the authentication occurs.</source>
          <target state="translated">La valeur de cette propriété est zéro jusqu'à ce que l’authentification se produit.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.HashStrength">
          <source>The following code example displays the cryptography settings for the specified stream.</source>
          <target state="translated">L’exemple de code suivant affiche les paramètres de chiffrement pour le flux spécifié.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether authentication was successful.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si l'authentification a réussi.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful authentication occurred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'authentification réalisée a réussi ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsAuthenticated">
          <source>Clients authenticate by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">Les clients s’authentifient en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsAuthenticated">
          <source>Servers authenticate by calling the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Les serveurs s’authentifient en appelant le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.IsEncrypted">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether this <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> uses data encryption.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si ce <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> utilise le chiffrement de données.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsEncrypted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les données sont chiffrées avant d'être transmises sur le réseau et déchiffrées lorsqu'elles atteignent le point de terminaison distant ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsEncrypted">
          <source>Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</source>
          <target state="translated">Le chiffrement aide à protéger la confidentialité des données, à savoir qu’il permet de se pour assurer que pendant des données en transit, il ne peut pas être déchiffrée par des tiers.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsEncrypted">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether both server and client have been authenticated.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le serveur et le client ont tous les deux été authentifiés.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the server has been authenticated; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le serveur a été authentifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
          <source>Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</source>
          <target state="translated">L’authentification mutuelle est spécifiée par le serveur lorsque le serveur souhaite que le client fournisse un certificat pour l’authentification.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.IsServer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the local side of the connection used by this <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> was authenticated as the server.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si le côté local de la connexion utilisée par ce <ph id="ph2">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> a été authentifié comme serveur.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsServer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point de terminaison local a été authentifié avec succès comme côté serveur de la connexion authentifiée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsServer">
          <source>If authentication failed or did not occur, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Si l’authentification a échoué ou n’a été réalisée, cette propriété retourne <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsServer">
          <source>To authenticate as the server, call the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour l’authentification en tant que le serveur, appelez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsServer">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.IsSigned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui indique si les données envoyées à l'aide de ce flux sont signées.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsSigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is signed before being transmitted; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les données sont signées avant d'être transmises ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsSigned">
          <source>Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">Permet de protéger l’intégrité des données de la signature des données, à savoir qu’il vous aide au destinataire déterminer si les données a été falsifiées lors de leur transit.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.IsSigned">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
          <source>Gets the key exchange algorithm used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</source>
          <target state="translated">Obtient l'algorithme d'échange de clé utilisé par ce <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /&gt;</ph> value.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
          <source>The value of this property is <ph id="ph1">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType.None&gt;</ph> until the authentication occurs.</source>
          <target state="translated">La valeur de cette propriété est <ph id="ph1">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType.None&gt;</ph> jusqu'à ce que l’authentification se produit.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
          <source>The key exchange algorithm protects information used to generate shared keys.</source>
          <target state="translated">L’algorithme d’échange de clés protège les informations utilisées pour générer des clés partagées.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
          <source>The following code example displays the cryptography settings for the specified stream.</source>
          <target state="translated">L’exemple de code suivant affiche les paramètres de chiffrement pour le flux spécifié.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>Gets a value that identifies the strength of the key exchange algorithm used by this instance.</source>
          <target state="translated">Obtient une valeur qui identifie la puissance de l'algorithme d'échange de clé utilisé par cette instance.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the strength of the <ph id="ph2">&lt;see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /&gt;</ph> algorithm, in bits.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui spécifie la puissance de l'algorithme <ph id="ph2">&lt;see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /&gt;</ph>, en bits.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>The value of this property is zero until the authentication occurs.</source>
          <target state="translated">La valeur de cette propriété est zéro jusqu'à ce que l’authentification se produit.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>In common scenarios, the value of this property is one of the following:</source>
          <target state="translated">Dans les scénarios courants, la valeur de cette propriété est une des opérations suivantes :</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>512</source>
          <target state="translated">512</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>768</source>
          <target state="translated">768</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>1024</source>
          <target state="translated">1024</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>2048</source>
          <target state="translated">2048</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.KeyExchangeStrength">
          <source>The following code example displays the cryptography settings for the specified stream.</source>
          <target state="translated">L’exemple de code suivant affiche les paramètres de chiffrement pour le flux spécifié.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.Length">
          <source>Gets the length of the underlying stream.</source>
          <target state="translated">Obtient la longueur du flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Length">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Length">
          <source>The length of the underlying stream.</source>
          <target state="translated">Longueur du flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Length">
          <source>This property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Length">
          <source>If the underlying stream is not seekable, this method typically throws an exception.</source>
          <target state="translated">Si le flux sous-jacent n’est pas identifiable, cette méthode lève généralement une exception.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Length">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.Length">
          <source>Getting the value of this property is not supported when the underlying stream is a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.LocalCertificate">
          <source>Gets the certificate used to authenticate the local endpoint.</source>
          <target state="translated">Obtient le certificat utilisé pour authentifier le point de terminaison local.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.LocalCertificate">
          <source>An X509Certificate object that represents the certificate supplied for authentication or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no certificate was supplied.</source>
          <target state="translated">Objet X509Certificate qui représente le certificat fourni pour l'authentification ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucun certificat n'a été fourni.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.LocalCertificate">
          <source>The following code example demonstrates displaying the certificate returned by this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage du certificat retourné par cette propriété.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.LocalCertificate">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">L'authentification a échoué ou n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.Position">
          <source>Gets or sets the current position in the underlying stream.</source>
          <target state="translated">Obtient ou définit la position actuelle dans le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Position">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Position">
          <source>The current position in the underlying stream.</source>
          <target state="translated">Position actuelle dans le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Position">
          <source>This property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Position">
          <source>If the underlying stream is not seekable, this method typically throws an exception.</source>
          <target state="translated">Si le flux sous-jacent n’est pas identifiable, cette méthode lève généralement une exception.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.Position">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">Le type au moment de l’exécution du flux sous-jacent détermine le type au moment de l’exécution de l’exception est levée.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.Position">
          <source>Setting this property is not supported.</source>
          <target state="translated">La définition de cette propriété n'est pas prise en charge.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.Position">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.Position">
          <source>Getting the value of this property is not supported when the underlying stream is a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that receives the bytes read from this stream.</source>
          <target state="translated">Tableau <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui reçoit les octets lus dans ce flux.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from this stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui contient l’emplacement de base zéro dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> à partir duquel commencer le stockage des données lues dans ce flux.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the maximum number of bytes to read from this stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> contenant le nombre maximal d'octets à lire dans ce flux.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads data from this stream and stores it in the specified array.</source>
          <target state="translated">Lit les données de ce flux et les stocke dans le tableau spécifié.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes read.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui indique le nombre d'octets lus.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When there is no more data to be read, returns 0.</source>
          <target state="translated">Lorsqu'il n'y a plus de données à lire, retourne 0.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The method reads a maximum of <ph id="ph1">`count`</ph> bytes from the stream and stores them in <ph id="ph2">`buffer`</ph> beginning at <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">La méthode lit un maximum de <ph id="ph1">`count`</ph> octets à partir du flux et les stocke dans <ph id="ph2">`buffer`</ph> commençant à <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot perform multiple simultaneous read operations.</source>
          <target state="translated">Impossible d’effectuer plusieurs opérations de lecture simultanées.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>To authenticate call one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour authentifier un appel de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>To perform this operation asynchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;</ph> method.</source>
          <target state="translated">Pour effectuer cette opération de façon asynchrone, utilisez la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates reading from an <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre la lecture dans un <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> longueur de <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + count <ph id="ph2">&amp;gt;</ph> the length of <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + nombre <ph id="ph2">&amp;gt;</ph> longueur de <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The read operation failed.</source>
          <target state="translated">L'opération de lecture a échoué.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Check the inner exception, if present to determine the cause of the failure.</source>
          <target state="translated">Vérifiez l'exception interne, si elle permet de déterminer la cause de la défaillance.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>There is already a read operation in progress.</source>
          <target state="translated">Une opération de lecture est déjà en cours.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.ReadTimeout">
          <source>Gets or sets the amount of time a read operation blocks waiting for data.</source>
          <target state="translated">Obtient ou définit la durée pendant laquelle une opération de lecture reste bloquée en attendant des données.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.ReadTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that specifies the amount of time that elapses before a synchronous read operation fails.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> spécifiant le temps qui doit s'écouler avant l'échec d'une opération de lecture synchrone.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.ReadTimeout">
          <source>This property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.ReadTimeout">
          <source>When you set this property, the <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> value on the underlying stream is set to the specified value.</source>
          <target state="translated">Lorsque vous définissez cette propriété, le <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> sur le flux sous-jacent est la valeur à la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.ReadTimeout">
          <source>If the underlying stream is a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.SslStream.ReadTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that read operations do not timeout.</source>
          <target state="translated">Si le flux sous-jacent est un <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.SslStream.ReadTimeout%2A&gt;</ph> est exprimée en millisecondes et a la valeur <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> par défaut afin que les opérations ne dépassent pas le délai de lecture.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.ReadTimeout">
          <source>The following code example demonstrates setting the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre la définition de la valeur de cette propriété.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.RemoteCertificate">
          <source>Gets the certificate used to authenticate the remote endpoint.</source>
          <target state="translated">Obtient le certificat utilisé pour authentifier le point de terminaison distant.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.RemoteCertificate">
          <source>An X509Certificate object that represents the certificate supplied for authentication or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no certificate was supplied.</source>
          <target state="translated">Objet X509Certificate qui représente le certificat fourni pour l'authentification ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucun certificat n'a été fourni.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.RemoteCertificate">
          <source>The following code example demonstrates displaying the certificate returned by this property.</source>
          <target state="translated">L’exemple de code suivant illustre l’affichage du certificat retourné par cette propriété.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.RemoteCertificate">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">L'authentification a échoué ou n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This value is ignored.</source>
          <target state="translated">Cette valeur est ignorée.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This value is ignored.</source>
          <target state="translated">Cette valeur est ignorée.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Lève un <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Lève toujours une exception <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Do not call this method.</source>
          <target state="translated">N'appelez pas cette méthode.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>It is inherited, but is not supported by the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.</source>
          <target state="translated">Elle est héritée, mais n’est pas pris en charge par la <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking is not supported by <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph> objects.</source>
          <target state="translated">La recherche n'est pas prise en charge par les objets <ph id="ph1">&lt;see cref="T:System.Net.Security.SslStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.SetLength(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value that specifies the length of the stream.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> qui spécifie la longueur du flux.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.SetLength(System.Int64)">
          <source>Sets the length of the underlying stream.</source>
          <target state="translated">Définit la longueur du flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.SetLength(System.Int64)">
          <source>This method invokes <ph id="ph1">&lt;xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType&gt;</ph> on the underlying stream specified when this <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> was created.</source>
          <target state="translated">Cette méthode appelle <ph id="ph1">&lt;xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType&gt;</ph> sur le flux sous-jacent spécifié lorsque ce <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.ShutdownAsync">
          <source>Shuts down this SslStream.</source>
          <target state="translated">Arrête ce SslStream.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.ShutdownAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.SslProtocol">
          <source>Gets a value that indicates the security protocol used to authenticate this connection.</source>
          <target state="translated">Obtient une valeur qui indique le protocole de sécurité utilisé pour authentifier cette connexion.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.SslProtocol">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> value that represents the protocol used for authentication.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Security.Authentication.SslProtocols" /&gt;</ph> qui représente le protocole utilisé pour l'authentification.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.SslProtocol">
          <source>The supported security protocols are specified when the <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> is created.</source>
          <target state="translated">Les protocoles de sécurité pris en charge sont spécifiés lorsque le <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> est créé.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.SslProtocol">
          <source>If no security protocol was passed to the constructor, the instance is created using <ph id="ph1">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.</source>
          <target state="translated">Si aucun protocole de sécurité a été passé au constructeur, l’instance est créée à l’aide de <ph id="ph1">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.SslProtocol">
          <source>The actual protocol used for authentication is selected based on the protocols supported by the client and server.</source>
          <target state="translated">Le protocole utilisé pour l’authentification est sélectionné en fonction des protocoles pris en charge par le client et le serveur.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.SslProtocol">
          <source>The following example displays the security properties of the specified stream.</source>
          <target state="translated">L’exemple suivant affiche les propriétés de sécurité du flux spécifié.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.TransportContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> used for authentication using extended protection.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> utilisé pour l'authentification à l'aide de la protection étendue.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.TransportContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> object that contains the channel binding token (CBT) used for extended protection.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> qui contient le jeton de liaison de canal (FAO) utilisé comme protection étendue.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="T:System.Net.Security.SslStream">
          <source>Writes data to this stream.</source>
          <target state="translated">Écrit des données dans ce flux.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes written to the stream.</source>
          <target state="translated">Tableau de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui fournit les octets écrits dans le flux.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>Writes the specified data to this stream.</source>
          <target state="translated">Écrit les données spécifiées dans ce flux.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>This method blocks while the operation completes.</source>
          <target state="translated">Cette méthode est bloquée pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>To prevent blocking while the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated">Pour éviter un blocage pendant l’opération est terminée, utilisez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>To authenticate call one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour authentifier un appel de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class does not support multiple simultaneous write operations.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>The following code example demonstrates writing to an authenticated <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre l’écriture dans un authentifié <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>The write operation failed.</source>
          <target state="translated">L'opération d'écriture a échoué.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>There is already a write operation in progress.</source>
          <target state="translated">Une opération d'écriture est déjà en cours.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[])">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes written to the stream.</source>
          <target state="translated">Tableau de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui fournit les octets écrits dans le flux.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui contient l’emplacement de base zéro dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> à partir duquel commencer la lecture des octets à écrire dans le flux.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the number of bytes to read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui contient le nombre d’octets à lire dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Write the specified number of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s to the underlying stream using the specified buffer and offset.</source>
          <target state="translated">Écrivez le nombre spécifié de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s dans le flux sous-jacent à l'aide de la mémoire tampon et de l'offset spécifiés.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method blocks while the operation completes.</source>
          <target state="translated">Cette méthode est bloquée pendant que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To prevent blocking while the operation completes the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated">Pour éviter un blocage pendant l’opération termine l’opération est terminée, utilisez le <ph id="ph1">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">Vous ne pouvez pas appeler cette méthode jusqu'à ce que vous avez correctement authentifié.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To authenticate call one of the <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">Pour authentifier un appel de la <ph id="ph1">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, ou <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> class does not support multiple simultaneous write operations.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Security.SslStream&gt;</ph> classe ne prend pas en charge plusieurs opérations d’écriture simultanées.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;paramref name="&amp;lt;" /&gt;</ph><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="0" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="-or-" /&gt;</ph><ph id="ph2">&lt;paramref name="offset" /&gt;</ph> <ph id="ph3">&amp;gt;</ph> longueur de <ph id="ph4">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + count <ph id="ph2">&amp;gt;</ph> the length of <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + nombre <ph id="ph2">&amp;gt;</ph> longueur de <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation failed.</source>
          <target state="translated">L'opération d'écriture a échoué.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>There is already a write operation in progress.</source>
          <target state="translated">Une opération d'écriture est déjà en cours.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This object has been closed.</source>
          <target state="translated">L’objet a été fermé.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Authentication has not occurred.</source>
          <target state="translated">L'authentification n'a pas été effectuée.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="P:System.Net.Security.SslStream.WriteTimeout">
          <source>Gets or sets the amount of time a write operation blocks waiting for data.</source>
          <target state="translated">Obtient ou définit la durée pendant laquelle une opération d'écriture reste bloquée en attendant des données.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.WriteTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that specifies the amount of time that elapses before a synchronous write operation fails.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> spécifiant le temps qui doit s'écouler avant l'échec d'une opération d'écriture synchrone.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.WriteTimeout">
          <source>This property returns the value returned by invoking <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">Cette propriété retourne la valeur retournée en appelant <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.WriteTimeout">
          <source>For set operations, the specified value sets the <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> value on the underlying stream.</source>
          <target state="translated">Pour les opérations de jeu, définit la valeur spécifiée du <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> valeur sur le flux sous-jacent.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.WriteTimeout">
          <source>If the underlying stream is a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.SslStream.WriteTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that write operations do not timeout.</source>
          <target state="translated">Si le flux sous-jacent est un <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.SslStream.WriteTimeout%2A&gt;</ph> est exprimée en millisecondes et a la valeur <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> par défaut afin que les opérations ne dépassent pas le délai d’écriture.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.SslStream.WriteTimeout">
          <source>The following code example demonstrates setting the value of this property.</source>
          <target state="translated">L’exemple de code suivant illustre la définition de la valeur de cette propriété.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>