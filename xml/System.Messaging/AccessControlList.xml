<Type Name="AccessControlList" FullName="System.Messaging.AccessControlList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6db7706d28118b7ec3b543cc118ef6d1c82beabb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessControlList : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlList extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlList" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlList&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlList : System::Collections::CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contient une liste d’entrées de contrôle d’accès, qui spécifie les droits d’accès pour un ou plusieurs clients approuvés.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Messaging.AccessControlList> classe pour spécifier plusieurs tiers de confiance et droits d’accès à ajouter avec un appel unique lors de la définition des autorisations. Construire votre liste de contrôle d’accès en ajoutant une entrée de contrôle d’accès pour chaque combinaison de droits d’accès et le tiers de confiance.  
  
 A <xref:System.Messaging.AccessControlList> identifie les tiers de confiance qui sont accordés ou refusés l’accès à un objet sécurisable. Lorsqu’un processus tente d’accéder à un objet sécurisable, le système vérifie les entrées de contrôle d’accès dans la liste de contrôle d’accès de l’objet pour déterminer s’il faut autoriser l’accès. Si l’objet ne dispose pas d’une liste de contrôle d’accès, le système accorde un accès complet à tous les éléments. Si la liste de contrôle d’accès de l’objet ne possède aucune entrée, le système refuse toutes les tentatives d’accéder à l’objet.  
  
 Le système vérifie les entrées de contrôle d’accès dans l’ordre jusqu'à ce qu’il trouve une ou plusieurs qui autorise tous les droits d’accès demandé, ou jusqu'à ce qu’un des droits d’accès demandés sont refusé.  
  
 Le système examine chaque <xref:System.Messaging.AccessControlEntry> dans l’ordre jusqu'à ce qu’un des événements suivants se produit :  
  
-   Refus d’accès <xref:System.Messaging.AccessControlEntry> refuse explicitement l’un des droits d’accès demandé à un tiers de confiance répertoriés dans le jeton d’accès du thread.  
  
-   Au moins un accès autorisé <xref:System.Messaging.AccessControlEntry> éléments pour la confiance répertoriés dans le jeton d’accès du thread explicitement accorder les droits d’accès demandé.  
  
-   Tous les <xref:System.Messaging.AccessControlEntry> éléments ont été vérifiés et il existe toujours au moins un droit d’accès demandé qui a été explicitement interdit, dans ce cas, l’accès est refusé implicitement.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Messaging.AccessControlList" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> à ajouter à la fin de la liste de contrôle d’accès.</param>
        <summary>Ajoute une entrée du contrôle d’accès à la liste de contrôle d’accès.</summary>
        <returns>Position à laquelle la nouvelle entrée du contrôle d’accès a été insérée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="entry" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entry As AccessControlEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> à trouver dans la liste de contrôle d’accès.</param>
        <summary>Détermine si la liste de contrôle d’accès contient une entrée du contrôle d’accès spécifique.</summary>
        <returns>
          <see langword="true" /> si la liste de contrôle d’accès contient l’entrée du contrôle d’accès ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Messaging.AccessControlEntry[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Messaging.AccessControlEntry[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As AccessControlEntry(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Messaging::AccessControlEntry ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Messaging.AccessControlEntry[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tableau de type <see cref="T:System.Messaging.AccessControlEntry" /> dans lequel les entrées de la liste de contrôle d’accès sont copiées. Ce tableau doit avoir une indexation de base zéro.</param>
        <param name="index">Index dans le tableau à partir duquel la copie des entrées de la liste de contrôle d’accès doit commencer.</param>
        <summary>Copie la liste de contrôle d’accès complète dans un tableau d’entrées du contrôle d’accès unidimensionnel compatible en commençant à l’index spécifié du tableau cible.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="array" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à zéro.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="index" /> est supérieur ou égal à la longueur du paramètre <paramref name="array" />.  
  
 - ou -  
  
 Le nombre d’éléments contenus dans la liste de contrôle d’accès source est supérieur à la quantité d’espace disponible à partir de <paramref name="index" /> jusqu’à la fin du tableau d’entrées du contrôle d’accès de destination.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> à trouver dans la liste de contrôle d’accès.</param>
        <summary>Détermine l’index spécifique d’une entrée du contrôle d’accès dans la liste de contrôle d’accès.</summary>
        <returns>Index de l’entrée si elle a été trouvée dans la liste ; sinon, -1</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Messaging::AccessControlEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro auquel l’entrée du contrôle d’accès doit être insérée.</param>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> à insérer dans la liste de contrôle d’accès.</param>
        <summary>Insère une entrée du contrôle d’accès dans la liste de contrôle d’accès à la position spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `index` paramètre est égal au nombre d’éléments dans la liste de contrôle d’accès, puis l’entrée est ajoutée à la fin. Sinon, les entrées après le point d’insertion descendent pour intégrer le nouvel élément dans la liste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> n’est pas un index valide dans cette liste de contrôle d’accès.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="entry" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> à supprimer de la liste de contrôle d’accès.</param>
        <summary>Supprime de la liste de contrôle d’accès la première occurrence d’une entrée du contrôle d’accès spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les entrées de contrôle d’accès qui suivent l’élément supprimé vers le haut pour occuper l’espace libéré.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="entry" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
  </Members>
</Type>