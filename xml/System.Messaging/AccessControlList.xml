<Type Name="AccessControlList" FullName="System.Messaging.AccessControlList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0bca5bd20c6ce0b031363adbe0aabe119f0d1c3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37647402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessControlList : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlList extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlList" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlList&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlList : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type AccessControlList = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains a list of access control entries, specifying access rights for one or more trustees.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Messaging.AccessControlList> classe pour spécifier plusieurs tiers de confiance et droits d’accès à ajouter avec un seul appel lors de la définition des autorisations. Construire votre liste de contrôle d’accès en ajoutant une entrée de contrôle d’accès pour chaque combinaison de droits d’accès et le tiers de confiance.  
  
 Un <xref:System.Messaging.AccessControlList> identifie les tiers de confiance qui sont autorisés ou refuser l’accès à un objet sécurisable. Lorsqu’un processus essaie d’accéder à un objet sécurisable, le système vérifie les entrées de contrôle d’accès dans la liste de contrôle d’accès de l’objet pour déterminer s’il faut autoriser l’accès. Si l’objet n’a pas d’une liste de contrôle d’accès, le système accorde un accès complet à tous les éléments. Si la liste de contrôle d’accès de l’objet ne possède aucune entrée, le système refuse toutes les tentatives d’accéder à l’objet.  
  
 Le système vérifie les entrées de contrôle d’accès dans l’ordre jusqu'à ce qu’il trouve un ou plusieurs acceptant tous les droits d’accès demandé, ou jusqu'à ce qu’un des droits d’accès demandés sont refusé.  
  
 Le système examine chaque <xref:System.Messaging.AccessControlEntry> dans l’ordre jusqu'à ce qu’un des événements suivants se produit :  
  
-   Refus d’accès <xref:System.Messaging.AccessControlEntry> refuse explicitement des droits d’accès demandé à un tiers de confiance répertoriés dans le jeton d’accès du thread.  
  
-   Un ou plusieurs autorisation d’accès <xref:System.Messaging.AccessControlEntry> éléments de confiance répertoriés dans le jeton d’accès du thread explicitement accorder les droits d’accès demandé.  
  
-   Tous les <xref:System.Messaging.AccessControlEntry> éléments ont été vérifiés et il existe toujours au moins un droit d’accès demandé qui n’a pas été accordé de manière explicite, dans ce cas, l’accès est refusé implicitement.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlList" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Messaging.AccessControlEntry -&gt; int" Usage="accessControlList.Add entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> to append to the end of the access control list.</param>
        <summary>Appends an access control entry to the access control list.</summary>
        <returns>The position into which the new access control entry was inserted.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entry As AccessControlEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Messaging.AccessControlEntry -&gt; bool" Usage="accessControlList.Contains entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list.</param>
        <summary>Determines whether the access control list contains a specific access control entry.</summary>
        <returns>
          <see langword="true" /> if the access control entry is found in the access control list; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Messaging.AccessControlEntry[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Messaging.AccessControlEntry[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As AccessControlEntry(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Messaging::AccessControlEntry ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Messaging.AccessControlEntry[] * int -&gt; unit" Usage="accessControlList.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Messaging.AccessControlEntry[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">An array of type <see cref="T:System.Messaging.AccessControlEntry" /> to which the access control list entries will be copied. The array must have zero-based indexing.</param>
        <param name="index">The index in the array at which to begin copying the access control list entries.</param>
        <summary>Copies the entire access control list to a compatible one-dimensional array of access control entries, starting at the specified index of the target array.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="index" /> parameter is greater than or equal to the length of the <paramref name="array" /> parameter.  -or-  The number of elements in the source access control list is greater than the available space from <paramref name="index" /> to the end of the destination array of access control entries.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Messaging.AccessControlEntry -&gt; int" Usage="accessControlList.IndexOf entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list.</param>
        <summary>Determines the specific index of an access control entry in the access control list.</summary>
        <returns>The index of the entry if it was found in the list; otherwise, -1</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Messaging.AccessControlEntry -&gt; unit" Usage="accessControlList.Insert (index, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which the access control entry should be inserted.</param>
        <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> to insert into the access control list.</param>
        <summary>Inserts an access control entry into the access control list at the specified position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `index` paramètre est égal au nombre d’éléments dans la liste de contrôle d’accès, puis l’entrée est ajoutée à la fin. Sinon, les entrées après le point d’insertion vers le bas pour prendre en compte le nouvel élément dans la liste.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is not a valid index in this access control list.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Messaging.AccessControlEntry -&gt; unit" Usage="accessControlList.Remove entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to remove from the access control list.</param>
        <summary>Removes the first occurrence of a specific access control entry from the access control list.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les entrées de contrôle d’accès qui suivent l’élément supprimé vers le haut pour occuper l’espace libéré.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
  </Members>
</Type>