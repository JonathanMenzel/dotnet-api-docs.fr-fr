<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueEnumerator.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dd645dcfd97fa2036ad0395acbbbf3e86c2865e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd645dcfd97fa2036ad0395acbbbf3e86c2865e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Fournit un curseur avant uniquement pour énumérer les messages dans une file d’attente de messages.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> for dynamic interaction with queues on the network.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> pour l’interaction dynamique avec les files d’attente sur le réseau.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Methods available through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can return either a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">Les méthodes disponibles via le <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> classe peut retourner un <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> contenant une liste dynamique de files d’attente ou un tableau qui contient un instantané de la collection de file d’attente au moment où la méthode spécifiée a été appelée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">Il n’existe pas de classement défini des files d’attente dans un réseau.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">Ils ne sont pas ordonnés, par exemple, par ordinateur, étiquette, état public ou privé, ou d’autres critères accessibles par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> est un curseur, initialisé en tête d’une liste dynamique.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>You can move the cursor to the first queue of the enumeration by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Vous pouvez déplacer le curseur vers la première file d’attente de l’énumération en appelant <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>After the enumerator has been initialized, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to step forward through the remaining queues.</source>
          <target state="translated">Une fois que l’énumérateur a été initialisé, vous pouvez utiliser <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> pour parcourir les files d’attente restantes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>It is not possible to step backward with a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">Il n’est pas possible de revenir en arrière avec un <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">Un curseur autorise uniquement les déplacements vers l’avant dans l’énumération de la file d’attente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">Toutefois, vous pouvez appeler <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> pour réinitialiser l’énumération et placez le curseur au début de la liste.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">Étant donné que l’énumérateur est dynamique, une file d’attente qui est ajoutée après la position du curseur actuel est accessible par l’énumérateur.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">Une file d’attente qui est inséré avant la position du curseur en cours ne sont pas accessibles sans d’abord appeler Reset.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>The following code example iterates through all the message queues in the network, and examines the path for each queue.</source>
          <target state="translated">L’exemple de code suivant effectue une itération dans toutes les files d’attente de message dans le réseau et examine le chemin d’accès pour chaque file d’attente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Finally, it displays the number of public queues on the network.</source>
          <target state="translated">Enfin, il affiche le nombre de files d’attente publiques sur le réseau.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Libère les ressources associées à l'énumérateur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>The operating system retains an open handle, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">Le système d’exploitation retient un handle ouvert, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, vers l’énumérateur de la file d’attente pendant la durée de vie du curseur.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>When you finish working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to release the resources associated with the handle.</source>
          <target state="translated">Lorsque vous avez terminé de travailler avec l’énumérateur, appelez <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> pour libérer les ressources associées au handle.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Obtient l'objet <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> en cours de l'énumération.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">La file d'attente où le curseur se trouve.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>When the enumerator is created, it does not point to anything, so <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Lorsque l’énumérateur est créé, il ne pointe pas vers quoi que ce soit, par conséquent, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> n’est pas valide et lèvera une exception si elle est accessible.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">Vous devez appeler <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> pour positionner le curseur à la première file d’attente de l’énumération.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object.</source>
          <target state="translated">Appels multiples à <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> sans appels intermédiaires à <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> retournera le même <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> before the first call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</source>
          <target state="translated">Vous avez appelé <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> avant le premier appel à <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The cursor is located before the first queue in the enumeration.</source>
          <target state="translated">Le curseur est placé avant la première file d'attente de l'énumération.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> after a call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">Vous avez appelé <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> après qu'un appel à <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> a retourné False (indiquant que le curseur se trouve après la dernière file d'attente de l'énumération).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> autorise les ressources utilisées par le <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> à être réaffectés à d’autres fins.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> appelle la méthode protégée <ph id="ph2">`Dispose(Boolean)`</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">`Dispose`</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> references.</source>
          <target state="translated">Si le paramètre <ph id="ph1">`disposing`</ph> a la valeur <ph id="ph2">`true`</ph>, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>substitution de la méthode Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">Obtient le handle Message Queuing natif utilisé pour rechercher les files d'attente dans un réseau.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The native handle to the current queue.</source>
          <target state="translated">Le handle natif de la file d'attente en cours.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>When you no longer need this <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> instance, call <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to free this handle to the resource.</source>
          <target state="translated">Lorsque vous n’avez plus besoin cela <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> de l’instance, appelez <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> pour rendre ce handle à la ressource.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The handle does not exist.</source>
          <target state="translated">Le handle n'existe pas.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">Le code appelant n'a pas l'autorisation de navigation requise.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">Avance l'énumérateur jusqu'à la file d'attente suivante de l'énumération, s'il y en a une de disponible.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next queue; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'énumérateur a réussi à avancer jusqu'à la file d'attente suivante ; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, si l'énumérateur a atteint la fin de l'énumération.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> Retourne <ph id="ph2">`false`</ph> immédiatement s’il n’y aucune file d’attente associée à l’énumération.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> retournera <ph id="ph2">`true`</ph> jusqu'à ce qu’il a atteint la fin de la collection.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">Elle retournera ensuite <ph id="ph1">`false`</ph> pour chaque appel.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>However once <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> property will throw an exception.</source>
          <target state="translated">Cependant, après que <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> a retourné <ph id="ph2">`false`</ph>, l’accès à la <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> propriété lève une exception.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Upon creation, an enumerator is conceptually positioned before the first <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> of the enumeration, and the first call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> brings the first queue of the enumeration into view.</source>
          <target state="translated">Lors de la création, conceptuel un énumérateur est placé avant le premier <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> de l’énumération et le premier appel à <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> affiche la première file d’attente de l’énumération dans la vue.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">Le code appelant n'a pas l'autorisation de navigation requise.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">Rétablit le curseur, de manière qu'il pointe vers le début de l'énumération.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Un énumérateur se déplace dans une direction avant uniquement.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">Utilisez cette méthode pour retourner au début de l’énumération des files d’attente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> positions the cursor at the first queue in the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> Positionne le curseur sur la première file d’attente dans la liste.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">Vous n’avez pas besoin d’appeler <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> après l’appel <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> pour avancer le curseur vers la première file d’attente de l’énumération.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Obtient l'objet <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> en cours de l'énumération.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">La file d'attente où le curseur se trouve.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>