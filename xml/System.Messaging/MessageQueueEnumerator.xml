<Type Name="MessageQueueEnumerator" FullName="System.Messaging.MessageQueueEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b7a2308828eebb55255004efdc87a3f4fddda86" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52600629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueEnumerator extends System.MarshalByRefObject implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueEnumerator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type MessageQueueEnumerator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="fae60-101">Fournit un curseur avant uniquement pour énumérer les messages dans une file d’attente de messages.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fae60-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-102">Utilisez <xref:System.Messaging.MessageQueueEnumerator> pour l’interaction dynamique avec les files d’attente sur le réseau.</span><span class="sxs-lookup"><span data-stu-id="fae60-102">Use <xref:System.Messaging.MessageQueueEnumerator> for dynamic interaction with queues on the network.</span></span> <span data-ttu-id="fae60-103">Méthodes disponibles via le <xref:System.Messaging.MessageQueue> classe peut retourner un <xref:System.Messaging.MessageQueueEnumerator> contenant une liste dynamique de files d’attente ou un tableau qui contient un instantané de la collection de file d’attente au moment où la méthode spécifiée a été appelée.</span><span class="sxs-lookup"><span data-stu-id="fae60-103">Methods available through the <xref:System.Messaging.MessageQueue> class can return either a <xref:System.Messaging.MessageQueueEnumerator> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</span></span>  
  
 <span data-ttu-id="fae60-104">Il n’existe pas de classement défini des files d’attente dans un réseau.</span><span class="sxs-lookup"><span data-stu-id="fae60-104">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="fae60-105">Ils ne sont pas ordonnés, par exemple, par ordinateur, étiquette, état public ou privé, ou d’autres critères accessibles par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="fae60-105">They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</span></span> <span data-ttu-id="fae60-106">Un <xref:System.Messaging.MessageQueueEnumerator> est un curseur, initialisé en tête d’une liste dynamique.</span><span class="sxs-lookup"><span data-stu-id="fae60-106">A <xref:System.Messaging.MessageQueueEnumerator> is a cursor, initialized to the head of a dynamic list.</span></span> <span data-ttu-id="fae60-107">Vous pouvez déplacer le curseur vers la première file d’attente de l’énumération en appelant <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="fae60-107">You can move the cursor to the first queue of the enumeration by calling <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="fae60-108">Après que l’énumérateur a été initialisé, vous pouvez utiliser <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> pour parcourir les files d’attente restantes.</span><span class="sxs-lookup"><span data-stu-id="fae60-108">After the enumerator has been initialized, you can use <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to step forward through the remaining queues.</span></span>  
  
 <span data-ttu-id="fae60-109">Il n’est pas possible de revenir en arrière avec un <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="fae60-109">It is not possible to step backward with a <xref:System.Messaging.MessageQueueEnumerator>.</span></span> <span data-ttu-id="fae60-110">Un curseur autorise uniquement les déplacements vers l’avant via l’énumération de la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="fae60-110">A cursor only allows forward movement through the queue enumeration.</span></span> <span data-ttu-id="fae60-111">Toutefois, vous pouvez appeler <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> pour réinitialiser l’énumération et placez le curseur au début de la liste.</span><span class="sxs-lookup"><span data-stu-id="fae60-111">However, you can call <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to reset the enumeration and put the cursor at the beginning of the list again.</span></span> <span data-ttu-id="fae60-112">Étant donné que l’énumérateur est dynamique, une file d’attente qui est ajouté au-delà de la position du curseur actuel est accessible par l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fae60-112">Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</span></span> <span data-ttu-id="fae60-113">Une file d’attente qui est inséré avant la position actuelle du curseur n’est pas accessible sans d’abord appeler Reset.</span><span class="sxs-lookup"><span data-stu-id="fae60-113">A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fae60-114">L’exemple de code suivant effectue une itération dans toutes les files d’attente de message dans le réseau et examine le chemin d’accès pour chaque file d’attente.</span><span class="sxs-lookup"><span data-stu-id="fae60-114">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="fae60-115">Enfin, il affiche le nombre de files d’attente publiques sur le réseau.</span><span class="sxs-lookup"><span data-stu-id="fae60-115">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageQueueEnumerator.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fae60-116">Libère les ressources associées à l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-116">Frees the resources associated with the enumerator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-117">Le système d’exploitation conserve un handle ouvert, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, vers l’énumérateur de la file d’attente pendant la durée de vie du curseur.</span><span class="sxs-lookup"><span data-stu-id="fae60-117">The operating system retains an open handle, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, to the queue enumerator during the lifetime of the cursor.</span></span> <span data-ttu-id="fae60-118">Lorsque vous avez terminé d’utiliser l’énumérateur, appelez <xref:System.Messaging.MessageQueueEnumerator.Close%2A> pour libérer les ressources associées au handle.</span><span class="sxs-lookup"><span data-stu-id="fae60-118">When you finish working with the enumerator, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to release the resources associated with the handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ Current { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueueEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fae60-119">Obtient l'objet <see cref="T:System.Messaging.MessageQueue" /> en cours de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-119">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fae60-120">La file d'attente où le curseur se trouve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-120">The queue at which the cursor is currently positioned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-121">Lorsque l’énumérateur est créé, il ne pointe pas vers n’importe quoi, donc <xref:System.Messaging.MessageQueueEnumerator.Current%2A> n’est pas valide et lève une exception si elle est accessible.</span><span class="sxs-lookup"><span data-stu-id="fae60-121">When the enumerator is created, it does not point to anything, so <xref:System.Messaging.MessageQueueEnumerator.Current%2A> is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="fae60-122">Vous devez appeler <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> pour positionner le curseur à la première file d’attente dans l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fae60-122">You must call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to position the cursor at the first queue in the enumeration.</span></span>  
  
 <span data-ttu-id="fae60-123">Appels multiples à <xref:System.Messaging.MessageQueueEnumerator.Current%2A> sans appels intermédiaires à <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retournera le même <xref:System.Messaging.MessageQueue> objet.</span><span class="sxs-lookup"><span data-stu-id="fae60-123">Multiple calls to <xref:System.Messaging.MessageQueueEnumerator.Current%2A> with no intervening calls to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return the same <xref:System.Messaging.MessageQueue> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fae60-124">Vous avez appelé <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> avant le premier appel à <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-124">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span>
          </span>
          <span data-ttu-id="fae60-125">Le curseur est placé avant la première file d'attente de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-125">The cursor is located before the first queue in the enumeration.</span>
          </span>
          <span data-ttu-id="fae60-126">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-126">-or-</span>
          </span>
          <span data-ttu-id="fae60-127">Vous avez appelé <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> après qu'un appel à <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> a retourné False (indiquant que le curseur se trouve après la dernière file d'attente de l'énumération).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-127">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration).</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fae60-128">Libère les ressources utilisées par le <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-128">Releases the resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="messageQueueEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fae60-129">Libère toutes les ressources utilisées par <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-129">Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-130">Appel <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> autorise les ressources utilisées par le <xref:System.Messaging.MessageQueueEnumerator> d’être réaffectées à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="fae60-130">Calling <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> allows the resources used by the <xref:System.Messaging.MessageQueueEnumerator> to be reallocated for other purposes.</span></span> <span data-ttu-id="fae60-131">Pour plus d’informations sur <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="fae60-131">For more information about <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="fae60-132">Nettoyage de ressources non managées</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-132">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="messageQueueEnumerator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="fae60-133">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-133">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fae60-134">Libère les ressources non managées utilisées par <see cref="T:System.Messaging.MessageQueueEnumerator" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-134">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-135">Cette méthode est appelée par le public <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fae60-135">This method is called by the public <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="fae60-136">`Dispose` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="fae60-136">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="fae60-137"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="fae60-137"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="fae60-138">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="fae60-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Messaging.MessageQueueEnumerator> references.</span></span> <span data-ttu-id="fae60-139">Cette méthode appelle la méthode `Dispose` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="fae60-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fae60-140">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fae60-140">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="fae60-141">Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fae60-141">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="fae60-142">Pour plus d’informations sur l’implémentation <see langword="Dispose" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="fae60-142">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="fae60-143">Pour plus d’informations sur <see langword="Dispose" /> et <see langword="Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="fae60-143">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">
          <span data-ttu-id="fae60-144">Implémentation d’une méthode Dispose</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-144">Implementing a Dispose method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="fae60-145">Nettoyage de ressources non managées</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-145">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MessageQueueEnumerator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="messageQueueEnumerator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fae60-146">Libère les ressources détenues par la file d'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-146">Releases the resources held by the queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="fae60-147">Cette méthode se substitue à <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="fae60-147">This method overrides <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="fae60-148">Code d’application ne doit pas appeler cette méthode ; la méthode Finalize d’un objet est automatiquement appelée lors du garbage collection, sauf si la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fae60-148">Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>

<span data-ttu-id="fae60-149">Pour plus d’informations, consultez [destructeurs et méthodes Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v=vs.100)), [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md), et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="fae60-149">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v=vs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocatorHandle">
      <MemberSignature Language="C#" Value="public IntPtr LocatorHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int LocatorHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocatorHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr LocatorHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.LocatorHandle : nativeint" Usage="System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fae60-150">Obtient le handle Message Queuing natif utilisé pour rechercher les files d'attente dans un réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-150">Gets the native Message Queuing handle used to locate queues in a network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fae60-151">Le handle natif de la file d'attente en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-151">The native handle to the current queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-152">Lorsque vous n’avez plus besoin ce <xref:System.Messaging.MessageQueueEnumerator> d’une instance, appelez <xref:System.Messaging.MessageQueueEnumerator.Close%2A> pour libérer ce handle à la ressource.</span><span class="sxs-lookup"><span data-stu-id="fae60-152">When you no longer need this <xref:System.Messaging.MessageQueueEnumerator> instance, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to free this handle to the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="fae60-153">Le handle n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-153">The handle does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fae60-154">Le code appelant n'a pas l'autorisation de navigation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-154">The calling code does not have browse permissions.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="messageQueueEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fae60-155">Avance l'énumérateur jusqu'à la file d'attente suivante de l'énumération, s'il y en a une de disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-155">Advances the enumerator to the next queue of the enumeration, if one is currently available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fae60-156">
            <see langword="true" /> si l'énumérateur a réussi à avancer jusqu'à la file d'attente suivante ; <see langword="false" />, si l'énumérateur a atteint la fin de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-156">
              <see langword="true" /> if the enumerator was successfully advanced to the next queue; <see langword="false" /> if the enumerator has reached the end of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-157"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> Retourne `false` immédiatement s’il n’existe aucune file d’attente associée à l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fae60-157"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> returns `false` immediately if there are no queues associated with the enumeration.</span></span>  
  
 <span data-ttu-id="fae60-158"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retournera `true` jusqu'à ce qu’il a atteint la fin de la collection.</span><span class="sxs-lookup"><span data-stu-id="fae60-158"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="fae60-159">Elle retournera ensuite `false` pour chaque appel.</span><span class="sxs-lookup"><span data-stu-id="fae60-159">It will then return `false` for each successive call.</span></span> <span data-ttu-id="fae60-160">Cependant, après que <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> a retourné `false`, l’accès à la <xref:System.Messaging.MessageQueueEnumerator.Current%2A> propriété lève une exception.</span><span class="sxs-lookup"><span data-stu-id="fae60-160">However once <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Messaging.MessageQueueEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="fae60-161">Lors de la création, conceptuel un énumérateur est placé avant le premier <xref:System.Messaging.MessageQueue> de l’énumération et le premier appel à <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> apporte la première file d’attente de l’énumération dans la vue.</span><span class="sxs-lookup"><span data-stu-id="fae60-161">Upon creation, an enumerator is conceptually positioned before the first <xref:System.Messaging.MessageQueue> of the enumeration, and the first call to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> brings the first queue of the enumeration into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fae60-162">Le code appelant n'a pas l'autorisation de navigation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-162">The calling code does not have browse permissions.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="messageQueueEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fae60-163">Rétablit le curseur, de manière qu'il pointe vers le début de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-163">Resets the cursor, so it points to the beginning of the enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fae60-164">Un énumérateur se déplace dans une direction avant uniquement.</span><span class="sxs-lookup"><span data-stu-id="fae60-164">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="fae60-165">Utilisez cette méthode pour retourner au début de l’énumération des files d’attente.</span><span class="sxs-lookup"><span data-stu-id="fae60-165">Use this method to return to the beginning of the enumeration of queues.</span></span>  
  
 <span data-ttu-id="fae60-166"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> Positionne le curseur sur la première file d’attente dans la liste.</span><span class="sxs-lookup"><span data-stu-id="fae60-166"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> positions the cursor at the first queue in the list.</span></span> <span data-ttu-id="fae60-167">Vous n’avez pas besoin d’appeler <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> après avoir appelé <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> pour avancer le curseur vers la première file d’attente dans l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fae60-167">You do not need to call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to move the cursor forward to the first queue in the enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fae60-168">Obtient l'objet <see cref="T:System.Messaging.MessageQueue" /> en cours de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-168">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fae60-169">La file d'attente où le curseur se trouve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fae60-169">The queue at which the cursor is currently positioned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>