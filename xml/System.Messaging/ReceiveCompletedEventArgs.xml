<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40fb7c4c36e8a9ddbae569f24bf33f51c4c52063" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37479101" /></Metadata><TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />. Lorsque votre opération de réception asynchrone appelle un gestionnaire d'événements, une instance de cette classe est passée au gestionnaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous utilisez la notification d’événement pour recevoir des messages de façon asynchrone à partir de la file d’attente, vous devez créer une méthode qui gère le traitement de messages. Votre code doit appeler <xref:System.Messaging.MessageQueue.BeginReceive%2A> pour commencer le traitement asynchrone. Lorsqu’un message est reçu, votre application est notifiée via la <xref:System.Messaging.MessageQueue.ReceiveCompleted> événement. Une instance de <xref:System.Messaging.ReceiveCompletedEventArgs> est passée au délégué d’événement qui appelle votre gestionnaire d’événements. Les données associées à la <xref:System.Messaging.MessageQueue.ReceiveCompleted> événement est contenu dans le délégué <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> paramètre.  
  
 Il existe deux façons pour fournir une notification de fin de l’événement : notification d’événement et les rappels. <xref:System.Messaging.ReceiveCompletedEventArgs> est utilisé uniquement avec la notification d’événement. Pour la comparaison des rappels et la notification d’événement d’informations, consultez « événements Visual Studio. Rappels » sur MSDN.  
  
 <xref:System.Messaging.ReceiveCompletedEventArgs> fournit l’accès au message qui a initié la fin de l’asynchrone opération de réception, via le <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> membre. Il s’agit d’un accès de substitution pour le message et se comporte beaucoup comme un appel à <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant crée un gestionnaire d’événements pour le <xref:System.Messaging.MessageQueue.ReceiveCompleted> événement et associe l’événement délégué à l’aide de la <xref:System.Messaging.ReceiveCompletedEventHandler>. Le Gestionnaire d’événements `MyReceiveCompleted`, reçoit un message d’une file d’attente et écrit son corps à l’écran.  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le résultat de l'opération asynchrone demandée.</summary>
        <value><see cref="T:System.IAsyncResult" /> qui contient les données associées à l'opération de réception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identifie les opérations asynchrones en cours ou terminées. La propriété contient des données qui permet de déterminer les opérations asynchrones potentielles pour s’exécuter, et quand il est passé au gestionnaire d’événements, permet <xref:System.Messaging.MessageQueue.EndReceive%2A> pour accéder au message associé à l’opération terminée.  
  
 Lorsque vous appelez <xref:System.Messaging.MessageQueue.BeginReceive%2A>, un <xref:System.IAsyncResult> est immédiatement retourné, même si un message, s’il en existe, n’a pas encore été récupéré, car l’opération n’est pas terminée. La <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> indique l’état de l’opération asynchrone. <xref:System.Messaging.MessageQueue.BeginReceive%2A> crée l’objet, qui est modifié au cours de l’opération jusqu'à ce que <xref:System.Messaging.MessageQueue.EndReceive%2A> a terminée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le message associé à l'opération de réception asynchrone.</summary>
        <value><see cref="T:System.Messaging.Message" /> qui représente le résultat final de l'opération de réception asynchrone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> propriété fournit un moyen de récupérer le message qui a initié la fin de l’asynchrone opération de réception.  
  
 <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> est appelée la première fois le <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> propriété est en lecture, il est donc pas nécessaire d’appeler <xref:System.Messaging.MessageQueue.EndReceive%2A> avant l’obtention de la valeur de cette propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> n'a pas pu être récupéré. Il est possible que le délai d'attente de l'opération asynchrone ait expiré.</exception>
      </Docs>
    </Member>
  </Members>
</Type>