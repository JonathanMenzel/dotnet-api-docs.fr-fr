<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="76f38-101">Sérialise ou désérialise les types de données primitifs ainsi que d’autres objets à destination ou en provenance du corps d’un message Message Queuing, à l’aide d’un format qui est compatible avec le composant ActiveX MSMQ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76f38-101">Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76f38-102">Le <xref:System.Messaging.ActiveXMessageFormatter> est compatible avec les messages envoyés à l’aide de composants COM Message Queuing, ce qui permet l’interopérabilité avec les applications qui utilisent le contrôle COM MSMQ.</span><span class="sxs-lookup"><span data-stu-id="76f38-102">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</span></span>  
  
 <span data-ttu-id="76f38-103">Le <xref:System.Messaging.ActiveXMessageFormatter> peut sérialiser la plupart des primitives, ainsi que les objets qui implémentent la `IPersistStream` OLE (interface).</span><span class="sxs-lookup"><span data-stu-id="76f38-103">The <xref:System.Messaging.ActiveXMessageFormatter> can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface.</span></span> <span data-ttu-id="76f38-104">Il peut désérialiser le même ensemble de primitives, mais requiert plus de travail lors de la désérialisation d’un objet COM (par exemple, un objet créé à l’aide de Visual Basic 6.0) qui implémente `IPersistStream`.</span><span class="sxs-lookup"><span data-stu-id="76f38-104">It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`.</span></span> <span data-ttu-id="76f38-105">L’objet à désérialiser doit être dans la mémoire par la première importation de l’objet dans une application .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="76f38-105">The object to deserialize must be in memory by first importing the object into a .NET Framework application.</span></span>  
  
 <span data-ttu-id="76f38-106">Lorsqu’une application envoie un message à la file d’attente à l’aide d’une instance de la <xref:System.Messaging.MessageQueue> (classe), le formateur sérialise l’objet dans un flux de données et les insère dans le corps du message.</span><span class="sxs-lookup"><span data-stu-id="76f38-106">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="76f38-107">Lors de la lecture à partir d’une file d’attente à l’aide un <xref:System.Messaging.MessageQueue>, le formateur désérialise les données du message dans le <xref:System.Messaging.Message.Body%2A> propriété d’un <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="76f38-107">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="76f38-108">Sérialisation ActiveX est très compacte, ce qui permet à l’aide de la <xref:System.Messaging.ActiveXMessageFormatter> et une méthode de sérialisation très rapide de contrôle COM MSMQ.</span><span class="sxs-lookup"><span data-stu-id="76f38-108">ActiveX serialization is very compact, which makes using the <xref:System.Messaging.ActiveXMessageFormatter> and MSMQ COM control a very fast method of serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76f38-109">Initialise une nouvelle instance de la classe <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-109">Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76f38-110">
            <see cref="T:System.Messaging.Message" /> à examiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-110">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76f38-111">Détermine si le formateur peut désérialiser le contenu du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-111">Determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76f38-112">
            <see langword="true" /> si le formateur <see cref="T:System.Messaging.ActiveXMessageFormatter" /> peut désérialiser le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-112">
              <see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76f38-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> Retourne `false` si le corps du message n’est pas une primitive que le contrôle ActiveX Message Queuing peut désérialiser ou s’il n’implémente pas le `IPersistStream` interface.</span><span class="sxs-lookup"><span data-stu-id="76f38-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76f38-114">Le paramètre <paramref name="message" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-114">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76f38-115">Crée une instance de la classe <see cref="T:System.Messaging.ActiveXMessageFormatter" /> qui est identique au <see cref="T:System.Messaging.ActiveXMessageFormatter" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-115">Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76f38-116">Objet dont les propriétés sont identiques à celles de <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-116">An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76f38-117">Cette méthode est utilisée par la <xref:System.Messaging.MessageQueue> classe afin de recevoir plusieurs messages en même temps (par exemple, si l’application reçoit de façon asynchrone).</span><span class="sxs-lookup"><span data-stu-id="76f38-117">This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</span></span> <span data-ttu-id="76f38-118">En règle générale, vous n’avez pas besoin d’appeler cette méthode dans votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="76f38-118">You typically do not need to call this method in your application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject">
          <span data-ttu-id="76f38-119">Objet OLE implémentant <see langword="IPersistStreamInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-119">An OLE object that implements <see langword="IPersistStreamInit" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76f38-120">Fournit un utilitaire pour permettre la sérialisation des objets COM qui implémentent <see langword="IPersistStream" /> et nécessitent l’appel à <see langword="IPersistStreamInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-120">Provides a utility to help serialize COM objects that implement <see langword="IPersistStream" /> and require <see langword="IPersistStreamInit" /> to be called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76f38-121">
            <see cref="T:System.Messaging.Message" />, au format du contrôle ActiveX MSMQ, à désérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-121">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76f38-122">Lit le contenu du message donné et crée un objet qui contient le message désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-122">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76f38-123">Message désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-123">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76f38-124">Si le corps du message représente un type primitif, le message <xref:System.Messaging.Message.BodyType%2A> propriété doit être un des types managés dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="76f38-124">If the body of the message represents a primitive type, the message's <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.</span></span>  
  
|<span data-ttu-id="76f38-125">Valeur BodyType</span><span class="sxs-lookup"><span data-stu-id="76f38-125">BodyType value</span></span>|<span data-ttu-id="76f38-126">Type managé</span><span class="sxs-lookup"><span data-stu-id="76f38-126">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="76f38-127">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="76f38-127">VT_LPSTR</span></span>|<span data-ttu-id="76f38-128"><xref:System.Char> tableau (désérialisé à l’aide du codage ASCII)</span><span class="sxs-lookup"><span data-stu-id="76f38-128"><xref:System.Char> array (deserialized using ASCII encoding)</span></span>|  
|<span data-ttu-id="76f38-129">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="76f38-129">VT_BSTR, VT_LPWSTR</span></span>|<span data-ttu-id="76f38-130"><xref:System.String> (désérialisé à l’aide du codage Unicode)</span><span class="sxs-lookup"><span data-stu-id="76f38-130"><xref:System.String> (deserialized using Unicode encoding)</span></span>|  
|<span data-ttu-id="76f38-131">VT_VECTOR &AMP;#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="76f38-131">VT_VECTOR &#124; VT_UI1</span></span>|<span data-ttu-id="76f38-132">Tableau <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="76f38-132"><xref:System.Byte> array</span></span>|  
|<span data-ttu-id="76f38-133">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="76f38-133">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="76f38-134">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="76f38-134">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="76f38-135">VT_CY</span><span class="sxs-lookup"><span data-stu-id="76f38-135">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="76f38-136">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="76f38-136">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="76f38-137">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="76f38-137">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="76f38-138">VT_I2</span><span class="sxs-lookup"><span data-stu-id="76f38-138">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="76f38-139">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="76f38-139">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="76f38-140">VT_I4</span><span class="sxs-lookup"><span data-stu-id="76f38-140">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="76f38-141">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="76f38-141">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="76f38-142">VT_I8</span><span class="sxs-lookup"><span data-stu-id="76f38-142">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="76f38-143">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="76f38-143">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="76f38-144">VT_R4</span><span class="sxs-lookup"><span data-stu-id="76f38-144">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="76f38-145">VT_R8</span><span class="sxs-lookup"><span data-stu-id="76f38-145">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="76f38-146">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="76f38-146">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="76f38-147">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="76f38-147">VT_STREAMED_OBJECT</span></span>|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76f38-148">La propriété <see cref="P:System.Messaging.Message.BodyType" /> du <paramref name="message" /> passé en tant que paramètre ne peut pas être mappée vers un type primitif et ne représente pas un objet diffusé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-148">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76f38-149">Le corps représente un objet stocké.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-149">The body represents a stored object.</span>
          </span>
          <span data-ttu-id="76f38-150">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" /> ne prend pas en charge la désérialisation des objets stockés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-150">The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76f38-151">Le paramètre <paramref name="message" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-151">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76f38-152">
            <see cref="T:System.Messaging.Message" /> dont la propriété <see cref="P:System.Messaging.Message.Body" /> contiendra l’objet sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-152">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="76f38-153">Objet à sérialiser dans le corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-153">The object to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76f38-154">Sérialise un objet dans le corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-154">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76f38-155">Le tableau suivant montre la relation entre les types managés et <xref:System.Messaging.Message.BodyType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="76f38-155">The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property.</span></span> <span data-ttu-id="76f38-156">L’objet que vous sérialisez doit être une de ces types managés ou implémenter OLE `IPersistStream` interface.</span><span class="sxs-lookup"><span data-stu-id="76f38-156">The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.</span></span>  
  
|<span data-ttu-id="76f38-157">Valeur BodyType</span><span class="sxs-lookup"><span data-stu-id="76f38-157">BodyType value</span></span>|<span data-ttu-id="76f38-158">Type managé</span><span class="sxs-lookup"><span data-stu-id="76f38-158">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="76f38-159">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="76f38-159">VT_LPSTR</span></span>|<xref:System.Char>|  
|<span data-ttu-id="76f38-160">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="76f38-160">VT_BSTR, VT_LPWSTR</span></span>|<xref:System.String>|  
|<span data-ttu-id="76f38-161">VT_VECTOR &AMP;#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="76f38-161">VT_VECTOR &#124; VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="76f38-162">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="76f38-162">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="76f38-163">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="76f38-163">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="76f38-164">VT_CY</span><span class="sxs-lookup"><span data-stu-id="76f38-164">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="76f38-165">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="76f38-165">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="76f38-166">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="76f38-166">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="76f38-167">VT_I2</span><span class="sxs-lookup"><span data-stu-id="76f38-167">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="76f38-168">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="76f38-168">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="76f38-169">VT_I4</span><span class="sxs-lookup"><span data-stu-id="76f38-169">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="76f38-170">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="76f38-170">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="76f38-171">VT_I8</span><span class="sxs-lookup"><span data-stu-id="76f38-171">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="76f38-172">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="76f38-172">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="76f38-173">VT_R4</span><span class="sxs-lookup"><span data-stu-id="76f38-173">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="76f38-174">VT_R8</span><span class="sxs-lookup"><span data-stu-id="76f38-174">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="76f38-175">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="76f38-175">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="76f38-176">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="76f38-176">VT_STREAMED_OBJECT</span></span>|<span data-ttu-id="76f38-177">`IPersistStream` (OLE) <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="76f38-177">`IPersistStream` (OLE) <xref:System.Object></span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76f38-178">L’objet à sérialiser n’est ni une primitive ni un objet diffusé qui implémente l’interface OLE <see langword="IPersistStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-178">The object to serialize is neither a primitive nor a streamed object that implements the OLE <see langword="IPersistStream" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76f38-179">Le paramètre <paramref name="message" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76f38-179">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>