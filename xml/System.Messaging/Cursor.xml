<Type Name="Cursor" FullName="System.Messaging.Cursor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3229898682b853b3e471f90feae68e1ac6922200" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30425563" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b4865-101">
        <see cref="T:System.Messaging.Cursor" /> est utilisé pour conserver un emplacement spécifique dans <see cref="T:System.Messaging.MessageQueue" /> lors de la lecture des messages de la file d'attente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4865-101">A <see cref="T:System.Messaging.Cursor" /> is used to maintain a specific location in a <see cref="T:System.Messaging.MessageQueue" /> when reading the queue's messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4865-102">Pour obtenir un curseur pour un <xref:System.Messaging.MessageQueue>, appelez le <xref:System.Messaging.MessageQueue.CreateCursor%2A> méthode pour cette file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b4865-102">To get a cursor for a <xref:System.Messaging.MessageQueue>, call the <xref:System.Messaging.MessageQueue.CreateCursor%2A> method for that queue.</span></span>  
  
 <span data-ttu-id="b4865-103">A <xref:System.Messaging.Cursor> est utilisé avec des méthodes telles que <xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> et <xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> lorsque vous devez lire les messages qui ne sont pas au début de la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b4865-103">A <xref:System.Messaging.Cursor> is used with such methods as <xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> and <xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> when you need to read messages that are not at the front of the queue.</span></span> <span data-ttu-id="b4865-104">Cela inclut la lecture des messages de façon synchrone ou asynchrone.</span><span class="sxs-lookup"><span data-stu-id="b4865-104">This includes reading messages synchronously or asynchronously.</span></span> <span data-ttu-id="b4865-105">Les curseurs n’avez pas besoin être utilisés pour lire uniquement le premier message dans une file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b4865-105">Cursors do not need to be used to read only the first message in a queue.</span></span>  
  
 <span data-ttu-id="b4865-106">Lors de la lecture des messages dans une transaction, Message Queuing ne restaure pas le déplacement du curseur si la transaction est abandonnée.</span><span class="sxs-lookup"><span data-stu-id="b4865-106">When reading messages within a transaction, Message Queuing does not roll back cursor movement if the transaction is aborted.</span></span> <span data-ttu-id="b4865-107">Par exemple, qu'il existe une file d’attente avec deux messages, A1 et A2.</span><span class="sxs-lookup"><span data-stu-id="b4865-107">For example, suppose there is a queue with two messages, A1 and A2.</span></span> <span data-ttu-id="b4865-108">Si vous supprimez le message A1 au cours d’une transaction, Message Queuing déplace le curseur sur le message A2.</span><span class="sxs-lookup"><span data-stu-id="b4865-108">If you remove message A1 while in a transaction, Message Queuing moves the cursor to message A2.</span></span> <span data-ttu-id="b4865-109">Toutefois, si la transaction est abandonnée pour une raison quelconque, message qu'a1 est inséré dans la file d’attente, mais le curseur reste pointé sur le message A2.</span><span class="sxs-lookup"><span data-stu-id="b4865-109">However, if the transaction is aborted for any reason, message A1 is inserted back into the queue but the cursor remains pointing at message A2.</span></span>  
  
 <span data-ttu-id="b4865-110">Pour fermer le curseur, appelez <xref:System.Messaging.Cursor.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b4865-110">To close the cursor, call <xref:System.Messaging.Cursor.Close%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4865-111">Ferme le curseur, ce qui permet à Message Queuing de libérer les ressources associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4865-111">Closes the cursor, allowing Message Queuing to release the associated resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4865-112">Libère toutes les ressources utilisées par <see cref="T:System.Messaging.Cursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4865-112">Releases all resources used by the <see cref="T:System.Messaging.Cursor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
  </Members>
</Type>