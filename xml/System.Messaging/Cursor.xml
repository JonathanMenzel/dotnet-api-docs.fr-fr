<Type Name="Cursor" FullName="System.Messaging.Cursor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3229898682b853b3e471f90feae68e1ac6922200" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30425563" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Messaging.Cursor" /> est utilisé pour conserver un emplacement spécifique dans <see cref="T:System.Messaging.MessageQueue" /> lors de la lecture des messages de la file d'attente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir un curseur pour un <xref:System.Messaging.MessageQueue>, appelez le <xref:System.Messaging.MessageQueue.CreateCursor%2A> méthode pour cette file d’attente.  
  
 A <xref:System.Messaging.Cursor> est utilisé avec des méthodes telles que <xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> et <xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> lorsque vous devez lire les messages qui ne sont pas au début de la file d’attente. Cela inclut la lecture des messages de façon synchrone ou asynchrone. Les curseurs n’avez pas besoin être utilisés pour lire uniquement le premier message dans une file d’attente.  
  
 Lors de la lecture des messages dans une transaction, Message Queuing ne restaure pas le déplacement du curseur si la transaction est abandonnée. Par exemple, qu'il existe une file d’attente avec deux messages, A1 et A2. Si vous supprimez le message A1 au cours d’une transaction, Message Queuing déplace le curseur sur le message A2. Toutefois, si la transaction est abandonnée pour une raison quelconque, message qu'a1 est inséré dans la file d’attente, mais le curseur reste pointé sur le message A2.  
  
 Pour fermer le curseur, appelez <xref:System.Messaging.Cursor.Close%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme le curseur, ce qui permet à Message Queuing de libérer les ressources associées.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par <see cref="T:System.Messaging.Cursor" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
  </Members>
</Type>