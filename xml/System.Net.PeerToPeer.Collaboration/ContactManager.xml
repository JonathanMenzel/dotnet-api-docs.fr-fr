<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContactManager.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3b5895c636a2c15423610a9f9978c4d8da7368c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3b5895c636a2c15423610a9f9978c4d8da7368c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>Represents a collection of <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> objects which persist in a Windows Address Book.</source>
          <target state="translated">Représente une collection d'objets <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> rendus persistants dans le carnet d'adresses Windows.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>This class has no public constructors, since a reference to it is returned by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration&gt;</ph> class.</source>
          <target state="translated">Cette classe n’a aucun constructeur public, car une référence à celui-ci est retournée par la <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>Address books that are associated with <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> management include those associated with the host peer and a remote peer.</source>
          <target state="translated">Adresse de la documentation qui est associée aux <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> administration incluent ceux associés à l’homologue hôte et un homologue distant.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>Either computer may collaborate with other peers; when a peer is local to the remote peer but not the host peer, it can be added to the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> of the host peer.</source>
          <target state="translated">Un ordinateur peut collaborer avec les autres homologues ; Lorsqu’un homologue est local pour l’homologue distant mais pas pour l’homologue hôte, il peut être ajouté à la <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> de l’homologue hôte.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>Certain operations on the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A&gt;</ph>, correlate to the associated operations being performed on the Windows Address book of the remote peer.</source>
          <target state="translated">Certaines opérations sur le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> class, telle que <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A&gt;</ph>, correspondent aux opérations associées en cours d’exécution sur le carnet d’adresses Windows de l’homologue distant.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>The host peer has access to this persistent storage for <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> information, which can be associated with the applications in which a peer intends to participate.</source>
          <target state="translated">L’homologue hôte a accès à ce stockage persistant pour <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> plus d’informations, qui peuvent être associés à des applications dans lesquelles un homologue a l’intention de participer.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>A <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerApplication&gt;</ph> can identify itself as a user of a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> persistent store on a computer.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerApplication&gt;</ph> peut s’identifier en tant qu’utilisateur d’un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> magasin persistant sur un ordinateur.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>The following example code illustrates how to enumerate a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph> and add it as a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> to the local <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</source>
          <target state="translated">L’exemple de code suivant illustre comment énumérer une <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph> et l’ajouter en tant qu’un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> local <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> instance to add to <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> à ajouter à <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> of the local peer.</source>
          <target state="translated">Ajoute le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> spécifié dans le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> de l’homologue local.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The following example code illustrates how to enumerate a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph> and add it as a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> to the local <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</source>
          <target state="translated">L’exemple de code suivant illustre comment énumérer une <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph> et l’ajouter en tant qu’un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> local <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="peerContact" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> spécifié par <ph id="ph2">&lt;paramref name="peerContact" /&gt;</ph> existe déjà.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source><ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The specified <ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> has been disposed.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> spécifié a été supprimé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="peerContact" /&gt;</ph> could not be reconstituted from its serialized XML format.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> spécifié par <ph id="ph2">&lt;paramref name="peerContact" /&gt;</ph> n’a pas pu être reconstitué à partir de son format XML sérialisé.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Unable to add the local peer to the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> instance being constructed.</source>
          <target state="translated">Impossible d’ajouter l’homologue local à l’instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> en cours de construction.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
          <source>Raised whenever a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /&gt;</ph> associated with a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> in the <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> has changed.</source>
          <target state="translated">Déclenché chaque fois qu'un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /&gt;</ph> associé à un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> dans le <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
          <source>This method only returns applications published by contacts of the calling peer.</source>
          <target state="translated">Cette méthode retourne uniquement les applications publiées par les contacts de l’homologue appelant.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
          <source>Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the remote peer.</source>
          <target state="translated">Avant que cet événement peut être déclenché, l’utilisateur actuel de l’homologue distant doit s’abonner aux événements de collaboration de l’homologue distant.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
          <source>Subscription is accomplished via the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">L’abonnement est effectué via le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
          <source>This event requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cet événement requiert un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
          <source>The calling object has been disposed.</source>
          <target state="translated">L'objet appelant a été supprimé.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> to associate with the new <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> à associer à la nouvelle instance <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> instance for the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> object.</source>
          <target state="translated">Crée une instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> pour l'objet <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> instance for the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph>.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> pour le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source><ph id="ph1">&lt;paramref name="peerNearMe" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerNearMe" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> object has been disposed.</source>
          <target state="translated">Cet objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>The contact manager of the remote peer passed in <ph id="ph1">&lt;paramref name="peerNearMe" /&gt;</ph> could not be reached, or the contact could not be read from it.</source>
          <target state="translated">Le gestionnaire de contact de l'homologue distant passé dans <ph id="ph1">&lt;paramref name="peerNearMe" /&gt;</ph> n'a pas pu être atteint, ou le contact n'a pu être lu à partir de ce gestionnaire.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> instance passed in <ph id="ph2">&lt;paramref name="peerNearMe" /&gt;</ph> has no endpoints set on it.</source>
          <target state="translated">Aucun point de terminaison n'est défini pour l'instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> passée dans <ph id="ph2">&lt;paramref name="peerNearMe" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> to associate with the new <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> à associer à la nouvelle instance <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>A user-defined <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains information about the <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> défini par l'utilisateur qui comporte des informations sur l'opération <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>It will be passed to the callback of the asynchronous operation for identification.</source>
          <target state="translated">Il sera passé au rappel de l’opération asynchrone pour l’identification.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>Creates a contact instance for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> object.</source>
          <target state="translated">Crée une instance de contact pour l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> already exists and is in use.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userToken" /&gt;</ph> existe déjà et est en cours d’utilisation.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source><ph id="ph1">&lt;paramref name="peerNearMe" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerNearMe" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> object has been disposed.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> instance has no endpoints set on it.</source>
          <target state="translated">L’instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /&gt;</ph> spécifiée ne possède aucun point de terminaison défini.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
          <source>Raised whenever a <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /&gt;</ph> method has completed.</source>
          <target state="translated">Déclenché chaque fois qu'une méthode <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
          <source>This event is raised when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A&gt;</ph> method has completed.</source>
          <target state="translated">Cet événement est déclenché lorsque la <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A&gt;</ph> méthode est terminée.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
          <source>It is also raised if the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> operation completes in error or is cancelled.</source>
          <target state="translated">Il est également déclenché si la <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> opération se termine avec une erreur ou est annulée.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
          <source>This event requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cet événement requiert un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
          <source>The calling object has been disposed.</source>
          <target state="translated">L'objet appelant a été supprimé.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.Collaboration.ContactManager">
          <source>Removes a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> from the <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> of the local peer.</source>
          <target state="translated">Supprime un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> du <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> de l'homologue local.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> à supprimer de <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> from the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> of the local peer.</source>
          <target state="translated">Supprime le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> spécifié dans le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> de l’homologue local.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The following code example illustrates how to delete a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> from the local <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</source>
          <target state="translated">L’exemple de code suivant montre comment supprimer un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> à partir de l’ordinateur local <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source><ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> to remove from the <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> à supprimer du <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> from the <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> of the local peer.</source>
          <target state="translated">Supprime le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> spécifié dans le <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> de l’homologue local.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>The following code example illustrates how to delete a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> from the local <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</source>
          <target state="translated">L’exemple de code suivant montre comment supprimer un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> à partir de l’ordinateur local <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> associated with <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> could not be found in the contact manager.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> est introuvable dans le gestionnaire de contacts.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>This object has had <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /&gt;</ph> previously called on it and cannot be used for future operations.</source>
          <target state="translated">Cet objet a été la cible d’un appel <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /&gt;</ph> et ne peut pas être utilisé pour les opérations futures.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
          <source>Unable to complete <ph id="ph1">&lt;see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /&gt;</ph> operation.</source>
          <target state="translated">Impossible de terminer l’opération <ph id="ph1">&lt;see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> to be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> à récupérer.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> object for the specified <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph>.</source>
          <target state="translated">Retourne l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> pour le <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> associated with the supplied <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> fourni.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source>This <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> object has been disposed.</source>
          <target state="translated">Cet objet <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source>Contact not found in <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</source>
          <target state="translated">Contact introuvable dans le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
          <source>Unable to obtain the contact for the supplied <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph>.</source>
          <target state="translated">Impossible d'obtenir le contact pour le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph>fourni.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /&gt;</ph> that contains all contacts within the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> of the remote peer.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /&gt;</ph> qui contient tous les contacts dans le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> de l'homologue distant.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /&gt;</ph> that contains all contacts within the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> of the remote peer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /&gt;</ph> qui contient tous les contacts dans le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> de l'homologue distant.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source>If the contact manager is empty, then a collection of size zero (0) is returned.</source>
          <target state="translated">Si le gestionnaire de contact est vide, une collection de taille zéro (0) est retournée.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source>The following code example illustrates how to retrieve a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection&gt;</ph> representing the contacts contained in the local <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</source>
          <target state="translated">L’exemple de code suivant montre comment récupérer un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection&gt;</ph> représentant les contacts contenus dans l’ordinateur local <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source>This <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> object has been disposed.</source>
          <target state="translated">Cet objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
          <source>An invalid value was returned when this method attempted to enumerate a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /&gt;</ph> in this peer contact collection.</source>
          <target state="translated">Une valeur non valide a été retournée lorsque cette méthode a essayé d'énumérer un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /&gt;</ph> dans cette collection du contact de l'homologue.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> representing the local peer.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> qui représente l'homologue local.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> instance representing the local peer.</source>
          <target state="translated">L'instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> qui représente l'homologue local.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
          <source>Unless specified, the default value for this property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Sauf spécification contraire, la valeur par défaut de cette propriété est <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
          <source>Using this property requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’utilisation de cette propriété requiert une <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
          <source>Raised whenever the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> associated with a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> in the <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> has changed.</source>
          <target state="translated">Déclenché chaque fois que le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /&gt;</ph> associé à un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> dans le <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
          <source>The associated callback provides a reference to the new <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A&gt;</ph>.</source>
          <target state="translated">Le rappel associé fournit une référence à la nouvelle <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
          <source>This event requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cet événement requiert un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
          <source>The calling object has been disposed.</source>
          <target state="translated">L'objet appelant a été supprimé.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
          <source>Raised whenever an object within a contact’s registered <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /&gt;</ph> objects has changed.</source>
          <target state="translated">Déclenché chaque fois qu'un objet figurant dans les objets <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /&gt;</ph> inscrits d'un contact a changé.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
          <source>Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the host peer.</source>
          <target state="translated">Avant que cet événement peut être déclenché, l’utilisateur actuel de l’homologue distant doit s’abonner aux événements de collaboration de l’homologue hôte.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
          <source>Subscription is accomplished via the PeerContact <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> methods.</source>
          <target state="translated">L’abonnement est effectué via le PeerContact <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
          <source>This event requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cet événement requiert un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /&gt;</ph> object has been disposed.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
          <source>Raised whenever the presence status of a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> has changed.</source>
          <target state="translated">Déclenché chaque fois que l'état de présence d'un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> dans le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
          <source>Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the host peer.</source>
          <target state="translated">Avant que cet événement peut être déclenché, l’utilisateur actuel de l’homologue distant doit s’abonner aux événements de collaboration de l’homologue hôte.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
          <source>Subscription is accomplished via the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">L’abonnement est effectué via le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
          <source>This event requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cet événement requiert un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> object has been disposed.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
          <source>Raised when the list of subscribed contacts changes.</source>
          <target state="translated">Déclenché lorsque la liste des contacts abonnés change.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
          <source>Since subscriptions are per user and not per process or per application domain, another application running on the host may also cause this event to be raised.</source>
          <target state="translated">Étant donné que les abonnements sont par utilisateur et non par processus ou par domaine d’application, une autre application en cours d’exécution sur l’ordinateur hôte peut également provoquer cet événement est déclenché.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
          <source>This event requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cet événement requiert un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
          <source>The object has been disposed.</source>
          <target state="translated">L'objet a été supprimé.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
          <source>When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /&gt;</ph>.</source>
          <target state="translated">Lorsque la valeur de cette propriété est définie, tous les événements non déclenchés suite à une opération asynchrone voient les gestionnaires d'événements associés rappelés sur le thread qui a créé le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /&gt;</ph> spécifique.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
          <source>Object that implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> interface and is used by instances of this type for event handler synchronization on the thread that created it.</source>
          <target state="translated">Objet qui implémente l'interface <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> et est utilisé par les instances de ce type pour la synchronisation du gestionnaire d'événements sur le thread qui l'a créé.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
          <source>The default set value for this property is <ph id="ph1">`null`</ph>, indicating that all event handlers are called on a system thread pool thread.</source>
          <target state="translated">La valeur définie par défaut pour cette propriété est <ph id="ph1">`null`</ph>, indiquant que tous les gestionnaires d’événements sont appelés sur un thread de pool de threads système.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
          <source>This property is typically set to a UI element such as a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> instance.</source>
          <target state="translated">Cette propriété est généralement définie pour un élément d’interface utilisateur comme un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
          <source>The calling object has been disposed.</source>
          <target state="translated">L'objet appelant a été supprimé.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> to be updated.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> à mettre à jour.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Updates the data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph>.</source>
          <target state="translated">Met à jour les données associées à <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
          <target state="translated">L’appel de cette méthode nécessite un <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> not found in <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> est introuvable dans <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source><ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="peerContact" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> object has been disposed.</source>
          <target state="translated">Cet objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
          <source>Unable to complete <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /&gt;</ph> operation.</source>
          <target state="translated">Impossible de terminer l’opération <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>