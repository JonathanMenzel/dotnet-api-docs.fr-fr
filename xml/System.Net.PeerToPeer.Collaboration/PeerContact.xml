<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85d13bdd660e65f89ace11b4a4de9542a9466d9e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48727094" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerContact = class&#xA;    inherit Peer&#xA;    interface IEquatable&lt;PeerContact&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un homologue pour lequel un utilisateur a extrait des informations détaillées.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contact représente un homologue approuvé. Un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objet doit être créé pour un homologue distant ou <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> pour un utilisateur à collaborer avec l’homologue distant lorsqu’il est en dehors de la portée « Voisinage immédiat ». Un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objet peut se trouver soit en tant qu’application en cours d’exécution sur un ordinateur distant, ou l’utilisateur d’un ordinateur distant. Une instance de cette classe peut être ajoutée à la <xref:System.Net.PeerToPeer.Collaboration.ContactManager> qui stocke les informations de contact de façon permanente.  
  
 Une invitation d’application à partir d’un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> est à la fois authentifiée et chiffrée.  La boîte de dialogue de l’interface utilisateur pour accepter ou rejeter une invitation d’un contact homologue indique également que l’inviteur est approuvé.  
  
 S’abonner à un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objet signifie qu’un homologue distant peut consulter ses applications inscrites, les objets et les informations de présence. Pour vous abonner à un <xref:System.Net.PeerToPeer.Collaboration.PeerContact>, l’appelant doit être connecté à l’infrastructure de collaboration pair via <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> ou connecté via l’interface utilisateur Windows.  Toutes les autres opérations ne nécessitent pas de connexion.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerContact : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="new System.Net.PeerToPeer.Collaboration.PeerContact (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="streamingContext">La destination de sérialisation associée au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Aucun constructeur public n’est défini pour cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une instance de cet objet peut être obtenue à partir de la <xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A> ou <xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A> méthodes.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet événement est déclenché chaque fois qu'une application associée à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été modifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le certificat X509 (clé publique) pour l'homologue identifié par cette instance de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Certificat X509 (clé publique) pour l'homologue identifié par cette instance de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. La valeur par défaut de cette propriété est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui représente le nom complet du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> qui représente le nom complet de ce <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nom d’affichage peut être utilisé pour différencier les contacts dans un <xref:System.Net.PeerToPeer.Collaboration.ContactManager> dans les instances où un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> peut avoir plusieurs adresses de messagerie, ou s’il existe plusieurs homologues portant le même nom d’affichage.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="peerContact.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non gérées et libère éventuellement les ressources gérées utilisées par l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> laisse une session de collaboration, certains objets ne sont plus nécessaires.  Si ce contact a collaboré avec n’importe quel autre point de terminaison non inscrit directement avec l’hôte homologue, et que l’hôte attend pour continuer à collaborer avec eux, l’hôte doit inscrire ces points de terminaison dans une application ou dans ses <xref:System.Net.PeerToPeer.Collaboration.ContactManager> avant suppression de ce <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmailAddress : System.Net.Mail.MailAddress with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'adresse de messagerie associée à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Objet <see cref="T:System.Net.Mail.MailAddress" /> qui contient l'adresse de messagerie associée à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Net.Mail.MailAddress> objet est utilisé pour représenter l’adresse de messagerie.  Le Gestionnaire de Contact permet de plusieurs adresses de messagerie au sein d’une seule instance. La valeur par défaut de cette propriété est `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> de cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> est équivalent au nom d'un autre objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourne `true` si spécifié <xref:System.Object> a les mêmes <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> que l’instance actuelle, sinon `false`. Cette méthode retourne également `false` si les paramètres transmis sont `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; bool" Usage="peerContact.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">Instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> dont l'égalité doit être testée.</param>
        <summary>Compare le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> à l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> spécifiée.</summary>
        <returns>Retourne la valeur <see langword="true" /> si l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> fournie a des données correspondantes, sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalisation ne survient pas sur les chaînes avant la comparaison.  Toute la normalisation doit être effectuée pendant ou avant de construire le <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objets.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerContact.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Compare l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> à l'objet spécifié.</param>
        <summary>Compare l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> à l'objet spécifié.</summary>
        <returns>Retourne la valeur <see langword="true" /> si l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> fournie a des données correspondantes, sinon <see langword="false" />. Cette méthode retourne également la valeur <see langword="false" /> si le paramètre passé est <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autres objets qui peuvent être comparés avec <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objets incluent les noms d’hôte homologue, noms d’homologue relatifs et les noms désencapsulés à partir d’autres <xref:System.Net.PeerToPeer> objets.  
  
 Normalisation ne survient pas sur les chaînes avant la comparaison.  Toute la normalisation doit être effectuée pendant ou avant de construire le <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objets.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">Premier <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> à comparer.</param>
        <param name="objB">Deuxième <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> à comparer.</param>
        <summary>Détermine si les instances <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> spécifiées sont considérées comme égales.</summary>
        <returns>Retourne la valeur <see langword="true" /> si les instances <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> fournies ont des données correspondantes, sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela peut être utilisée pour déterminer si un <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> est utilisé simultanément par deux homologues distants différents.  
  
 Autres objets qui peuvent être comparés avec <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objets incluent les noms d’hôte homologue, noms d’homologue relatifs et les noms désencapsulés à partir d’autres <xref:System.Net.PeerToPeer> objets.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberSignature Language="F#" Value="static member FromXml : string -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.FromXml peerContactXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">Encodage XML utilisé pour reconstruire le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Crée une instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> basée sur les données XML fournies.</summary>
        <returns>Chaîne qui représente le modèle d'objet XML pour l'encodage de l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne à passer le paramètre doit être obtenu à partir de <xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>.  
  
 Cette classe est destinée à être une implémentation légère d’un modèle d’objet XML simple pour une utilisation au sein de l’infrastructure de collaboration et non en tant que modèle objet XML global.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre ne peut pas être <see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />. 
- Le paramètre n’est pas un objet <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> valide.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère les objets <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> inscrits par l'homologue distant dans le cache local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberSignature Language="F#" Value="member this.GetApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les objets <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> inscrits par l'homologue distant dans le cache local.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> du cache local. Si les applications associées sont introuvables pour le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associé au <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> le <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> méthode doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour se connecter à l’infrastructure de collaboration pour cette méthode se termine avec succès, un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués pendant que l’appelant a été connecté précédemment.  
  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">- Le pair appelant n’est pas abonné à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
- Le pair appelant n’a pas encore appelé la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications applicationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">
          <see cref="T:System.Guid" /> de l'application homologue à récupérer.</param>
        <summary>Obtient la collection d'objets <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> avec le <see cref="T:System.Guid" /> spécifié à partir du cache local.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> du cache local. Si aucune application n'est trouvée avec l'<paramref name="applicationId" />spécifié, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associé au <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> le <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> méthode doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour se connecter à l’infrastructure de collaboration pour cette méthode se termine avec succès, un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués pendant que l’appelant a été connecté précédemment.  
  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">- Le pair appelant n’est pas abonné à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
- Le pair appelant n’a pas encore appelé la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Contient des informations sur le point de terminaison associé à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Obtient le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié. Si aucune application n'est associée au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />spécifié, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associé au <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> le <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> méthode doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour se connecter à l’infrastructure de collaboration pour cette méthode se termine avec succès, un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués pendant que l’appelant a été connecté précédemment.  
  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">- Le pair appelant n’est pas abonné à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
- Le pair appelant n’a pas encore appelé la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications (peerEndPoint, applicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Point de terminaison associé à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />.</param>
        <param name="applicationId">Contient des informations sur l'application associée à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Obtient le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié.</summary>
        <returns>Collection des objets <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> associés au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
Si aucune application identifiée par l'ID n'est trouvée pour le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, ou si l'ID du point de terminaison est <see langword="null" /> ou non valide, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associé au <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> le <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> méthode doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour se connecter à l’infrastructure de collaboration pour cette méthode se termine avec succès, un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués pendant que l’appelant a été connecté précédemment.  
  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">- Le pair appelant n’est pas abonné à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
- Le pair appelant n’a pas encore appelé la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerContact.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage pour une instance de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>Code de hachage d'un entier signé 32 bits.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette valeur de code de hachage est utilisée pour comparer par programme des instances de ce type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerContact.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contient les données sérialisées associées à l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="context">Contient la destination du flux sérialisé associé à l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un type dérivé doit appeler la <xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A> méthode du type de base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la collection des objets homologues d'un cache local.</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Point de terminaison à partir duquel récupérer les objets.</param>
        <summary>Obtient le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> inscrit par le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié et stocké dans le cache local.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié. Si aucune application n'est associée au point de terminaison, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associé au <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> le <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> méthode doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour se connecter à l’infrastructure de collaboration pour cette méthode se termine avec succès, un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués pendant que l’appelant a été connecté précédemment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">- Le pair appelant n’est pas abonné au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associé à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
- Le pair appelant n’a pas encore appelé la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />.</exception>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects (peerEndPoint, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Point de terminaison à partir duquel récupérer les objets.</param>
        <param name="objectId">
          <see cref="T:System.Guid" /> du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> à récupérer.</param>
        <summary>Obtient la collection des objets homologues inscrits par le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié et inscrits dans le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> identifié par le <see cref="T:System.Guid" />spécifié.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié. Si aucune application n'est associée au point de terminaison, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associé au <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> le <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> méthode doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour se connecter à l’infrastructure de collaboration pour cette méthode se termine avec succès, un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués pendant que l’appelant a été connecté précédemment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">- Le pair appelant n’est pas abonné à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
- Le pair appelant n’a pas encore appelé la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />.</exception>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie une invitation à participer à l'activité de collaboration pair à pair sponsorisée par l'expéditeur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="override this.Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envoie une invitation à participer à la collaboration pair à pair sponsorisée par l'expéditeur.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> de l'homologue ayant reçu l'invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> de l'application actuelle n'existe pas.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Point de terminaison devant recevoir l'invitation.</param>
        <summary>Envoie une invitation à un point de terminaison spécifique pour participer à la collaboration pair à pair avec l'expéditeur de l'invitation.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> du point de terminaison homologue ayant reçu l'invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />.  
  
- L’application en cours d’exécution n’est pas inscrite auprès de l’infrastructure de collaboration pair à pair.  
  Le 
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> spécifié par l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> n’est pas valide.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> pour laquelle l’invitation est envoyée.</param>
        <param name="message">Message à envoyer à l’homologue distant avec l’invitation à l’application.</param>
        <param name="invitationData">Objet blob de données défini par l’utilisateur à associer à l’invitation.  Sa taille ne doit pas dépasser 16 384 octets.</param>
        <summary>Envoie l'invitation spécifiée à participer au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifié sponsorisé par l'expéditeur.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> de l'homologue ayant reçu l'invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> de l’application actuelle n’existe pas ou est vide.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint * System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (peerEndPoint, applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Le point de terminaison ou l’homologue distant auquel l’invitation doit être envoyée.</param>
        <param name="applicationToInvite">L’application pour laquelle l’invitation est envoyée.</param>
        <param name="message">Un message à envoyer à l’homologue distant avec l’invitation à l’application.  Le message ne peut pas dépasser 255 caractères Unicode.</param>
        <param name="invitationData">Objet blob de données défini par l’utilisateur à associer à l’invitation.  Sa taille ne doit pas dépasser 16 384 octets.</param>
        <summary>Envoie l'invitation spécifiée au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> spécifié pour participer à l'application de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> spécifiée sponsorisée par l'expéditeur.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> de l'homologue ayant reçu l'invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le point de terminaison dans <paramref name="PeerEndPoint" /> ne peut pas être <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">-   L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> ne peut pas être vide.  
  
-   Les objets <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peuvent pas être <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> de l’application actuelle n’existe pas ou est vide.</exception>
        <block subset="none" type="usage">
          <para>L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lance une opération d’invitation asynchrone pour un point de terminaison afin de joindre une application <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> parrainée par l’expéditeur de l’invitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : obj -&gt; unit" Usage="peerContact.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Objet défini par l’utilisateur à transmettre au rappel de l’opération asynchrone. Également utilisé afin d’identifier l’opération asynchrone pour l’annulation. Ce paramètre doit être spécifié et être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Lance une opération d’invitation asynchrone pour un point de terminaison afin de joindre une application <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> parrainée par l’expéditeur de l’invitation. L’invitation est identifiée à l’aide de l’objet <see cref="T:System.Object" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> de l’application actuelle n’existe pas ou est vide.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> ne peut pas être <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Le point de terminaison ou l’homologue distant auquel l’invitation doit être envoyée.</param>
        <param name="userToken">Objet défini par l’utilisateur à transmettre au rappel de l’opération asynchrone. Également utilisé afin d’identifier l’opération asynchrone pour l’annulation. Ce paramètre doit être spécifié et être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Lance une opération d’invitation asynchrone pour le point de terminaison d’homologue spécifié pour joindre une application <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> parrainée par l’expéditeur de l’invitation. L’invitation est identifiée à l’aide de l’objet <see cref="T:System.Object" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> ne peut pas être <see langword="null." />  
  
- Le point de terminaison dans <paramref name="peerEndPoint" /> ne peut pas être <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">L’objet <paramref name="peerEndPoint" /> ne peut pas être <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le <see cref="T:System.Guid" /> de l’application actuelle n’existe pas ou est vide.</exception>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peerContact.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">L’application pour laquelle l’invitation est envoyée.</param>
        <param name="message">Un message à envoyer à l’homologue distant avec l’invitation à l’application.  Le message ne peut pas dépasser 255 caractères Unicode.</param>
        <param name="invitationData">Objet blob de données défini par l’utilisateur à associer à l’invitation.  Sa taille ne doit pas dépasser 16 384 octets.</param>
        <param name="userToken">Objet défini par l’utilisateur à passer au rappel de l’opération asynchrone. Également utilisé afin d’identifier l’opération asynchrone pour l’annulation. Ce paramètre doit être spécifié et être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Lance une opération d’invitation asynchrone pour le point de terminaison d’homologue spécifié pour joindre la collaboration <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifiée, parrainée par l’expéditeur de l’invitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> ne peut pas être <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Le <see cref="T:System.Guid" /> de l’application actuelle n’existe pas ou est vide.  
  
- La collection de point de terminaison est vide ou <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * string * byte[] * System.Net.PeerToPeer.Collaboration.PeerApplication * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, message, invitationData, applicationToInvite, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Le point de terminaison ou l’homologue distant auquel l’invitation doit être envoyée.</param>
        <param name="message">Message à envoyer à l’homologue distant avec l’invitation à l’application.  Le message ne peut pas dépasser 255 caractères Unicode.</param>
        <param name="invitationData">Objet blob de données défini par l’utilisateur à associer à l’invitation.  Sa taille ne doit pas dépasser 16 384 octets.</param>
        <param name="applicationToInvite">L’application pour laquelle l’invitation est envoyée.</param>
        <param name="userToken">Objet défini par l’utilisateur à transmettre au rappel de l’opération asynchrone. Également utilisé afin d’identifier l’opération asynchrone pour l’annulation. Ce paramètre doit être spécifié et être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Lance une opération d’invitation asynchrone pour le <paramref name="peerEndPoint" /> spécifié pour joindre la collaboration <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifiée, parrainée par l’expéditeur de l’invitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant n’est pas nécessaire pour se connecter à la <xref:System.Net.PeerToPeer.Collaboration> infrastructure pour cette méthode se termine avec succès. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’invité n’est pas identique à l’acceptation de l’invitation à collaborer. Si une invitation est envoyée à un homologue distant qui n’a pas installé l’application, l’invitation est automatiquement refusée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> ne peut pas être Null.  
  
- Le point de terminaison spécifié par <paramref name="peerEndPoint" /> ne peut pas être <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">Les objets <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ne peuvent pas être <see langword="null." />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> de l’application actuelle n’existe pas ou est vide.</exception>
        <block subset="none" type="usage">
          <para>Les surcharges supplémentaires sont définies sur le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe au lieu des sous-classes <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> et <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
L’appel de cette méthode nécessite un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Cet état est créé lorsque la session de collaboration pair à pair commence.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSubscribed : bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> actuel est abonné ou non à un point de terminaison. Ou bien, cette propriété obtient ou définit une valeur qui spécifie si l'hôte homologue actuel ou l'application d'hébergement est abonnée ou non à ce <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see langword="True" /> si ce <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> est abonné à ce point de terminaison, <see langword="false" /> si le contact ne s'est pas abonné ou a annulé son abonnement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans de nombreux cas, un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> n’est pas identique à un hôte homologue. Un hôte homologue a une instance dans le <xref:System.Net.PeerToPeer.Collaboration.ContactManager> de l’homologue distant, et la relation est qu’ils ont invités l’homologue à collaborer.  Un point de terminaison a une « Me » de l’instance dans son propre gestionnaire de contacts et l’hôte homologue, mais la relation n’est pas spécifiée.  
  
 Si l’hôte homologue se trouve dans le <xref:System.Net.PeerToPeer.Collaboration.ContactManager>, et le contact homologue choisit de ne pas <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>, ses <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType> peut avoir la valeur bloqué, au lieu de supprimer son entrée à partir de l’hôte du Gestionnaire de contacts.  
  
 Il existe une relation plusieurs-à-plusieurs entre homologues locaux, homologues distants, hôtes homologues et abonnements.  Les abonnements sont par utilisateur, plutôt que par processus, par application ou par domaine. Par conséquent, les abonnements associés un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> constituent la liste des contacts auxquels il est abonné de l’objet et à partir de laquelle il attend des mises à jour.  Ces contacts ont soit mis à jour leur propre application, objet et les informations de présence, ou qu’ils ont mis à jour les informations concernant les contacts dans le <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
 Cette propriété retourne toujours `true` si l’objet est un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> qui représente l’ordinateur local ou « Me » contact, puisqu’un contact est toujours abonné à lui-même.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Nickname : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui représente le <paramref name="Nickname" /> du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> qui représente le surnom du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. La valeur par défaut de cette propriété est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un surnom peut être utilisé pour un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> au cas où il y a plusieurs homologues avec le même nom complet de l’objet.  Une session de collaboration peut également utiliser le surnom pour désigner des homologues distants utilisés communément dans les grands systèmes de collaboration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet événement est signalé chaque fois qu'un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> associé à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été modifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerContact.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> à transmettre aux délégués associés à l’événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />.</param>
        <summary>Déclenche l'événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifications de l’application se produisent lorsqu’une application est lancée, inscrite ou désinscrite de l’infrastructure de collaboration.  Elles se produisent également lorsque des homologues rejoint ou quitter une session de collaboration ou modifier les emplacements de point de terminaison de réseau.  Modifications d’étendue homologue peuvent également entraîner une modification dans une application.  
  
 Les classes qui héritent de cette classe peuvent substituer cette méthode pour effectuer des tâches supplémentaires lorsque l’événement se produit.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Dans une classe dérivée, veillez à appeler l’implémentation de classe de base de cette méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit&#xA;override this.OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit" Usage="peerContact.OnObjectChanged objChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">Type de modification d’objet spécifié par <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
        <summary>Déclenche l’événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> complet lorsqu’un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> est ajouté, mis à jour ou supprimé par un homologue distant.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit&#xA;override this.OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit" Usage="peerContact.OnPresenceChanged presenceChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> à transmettre aux délégués associés à l’événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />.</param>
        <summary>Déclenche l'événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> lorsque <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> d’un homologue a été modifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifications de présence se produisent lorsqu’un homologue se déconnecte d’une application, une application est inscrite ou désinscrite de l’infrastructure de collaboration, ou un homologue annule son abonnement à un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> ou <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSubscribeCompleted : System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs -&gt; unit" Usage="peerContact.OnSubscribeCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> ou <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> associé à l’événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />.</param>
        <summary>Déclenche l'événement <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui héritent de cette classe peuvent substituer cette méthode pour effectuer les autres tâches lorsque la <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> événement se produit.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Une classe dérivée doit appeler l’implémentation de classe de base de cette méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'<see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associée à cette <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Collection <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associée à ce <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. La valeur par défaut de cette propriété est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> est un homologue local, un homologue distant ou pair hôte pour le contact homologue représenté par cette instance n’est pas pertinent pour la présence de la <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> dans le point de terminaison <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> ou <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation correcte de la <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A> propriété :  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Net.PeerToPeer.PeerName" /> associé à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> qui représente le <see cref="T:System.Net.PeerToPeer.PeerName" /> du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucun deux contacts dans le carnet d’adresses ne peuvent avoir le même <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet événement est déclenché chaque fois que le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a modifié son état de présence.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : unit -&gt; unit&#xA;override this.Subscribe : unit -&gt; unit" Usage="peerContact.Subscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abonne l’homologue appelant à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, et par conséquent, l’homologue recevra les événements <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> futurs associés à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> mises à jour se produisent de façon asynchrone après le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthode a réussi. Par conséquent, il est possible pour un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> à ajouter à la collection d’un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> avant associé <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A> est fourni.  
  
 Pour surveiller ces modifications, il est recommandé que l’utilisateur doit s’abonner aux événements pertinents ; par exemple, <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L’homologue appelant n’est pas connecté au Voisinage immédiat.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />. L’échec peut être due à l’incapacité d’établir une connexion TCP avec l’homologue.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberSignature Language="F#" Value="member this.SubscribeAllowed : System.Net.PeerToPeer.Collaboration.SubscriptionType with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> est exposé aux événements de collaboration associés à l'homologue ou l'application propriétaire du <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> dans lequel cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> réside.</summary>
        <value>Valeur d'énumération <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> qui spécifie si ce <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> est exposé aux événements de collaboration qui appartiennent à l'hôte homologue ou l'application d'hébergement. Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette propriété <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed> signifie que l’homologue distant spécifié par ce <xref:System.Net.PeerToPeer.Collaboration.PeerContact> pouvez voir les applications inscrites, les objets et les informations de présence pour l’utilisateur ou d’une application qui détient le <xref:System.Net.PeerToPeer.Collaboration.ContactManager> dans lequel cet <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objet réside.  
  
 Cette propriété n’a aucun effet sur un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> instance qui représente l’ordinateur local ou « Me » contact, puisqu’un contact est toujours abonné à lui-même.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.  
  
a été supprimé.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member SubscribeAsync : obj -&gt; unit&#xA;override this.SubscribeAsync : obj -&gt; unit" Usage="peerContact.SubscribeAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <see cref="T:System.Object" /> défini par l’utilisateur qui comporte des informations sur l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />.</param>
        <summary>Abonne de façon asynchrone l’homologue appelant à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> ; par conséquent, l’homologue recevra les événements <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> futurs associés à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> événement est déclenché une fois cette opération terminée. Lorsque les activités de collaboration ne sont pas nécessaires pour être asynchrone, le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthode doit être utilisée à la place.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="UserToken" /> ne peut pas avoir la valeur <see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">L’homologue appelant n’est pas connecté au Voisinage immédiat.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Identificateur <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> en double.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberSignature Language="F#" Value="member this.SubscribeCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " Usage="member this.SubscribeCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Déclenché lorsqu'une opération d'abonnement est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque cet événement est déclenché, la propriété d’erreur sur le <xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs> objet doit être examiné pour déterminer si la <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A> est terminée avec succès.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contient les données sérialisées associées à l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="context">Contient la destination du flux sérialisé associé à l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et retourne les données nécessaires pour sérialiser l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerContact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une représentation <see cref="T:System.String" /> du <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> associé à <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>Représentation <see cref="T:System.String" /> de <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="peerContact.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sérialise le <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> en une chaîne XML pour le stockage persistant ou le transfert réseau.</summary>
        <returns>Encodage XML du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible de terminer l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit&#xA;override this.Unsubscribe : unit -&gt; unit" Usage="peerContact.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime un abonnement au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> ; par conséquent, l’homologue appelant ne reçoit plus les événements <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> associés au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’homologue appelant n’est pas abonné à la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> spécifié le résultat est une absence d’opération. Un homologue appelant peut vérifier s’il est abonné aux événements pour l’homologue identifié par cette instance avec le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A> propriété.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a été supprimé.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>