<Type Name="Peer" FullName="System.Net.PeerToPeer.Collaboration.Peer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4e20d43a40ab6d1db6a9146ab8251447819a841" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51919243" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Peer : IDisposable, IEquatable&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Peer extends System.Object implements class System.IDisposable, class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.Peer&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.Peer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Peer&#xA;Implements IDisposable, IEquatable(Of Peer), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Peer abstract : IDisposable, IEquatable&lt;System::Net::PeerToPeer::Collaboration::Peer ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Peer = class&#xA;    interface IDisposable&#xA;    interface IEquatable&lt;Peer&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Cette classe représente un homologue distant.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objectif du résumé <xref:System.Net.PeerToPeer.Collaboration.Peer> classe consiste à fournir une définition de classe de base commune qui peut être partagée par les classes dérivées telles que <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> et <xref:System.Net.PeerToPeer.Collaboration.PeerContact>. Elle ne peut pas être directement construite, dans la mesure où elle est abstraite. Les développeurs doivent utiliser les sous-classes PeerNearMe ou PeerContact à la place.  
  
 Contact, homologue, homologue distant, <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>, et <xref:System.Net.PeerToPeer.Collaboration.PeerContact> sont synonymes, selon le contexte.  
  
 « Appel homologue » et « homologue distant » sont généralement synonymes.  Homologue appelant ne fait pas référence à l’application qui appelle une méthode donnée.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=94462">Gestion et déclenchement d'événements</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92916">Référence des API de carnet d’adresses Windows</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92964">Gestionnaire de contacts Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Peer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.Peer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.Peer" Usage="new System.Net.PeerToPeer.Collaboration.Peer (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Référence à l’objet qui contient les données nécessaires pour désérialiser cette instance.</param>
        <param name="streamingContext">Le contexte qui fournit les moyens de désérialiser les données. On l’appelle aussi source des données sérialisées.</param>
        <summary>Initialise une nouvelle instance du type <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourne un type <xref:System.Net.PeerToPeer.Collaboration.Peer> objet, sous-classé sur <xref:System.Net.PeerToPeer.Collaboration.PeerContact> ou <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>. Le PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> ou le PeerNearMe <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> contiennent des références uniques au nom du nouvel objet homologue.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libère les ressources utilisées par l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par l'objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Défini à <see langword="true" /> pour libérer à la fois les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non gérées utilisées par l’objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> et libère éventuellement les ressources gérées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.Peer other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Peer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::Peer ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.Peer -&gt; bool" Usage="peer.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.Peer" />
      </Parameters>
      <Docs>
        <param name="other">Instance de <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> à comparer à cette instance.</param>
        <summary>Effectue une comparaison sensible à la casse du <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> actuel et de l'homologue spécifié.</summary>
        <returns>Retourne la valeur <see langword="true" /> si l'instance <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> fournie a le même <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" /> que cette instance d'homologue, sinon <see langword="false" />. Cette méthode retourne également la valeur <see langword="false" /> si le paramètre homologue est <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deux homologues sont considérées comme égales si elles ont la même collection de point de terminaison, indépendamment des valeurs dans leurs <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> propriétés. Scénarios d’utilisation n’impliquent pas cette classe directement, mais plutôt dérivé <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> ou <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classes.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peer.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
        <param name="context">Destination de cette sérialisation.</param>
        <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser la cible <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la collection des objets de donnée inscrits par l'homologue d'un cache local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 Si aucun objet n’est trouvé pour le point de terminaison, une collection de taille zéro (0) est retournée.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects();" />
      <MemberSignature Language="F#" Value="member this.GetObjects : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peer.GetObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la collection des objets de données d'un cache local.</summary>
        <returns>Collection <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> pour l'homologue ou le point de terminaison spécifié par cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 Si la session de collaboration pair à pair n’a pas été instanciée avec un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>, cette méthode ne peut pas accéder aux objets sur l’ordinateur local.  Il en est de même les applications inscrites dans la session de collaboration.  
  
 La collection d’objets homologues se compose d’application, objet de données et informations de présence pour l’homologue ou le point de terminaison spécifié par cette instance. Si aucun objet n’est trouvé pour le point de terminaison, une collection de taille zéro (0) est retournée. Si l’homologue appelant est abonné à ce point de terminaison, le cache est automatiquement mis à jour ; sinon <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour être signé à l’infrastructure de collaboration pour cette méthode se termine avec succès.  Un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués lors de l’appelant a été connecté avant d’appeler cette méthode.  
  
 Remarque : Les surcharges supplémentaires sont définies sur le <xref:System.Net.PeerToPeer.Collaboration.Peer> classe au lieu des sous-classes <xref:System.Net.PeerToPeer.Collaboration.PeerContact> et <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'appelant n'est pas abonné au point de terminaison ou n'a pas encore appelé <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">La méthode ne peut pas se terminer en raison d'une erreur dans l'infrastructure de collaboration pair à pair sous-jacente.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjects (objectId As Guid) As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(Guid objectId);" />
      <MemberSignature Language="F#" Value="member this.GetObjects : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peer.GetObjects objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="objectId">
          <see cref="T:System.Guid" /> de l'objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> à extraire de la collection</param>
        <summary>Obtient l'objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> associé au <see cref="T:System.Guid" /> fourni à partir du <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />.</summary>
        <returns>Objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> associé au <see cref="T:System.Guid" /> fourni. Si un objet est introuvable, une collection de taille zéro (0) est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette fonctionnalité est exposée uniquement sur la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe. Cette fonctionnalité n’est pas exposée sur tout autre type d’homologue pour des raisons de sécurité.  
  
 La collection d’objets homologues se compose d’application, objet de données et informations de présence pour l’homologue ou le point de terminaison spécifié par cette instance. Si aucun objet n’est trouvé pour le point de terminaison, une collection de taille zéro (0) est retournée. Lors de l’homologue appelant est abonné à ce point de terminaison, le cache est automatiquement mis à jour ; sinon <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> doit être appelée avant d’appeler cette méthode.  
  
 L’appelant n’est pas requis pour être signé à l’infrastructure de collaboration pour cette méthode se termine avec succès.  Un appel réussi à <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou l’un de le <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> méthodes doivent avoir été effectués lors de l’appelant a été connecté avant d’appeler cette méthode. L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration commence.  
  
 Remarque : Les surcharges supplémentaires sont définies sur le <xref:System.Net.PeerToPeer.Collaboration.Peer> classe au lieu des classes dérivées <xref:System.Net.PeerToPeer.Collaboration.PeerContact> et <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'ID d'objet est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">L'appelant n'est pas abonné au <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ou n'a pas encore appelé <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Une erreur s'est produite lors de l'obtention des informations d'objet de l'homologue.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Guid" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPresenceInfo">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ GetPresenceInfo(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetPresenceInfo : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" Usage="peer.GetPresenceInfo peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> pour lequel récupérer les informations de présence.</param>
        <summary>Obtient les informations de présence disponibles pour un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
        <returns>Retourne un objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> qui contient les informations de présence pour un point de terminaison disponible, le cas échéant ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informations de présence incluent des descripteurs d’état, en ligne et hors connexion absent.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peerEndPoint" /> ne contient pas un point de terminaison valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerEndPoint" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Cet objet a été supprimé et ne peut pas être utilisé dans les opérations d'homologue actuelles.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Une erreur s'est produite lors de l'extraction des informations de présence de l'homologue.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie une invitation à un <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> pour démarrer un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifique.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="abstract member Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peer.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envoie une invitation à un <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> pour démarrer un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifique.</summary>
        <returns>Un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> de l'homologue qui a reçu l'invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de Collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Une erreur s’est produite au cours du processus d’invitation.  
  
- L’application en cours d’exécution n’est pas inscrite auprès de l’infrastructure de collaboration pair à pair.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="abstract member Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peer.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> pour laquelle l’invitation est envoyée.</param>
        <param name="message">Message à envoyer à l’homologue distant avec l’invitation à l’application.  Le message ne peut pas dépasser 255 caractères Unicode.</param>
        <param name="invitationData">Objet blob de données défini par l’utilisateur à associer à l’invitation.  Sa taille ne doit pas dépasser 16 384 octets.</param>
        <summary>Envoie une invitation à un <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> pour démarrer un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifique.</summary>
        <returns>Un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> de l'homologue qui a reçu l'invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'application n'est pas inscrite pour la collaboration.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="invitationData" /> est supérieur à 16 384 octets.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Une erreur s’est produite au cours du processus d’invitation.  
  
- L’application en cours d’exécution n’est pas inscrite auprès de l’infrastructure de collaboration pair à pair.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lance une opération d’invitation asynchrone qui envoie une invitation à <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> pour lancer un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifique.</summary>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public abstract void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member InviteAsync : obj -&gt; unit" Usage="peer.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Objet défini par l’utilisateur à passer au rappel de l’opération asynchrone pour l’identification. Ce paramètre obligatoire doit être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Lance une opération d’invitation asynchrone qui envoie une invitation à <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> pour lancer un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userToken" /> a la valeur <see langword="null." />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Une erreur s’est produite au cours du processus d’invitation.  
  
- L’application en cours d’exécution n’est pas inscrite auprès de l’infrastructure de collaboration.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peer.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> pour laquelle l’invitation est envoyée.</param>
        <param name="message">Message à envoyer à l’homologue distant avec l’invitation à l’application. La taille maximale de ce message est de 255 caractères Unicode.</param>
        <param name="invitationData">Objet blob de données défini par l’utilisateur à associer à l’invitation.  Sa taille ne doit pas dépasser 16 384 octets.</param>
        <param name="userToken">Objet défini par l’utilisateur à passer au rappel de l’opération asynchrone pour l’identification. Ce paramètre obligatoire doit être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Lance une opération d’invitation asynchrone qui envoie une invitation à <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> pour lancer un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Cet état est créé lorsque la session de collaboration pair à pair commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L’application n’est pas inscrite auprès de l’infrastructure de collaboration.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userToken" /> a la valeur <see langword="null." />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="invitationData" /> est supérieur à 16 384 octets.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Une erreur s’est produite au cours du processus d’invitation.  
  
- L’application en cours d’exécution n’est pas inscrite auprès de l’infrastructure de collaboration.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsyncCancel">
      <MemberSignature Language="C#" Value="public void InviteAsyncCancel (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsyncCancel(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InviteAsyncCancel (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsyncCancel(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.InviteAsyncCancel : obj -&gt; unit" Usage="peer.InviteAsyncCancel userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Objet défini par l’utilisateur à passer au rappel de l’opération <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> pour l’identification. Ce paramètre obligatoire doit être unique pour toutes les opérations d’invitation asynchrones en cours.</param>
        <summary>Annule l’invitation envoyée avec la méthode <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de cette méthode garantit que le système cessera d’attendre un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> à partir de l’homologue associé à la demande InviteAsync.  
  
 Plusieurs invitations peuvent être en attente à un moment donné.  Si le <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel%2A> méthode est appelée lorsqu’une opération asynchrone est identifié par le `userToken` est pas dans l’existence, une exception est levée. Le `userToken` objet doit être fourni dans la mesure où il est utilisé pour suivre un appel asynchrone spécifique. Cet objet de fournie par l’application hôte est unique pour chaque demande d’invitation.  
  
 Lorsque cette méthode est utilisée, le <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> peut toujours être déclenché, mais la propriété Cancelled sur associé <xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> objet sera défini sur `true.`  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="userToken" /> ne peut pas avoir la valeur <see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">Une invitation asynchrone n’est pas en attente.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" />
      </Docs>
    </Member>
    <Member MemberName="InviteCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; InviteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; InviteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InviteCompleted As EventHandler(Of InviteCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::InviteCompletedEventArgs ^&gt; ^ InviteCompleted;" />
      <MemberSignature Language="F#" Value="member this.InviteCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; " Usage="member this.InviteCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Déclenché lorsque le processus d'invitation pour un homologue distant est terminé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Spécifie le résultat de l’opération d’invitation.  
  
 L’appel de cette méthode nécessite un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> a été supprimé.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsOnline">
      <MemberSignature Language="C#" Value="public bool IsOnline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnline" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnline : bool" Usage="System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> est actuellement "en ligne".</summary>
        <value>Retourne la valeur <see langword="true" /> si le <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> est en ligne au niveau d'un des points de terminaison qui lui sont associés ; sinon, <see langword="false" />.  
  
Sauf spécification contraire, la valeur par défaut de cette propriété est <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> a été supprimé.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInviteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInviteCompleted(class System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInviteCompleted (e As InviteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInviteCompleted(System::Net::PeerToPeer::Collaboration::InviteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInviteCompleted : System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs -&gt; unit&#xA;override this.OnInviteCompleted : System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs -&gt; unit" Usage="peer.OnInviteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> contenant les données d’événement à passer aux délégués associés à l’événement <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />.</param>
        <summary>Déclenche l'événement <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui héritent de cette classe peuvent substituer cette méthode pour effectuer les autres tâches lorsque la <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> événement est déclenché.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associé à l'objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <value>Objet <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un homologue distant est un intermédiaire pour un homologue de l’hôte, le <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> objets contenus dans <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> associer aux contacts locaux pour l’homologue distant.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> a été supprimé.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lorsque la valeur de cette propriété est définie, tous les événements non déclenchés suite à une opération asynchrone voient les gestionnaires d'événements associés rappelés sur le thread qui a créé le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> spécifique.</summary>
        <value>Objet qui implémente l'interface <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> et est utilisé par les instances de ce type pour la synchronisation du gestionnaire d'événements sur le thread qui l'a créé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur définie par défaut pour cette propriété est `null`, indiquant que tous les gestionnaires d’événements sont appelés sur un thread de pool de threads système.  
  
 Cette propriété est généralement définie pour un élément d’interface utilisateur comme un <xref:System.Windows.Forms.Form> instance.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet appelant a été supprimé.</exception>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
        <param name="context">La destination de la sérialisation.</param>
        <summary>Remplit une instance de classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l’instance <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> spécifiée. Un type dérivé doit appeler la méthode <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> de type de base.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.String" /> représentant le <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associé au <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <returns>
          <see cref="T:System.String" /> représentant la propriété <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
  </Members>
</Type>