<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AspNetWebSocket.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5437366316ce58bcfea56939a19c7db1f254780e9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">437366316ce58bcfea56939a19c7db1f254780e9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.WebSockets.AspNetWebSocket">
          <source>Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</source>
          <target state="translated">Représente une connexion full duplex en temps réel entre un serveur Web et un client dans une application ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.Abort">
          <source>Cancels any pending I/O operations on the <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object and sets the state of the object so that it cannot be used to start additional I/O operations.</source>
          <target state="translated">Annule toutes les opérations d'E/S en attente sur l'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> et définit l'état de l'objet afin qu'il ne puisse pas être utilisé pour lancer des opérations d'E/S supplémentaires.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.Abort">
          <source>After the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A&gt;</ph> method has been called, you can still access properties and methods that do not involve I/O operations.</source>
          <target state="translated">Après le <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A&gt;</ph> méthode a été appelée, vous pouvez toujours accéder des propriétés et méthodes qui n’impliquent pas les opérations d’e/s.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.Abort">
          <source>The object was previously disposed.</source>
          <target state="translated">L'objet était supprimé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The status code of the close operation.</source>
          <target state="translated">Code d'état de l'opération de fermeture.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The status message of the close operation.</source>
          <target state="translated">Message d'état de l'opération de fermeture.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The object that cancels a pending operation.</source>
          <target state="translated">Objet qui annule une opération en attente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Sends an asynchronous message to a client to close the connection.</source>
          <target state="translated">Envoie un message asynchrone à un client pour fermer la connexion.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</source>
          <target state="translated">Si le serveur initialise la demande de fermer la connexion, la méthode attend que le client réponde à la demande avant de retourner.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>A reference to the operation.</source>
          <target state="translated">Référence à une opération.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> methods for both client-initiated and server-initiated requests to close an <ph id="ph3">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> connection.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> méthodes pour les demandes à la fois initiées par le client et exécutée par le serveur fermer une <ph id="ph3">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> connexion.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</source>
          <target state="translated">Les deux méthodes gèrent les demandes initiées par le client de la même façon : une fois que le client envoie un message au serveur pour fermer la connexion, le serveur appelle l’une de ces méthodes et envoie un accusé de réception au client, et la méthode retourne.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>For server-initiated requests, the two methods work differently.</source>
          <target state="translated">Pour les demandes effectuées par le serveur, les deux méthodes fonctionnent différemment.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> method sends a message to the client to close the connection, waits for a response, and then returns.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> méthode envoie un message au client afin de fermer la connexion, attend une réponse, puis renvoie.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The server does not wait for any additional data sent by the client.</source>
          <target state="translated">Le serveur n’attend pas que toutes les données supplémentaires envoyées par le client.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> method sends a message to the client to close the connection and returns without waiting for a response.</source>
          <target state="translated">En revanche, le <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> méthode envoie un message au client afin de fermer la connexion et retourne sans attendre une réponse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>After the method returns, you can call the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A&gt;</ph> method and handle either additional data or the acknowledgment that the client sends.</source>
          <target state="translated">Une fois que la méthode est retournée, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A&gt;</ph> (méthode) et gèrent les données supplémentaires ou l’accusé de réception envoyé par le client.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object was previously disposed.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> était supprimé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object is in an aborted state.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> est dans un état abandonné.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Sending operations are unavailable.</source>
          <target state="translated">Les opérations d'envoi sont pas disponibles.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Receiving operations are unavailable.</source>
          <target state="translated">Les opérations de réception ne sont pas disponibles.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The status code of the close operation.</source>
          <target state="translated">Code d'état de l'opération de fermeture.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The status message of the close operation.</source>
          <target state="translated">Message d'état de l'opération de fermeture.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The object that cancels a pending operation.</source>
          <target state="translated">Objet qui annule une opération en attente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Sends an asynchronous message to a client to close the connection.</source>
          <target state="translated">Envoie un message asynchrone à un client pour fermer la connexion.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>If the server initiates the request to close the connection, the method returns without waiting for a response.</source>
          <target state="translated">Si le serveur initialise la demande de fermer la connexion, la méthode est retournée sans attendre une réponse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>A reference to the operation.</source>
          <target state="translated">Référence à une opération.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> methods for both client-initiated and server-initiated requests to close an <ph id="ph3">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> connection.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> méthodes pour les demandes à la fois initiées par le client et exécutée par le serveur fermer une <ph id="ph3">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> connexion.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</source>
          <target state="translated">Les deux méthodes gèrent les demandes initiées par le client de la même façon : une fois que le client envoie un message au serveur pour fermer la connexion, le serveur appelle l’une de ces méthodes et envoie un accusé de réception au client, et la méthode retourne.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>For server-initiated requests, the two methods work differently.</source>
          <target state="translated">Pour les demandes effectuées par le serveur, les deux méthodes fonctionnent différemment.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> method sends a message to the client to close the connection, waits for a response, and then returns.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A&gt;</ph> méthode envoie un message au client afin de fermer la connexion, attend une réponse, puis renvoie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The server does not wait for any additional data sent by the client.</source>
          <target state="translated">Le serveur n’attend pas que toutes les données supplémentaires envoyées par le client.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> method sends a message to the client to close the connection and returns without waiting for a response.</source>
          <target state="translated">En revanche, le <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A&gt;</ph> méthode envoie un message au client afin de fermer la connexion et retourne sans attendre une réponse.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>After the method returns, you can call the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A&gt;</ph> method and handle either additional data or the acknowledgment that the client sends.</source>
          <target state="translated">Une fois que la méthode est retournée, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A&gt;</ph> (méthode) et gèrent les données supplémentaires ou l’accusé de réception envoyé par le client.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The object was previously disposed.</source>
          <target state="translated">L'objet était supprimé.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object is in an aborted state.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> est dans un état abandonné.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Sending operations are unavailable.</source>
          <target state="translated">Les opérations d'envoi sont pas disponibles.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus">
          <source>Gets a status code that indicates why an <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object was closed.</source>
          <target state="translated">Obtient le code d'état qui indique pourquoi un objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus">
          <source>The status code.</source>
          <target state="translated">Code d'état.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus">
          <source>The object was previously disposed.</source>
          <target state="translated">L'objet était supprimé.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription">
          <source>Gets a status message that explains why an <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object was closed.</source>
          <target state="translated">Reçoit un message d'état qui explique pourquoi un objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription">
          <source>The status message.</source>
          <target state="translated">Message d'état.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription">
          <source>The object was previously disposed.</source>
          <target state="translated">L'objet était supprimé.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.Dispose">
          <source>Releases all resources used by an <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par un objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.WebSockets.AspNetWebSocket.Dispose">
          <source>ASP.NET automatically calls the <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> object to release any resources that remain after your code has finished executing.</source>
          <target state="translated">ASP.NET appelle automatiquement la <ph id="ph1">&lt;xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A&gt;</ph> méthode sur un <ph id="ph2">&lt;xref:System.Web.WebSockets.AspNetWebSocket&gt;</ph> objet à libérer toutes les ressources qui restent après la fin de votre code en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The array that contains the message data.</source>
          <target state="translated">Tableau qui contient les données de message.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The object that cancels a pending operation.</source>
          <target state="translated">Objet qui annule une opération en attente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Receives a single message fragment from a remote client.</source>
          <target state="translated">Reçoit un fragment de message unique d'un client distant.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>A reference to the task of receiving a message.</source>
          <target state="translated">Référence à la tâche qui consiste à recevoir un message.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object was previously disposed.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> était supprimé.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object is in an aborted state.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> est dans un état abandonné.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Receiving operations are unavailable.</source>
          <target state="translated">Les opérations de réception ne sont pas disponibles.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The array that contains the message data.</source>
          <target state="translated">Tableau qui contient les données de message.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The message type.</source>
          <target state="translated">Type de message.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that a fragment is the end of a complete message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour indiquer qu'un fragment constitue la fin d'un message complet ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The object that cancels a pending operation.</source>
          <target state="translated">Objet qui annule une opération en attente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Sends a single message fragment to a remote client.</source>
          <target state="translated">Envoie un fragment de message unique à un client distant.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>A reference to the task of sending a message.</source>
          <target state="translated">Référence à la tâche qui consiste à envoyer un message.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object is disposed.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> est déjà supprimé.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object is in an aborted state.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> est dans un état abandonné.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Sending operations are unavailable.</source>
          <target state="translated">Les opérations d'envoi sont pas disponibles.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.State">
          <source>Gets a value that indicates the open or closed state of an <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> object.</source>
          <target state="translated">Obtient une valeur qui indique l'état ouvert ou fermé d'un objet <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.WebSockets.AspNetWebSocket.State">
          <source>The current state.</source>
          <target state="translated">État actuel.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.State">
          <source>The object was previously disposed.</source>
          <target state="translated">L'objet était supprimé.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol">
          <source>Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph> connection.</source>
          <target state="translated">Obtient le nom d'un protocole spécifique à l'application qu'un client distant et un serveur peuvent utiliser pour échanger des données sur une connexion de <ph id="ph1">&lt;see cref="T:System.Web.WebSockets.AspNetWebSocket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol">
          <source>The name of the protocol.</source>
          <target state="translated">Nom du protocole.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol">
          <source>The object was previously disposed.</source>
          <target state="translated">L'objet était supprimé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>