<Type Name="WorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="18e10f582e30a53aa6a50d655c7528f9f41e2439" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36447200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowPersistenceService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowPersistenceService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowPersistenceService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="65e48-101">Classe de base abstraite à partir de laquelle tous les services de persistance sont dérivés.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65e48-101">The abstract base class from which all persistence services are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="65e48-102">Lorsque certaines conditions se produisent pendant que le workflow s'exécute, le moteur d'exécution de workflow rend persistantes les informations d'état relatives à l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-102">When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</span></span> <span data-ttu-id="65e48-103">Par exemple, la persistance peut se produire lorsqu'une transaction atomique se termine, que l'instance de workflow devient inactive, que l'hôte appelle la méthode <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> sur l'instance de workflow ou qu'une instance de workflow est terminée ou se termine.</span><span class="sxs-lookup"><span data-stu-id="65e48-103">Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on the workflow instance, or when a workflow instance is terminated or finishes.</span></span> <span data-ttu-id="65e48-104">Lorsque la sémantique du moteur d'exécution de workflow détermine que la persistance doit avoir lieu, le moteur d'exécution de workflow appelle les méthodes fournies par un service de persistance pour enregistrer les informations d'état relatives à l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-104">When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</span></span> <span data-ttu-id="65e48-105">De même, lorsque le moteur d'exécution de workflow doit restaurer une instance de workflow rendue persistante auparavant, il appelle les méthodes fournies par le service de persistance pour charger ces informations d'état.</span><span class="sxs-lookup"><span data-stu-id="65e48-105">Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</span></span> <span data-ttu-id="65e48-106">Le moteur d'exécution de workflow gère toute la sémantique ayant trait au moment de l'exécution de la persistance.</span><span class="sxs-lookup"><span data-stu-id="65e48-106">The workflow runtime engine handles all the semantics regarding when to perform persistence.</span></span> <span data-ttu-id="65e48-107">Le service de persistance gère l'enregistrement et le chargement des informations d'état du workflow vers ou à partir d'une banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-107">The persistence service handles actually saving and loading the workflow state information to or from a data store.</span></span>  
  
 <span data-ttu-id="65e48-108">Vous pouvez créer un service de persistance en dérivant une classe de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="65e48-108">You can create a persistence service by deriving a class from the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="65e48-109">Vous pouvez ajouter un service de persistance au moteur d'exécution de workflow en appelant la méthode <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> ou en effectuant une entrée appropriée dans le fichier de configuration de l'application.</span><span class="sxs-lookup"><span data-stu-id="65e48-109">You can add your persistence service to the workflow runtime engine by calling <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> or by making an appropriate entry in the application configuration file.</span></span> <span data-ttu-id="65e48-110">La classe <xref:System.Workflow.Runtime.WorkflowRuntime> doit contenir un seul service de persistance.</span><span class="sxs-lookup"><span data-stu-id="65e48-110">The <xref:System.Workflow.Runtime.WorkflowRuntime> should only contain one persistence service.</span></span> <span data-ttu-id="65e48-111">Windows Workflow Foundation fournit la classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, un service de persistance prédéfini, que vous pouvez utiliser tel quel ou développer.</span><span class="sxs-lookup"><span data-stu-id="65e48-111">Windows Workflow Foundation provides the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, an out-of-box persistence service, which you can use as is or extend.</span></span>  
  
 <span data-ttu-id="65e48-112">Le moteur d'exécution de workflow dispose d'une sémantique qui permet de verrouiller les informations d'état du workflow à utiliser dans les environnements où les services de persistance qui s'exécutent dans des processus différents peuvent avoir accès à une banque de données unique.</span><span class="sxs-lookup"><span data-stu-id="65e48-112">The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</span></span> <span data-ttu-id="65e48-113">La classe <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> fournit la capacité de prise en charge de ces fonctionnalités du moteur d'exécution de workflow en fournissant un paramètre à la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> qui spécifie si les informations d'état d'une instance de workflow doivent être déverrouillées dans la banque de données et en fournissant une méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> pour déverrouiller les informations d'état du workflow verrouillées précédemment.</span><span class="sxs-lookup"><span data-stu-id="65e48-113">The <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> to unlock previously locked workflow state information.</span></span> <span data-ttu-id="65e48-114">Dans un service de persistance qui implémente le verrouillage, un appel à la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> doit pouvoir verrouiller les informations d'état d'une instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-114">In a persistence service that implements locking, a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> should lock the state information for a workflow instance.</span></span>  
  
 <span data-ttu-id="65e48-115">Votre service de persistance doit lever une classe <xref:System.Workflow.Runtime.Hosting.PersistenceException> s'il ne peut pas enregistrer les informations d'état dans sa banque de données ni charger les informations d'état depuis sa banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-115">Your persistence service should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> if it fails to save state information to its data store or load state information from its data store.</span></span> <span data-ttu-id="65e48-116">Le moteur d'exécution de workflow prévoit ce comportement.</span><span class="sxs-lookup"><span data-stu-id="65e48-116">The workflow runtime engine expects this behavior.</span></span>  
  
 <span data-ttu-id="65e48-117">Un mécanisme de traitement par lots est fourni pour les services qui utilisent un magasin fiable pour enregistrer les informations d'état du workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-117">A batching mechanism is provided for services that use a durable store to save workflow state information.</span></span> <span data-ttu-id="65e48-118">Dans ces situations, il est souvent important de maintenir la cohérence entre le magasin fiable utilisé par le service de persistance et l'état interne du moteur d'exécution de workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-118">It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</span></span> <span data-ttu-id="65e48-119">Vous pouvez ajouter des fonctionnalités définies par l'interface <xref:System.Workflow.Runtime.IPendingWork> à votre service, puis participer au traitement par lots de la transaction de workflow fournie par la classe <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> en ajoutant des modifications à votre banque de données en tant qu'éléments de travail de la propriété <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="65e48-119">You can add functionality defined by the <xref:System.Workflow.Runtime.IPendingWork> interface to your service, and then participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> by adding changes to your data store as work items to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="65e48-120">Le magasin fiable lui-même doit implémenter l'interface <xref:System.Transactions.IEnlistmentNotification> afin que les informations de workflow ne deviennent pas incorrectement persistantes en cas de restauration d'une transaction.</span><span class="sxs-lookup"><span data-stu-id="65e48-120">The durable store itself should implement the <xref:System.Transactions.IEnlistmentNotification> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</span></span> <span data-ttu-id="65e48-121">Pour plus d'informations, consultez <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> ou <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span><span class="sxs-lookup"><span data-stu-id="65e48-121">For more information, see <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> or <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowPersistenceService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowPersistenceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65e48-122">Lors de l'implémentation dans une classe dérivée, initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-122">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65e48-123">L'exemple suivant illustre la création d'une instance de la classe `SqlWorkflowPersistenceService` (dérivée de `WorkflowPersistenceService`).</span><span class="sxs-lookup"><span data-stu-id="65e48-123">The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`).</span></span> <span data-ttu-id="65e48-124">Il provient de l'exemple du Kit de développement Nested Exception Handlers et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-124">This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</span></span>  <span data-ttu-id="65e48-125">Pour plus d’informations, consultez la [exemple de gestionnaires d’exceptions imbriqués](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span><span class="sxs-lookup"><span data-stu-id="65e48-125">For more information, see the [Nested Exception Handlers Sample](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int8[] GetDefaultSerializedForm(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Byte&gt; ^ GetDefaultSerializedForm(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetDefaultSerializedForm : System.Workflow.ComponentModel.Activity -&gt; byte[]" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="65e48-126">Classe <see cref="T:System.Workflow.ComponentModel.Activity" /> dont la forme sérialisée est demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-126">The <see cref="T:System.Workflow.ComponentModel.Activity" /> whose serialized form is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-127">Récupère la forme par défaut sérialisée de la classe <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-127">Retrieves the serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-128">Forme par défaut sérialisée de la classe <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-128">The serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsBlocked">
      <MemberSignature Language="C#" Value="protected internal static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool GetIsBlocked(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetIsBlocked (rootActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool GetIsBlocked(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetIsBlocked : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="65e48-129">Activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-129">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-130">Indique si l'activité donnée est bloquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-130">Indicates whether the given activity is blocked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-131">
            <see langword="true" /> si l'activité donnée est bloquée; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-131">
              <see langword="true" /> if the given activity is blocked; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendOrTerminateInfo">
      <MemberSignature Language="C#" Value="protected internal static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string GetSuspendOrTerminateInfo(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetSuspendOrTerminateInfo (rootActivity As Activity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::String ^ GetSuspendOrTerminateInfo(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetSuspendOrTerminateInfo : System.Workflow.ComponentModel.Activity -&gt; string" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="65e48-132">Activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-132">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-133">Récupère l'arrêt ou interrompt les informations de l'activité donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-133">Retrieves the termination or suspend information of the given activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-134">
            <see cref="T:System.String" /> qui contient l'arrêt ou interrompt les informations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-134">A <see cref="T:System.String" /> that contains the termination or suspend information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowStatus">
      <MemberSignature Language="C#" Value="protected internal static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig valuetype System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetWorkflowStatus (rootActivity As Activity) As WorkflowStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::Workflow::Runtime::WorkflowStatus GetWorkflowStatus(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowStatus : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.Runtime.WorkflowStatus" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="65e48-135">Activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-135">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-136">Récupère l'état du workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-136">Retrieves the status of the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-137">Valeur d'énumération <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> qui dénote l'état du workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-137">A <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> enumeration value that denotes the status of the workflow.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid scopeId, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadCompletedContextActivity (scopeId As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid scopeId, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="abstract member LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadCompletedContextActivity (scopeId, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="scopeId">
          <span data-ttu-id="65e48-138">
            <see cref="T:System.Guid" /> de l'objectif achevé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-138">The <see cref="T:System.Guid" /> of the completed scope.</span>
          </span>
        </param>
        <param name="outerActivity">
          <span data-ttu-id="65e48-139">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> qui représente l'activité qui englobe l'objectif achevé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-139">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the activity that encloses the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-140">En cas d'implémentation dans une classe dérivée, recharge l'objectif achevé spécifié en mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-140">When implemented in a derived class, loads the specified completed scope back into memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-141">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> qui représente l'objectif achevé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-141">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65e48-142">Le moteur d'exécution de workflow utilise <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> pour implémenter la compensation.</span><span class="sxs-lookup"><span data-stu-id="65e48-142">The workflow runtime engine uses <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> to implement compensation.</span></span> <span data-ttu-id="65e48-143">Vous devez restaurer une copie identique de l'objectif achevé.</span><span class="sxs-lookup"><span data-stu-id="65e48-143">You must restore an identical copy of the completed scope.</span></span> <span data-ttu-id="65e48-144">Pour ceci, vous devez restaurer une classe <xref:System.IO.Stream> valide de la représentation de l'objectif achevé dans la banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-144">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the completed scope in the data store.</span></span> <span data-ttu-id="65e48-145">Puis, vous devez passer la classe <xref:System.IO.Stream> à l'une des méthodes surchargées de la méthode <xref:System.Workflow.ComponentModel.Activity.Load%2A> pour exécuter la désérialisation de l'objectif.</span><span class="sxs-lookup"><span data-stu-id="65e48-145">Then you must pass this <xref:System.IO.Stream> to one of the overloaded methods of <xref:System.Workflow.ComponentModel.Activity.Load%2A> to perform deserialization of the scope.</span></span>  
  
 <span data-ttu-id="65e48-146">Si votre service de persistance ne peut pas charger l'objectif achevé à partir de sa banque de données, il doit lever une classe <xref:System.Workflow.Runtime.Hosting.PersistenceException> avec un message approprié.</span><span class="sxs-lookup"><span data-stu-id="65e48-146">If your persistence service cannot load the completed scope from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65e48-147">L'exemple suivant illustre une implémentation de la méthode `LoadCompletedContextActivity`.</span><span class="sxs-lookup"><span data-stu-id="65e48-147">The following example demonstrates an implementation of the `LoadCompletedContextActivity` method.</span></span> <span data-ttu-id="65e48-148">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-148">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-149">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-149">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadWorkflowInstanceState (instanceId As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadWorkflowInstanceState instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="65e48-150">
            <see cref="T:System.Guid" /> de l'activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-150">The <see cref="T:System.Guid" /> of the root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-151">En cas d'implémentation dans une classe dérivée, recharge l'état spécifié de l'instance de workflow en mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-151">When implemented in a derived class, loads the specified state of the workflow instance back into memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-152">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> représentant l'activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-152">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65e48-153">Vous devez restaurer une copie identique de l'activité.</span><span class="sxs-lookup"><span data-stu-id="65e48-153">You must restore an identical copy of the activity.</span></span> <span data-ttu-id="65e48-154">Pour ceci, vous devez restaurer une classe <xref:System.IO.Stream> valide de la représentation de l'instance de workflow dans la banque de données ; puis, vous devez passer cette classe <xref:System.IO.Stream> à l'une des méthodes <xref:System.Workflow.ComponentModel.Activity.Load%2A> surchargées pour désérialiser l'état de l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-154">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the workflow instance in the data store; then you must pass this <xref:System.IO.Stream> to one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Load%2A> methods to deserialize the workflow instance state.</span></span> <span data-ttu-id="65e48-155">Si votre service de persistance ne peut pas charger l'état de l'instance de workflow à partir de sa banque de données, il doit lever une classe <xref:System.Workflow.Runtime.Hosting.PersistenceException> avec un message approprié.</span><span class="sxs-lookup"><span data-stu-id="65e48-155">If your persistence service cannot load the workflow instance state from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
 <span data-ttu-id="65e48-156">Le moteur d'exécution de workflow implémente la sémantique de verrouillage pour restreindre l'accès à l'état d'une instance de workflow enregistrée dans une banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-156">The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</span></span> <span data-ttu-id="65e48-157">Vous pouvez y accéder par les services de persistance qui s'exécutent dans plusieurs processus.</span><span class="sxs-lookup"><span data-stu-id="65e48-157">This can be accessed by persistence services that run in multiple processes.</span></span> <span data-ttu-id="65e48-158">La sémantique de verrouillage est conçue pour empêcher des services de persistance qui s'exécutent dans deux processus différents de charger en même temps la même instance de workflow en mémoire.</span><span class="sxs-lookup"><span data-stu-id="65e48-158">The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="65e48-159">Selon le type d'environnement que votre service de persistance peut prendre en charge, vous avez la possibilité d'utiliser ces fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="65e48-159">Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</span></span> <span data-ttu-id="65e48-160">Si vous choisissez de prendre en charge la sémantique de verrouillage d'exécution et si cet état de l'instance de workflow a été verrouillé auparavant par un autre processus, vous devez alors lever une classe <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="65e48-160">If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="65e48-161">Sinon, vous devez verrouiller l'accès à l'état de l'instance de workflow dans votre banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-161">Otherwise, you should lock access to the workflow instance state in your data store.</span></span> <span data-ttu-id="65e48-162">L'état de l'instance de workflow peut être déverrouillé par un appel à la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> ou à <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>, le paramètres ayant la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="65e48-162">The workflow instance state can be unlocked by a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> or a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> with the unlock parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65e48-163">L'exemple suivant illustre une implémentation de la méthode `LoadWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="65e48-163">The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method.</span></span> <span data-ttu-id="65e48-164">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-164">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-165">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-165">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#266](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#266)]
 [!code-vb[WF_Samples#266](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#266)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm(unsigned int8[] activityBytes, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RestoreFromDefaultSerializedForm (activityBytes As Byte(), outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Workflow::ComponentModel::Activity ^ RestoreFromDefaultSerializedForm(cli::array &lt;System::Byte&gt; ^ activityBytes, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member RestoreFromDefaultSerializedForm : byte[] * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm (activityBytes, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityBytes" Type="System.Byte[]" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activityBytes">
          <span data-ttu-id="65e48-166">Forme sérialisée de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-166">The serialized form of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <param name="outerActivity">
          <span data-ttu-id="65e48-167">Classe <see cref="T:System.Workflow.ComponentModel.Activity" />externe, contenant la classe <see cref="T:System.Workflow.ComponentModel.Activity" /> à restaurer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-167">The outer <see cref="T:System.Workflow.ComponentModel.Activity" />, containing the <see cref="T:System.Workflow.ComponentModel.Activity" /> to restore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-168">Restaure <see cref="T:System.Workflow.ComponentModel.Activity" /> depuis sa forme sérialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-168">Restores the <see cref="T:System.Workflow.ComponentModel.Activity" /> from its serialized form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-169">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> restauré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-169">The restored <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65e48-170">L'exemple suivant illustre une implémentation de la méthode `RestoreFromDefaultSerializedForm`.</span><span class="sxs-lookup"><span data-stu-id="65e48-170">The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method.</span></span> <span data-ttu-id="65e48-171">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-171">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-172">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-172">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.SaveCompletedContextActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="65e48-173">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> qui représente l'objectif achevé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-173">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-174">En cas d'implémentation dans une classe dérivée, enregistre l'objectif achevé spécifié dans une banque de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-174">When implemented in a derived class, saves the specified completed scope to a data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65e48-175">Le moteur d'exécution de workflow enregistre l'état des activités d'objectif achevé pour implémentez la compensation.</span><span class="sxs-lookup"><span data-stu-id="65e48-175">The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</span></span> <span data-ttu-id="65e48-176">Vous devez appeler l'une des méthodes <xref:System.Workflow.ComponentModel.Activity.Save%2A> surchargées pour sérialiser l'`activity` dans une classe <xref:System.IO.Stream> ; vous pouvez choisir ensuite de traiter la classe encore plus <xref:System.IO.Stream> avant de l'écrire dans votre banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-176">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `activity` into a <xref:System.IO.Stream>; you may then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="65e48-177">Toutefois, lorsque le moteur d'exécution de workflow appelle la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, vous devez restaurer une copie identique de l'activité.</span><span class="sxs-lookup"><span data-stu-id="65e48-177">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, you must restore an identical copy of the activity.</span></span>  
  
 <span data-ttu-id="65e48-178">Vous devez être en mesure d'associer l'objectif achevé à son instance de workflow englobante pour marquer l'objectif comme non requis dans votre banque de données lorsque l'instance de workflow finit ou est interrompue.</span><span class="sxs-lookup"><span data-stu-id="65e48-178">You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</span></span> <span data-ttu-id="65e48-179">Par conséquent, vous devez également enregistrer la structure <xref:System.Guid> de l'instance de workflow associée à l'objectif achevé ; vous pouvez l'obtenir de la propriété <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> de la classe <xref:System.Workflow.Runtime.WorkflowInstance> associée à l'`activity`.</span><span class="sxs-lookup"><span data-stu-id="65e48-179">Therefore, you should also save the <xref:System.Guid> of the workflow instance that is associated with the completed scope; this can be obtained from the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property of the <xref:System.Workflow.Runtime.WorkflowInstance> associated with `activity`.</span></span>  
  
 <span data-ttu-id="65e48-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> utilise le <xref:System.Guid> de l'objectif achevé en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="65e48-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> takes the <xref:System.Guid> of the completed scope as a parameter.</span></span> <span data-ttu-id="65e48-181">Par conséquent, vous devez également enregistrer la propriété <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> associée à l'`activity`.</span><span class="sxs-lookup"><span data-stu-id="65e48-181">Therefore, you must also save the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> property associated with `activity`.</span></span> <span data-ttu-id="65e48-182">Cette propriété peut être référencée via le champ <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> d'`activity`.</span><span class="sxs-lookup"><span data-stu-id="65e48-182">This property can be referenced through the <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> field of `activity`.</span></span>  
  
 <span data-ttu-id="65e48-183">Si vous implémentez un service de persistance qui utilise un magasin fiable, afin de maintenir la cohérence avec l’état interne du moteur d’exécution de workflow, vous devez participer au traitement par lots de la transaction du workflow pour différer l’écriture réelle dans votre magasin fiable jusqu’à un point de la validation du workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-183">If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="65e48-184">Pour participer au traitement par lots, ajoutez un élément de travail à la propriété <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> qui représente les modifications à apporter à la base de données et implémentez l'interface <xref:System.Workflow.Runtime.IPendingWork> dans votre service de persistance.</span><span class="sxs-lookup"><span data-stu-id="65e48-184">To participate in batching, add a work item to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property that represents the pending changes to the database, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
 <span data-ttu-id="65e48-185">Si vous ne pouvez pas enregistrer l'objectif achevé sur votre banque de données, vous devez lever une classe <xref:System.Workflow.Runtime.Hosting.PersistenceException> avec un message d'erreur approprié.</span><span class="sxs-lookup"><span data-stu-id="65e48-185">If you cannot save the completed scope to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65e48-186">L'exemple suivant illustre une implémentation de la méthode `SaveCompletedContextActivity`.</span><span class="sxs-lookup"><span data-stu-id="65e48-186">The following example demonstrates an implementation of the `SaveCompletedContextActivity` method.</span></span> <span data-ttu-id="65e48-187">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-187">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-188">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-188">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#268](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#268)]
 [!code-vb[WF_Samples#268](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#268)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="abstract member SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="workflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="65e48-189">Activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-189">The root activity of the workflow instance.</span>
          </span>
        </param>
        <param name="unlock">
          <span data-ttu-id="65e48-190">
            <see langword="true" /> si l'instance de workflow ne doit pas être verrouillée ; <see langword="false" /> si l'instance de workflow doit être verrouillée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-190">
              <see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-191">En cas d'implémentation dans une classe dérivée, enregistrer l'état de l'instance de workflow dans un magasin de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-191">When implemented in a derived class, saves the workflow instance state to a data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65e48-192">Vous devez appeler l'une des méthodes <xref:System.Workflow.ComponentModel.Activity.Save%2A> surchargées pour sérialiser `rootActivity` dans une classe <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="65e48-192">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `rootActivity` into a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="65e48-193">Vous pouvez ensuite choisir de traiter encore plus <xref:System.IO.Stream> avant de l'écrire dans votre banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-193">You can then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="65e48-194">Toutefois, lorsque le moteur d'exécution de workflow appelle la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, vous devez restaurer une copie identique de l'activité racine.</span><span class="sxs-lookup"><span data-stu-id="65e48-194">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, you must restore an identical copy of the root activity.</span></span> <span data-ttu-id="65e48-195">Si vous ne pouvez pas enregistrer l'état de l'instance de workflow dans votre banque de données, vous devez lever une classe <xref:System.Workflow.Runtime.Hosting.PersistenceException> avec un message d'erreur approprié.</span><span class="sxs-lookup"><span data-stu-id="65e48-195">If you cannot save the workflow instance state to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
 <span data-ttu-id="65e48-196">Le moteur d'exécution de workflow fournit la sémantique de verrouillage pour restreindre l'accès à l'état d'une instance de workflow enregistrée dans une banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-196">The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</span></span> <span data-ttu-id="65e48-197">Vous pouvez y accéder en exécutant les services de persistance sur plusieurs hôtes et en pointant sur la même banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-197">This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</span></span> <span data-ttu-id="65e48-198">La sémantique de verrouillage est conçue pour empêcher les services de persistance qui s'exécutent dans deux processus différents de charger en même temps la même instance de workflow en mémoire.</span><span class="sxs-lookup"><span data-stu-id="65e48-198">The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="65e48-199">Selon le type d'environnement que votre service de persistance peut prendre en charge, vous avez la possibilité d'utiliser ces fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="65e48-199">Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</span></span> <span data-ttu-id="65e48-200">Si vous choisissez de prendre en charge la sémantique de verrouillage d'exécution, puis, si un service de persistance essaie d'enregistrer une instance de workflow verrouillée précédemment par un autre service de persistance, vous devez lever une classe <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="65e48-200">If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="65e48-201">Si `unlock` est `true`, vous devez déverrouiller l'accès à l'état de l'instance de workflow après l'avoir enregistrée.</span><span class="sxs-lookup"><span data-stu-id="65e48-201">If `unlock` is `true`, you should unlock access to the workflow instance state after you save it.</span></span>  
  
 <span data-ttu-id="65e48-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> prend le <xref:System.Guid> de l'instance de workflow en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="65e48-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> takes the <xref:System.Guid> of the workflow instance as a parameter.</span></span> <span data-ttu-id="65e48-203">Par conséquent, vous devez enregistrer ce <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="65e48-203">Therefore, you should save this <xref:System.Guid>.</span></span> <span data-ttu-id="65e48-204">Vous pouvez également utiliser ce <xref:System.Guid> pour associer l'instance de workflow aux états enregistrés de ses objectifs achevés.</span><span class="sxs-lookup"><span data-stu-id="65e48-204">You can also use this <xref:System.Guid> to associate the workflow instance with the saved states of its completed scopes.</span></span> <span data-ttu-id="65e48-205">Vous devez effectuer cette opération parce que vous devez être en mesure de marquer ces objectifs achevés comme non requis lorsque l'instance de workflow se termine.</span><span class="sxs-lookup"><span data-stu-id="65e48-205">You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</span></span>  
  
 <span data-ttu-id="65e48-206">Le moteur d'exécution de workflow appelle la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> une dernière fois lorsque l'instance de workflow est complétée ou interrompue.</span><span class="sxs-lookup"><span data-stu-id="65e48-206">The workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> a final time when the workflow instance is completed or terminated.</span></span> <span data-ttu-id="65e48-207">Par conséquent, si <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> est égal à <xref:System.Workflow.Runtime.WorkflowStatus.Completed> ou <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, vous pouvez supprimer sans risque l'instance de workflow et tous les objectifs achevés qui lui sont associés dans votre banque de données.</span><span class="sxs-lookup"><span data-stu-id="65e48-207">Therefore, if <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> is equal to <xref:System.Workflow.Runtime.WorkflowStatus.Completed> or <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</span></span> <span data-ttu-id="65e48-208">Vous pouvez également vous abonner à l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> ou <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> pour déterminer si vous pouvez supprimer en toute sécurité les enregistrements associés à l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-208">Alternatively, you can subscribe to the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> or <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events to determine when it is safe to delete records associated with the workflow instance.</span></span> <span data-ttu-id="65e48-209">La suppression réelle des enregistrements de votre banque de données dépend de votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="65e48-209">Whether you actually delete the records from your data store depends on your implementation.</span></span>  
  
 <span data-ttu-id="65e48-210">Si vous implémentez un service de persistance qui utilise un magasin fiable, afin de maintenir la cohérence avec l'état interne du moteur d'exécution de workflow, vous devez ensuite participer au traitement par lots de la transaction du workflow pour différer l'écriture réelle dans votre magasin fiable jusqu'à un point de la validation du workflow.</span><span class="sxs-lookup"><span data-stu-id="65e48-210">If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="65e48-211">Pour participer au traitement par lots, ajoutez un élément de travail à la propriété <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> qui représente les modifications à apporter à votre banque de données et implémentez l'interface <xref:System.Workflow.Runtime.IPendingWork> dans votre service de persistance.</span><span class="sxs-lookup"><span data-stu-id="65e48-211">To participate in batching, add a work item that represents the pending changes to your durable store to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65e48-212">L'exemple suivant illustre une implémentation de la méthode `SaveWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="65e48-212">The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method.</span></span> <span data-ttu-id="65e48-213">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-213">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-214">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-214">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#264](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#264)]
 [!code-vb[WF_Samples#264](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#264)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="workflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="65e48-215">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> qui représente l'objectif achevé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-215">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-216">Détermine si un workflow doit être déchargé lorsqu'il est inactif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-216">Determines whether a workflow should be unloaded when idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65e48-217">Si <see langword="true" />, le moteur d'exécution de workflow décharge le workflow spécifié lorsqu'il devient inactif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-217">If <see langword="true" />, the workflow runtime engine unloads the specified workflow when it becomes idle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65e48-218">L'exemple suivant illustre une implémentation de la méthode `UnloadOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="65e48-218">The following example demonstrates an implementation of the `UnloadOnIdle` method.</span></span> <span data-ttu-id="65e48-219">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-219">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-220">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-220">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#270](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#270)]
 [!code-vb[WF_Samples#270](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#270)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="abstract member UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="65e48-221">Activité racine de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-221">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65e48-222">En cas de substitution dans une classe dérivée, déverrouille l'état de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65e48-222">When overridden in a derived class, unlocks the workflow instance state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65e48-223">Cette méthode est abstraite, donc elle ne contient pas d'implémentation par défaut du verrouillage et du déverrouillage.</span><span class="sxs-lookup"><span data-stu-id="65e48-223">This method is abstract, so it does not contain a default implementation on locking and unlocking.</span></span>  
  
 <span data-ttu-id="65e48-224">Pendant que vous implémentez un service de persistance personnalisé, si vous souhaitez implémenter un jeu de verrouillage vous devez substituer cette méthode et fournir un mécanisme de déverrouillage et de verrouillage dans la méthode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> selon la valeur du paramètre de déverrouillage.</span><span class="sxs-lookup"><span data-stu-id="65e48-224">While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> method based on the value of the unlock parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65e48-225">L'exemple suivant illustre une implémentation de la méthode `UnlockWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="65e48-225">The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method.</span></span> <span data-ttu-id="65e48-226">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="65e48-226">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="65e48-227">Pour plus d’informations, consultez [exemple de Service de persistance personnalisé](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="65e48-227">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#267](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#267)]
 [!code-vb[WF_Samples#267](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#267)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>