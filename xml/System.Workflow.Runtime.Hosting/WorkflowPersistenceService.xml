<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowPersistenceService.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ec1eb1e036001431540c10b6cc57bb283cfb6ce8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec1eb1e036001431540c10b6cc57bb283cfb6ce8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The abstract base class from which all persistence services are derived.</source>
          <target state="translated">Classe de base abstraite à partir de laquelle tous les services de persistance sont dérivés.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</source>
          <target state="translated">Lorsque certaines conditions se produisent pendant que le workflow s'exécute, le moteur d'exécution de workflow rend persistantes les informations d'état relatives à l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on the workflow instance, or when a workflow instance is terminated or finishes.</source>
          <target state="translated">Par exemple, la persistance peut se produire lorsqu'une transaction atomique se termine, que l'instance de workflow devient inactive, que l'hôte appelle la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> sur l'instance de workflow ou qu'une instance de workflow est terminée ou se termine.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</source>
          <target state="translated">Lorsque la sémantique du moteur d'exécution de workflow détermine que la persistance doit avoir lieu, le moteur d'exécution de workflow appelle les méthodes fournies par un service de persistance pour enregistrer les informations d'état relatives à l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</source>
          <target state="translated">De même, lorsque le moteur d'exécution de workflow doit restaurer une instance de workflow rendue persistante auparavant, il appelle les méthodes fournies par le service de persistance pour charger ces informations d'état.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine handles all the semantics regarding when to perform persistence.</source>
          <target state="translated">Le moteur d'exécution de workflow gère toute la sémantique ayant trait au moment de l'exécution de la persistance.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The persistence service handles actually saving and loading the workflow state information to or from a data store.</source>
          <target state="translated">Le service de persistance gère l'enregistrement et le chargement des informations d'état du workflow vers ou à partir d'une banque de données.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can create a persistence service by deriving a class from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">Vous pouvez créer un service de persistance en dérivant une classe de <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can add your persistence service to the workflow runtime engine by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> or by making an appropriate entry in the application configuration file.</source>
          <target state="translated">Vous pouvez ajouter un service de persistance au moteur d'exécution de workflow en appelant la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> ou en effectuant une entrée appropriée dans le fichier de configuration de l'application.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> should only contain one persistence service.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> doit contenir un seul service de persistance.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Windows Workflow Foundation provides the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> class, an out-of-box persistence service, which you can use as is or extend.</source>
          <target state="translated">Windows Workflow Foundation fournit la classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, un service de persistance prédéfini, que vous pouvez utiliser tel quel ou développer.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</source>
          <target state="translated">Le moteur d'exécution de workflow dispose d'une sémantique qui permet de verrouiller les informations d'état du workflow à utiliser dans les environnements où les services de persistance qui s'exécutent dans des processus différents peuvent avoir accès à une banque de données unique.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> to unlock previously locked workflow state information.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> fournit la capacité de prise en charge de ces fonctionnalités du moteur d'exécution de workflow en fournissant un paramètre à la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> qui spécifie si les informations d'état d'une instance de workflow doivent être déverrouillées dans la banque de données et en fournissant une méthode <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> pour déverrouiller les informations d'état du workflow verrouillées précédemment.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>In a persistence service that implements locking, a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> should lock the state information for a workflow instance.</source>
          <target state="translated">Dans un service de persistance qui implémente le verrouillage, un appel à la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> doit pouvoir verrouiller les informations d'état d'une instance de workflow.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Your persistence service should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> if it fails to save state information to its data store or load state information from its data store.</source>
          <target state="translated">Votre service de persistance doit lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> s'il ne peut pas enregistrer les informations d'état dans sa banque de données ni charger les informations d'état depuis sa banque de données.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine expects this behavior.</source>
          <target state="translated">Le moteur d'exécution de workflow prévoit ce comportement.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>A batching mechanism is provided for services that use a durable store to save workflow state information.</source>
          <target state="translated">Un mécanisme de traitement par lots est fourni pour les services qui utilisent un magasin fiable pour enregistrer les informations d'état du workflow.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</source>
          <target state="translated">Dans ces situations, il est souvent important de maintenir la cohérence entre le magasin fiable utilisé par le service de persistance et l'état interne du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can add functionality defined by the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface to your service, and then participate in workflow transaction batching provided by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> by adding changes to your data store as work items to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">Vous pouvez ajouter des fonctionnalités définies par l'interface <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> à votre service, puis participer au traitement par lots de la transaction de workflow fournie par la classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> en ajoutant des modifications à votre banque de données en tant qu'éléments de travail de la propriété <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The durable store itself should implement the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</source>
          <target state="translated">Le magasin fiable lui-même doit implémenter l'interface <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> afin que les informations de workflow ne deviennent pas incorrectement persistantes en cas de restauration d'une transaction.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /&gt;</ph> class.</source>
          <target state="translated">Lors de l'implémentation dans une classe dérivée, initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>The following example demonstrates creating an instance of the <ph id="ph1">`SqlWorkflowPersistenceService`</ph> class (derived from <ph id="ph2">`WorkflowPersistenceService`</ph>).</source>
          <target state="translated">L'exemple suivant illustre la création d'une instance de la classe <ph id="ph1">`SqlWorkflowPersistenceService`</ph> (dérivée de <ph id="ph2">`WorkflowPersistenceService`</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</source>
          <target state="translated">Il provient de l'exemple du Kit de développement Nested Exception Handlers et provient du fichier Program.cs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>For more information, see the <bpt id="p1">[</bpt>Nested Exception Handlers Sample<ept id="p1">](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez la <bpt id="p1">[</bpt>exemple de gestionnaires d’exceptions imbriqués<ept id="p1">](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> whose serialized form is requested.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> dont la forme sérialisée est demandée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the serialized default form of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Récupère la forme par défaut sérialisée de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>The serialized default form of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Forme par défaut sérialisée de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source>Indicates whether the given activity is blocked.</source>
          <target state="translated">Indique si l'activité donnée est bloquée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the given activity is blocked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'activité donnée est bloquée; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the termination or suspend information of the given activity.</source>
          <target state="translated">Récupère l'arrêt ou interrompt les informations de l'activité donnée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the termination or suspend information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient l'arrêt ou interrompt les informations.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the status of the workflow.</source>
          <target state="translated">Récupère l'état du workflow.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowStatus" /&gt;</ph> enumeration value that denotes the status of the workflow.</source>
          <target state="translated">Valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowStatus" /&gt;</ph> qui dénote l'état du workflow.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de l'objectif achevé.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the activity that encloses the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> qui représente l'activité qui englobe l'objectif achevé.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>When implemented in a derived class, loads the specified completed scope back into memory.</source>
          <target state="translated">En cas d'implémentation dans une classe dérivée, recharge l'objectif achevé spécifié en mémoire.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> qui représente l'objectif achevé.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The workflow runtime engine uses <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> to implement compensation.</source>
          <target state="translated">Le moteur d'exécution de workflow utilise <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> pour implémenter la compensation.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>You must restore an identical copy of the completed scope.</source>
          <target state="translated">Vous devez restaurer une copie identique de l'objectif achevé.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>To do this, you must restore a valid <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> from your representation of the completed scope in the data store.</source>
          <target state="translated">Pour ceci, vous devez restaurer une classe <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> valide de la représentation de l'objectif achevé dans la banque de données.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>Then you must pass this <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> to one of the overloaded methods of <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> to perform deserialization of the scope.</source>
          <target state="translated">Puis, vous devez passer la classe <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> à l'une des méthodes surchargées de la méthode <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> pour exécuter la désérialisation de l'objectif.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>If your persistence service cannot load the completed scope from its data store, it should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate message.</source>
          <target state="translated">Si votre service de persistance ne peut pas charger l'objectif achevé à partir de sa banque de données, il doit lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> avec un message approprié.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`LoadCompletedContextActivity`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`LoadCompletedContextActivity`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the root activity of the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de l'activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</source>
          <target state="translated">En cas d'implémentation dans une classe dérivée, recharge l'état spécifié de l'instance de workflow en mémoire.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the root activity of the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> représentant l'activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>You must restore an identical copy of the activity.</source>
          <target state="translated">Vous devez restaurer une copie identique de l'activité.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>To do this, you must restore a valid <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> from your representation of the workflow instance in the data store; then you must pass this <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to one of the overloaded <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> methods to deserialize the workflow instance state.</source>
          <target state="translated">Pour ceci, vous devez restaurer une classe <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> valide de la représentation de l'instance de workflow dans la banque de données ; puis, vous devez passer cette classe <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> à l'une des méthodes <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> surchargées pour désérialiser l'état de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>If your persistence service cannot load the workflow instance state from its data store, it should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate message.</source>
          <target state="translated">Si votre service de persistance ne peut pas charger l'état de l'instance de workflow à partir de sa banque de données, il doit lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> avec un message approprié.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</source>
          <target state="translated">Le moteur d'exécution de workflow implémente la sémantique de verrouillage pour restreindre l'accès à l'état d'une instance de workflow enregistrée dans une banque de données.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>This can be accessed by persistence services that run in multiple processes.</source>
          <target state="translated">Vous pouvez y accéder par les services de persistance qui s'exécutent dans plusieurs processus.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">La sémantique de verrouillage est conçue pour empêcher des services de persistance qui s'exécutent dans deux processus différents de charger en même temps la même instance de workflow en mémoire.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</source>
          <target state="translated">Selon le type d'environnement que votre service de persistance peut prendre en charge, vous avez la possibilité d'utiliser ces fonctionnalités.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</source>
          <target state="translated">Si vous choisissez de prendre en charge la sémantique de verrouillage d'exécution et si cet état de l'instance de workflow a été verrouillé auparavant par un autre processus, vous devez alors lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>Otherwise, you should lock access to the workflow instance state in your data store.</source>
          <target state="translated">Sinon, vous devez verrouiller l'accès à l'état de l'instance de workflow dans votre banque de données.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The workflow instance state can be unlocked by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> or a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> with the unlock parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">L'état de l'instance de workflow peut être déverrouillé par un appel à la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> ou à <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>, le paramètres ayant la valeur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`LoadWorkflowInstanceState`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`LoadWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The serialized form of <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Forme sérialisée de <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The outer <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, containing the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> to restore.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>externe, contenant la classe <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> à restaurer.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>Restores the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> from its serialized form.</source>
          <target state="translated">Restaure <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> depuis sa forme sérialisée.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The restored <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> restauré.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`RestoreFromDefaultSerializedForm`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`RestoreFromDefaultSerializedForm`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> qui représente l'objectif achevé.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>When implemented in a derived class, saves the specified completed scope to a data store.</source>
          <target state="translated">En cas d'implémentation dans une classe dérivée, enregistre l'objectif achevé spécifié dans une banque de données.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</source>
          <target state="translated">Le moteur d'exécution de workflow enregistre l'état des activités d'objectif achevé pour implémentez la compensation.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>You must call one of the overloaded <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> methods to serialize <ph id="ph2">`activity`</ph> into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>; you may then choose to additionally process the <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> before writing it to your data store.</source>
          <target state="translated">Vous devez appeler l'une des méthodes <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> surchargées pour sérialiser l'<ph id="ph2">`activity`</ph> dans une classe <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> ; vous pouvez choisir ensuite de traiter la classe encore plus <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> avant de l'écrire dans votre banque de données.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>However, when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph>, you must restore an identical copy of the activity.</source>
          <target state="translated">Toutefois, lorsque le moteur d'exécution de workflow appelle la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph>, vous devez restaurer une copie identique de l'activité.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</source>
          <target state="translated">Vous devez être en mesure d'associer l'objectif achevé à son instance de workflow englobante pour marquer l'objectif comme non requis dans votre banque de données lorsque l'instance de workflow finit ou est interrompue.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>Therefore, you should also save the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the workflow instance that is associated with the completed scope; this can be obtained from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with <ph id="ph4">`activity`</ph>.</source>
          <target state="translated">Par conséquent, vous devez également enregistrer la structure <ph id="ph1">&lt;xref:System.Guid&gt;</ph> de l'instance de workflow associée à l'objectif achevé ; vous pouvez l'obtenir de la propriété <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> de la classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associée à l'<ph id="ph4">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> takes the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the completed scope as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> utilise le <ph id="ph2">&lt;xref:System.Guid&gt;</ph> de l'objectif achevé en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>Therefore, you must also save the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</ph> property associated with <ph id="ph2">`activity`</ph>.</source>
          <target state="translated">Par conséquent, vous devez également enregistrer la propriété <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</ph> associée à l'<ph id="ph2">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>This property can be referenced through the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</ph> field of <ph id="ph2">`activity`</ph>.</source>
          <target state="translated">Cette propriété peut être référencée via le champ <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</ph> d'<ph id="ph2">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">Si vous implémentez un service de persistance qui utilise un magasin fiable, afin de maintenir la cohérence avec l’état interne du moteur d’exécution de workflow, vous devez participer au traitement par lots de la transaction du workflow pour différer l’écriture réelle dans votre magasin fiable jusqu’à un point de la validation du workflow.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>To participate in batching, add a work item to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> property that represents the pending changes to the database, and implement the <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface in your persistence service.</source>
          <target state="translated">Pour participer au traitement par lots, ajoutez un élément de travail à la propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> qui représente les modifications à apporter à la base de données et implémentez l'interface <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> dans votre service de persistance.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>If you cannot save the completed scope to your data store, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate error message.</source>
          <target state="translated">Si vous ne pouvez pas enregistrer l'objectif achevé sur votre banque de données, vous devez lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> avec un message d'erreur approprié.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`SaveCompletedContextActivity`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`SaveCompletedContextActivity`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance should not be locked; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the workflow instance should be locked.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance de workflow ne doit pas être verrouillée ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si l'instance de workflow doit être verrouillée.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>When implemented in a derived class, saves the workflow instance state to a data store.</source>
          <target state="translated">En cas d'implémentation dans une classe dérivée, enregistrer l'état de l'instance de workflow dans un magasin de données.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You must call one of the overloaded <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> methods to serialize <ph id="ph2">`rootActivity`</ph> into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">Vous devez appeler l'une des méthodes <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> surchargées pour sérialiser <ph id="ph2">`rootActivity`</ph> dans une classe <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You can then choose to additionally process the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> before writing it to your data store.</source>
          <target state="translated">Vous pouvez ensuite choisir de traiter encore plus <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> avant de l'écrire dans votre banque de données.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>However, when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph>, you must restore an identical copy of the root activity.</source>
          <target state="translated">Toutefois, lorsque le moteur d'exécution de workflow appelle la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph>, vous devez restaurer une copie identique de l'activité racine.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you cannot save the workflow instance state to your data store, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate error message.</source>
          <target state="translated">Si vous ne pouvez pas enregistrer l'état de l'instance de workflow dans votre banque de données, vous devez lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> avec un message d'erreur approprié.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</source>
          <target state="translated">Le moteur d'exécution de workflow fournit la sémantique de verrouillage pour restreindre l'accès à l'état d'une instance de workflow enregistrée dans une banque de données.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</source>
          <target state="translated">Vous pouvez y accéder en exécutant les services de persistance sur plusieurs hôtes et en pointant sur la même banque de données.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">La sémantique de verrouillage est conçue pour empêcher les services de persistance qui s'exécutent dans deux processus différents de charger en même temps la même instance de workflow en mémoire.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</source>
          <target state="translated">Selon le type d'environnement que votre service de persistance peut prendre en charge, vous avez la possibilité d'utiliser ces fonctionnalités.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</source>
          <target state="translated">Si vous choisissez de prendre en charge la sémantique de verrouillage d'exécution, puis, si un service de persistance essaie d'enregistrer une instance de workflow verrouillée précédemment par un autre service de persistance, vous devez lever une classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If <ph id="ph1">`unlock`</ph> is <ph id="ph2">`true`</ph>, you should unlock access to the workflow instance state after you save it.</source>
          <target state="translated">Si <ph id="ph1">`unlock`</ph> est <ph id="ph2">`true`</ph>, vous devez déverrouiller l'accès à l'état de l'instance de workflow après l'avoir enregistrée.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> takes the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the workflow instance as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> prend le <ph id="ph2">&lt;xref:System.Guid&gt;</ph> de l'instance de workflow en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Therefore, you should save this <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez enregistrer ce <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You can also use this <ph id="ph1">&lt;xref:System.Guid&gt;</ph> to associate the workflow instance with the saved states of its completed scopes.</source>
          <target state="translated">Vous pouvez également utiliser ce <ph id="ph1">&lt;xref:System.Guid&gt;</ph> pour associer l'instance de workflow aux états enregistrés de ses objectifs achevés.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</source>
          <target state="translated">Vous devez effectuer cette opération parce que vous devez être en mesure de marquer ces objectifs achevés comme non requis lorsque l'instance de workflow se termine.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> a final time when the workflow instance is completed or terminated.</source>
          <target state="translated">Le moteur d'exécution de workflow appelle la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> une dernière fois lorsque l'instance de workflow est complétée ou interrompue.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Therefore, if <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Completed&gt;</ph> or <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Terminated&gt;</ph>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</source>
          <target state="translated">Par conséquent, si <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</ph> est égal à <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Completed&gt;</ph> ou <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Terminated&gt;</ph>, vous pouvez supprimer sans risque l'instance de workflow et tous les objectifs achevés qui lui sont associés dans votre banque de données.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Alternatively, you can subscribe to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events to determine when it is safe to delete records associated with the workflow instance.</source>
          <target state="translated">Vous pouvez également vous abonner à l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> ou <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> pour déterminer si vous pouvez supprimer en toute sécurité les enregistrements associés à l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Whether you actually delete the records from your data store depends on your implementation.</source>
          <target state="translated">La suppression réelle des enregistrements de votre banque de données dépend de votre implémentation.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">Si vous implémentez un service de persistance qui utilise un magasin fiable, afin de maintenir la cohérence avec l'état interne du moteur d'exécution de workflow, vous devez ensuite participer au traitement par lots de la transaction du workflow pour différer l'écriture réelle dans votre magasin fiable jusqu'à un point de la validation du workflow.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>To participate in batching, add a work item that represents the pending changes to your durable store to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> property, and implement the <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface in your persistence service.</source>
          <target state="translated">Pour participer au traitement par lots, ajoutez un élément de travail à la propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> qui représente les modifications à apporter à votre banque de données et implémentez l'interface <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> dans votre service de persistance.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`SaveWorkflowInstanceState`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`SaveWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> qui représente l'objectif achevé.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>Determines whether a workflow should be unloaded when idle.</source>
          <target state="translated">Détermine si un workflow doit être déchargé lorsqu'il est inactif.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the workflow runtime engine unloads the specified workflow when it becomes idle.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, le moteur d'exécution de workflow décharge le workflow spécifié lorsqu'il devient inactif.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`UnloadOnIdle`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`UnloadOnIdle`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Activité racine de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>When overridden in a derived class, unlocks the workflow instance state.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, déverrouille l'état de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>This method is abstract, so it does not contain a default implementation on locking and unlocking.</source>
          <target state="translated">Cette méthode est abstraite, donc elle ne contient pas d'implémentation par défaut du verrouillage et du déverrouillage.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> method based on the value of the unlock parameter.</source>
          <target state="translated">Pendant que vous implémentez un service de persistance personnalisé, si vous souhaitez implémenter un jeu de verrouillage vous devez substituer cette méthode et fournir un mécanisme de déverrouillage et de verrouillage dans la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> selon la valeur du paramètre de déverrouillage.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`UnlockWorkflowInstanceState`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">`UnlockWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Il provient de l'exemple de Custom Persistence Service, dans le fichier FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>