<Type Name="DefaultWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a309ca3084748679a112dc3e7fc94a7f6c28bdf7" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53298514" /></Metadata><TypeSignature Language="C#" Value="public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultWorkflowSchedulerService&#xA;Inherits WorkflowSchedulerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultWorkflowSchedulerService : System::Workflow::Runtime::Hosting::WorkflowSchedulerService" />
  <TypeSignature Language="F#" Value="type DefaultWorkflowSchedulerService = class&#xA;    inherit WorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Crée et gère les threads qui exécutent des instances de workflow sur le moteur d'exécution de workflow.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Le <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> est utilisé par le moteur d'exécution de workflow. Elle inclut la prise en charge par défaut permettant d'avoir plusieurs instances de workflow mises en file d'attente dans le pool de threads d'exécution. Si vous souhaitez contrôler le thread qui est chargé d'exécuter le workflow, utilisez <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">Objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> qui contient les informations d'initialisation.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé lorsque le moteur d'exécution de workflow charge des services à partir d'un fichier de configuration d'application. Le seul paramètre valide est `maxSimultaneousWorkflows` qui peut spécifier le nombre de workflows qui peuvent être exécutés en même temps.  
  
 Affecter une valeur élevée à `maxSimultaneousWorkflows` peut provoquer des privations dans le pool de threads .NET. Ceci peut entraîner des délais d'attente lorsqu'un service de persistance essaie d'effectuer une transaction car les objets <xref:System.Transactions.Transaction> utilisent également le pool de threads .NET.  
  
 En cas de non spécification dans un constructeur ou fichier de configuration, la valeur par défaut de `maxSimultaneousWorkflows` est 5 pour un ordinateur de processeur unique et (int) (5 * Environment.ProcessorCount * .8) pour un ordinateur à plusieurs processeurs. Notez que ce (int) (5 * Environment.ProcessorCount * .8) n'est pas toujours le même que (int) (4 * Environment.ProcessorCount), à cause des règles arithmétiques.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameters" /> contient une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">L'une des valeurs de clés dans la collection <paramref name="parameters" /> contient une référence Null (<see langword="Nothing" />).  
  
ou 
Une des valeurs de clés dans la collection <paramref name="parameters" /> ne correspond pas à la clé par défaut de l'objet <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</exception>
        <exception cref="T:System.FormatException">L'un des paramètres ne peut pas être converti en un nombre à virgule flottante double précision correspondant à la propriété <see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" /> est inférieur à 1.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxSimultaneousWorkflows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxSimultaneousWorkflows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(int maxSimultaneousWorkflows);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService : int -&gt; System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService maxSimultaneousWorkflows" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxSimultaneousWorkflows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxSimultaneousWorkflows">Nombre entier qui détermine le nombre maximal d'instances de workflow qui peuvent être stockées dans la file d'attente de pool de threads.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> en utilisant le nombre maximal spécifié d'instances de workflow que le service peut exécuter simultanément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affecter une valeur élevée à `maxSimultaneousWorkflows` peut provoquer des privations dans le pool de threads .NET. Ceci peut entraîner des délais d'attente lorsqu'un service de persistance essaie d'effectuer une transaction car les objets <xref:System.Transactions.Transaction> utilisent également le pool de threads .NET.  
  
 En cas de non spécification dans un constructeur ou fichier de configuration, la valeur par défaut de `maxSimultaneousWorkflows` est 5 pour un ordinateur de processeur unique et (int) (5 * Environment.ProcessorCount * .8) pour un ordinateur à plusieurs processeurs. Notez que ce (int) (5 * Environment.ProcessorCount * .8) n'est pas toujours le même que (int) (4 * Environment.ProcessorCount), à cause des règles arithmétiques.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxSimultaneousWorkflows" /> est inférieur à 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Cancel : Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId">Le <see cref="T:System.Guid" /> associé à l'élément de travail planifié existant à annuler.</param>
        <summary>Annule l'élément de travail de l'instance de workflow existant spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="timerId" /> est un GUID vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxSimultaneousWorkflows">
      <MemberSignature Language="C#" Value="public int MaxSimultaneousWorkflows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSimultaneousWorkflows" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxSimultaneousWorkflows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSimultaneousWorkflows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSimultaneousWorkflows : int" Usage="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre maximal d'instances de workflow qui peuvent être stockées dans la file d'attente de pool de threads.</summary>
        <value>Nombre entier qui représente le nombre maximal d'instances de workflow qui peuvent être stockées dans la file d'attente de pool de threads.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut de cette méthode est 5 pour un ordinateur de processeur unique et (int) (5 * Environment.ProcessorCount * .8) pour un ordinateur à plusieurs processeurs. Notez que ce (int) (5 * Environment.ProcessorCount * .8) n'est pas toujours le même que (int) (4 * Environment.ProcessorCount), à cause des règles arithmétiques.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="defaultWorkflowSchedulerService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifie le <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> du démarrage de l'exécution d'une instance de workflow.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted%2A> crée un thread pour le premier élément de travail de la liste des éléments qui attendent d'être inclus dans le pool de threads de l'instance de workflow.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute une instance de workflow à la file d'attente d'éléments de travail en attente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué multicast <see cref="T:System.Threading.WaitCallback" /> qui représente la méthode à exécuter.</param>
        <param name="workflowInstanceId"><see cref="T:System.Guid" /> qui représente l'instance de workflow.</param>
        <summary>Ajoute une instance de workflow à la file d'attente d'éléments de travail en attente à l'aide de l'instance de workflow spécifiée qui utilise le délégué multicast spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le constructeur <xref:System.Threading.WaitCallback> pour créer votre méthode déléguée à exécuter dans le nouveau thread.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callback" /> contient une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué multicast <see cref="T:System.Threading.WaitCallback" /> qui représente la méthode à exécuter.</param>
        <param name="workflowInstanceId"><see cref="T:System.Guid" /> qui représente l'instance de workflow.</param>
        <param name="whenUtc">La <see cref="T:System.DateTime" /> qui indique l'heure de début de l'exécution du thread.</param>
        <param name="timerId">Objet <see cref="T:System.Guid" /> qui représente le thread planifié.</param>
        <summary>Ajoute l'instance de workflow spécifiée à la file d'attente d'éléments de travail en attente à l'aide du délégué multicast spécifié, de <see cref="T:System.DateTime" /> et des GUID.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le constructeur <xref:System.Threading.WaitCallback> pour créer votre méthode déléguée à exécuter dans le nouveau thread.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callback" /> contient une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="workflowInstanceId" /> ou <paramref name="timerId" /> représente un GUID vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="defaultWorkflowSchedulerService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arrête le thread en cours d'exécution sur l'instance de workflow et tous les minuteurs qui s'exécutent.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>