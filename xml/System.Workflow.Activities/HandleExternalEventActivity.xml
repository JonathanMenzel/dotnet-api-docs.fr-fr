<Type Name="HandleExternalEventActivity" FullName="System.Workflow.Activities.HandleExternalEventActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22e10d0380d373390f3fafbc3983907bfd53c31e" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53489437" /></Metadata><TypeSignature Language="C#" Value="public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandleExternalEventActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;, class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.HandleExternalEventActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class HandleExternalEventActivity&#xA;Inherits Activity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IDynamicPropertyTypeProvider, IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleExternalEventActivity : System::Workflow::ComponentModel::Activity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type HandleExternalEventActivity = class&#xA;    inherit Activity&#xA;    interface IEventActivity&#xA;    interface IActivityEventListener&lt;QueueEventArgs&gt;&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Invoked")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8b46d-101">Définit une activité de communication du workflow utilisée pour gérer un événement déclenché par un service local.</span><span class="sxs-lookup"><span data-stu-id="8b46d-101">Defines a workflow communication activity that is used to handle an event that is raised by a local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="8b46d-102">Un service local est une classe qui implémente une interface de service local (interface marquée avec <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) et qui est ajoutée au <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-102">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
 <span data-ttu-id="8b46d-103">La <xref:System.Workflow.Activities.HandleExternalEventActivity> reçoit des données lorsque le service <xref:System.Workflow.Activities.ExternalDataExchangeService> déclenche un événement avec les données d'événement dérivées de <xref:System.Workflow.Activities.ExternalDataEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-103">The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.</span></span>  
  
 <span data-ttu-id="8b46d-104">La <xref:System.Workflow.Activities.HandleExternalEventActivity> est une activité bloquante.</span><span class="sxs-lookup"><span data-stu-id="8b46d-104">The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.</span></span>  
  
 <span data-ttu-id="8b46d-105">Les classes qui dérivent de <xref:System.Workflow.Activities.HandleExternalEventActivity> ne doivent pas implémenter l'interface <xref:System.Workflow.ComponentModel.IActivityEventListener%601> car la classe dérivée ne s'exécute pas correctement.</span><span class="sxs-lookup"><span data-stu-id="8b46d-105">Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b46d-106">L'exemple de code suivant illustre la création et la définition des valeurs de la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-106">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="8b46d-107">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel RaiseEventToLoadWorkflow (SDK) qui provient du fichier DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-107">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="8b46d-108">Pour plus d’informations, consultez [déclencher des événements de flux de travail charge](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="8b46d-108">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-109">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-109">Using the HandleExternalEvent Activity</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b46d-110">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-111">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-111">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b46d-112">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-112">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b46d-113">L'exemple de code suivant illustre la création et la définition des valeurs de la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-113">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span> <span data-ttu-id="8b46d-114">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel RaiseEventToLoadWorkflow (SDK) qui provient du fichier DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-114">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="8b46d-115">Pour plus d’informations, consultez [déclencher des événements de flux de travail charge](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="8b46d-115">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-116">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-116">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.HandleExternalEventActivity : string -&gt; System.Workflow.Activities.HandleExternalEventActivity" Usage="new System.Workflow.Activities.HandleExternalEventActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8b46d-117">Nom de l'activité défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="8b46d-117">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="8b46d-118">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> à l'aide du nom de l'activité.</span><span class="sxs-lookup"><span data-stu-id="8b46d-118">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-119">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-119">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="handleExternalEventActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="8b46d-120"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> représentant l'environnement d'exécution de la <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-120">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="8b46d-121">Annule la gestion de l'événement.</span><span class="sxs-lookup"><span data-stu-id="8b46d-121">Cancels the handling of the event.</span></span></summary>
        <returns><span data-ttu-id="8b46d-122"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> de la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> à la fin de l'opération requise.</span><span class="sxs-lookup"><span data-stu-id="8b46d-122">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-123">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-123">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationToken : System.Workflow.Runtime.CorrelationToken with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-124">Obtient ou définit la liaison à une <see cref="T:System.Workflow.Runtime.CorrelationToken" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-124">Gets or sets the binding to a <see cref="T:System.Workflow.Runtime.CorrelationToken" />.</span></span></summary>
        <value><span data-ttu-id="8b46d-125">Cette propriété est utilisée pour faire correspondre un événement à l'activité correcte héritée de <see cref="T:System.Workflow.Activities.IEventActivity" /> basée sur la charge utile de l'événement.</span><span class="sxs-lookup"><span data-stu-id="8b46d-125">This property is used to correlate an event to the correct <see cref="T:System.Workflow.Activities.IEventActivity" />-inherited activity based on the payload of the event.</span></span> <span data-ttu-id="8b46d-126">Par exemple, lorsqu'une instance de workflow unique écoute en même temps plusieurs instances du même événement, la propriété <see langword="CorrelationToken" /> est utilisée pour router l'événement vers l'activité correspondante dans cette instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="8b46d-126">For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the <see langword="CorrelationToken" /> property is used to route the event to the proper activity in that workflow instance.</span></span>  
  
<span data-ttu-id="8b46d-127">Cette corrélation ne doit pas être confondue avec la correspondance d'un événement à l'instance de workflow correcte.</span><span class="sxs-lookup"><span data-stu-id="8b46d-127">This correlation should not be confused with correlating an event to the correct workflow instance.</span></span> <span data-ttu-id="8b46d-128">La corrélation à l'instance de workflow correcte s'effectue en envoyant l'événement à une instance de workflow explicite et à l'aide de la propriété <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> permettant d'identifier correctement l'instance de workflow correcte.</span><span class="sxs-lookup"><span data-stu-id="8b46d-128">The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> property to properly identify the correct workflow instance.</span></span>  
  
<span data-ttu-id="8b46d-129">Pour obtenir un exemple de corrélation, consultez le [mis en corrélation un exemple de Service Local](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="8b46d-129">For an example of correlation, see the [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b46d-130">L'exemple suivant montre comment accéder à la propriété `CorrelationToken` d'un `HandleExternalEventActivity`.</span><span class="sxs-lookup"><span data-stu-id="8b46d-130">The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`.</span></span> <span data-ttu-id="8b46d-131">Cet exemple est issu de l'exemple du Kit de développement logiciel Correlated Local Service (SDK) qui provient du fichier CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-131">This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="8b46d-132">Pour plus d’informations, consultez [mis en corrélation un exemple de Service Local](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="8b46d-132">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#198](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#198)]
 [!code-vb[Wf_samples#198](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#198)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-133">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-133">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CorrelationTokenProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-134">Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-134">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-135">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-135">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public virtual string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EventName : string with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.EventName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-136">Obtient le nom de l'événement déclenché.</span><span class="sxs-lookup"><span data-stu-id="8b46d-136">Gets the name of the raised event.</span></span> <span data-ttu-id="8b46d-137">Cette propriété doit être définie avant que la communication locale puisse se produire.</span><span class="sxs-lookup"><span data-stu-id="8b46d-137">This property must be set before local communication can occur.</span></span></summary>
        <value><span data-ttu-id="8b46d-138">Nom de l'événement déclenché.</span><span class="sxs-lookup"><span data-stu-id="8b46d-138">The name of the raised event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b46d-139">L'exemple de code suivant illustre la création et la définition des valeurs de la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-139">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="8b46d-140">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel RaiseEventToLoadWorkflow (SDK) qui provient du fichier DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-140">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="8b46d-141">Pour plus d’informations, consultez [déclencher des événements de flux de travail charge](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="8b46d-141">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-142">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-142">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EventNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventNameProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-143">Correspond au nom d'un événement défini dans une interface marquée avec le <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-143">Corresponds to the name of an event that is defined in an interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-144">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-144">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="handleExternalEventActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="8b46d-145">Objet <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associé au <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-145">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span></span></param>
        <summary><span data-ttu-id="8b46d-146">Essaie d'exécuter la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> associée au <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-146">Tries to run the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> associated with the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="8b46d-147"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> de la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> à la fin de l'opération requise.</span><span class="sxs-lookup"><span data-stu-id="8b46d-147">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-148">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-148">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="handleExternalEventActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="8b46d-149"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> pour cette instance.</span><span class="sxs-lookup"><span data-stu-id="8b46d-149">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span></span></param>
        <param name="exception"><span data-ttu-id="8b46d-150"><see cref="T:System.Exception" /> qui a causé cette erreur.</span><span class="sxs-lookup"><span data-stu-id="8b46d-150">The <see cref="T:System.Exception" /> that caused this fault.</span></span></param>
        <summary><span data-ttu-id="8b46d-151">Appelée lorsqu'une exception est levée dans le contexte de l'exécution de cette instance.</span><span class="sxs-lookup"><span data-stu-id="8b46d-151">Called when an exception is raised within the context of the execution of this instance.</span></span></summary>
        <returns><span data-ttu-id="8b46d-152"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> qui résulte d'une tentative d'annulation de cette instance.</span><span class="sxs-lookup"><span data-stu-id="8b46d-152">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b46d-153"><paramref name="executionContext" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8b46d-153"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="8b46d-154">ou</span><span class="sxs-lookup"><span data-stu-id="8b46d-154">-or-</span></span>

<span data-ttu-id="8b46d-155"><paramref name="exception" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8b46d-155"><paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override sealed void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="handleExternalEventActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b46d-156"><see cref="T:System.IServiceProvider" /> fournissant le support personnalisé à la classe.</span><span class="sxs-lookup"><span data-stu-id="8b46d-156">The <see cref="T:System.IServiceProvider" /> that provides custom support to the class.</span></span></param>
        <summary><span data-ttu-id="8b46d-157">Initialise l'événement avec le fournisseur de services.</span><span class="sxs-lookup"><span data-stu-id="8b46d-157">Initializes the event with the service provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b46d-158"><paramref name="provider" /> est une référence Null (<see langword="Nothing" /> en Visual Basic), le type du fournisseur de services est une référence Null (<see langword="Nothing" />) ou le proxy pour le fournisseur de services est une référence Null (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="8b46d-158"><paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic), the type of the service provider is a null reference (<see langword="Nothing" />), or the proxy for the service provider is a null reference (<see langword="Nothing" />).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-159">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-159">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="handleExternalEventActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b46d-160">Exécute l'initialisation sur les propriétés de dépendance.</span><span class="sxs-lookup"><span data-stu-id="8b46d-160">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b46d-161">Cette méthode initialise la propriété <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>, vérifie que les propriétés <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> et <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> sont définies et s'assure que l'événement référencé dans la propriété <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> se trouve dans l'interface référencée dans la propriété <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-161">This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-162">Obtient ou définit le type d'interface <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> attribué du service local dont l'événement est géré.</span><span class="sxs-lookup"><span data-stu-id="8b46d-162">Gets or sets the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> attributed interface type of the local service whose event is handled.</span></span> <span data-ttu-id="8b46d-163">Cette propriété doit être définie avant que la communication locale puisse se produire.</span><span class="sxs-lookup"><span data-stu-id="8b46d-163">This property must be set before local communication can occur.</span></span></summary>
        <value><span data-ttu-id="8b46d-164">Type d'interface du service local dont l'événement est géré.</span><span class="sxs-lookup"><span data-stu-id="8b46d-164">The interface type of the local service whose event is handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b46d-165">L'exemple de code suivant illustre la création et la définition des valeurs de la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-165">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="8b46d-166">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel RaiseEventToLoadWorkflow (SDK) qui provient du fichier DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-166">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="8b46d-167">Pour plus d’informations, consultez [déclencher des événements de flux de travail charge](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="8b46d-167">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-168">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-168">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InterfaceTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-169">Correspond au nom de l'interface marquée avec le <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-169">Corresponds to the name of the interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-170">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-170">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Invoked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invoked As EventHandler(Of ExternalDataEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::ExternalDataEventArgs ^&gt; ^ Invoked;" />
      <MemberSignature Language="F#" Value="member this.Invoked : EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; " Usage="member this.Invoked : System.EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-171">Se produit lorsque l'événement externe est reçu.</span><span class="sxs-lookup"><span data-stu-id="8b46d-171">Occurs when the external event is received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b46d-172">L'exemple de code suivant illustre la création et la définition des valeurs de la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-172">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="8b46d-173">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel RaiseEventToLoadWorkflow (SDK) qui provient du fichier DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-173">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="8b46d-174">Pour plus d’informations, consultez [déclencher des événements de flux de travail charge](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="8b46d-174">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-175">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-175">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-176">Définit un délégué d'événement exécuté après que l'activité ait reçu l'événement attendu du service local.</span><span class="sxs-lookup"><span data-stu-id="8b46d-176">Defines an event delegate that is executed after the activity receives the expected event from the local service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-177">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-177">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnClosed : IServiceProvider -&gt; unit" Usage="handleExternalEventActivity.OnClosed provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b46d-178">Le <see cref="T:System.IServiceProvider" /> qui fournit le service.</span><span class="sxs-lookup"><span data-stu-id="8b46d-178">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="8b46d-179">Appelé par l'exécution du workflow dans le cadre du passage de l'activité à l'état <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-179">Called by the workflow runtime as part of the activity's transition to the <see langword="Closed" /> state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b46d-180">Cette méthode fournit à l’activité une possibilité de nettoyer des ressources utilisées pendant son exécution.</span><span class="sxs-lookup"><span data-stu-id="8b46d-180">This method provides the activity with an opportunity to clean up resources utilized during its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvoked(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvoked : EventArgs -&gt; unit&#xA;override this.OnInvoked : EventArgs -&gt; unit" Usage="handleExternalEventActivity.OnInvoked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8b46d-181"><see cref="T:System.EventArgs" /> reçues de l'événement externe tout juste reçu.</span><span class="sxs-lookup"><span data-stu-id="8b46d-181">The <see cref="T:System.EventArgs" /> that are received from the external event that was just received.</span></span></param>
        <summary><span data-ttu-id="8b46d-182">Appelée juste après que l'événement externe ait été reçu afin d'autoriser des classes dérivées à traiter les <see cref="T:System.EventArgs" /> entrantes avant la fermeture de l'activité.</span><span class="sxs-lookup"><span data-stu-id="8b46d-182">Called just after the external event is received to allow derived classes to process the inbound <see cref="T:System.EventArgs" /> before the activity closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b46d-183">L'utilisation la plus commune de la méthode <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> dans les classes dérivées consiste à extraire des membres des <xref:System.EventArgs> reçues afin de définir les valeurs des propriétés publiques de l'activité classée dérivée.</span><span class="sxs-lookup"><span data-stu-id="8b46d-183">The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b46d-184">L'exemple suivant illustre une implémentation de la méthode `OnInvoked`.</span><span class="sxs-lookup"><span data-stu-id="8b46d-184">The following example shows an implementation of the `OnInvoked` method.</span></span> <span data-ttu-id="8b46d-185">Cet exemple est issu de l’exemple du Kit de développement logiciel Correlated Local Service (SDK) qui provient du fichier TaskCompleted.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-185">This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file.</span></span> <span data-ttu-id="8b46d-186">Pour plus d’informations, consultez [mis en corrélation un exemple de Service Local](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="8b46d-186">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[Wf_samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-187">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-187">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-188">Obtient la collection de liaisons de paramètres.</span><span class="sxs-lookup"><span data-stu-id="8b46d-188">Gets the collection of parameter bindings.</span></span></summary>
        <value><span data-ttu-id="8b46d-189">Collection de liaisons de paramètres.</span><span class="sxs-lookup"><span data-stu-id="8b46d-189">The collection of parameter bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b46d-190">L'exemple suivant montre comment accéder à la propriété `ParameterBindings`.</span><span class="sxs-lookup"><span data-stu-id="8b46d-190">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="8b46d-191">Cet exemple est issu de l'exemple du Kit de développement logiciel Ordering State Machine (SDK) qui provient du fichier SampleWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-191">This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.</span></span>  <span data-ttu-id="8b46d-192">Pour plus d’informations, consultez [Ordering State Machine, exemple](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="8b46d-192">For more information, see [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[wf_samples#125](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#125)]
 [!code-vb[wf_samples#125](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#125)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-193">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-193">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterBindingsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-194">Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-194">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-195">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-195">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.WorkflowRoleCollection Roles" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
      <MemberSignature Language="VB.NET" Value="Public Property Roles As WorkflowRoleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::WorkflowRoleCollection ^ Roles { System::Workflow::Activities::WorkflowRoleCollection ^ get(); void set(System::Workflow::Activities::WorkflowRoleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Roles : System.Workflow.Activities.WorkflowRoleCollection with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.Roles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.BindUITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.WorkflowRoleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-196">Obtient ou définit une référence à une collection de rôles de workflow.</span><span class="sxs-lookup"><span data-stu-id="8b46d-196">Gets or sets a reference to a workflow role collection.</span></span></summary>
        <value><span data-ttu-id="8b46d-197">Collection d'un rôle de workflow.</span><span class="sxs-lookup"><span data-stu-id="8b46d-197">A collection of a workflow role.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b46d-198">La <xref:System.Workflow.Activities.WorkflowRoleCollection> limite le jeu des utilisateurs qui peuvent envoyer des messages à une instance de workflow par le biais d'une activité <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-198">The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b46d-199">L'exemple de code suivant illustre la création et la définition des valeurs de la classe <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="8b46d-199">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="8b46d-200">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel RaiseEventToLoadWorkflow (SDK) qui provient du fichier DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="8b46d-200">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="8b46d-201">Pour plus d’informations, consultez [déclencher des événements de flux de travail charge](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="8b46d-201">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-202">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-202">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RolesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty RolesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RolesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ RolesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RolesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-203">Identifie les rôles d'utilisateurs valides autorisés à envoyer des messages de l'hôte à cette activité.</span><span class="sxs-lookup"><span data-stu-id="8b46d-203">Identifies the valid user roles that are allowed to send messages from the host to this activity.</span></span> <span data-ttu-id="8b46d-204">Les deux types de rôles pris en charge sont Active Directory et ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="8b46d-204">The two types of supported roles are Active Directory and ASP.NET.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-205">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-205">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System::Workflow::Activities::IEventActivity::QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b46d-206">Obtient le nom du <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> dans lequel l'activité attend l'arrivée des données.</span><span class="sxs-lookup"><span data-stu-id="8b46d-206">Gets the name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></summary>
        <value><span data-ttu-id="8b46d-207">Nom du <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> dans lequel l'activité attend l'arrivée des données.</span><span class="sxs-lookup"><span data-stu-id="8b46d-207">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="8b46d-208"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> représentant l'environnement d'exécution de la <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-208">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="8b46d-209">Le <see cref="T:System.EventHandler" /> de l'événement parent.</span><span class="sxs-lookup"><span data-stu-id="8b46d-209">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="8b46d-210">Crée l'abonnement de l'activité <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> à un événement.</span><span class="sxs-lookup"><span data-stu-id="8b46d-210">Creates the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-211">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-211">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="8b46d-212"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> qui représente l'environnement d'exécution de l'activité.</span><span class="sxs-lookup"><span data-stu-id="8b46d-212">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="8b46d-213">Le <see cref="T:System.EventHandler" /> de l'événement parent.</span><span class="sxs-lookup"><span data-stu-id="8b46d-213">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="8b46d-214">Annule l'abonnement de l'activité <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> à un événement.</span><span class="sxs-lookup"><span data-stu-id="8b46d-214">Cancels the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="8b46d-215">À l’aide de l’activité HandleExternalEvent</span><span class="sxs-lookup"><span data-stu-id="8b46d-215">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="8b46d-216">Objet ayant déclenché l'événement.</span><span class="sxs-lookup"><span data-stu-id="8b46d-216">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="8b46d-217">Arguments d’événements précédemment typés.</span><span class="sxs-lookup"><span data-stu-id="8b46d-217">The previously typed event arguments.</span></span></param>
        <summary><span data-ttu-id="8b46d-218">Définit la procédure de traitement lorsque l'événement de l'abonnement se produit.</span><span class="sxs-lookup"><span data-stu-id="8b46d-218">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="8b46d-219">Objet qui implémente <see cref="T:System.IServiceProvider" /> afin de fournir l'accès aux services de design le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="8b46d-219">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="8b46d-220">Nom de la propriété.</span><span class="sxs-lookup"><span data-stu-id="8b46d-220">The name of the property.</span></span></param>
        <summary><span data-ttu-id="8b46d-221">Retourne le type d'accès pour la propriété spécifiée.</span><span class="sxs-lookup"><span data-stu-id="8b46d-221">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="8b46d-222">Une valeur d'énumération <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> qui dénote le niveau d'accès de la propriété.</span><span class="sxs-lookup"><span data-stu-id="8b46d-222">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denote the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b46d-223">Utilisée au moment de la compilation pour confirmer que les propriétés sont liées correctement les unes aux autres.</span><span class="sxs-lookup"><span data-stu-id="8b46d-223">Used at compile time to validate whether the properties are correctly bound to one other.</span></span> <span data-ttu-id="8b46d-224">Sans cette interface, ces informations sont déduites directement des accesseurs Get/Set de la propriété.</span><span class="sxs-lookup"><span data-stu-id="8b46d-224">Without this interface, this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="8b46d-225">Objet qui implémente <see cref="T:System.IServiceProvider" /> afin de fournir l'accès aux services de design le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="8b46d-225">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="8b46d-226">Nom de la propriété.</span><span class="sxs-lookup"><span data-stu-id="8b46d-226">The name of the property.</span></span></param>
        <summary><span data-ttu-id="8b46d-227">Renvoie le <see cref="T:System.Type" /> de la propriété spécifiée.</span><span class="sxs-lookup"><span data-stu-id="8b46d-227">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="8b46d-228">Le <see cref="T:System.Type" /> de la propriété dont le nom est passé comme paramètre <paramref name="propertyName" />.</span><span class="sxs-lookup"><span data-stu-id="8b46d-228">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b46d-229">Utilisée au moment de la compilation pour confirmer que les propriétés sont liées correctement les unes aux autres.</span><span class="sxs-lookup"><span data-stu-id="8b46d-229">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>