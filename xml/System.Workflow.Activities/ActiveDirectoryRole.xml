<Type Name="ActiveDirectoryRole" FullName="System.Workflow.Activities.ActiveDirectoryRole">
  <TypeSignature Language="C#" Value="public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActiveDirectoryRole extends System.Workflow.Activities.WorkflowRole implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ActiveDirectoryRole" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActiveDirectoryRole&#xA;Inherits WorkflowRole&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectoryRole sealed : System::Workflow::Activities::WorkflowRole, IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.WorkflowRole</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b728b-101">Représente un rôle Active Directory dans un environnement d'hébergement Windows Workflow Foundation.</span><span class="sxs-lookup"><span data-stu-id="b728b-101">Represents an Active Directory role in a Windows Workflow Foundation hosting environment.</span></span> <span data-ttu-id="b728b-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="b728b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="b728b-103">En général, le magasin Active Directory est utilisé pour stocker des informations sur l'entreprise pour le personnel.</span><span class="sxs-lookup"><span data-stu-id="b728b-103">Typically, the Active Directory store is used for storing organizational information for personnel.</span></span> <span data-ttu-id="b728b-104">L'objectif principal du <xref:System.Workflow.Activities.ActiveDirectoryRole> consiste à faire des requêtes concernant les informations sur l'entreprise, pour des raisons professionnelles.</span><span class="sxs-lookup"><span data-stu-id="b728b-104">The main purpose for the <xref:System.Workflow.Activities.ActiveDirectoryRole> is for making queries against such organizational information for business reasons.</span></span>  
  
 <span data-ttu-id="b728b-105">Les rôles Active Directory correspondent en général à une fonction de travail, à un titre ou à une compétence de travail dans le contexte de l'organisation.</span><span class="sxs-lookup"><span data-stu-id="b728b-105">Active Directory roles typically correspond to a job function, title, or job skill within the context of the organization.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
  </Docs>
  <Members>
    <Member MemberName="GetAllReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetAllReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllReports () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetAllReports();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-106">Retourne un <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient tous les rôles envoyant des rapports au rôle actuel, directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="b728b-106">Returns an <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains all the roles that report to the current role either directly or indirectly.</span></span></summary>
        <returns><span data-ttu-id="b728b-107"><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient tous les rôles envoyant des rapports au rôle actuel, directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="b728b-107">A <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains all the roles that either directly or indirectly report to the current role.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-108">Le <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A> retourne tous les nœuds situés au-dessous du nœud actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-108"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A> returns all nodes below the current node.</span></span> <span data-ttu-id="b728b-109">Utilisez <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> pour retourner uniquement les nœuds qui se trouvent directement au-dessous du nœud actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-109">Use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> to return only the nodes that are directly below the current node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetDirectReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectReports () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetDirectReports();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-110">Retourne un <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient tous les rôles qui envoient des rapports directement au rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-110">Returns an <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains all the roles that report directly to the current role.</span></span></summary>
        <returns><span data-ttu-id="b728b-111"><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient tous les rôles qui envoient des rapports directement au rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-111">An <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains all the roles that directly report to the current role.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-112"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> retourne uniquement les noeuds qui sont situés directement sous le noeud actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-112"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> returns only the nodes that are directly below the current node.</span></span> <span data-ttu-id="b728b-113">Pour retourner tous les nœuds situés au-dessous du nœud actuel, utilisez <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.</span><span class="sxs-lookup"><span data-stu-id="b728b-113">To return all nodes below the current node use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt; GetEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.DirectoryServices.DirectoryEntry&gt; GetEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntries () As ICollection(Of DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::DirectoryServices::DirectoryEntry ^&gt; ^ GetEntries();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-114">Retourne la collection générique qui contient tous les objets <see cref="T:System.DirectoryServices.DirectoryEntry" /> associés au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-114">Returns the generic collection that contains all <see cref="T:System.DirectoryServices.DirectoryEntry" /> objects associated with the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <returns><span data-ttu-id="b728b-115">Collection générique <see cref="T:System.DirectoryServices.DirectoryEntry" /> associée au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-115">The generic <see cref="T:System.DirectoryServices.DirectoryEntry" /> collection that is associated with the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-116">Un rôle peut être une collection générale d'objets de sécurité.</span><span class="sxs-lookup"><span data-stu-id="b728b-116">A role can be a general collection of security objects.</span></span> <span data-ttu-id="b728b-117">Un rôle peut donc contenir plusieurs identités, par exemple utiliser <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> pour retourner tous les objets annuaire associés au rôle.</span><span class="sxs-lookup"><span data-stu-id="b728b-117">As such, a role can contain multiple identities, for example use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> to return all directory objects associated with the role.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentities">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetIdentities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetIdentities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIdentities () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetIdentities();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-118">Permet d'obtenir la liste générique des comptes Windows NT associés au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span><span class="sxs-lookup"><span data-stu-id="b728b-118">Gets a generic list of the Windows NT accounts associated with the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <returns><span data-ttu-id="b728b-119">Liste générique des valeurs de chaîne qui représentent les comptes Windows NT associés au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span><span class="sxs-lookup"><span data-stu-id="b728b-119">A generic list of values that represent the Windows NT accounts associated with the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-120"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities%2A> obtient tous les objets <xref:System.Security.Principal.SecurityIdentifier> associés aux <xref:System.Workflow.Activities.ActiveDirectoryRole> et convertit chacun d'eux en une valeur de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b728b-120"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities%2A> obtains all <xref:System.Security.Principal.SecurityIdentifier> objects associated with the <xref:System.Workflow.Activities.ActiveDirectoryRole> and converts each of them into a string value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManager">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManager () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-121">Retourne un rôle Active Directory qui contient des informations sur le gestionnaire du <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-121">Returns an Active Directory role that contains information about the manager of the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <returns><span data-ttu-id="b728b-122"><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient des informations sur le gestionnaire du rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-122">The <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains information about the manager of the current role.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-123">Le <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>retourne le gestionnaire direct du rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-123"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A> returns the direct manager for the current role.</span></span> <span data-ttu-id="b728b-124">Pour retourner tous les rôles situés au-dessus du nœud actuel, utilisez <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.</span><span class="sxs-lookup"><span data-stu-id="b728b-124">To return all roles above the current node, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagerialChain">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagerialChain () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetManagerialChain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-125">Retourne le rôle Active Directory qui contient des informations relatives à la chaîne associée au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-125">Returns the Active Directory role that contains information about the managerial chain associated with the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <returns><span data-ttu-id="b728b-126"><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient des informations sur la chaîne associée au rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-126">The <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains information about the managerial chain associated with the current role.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-127"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A> retourne tous les nœuds situés au-dessus du rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-127"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A> returns all nodes above the current role.</span></span> <span data-ttu-id="b728b-128">Pour retourner uniquement le gestionnaire direct du rôle actuel, utilisez le <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.</span><span class="sxs-lookup"><span data-stu-id="b728b-128">To return just the direct manager of the current role, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeers">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetPeers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPeers () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetPeers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-129">Retourne un rôle Active Directory qui contient des informations relatives à toutes les opérations d'annuaire surveillées par le gestionnaire du <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-129">Returns an Active Directory role that contains information about all the directory operations that are supervised by the manager of the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <returns><span data-ttu-id="b728b-130">Un <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> qui contient des informations relatives à toutes les opérations d'annuaire surveillées par le gestionnaire du <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel .</span><span class="sxs-lookup"><span data-stu-id="b728b-130">A <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> that contains information about all directory operations that are supervised by the manager of the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-131">Le <xref:System.Workflow.Activities.ActiveDirectoryRole> retourné contient des informations provenant de tous les objets gérés par le gestionnaire de ce rôle, mais ne contient pas ces informations sur le rôle actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-131">The <xref:System.Workflow.Activities.ActiveDirectoryRole> returned contains information from all objects managed by the manager of this role but does not contain this information from the current role.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityIdentifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityIdentifiers () As IList(Of SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Security::Principal::SecurityIdentifier ^&gt; ^ GetSecurityIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-132">Retourne une liste générique d'objets <see cref="T:System.Security.Principal.SecurityIdentifier" /> associés au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-132">Returns a generic list of <see cref="T:System.Security.Principal.SecurityIdentifier" /> objects associated with the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <returns><span data-ttu-id="b728b-133">Liste générique d'objets <see cref="T:System.Security.Principal.SecurityIdentifier" /> associés au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b728b-133">A generic list of <see cref="T:System.Security.Principal.SecurityIdentifier" /> objects associated with the current <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-134"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> vérifie chaque <xref:System.DirectoryServices.DirectoryEntry> retournée par la méthode <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> pour vérifier si l'entrée a un identificateur de sécurité dans sa collection <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>.</span><span class="sxs-lookup"><span data-stu-id="b728b-134"><xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> checks each <xref:System.DirectoryServices.DirectoryEntry> returned by the <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> method to see if the entry has a security identifier in its <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> collection.</span></span> <span data-ttu-id="b728b-135">Si l'<xref:System.DirectoryServices.DirectoryEntry> possède une propriété de ce type, les <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> ajoutent un <xref:System.Security.Principal.SecurityIdentifier> à la liste retournée.</span><span class="sxs-lookup"><span data-stu-id="b728b-135">If the <xref:System.DirectoryServices.DirectoryEntry> has such a property, <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> adds a <xref:System.Security.Principal.SecurityIdentifier> to the list it returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludesIdentity">
      <MemberSignature Language="C#" Value="public override bool IncludesIdentity (string identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IncludesIdentity(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IncludesIdentity (identity As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IncludesIdentity(System::String ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="b728b-136">L'identité pour laquelle effectuer la recherche.</span><span class="sxs-lookup"><span data-stu-id="b728b-136">The identity for which to search.</span></span></param>
        <summary><span data-ttu-id="b728b-137">Retourne une valeur indiquant si le <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contient l'identité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b728b-137">Returns a value that indicates whether the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> contains the specified identity.</span></span></summary>
        <returns>
          <span data-ttu-id="b728b-138"><see langword="true" /> pour indiquer que le <paramref name="identity" /> est inclus dans le <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b728b-138"><see langword="true" /> to indicate that <paramref name="identity" /> is included in the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-139">Un rôle représente une généralisation d'un ou de plusieurs objets ; par conséquent, de nombreuses identités peuvent être décrites par un rôle unique.</span><span class="sxs-lookup"><span data-stu-id="b728b-139">Because a role is a generalization of one or more objects, many identities may be described by a single role.</span></span> <span data-ttu-id="b728b-140">Utilisez <xref:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity%2A> pour vérifier qu'une identité spécifiée est incluse dans ce rôle.</span><span class="sxs-lookup"><span data-stu-id="b728b-140">Use <xref:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity%2A> to test that a specified identity is included within this role.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b728b-141">Permet d'obtenir ou de définir le nom de rôle Active Directory.</span><span class="sxs-lookup"><span data-stu-id="b728b-141">Gets or sets the Active Directory role name.</span></span></summary>
        <value><span data-ttu-id="b728b-142">Le nom du rôle Active Directory.</span><span class="sxs-lookup"><span data-stu-id="b728b-142">The Active Directory role name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-143">Utilisez le nom pour décrire le rôle.</span><span class="sxs-lookup"><span data-stu-id="b728b-143">Use the name to describe the role.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry RootEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry RootEntry" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntry As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ RootEntry { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b728b-144">Permet d'obtenir la racine que le nœud Active Directory a associée au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span><span class="sxs-lookup"><span data-stu-id="b728b-144">Gets the root Active Directory node associated with the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <value><span data-ttu-id="b728b-145">Une <see cref="T:System.DirectoryServices.DirectoryEntry" /> qui représente la racine que le nœud Active Directory a associée au <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span><span class="sxs-lookup"><span data-stu-id="b728b-145">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> that represents the root Active Directory node associated with the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-146">L'entrée racine correspond au rôle situé en haut de la chaîne de rôles, qui ne possède aucun gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="b728b-146">The root entry is the role up the chain of roles that has no manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b728b-147">Libère toutes les ressources utilisées par <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span><span class="sxs-lookup"><span data-stu-id="b728b-147">Releases all resources used by the <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b728b-148"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</span><span class="sxs-lookup"><span data-stu-id="b728b-148">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="b728b-149">Destination <see cref="T:System.Runtime.Serialization.StreamingContext" /> de cette sérialisation.</span><span class="sxs-lookup"><span data-stu-id="b728b-149">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="b728b-150">Remplit un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</span><span class="sxs-lookup"><span data-stu-id="b728b-150">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b728b-151">L'implémentation de <xref:System.Workflow.Activities.ActiveDirectoryRole.System%23Runtime%23Serialization%23ISerializable%23GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)> permet à cet objet d'être sérialisé.</span><span class="sxs-lookup"><span data-stu-id="b728b-151">The implementation of <xref:System.Workflow.Activities.ActiveDirectoryRole.System%23Runtime%23Serialization%23ISerializable%23GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)> allows this object to be serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>