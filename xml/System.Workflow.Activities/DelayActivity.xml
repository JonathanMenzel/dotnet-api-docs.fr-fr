<Type Name="DelayActivity" FullName="System.Workflow.Activities.DelayActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b40a557e30c4b1ae356652daf7d00a51e4b8db76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36454025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DelayActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DelayActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.DelayActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DelayActivity&#xA;Inherits Activity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelayActivity sealed : System::Workflow::ComponentModel::Activity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type DelayActivity = class&#xA;    inherit Activity&#xA;    interface IEventActivity&#xA;    interface IActivityEventListener&lt;QueueEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InitializeTimeoutDuration")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.DelayDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.DelayActivity), "Resources.Delay.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.DelayActivity/DelayActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit la logique pour établir un minuteur et attendre, de façon asynchrone, l'expiration du minuteur.  Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Une fois notifiée que son minuteur a expiré, une <xref:System.Workflow.Activities.DelayActivity> complète son exécution.  
  
 Vous pouvez définir un délai d'attente sur <xref:System.Workflow.Activities.DelayActivity> afin que votre workflow s'interrompt avant de continuer l'exécution. Vous spécifiez la propriété <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> à l'aide de la structure <xref:System.TimeSpan>. Cela provoque l'interruption de votre workflow jusqu'à ce que le <xref:System.TimeSpan> spécifié se soit écoulé.  
  
 La classe <xref:System.Workflow.Activities.DelayActivity> exécute la méthode de code associée à l'événement <xref:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration> avant que l'activité ne démarre et la méthode code-beside peut être utilisée pour initialiser la propriété <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A>.  
  
 Le <xref:System.Workflow.Activities.DelayActivity> ne peut pas se terminer avant le <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> indiqué. Le délai peut prendre plus longtemps car la notification du minuteur peut se produire un peu après que le <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> soit atteint. Un plus long délai peut se produire si le workflow s'exécute dans des conditions de contraintes système élevées dans un environnement de serveur.  
  
   
  
## Examples  
 L'exemple de code suivant illustre la création d'une nouvelle instance de la classe <xref:System.Workflow.Activities.DelayActivity>.  Cet exemple de code fait partie de l'exemple du Kit de développement logiciel SimpleStateMachineWorkflow (SDK) qui provient du fichier StateMachineWorkflow.cs. Pour plus d'informations, consultez Simple State Machine.  
  
 [!code-csharp[wf_samples#188](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#188)]
 [!code-vb[wf_samples#188](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#188)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.DelayActivity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelayActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelayActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.DelayActivity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant illustre l'initialisation d'une nouvelle instance de la classe <xref:System.Workflow.Activities.DelayActivity>.  Cet exemple de code fait partie de l'exemple du Kit de développement logiciel SimpleStateMachineWorkflow (SDK) qui provient du fichier StateMachineWorkflow.cs. Pour plus d’informations, consultez [Simple State Machine](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).  
  
 [!code-csharp[wf_samples#188](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#188)]
 [!code-vb[wf_samples#188](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#188)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelayActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelayActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.DelayActivity : string -&gt; System.Workflow.Activities.DelayActivity" Usage="new System.Workflow.Activities.DelayActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'activité défini par l'utilisateur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.DelayActivity" /> à l'aide du nom de l'activité.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="delayActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="delayActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="delayActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="delayActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTimeoutDuration">
      <MemberSignature Language="C#" Value="public event EventHandler InitializeTimeoutDuration;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InitializeTimeoutDuration" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InitializeTimeoutDuration As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ InitializeTimeoutDuration;" />
      <MemberSignature Language="F#" Value="member this.InitializeTimeoutDuration : EventHandler " Usage="member this.InitializeTimeoutDuration : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant le démarrage de la durée du délai avant expiration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement ne doit pas être utilisé pour définir <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A> d'une <xref:System.Workflow.Activities.DelayActivity>. Le délai avant expiration doit plutôt être défini dans la méthode `InitializeComponent` du workflow.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTimeoutDurationEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InitializeTimeoutDurationEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InitializeTimeoutDurationEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InitializeTimeoutDurationEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InitializeTimeoutDurationEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InitializeTimeoutDurationEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible l'événement <see cref="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnClosed : IServiceProvider -&gt; unit" Usage="delayActivity.OnClosed provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System.Workflow.Activities.IEventActivity.QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.Activities.DelayActivity.System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la file d'attente de workflow qui est remise lorsque le minuteur expire.</summary>
        <value>Nom de la file d'attente du workflow.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de la file d'attente du workflow est défini par la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext">
          <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> représentant l'environnement d'exécution de la <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <param name="parentEventHandler">Le <see cref="T:System.EventHandler" /> de l'événement parent.</param>
        <summary>Crée l'abonnement de <see cref="T:System.Workflow.Activities.DelayActivity" /> à un événement.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentContext" /> ou <paramref name="parentEventHandler" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext">
          <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> représentant l'environnement d'exécution de la <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <param name="parentEventHandler">Le <see cref="T:System.EventHandler" /> de l'événement parent.</param>
        <summary>Annule l'abonnement de <see cref="T:System.Workflow.Activities.DelayActivity" /> à un événement.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentContext" /> ou <paramref name="parentEventHandler" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Objet ayant déclenché l'événement.</param>
        <param name="e">Arguments d’événements précédemment typés.</param>
        <summary>Définit la procédure de traitement lorsque l'événement de l'abonnement se produit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutDuration">
      <MemberSignature Language="C#" Value="public TimeSpan TimeoutDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeoutDuration" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeoutDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeoutDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutDuration : TimeSpan with get, set" Usage="System.Workflow.Activities.DelayActivity.TimeoutDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.DelayActivity/TimeoutDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient et définit la durée du délai dans le workflow.</summary>
        <value>
          <see cref="T:System.TimeSpan" /> qui indique la durée du délai dans le workflow.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La période définie dans cette propriété détermine la durée pendant laquelle le workflow est inactif avant que le workflow ne passe à l'activité suivante.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'affectation de la valeur 3 secondes à la propriété <xref:System.Workflow.Activities.DelayActivity.TimeoutDuration%2A>. Ce code suppose que `delay2` est de type <xref:System.Workflow.Activities.DelayActivity>. Cet exemple de code fait partie de l'exemple du Kit de développement logiciel SimpleStateMachineWorkflow (SDK) qui provient du fichier StateMachineWorkflow.cs. Pour plus d’informations, consultez [Simple State Machine](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).  
  
 [!code-csharp[wf_samples#190](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#190)]
 [!code-vb[wf_samples#190](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#190)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutDurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimeoutDurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimeoutDurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimeoutDurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimeoutDurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TimeoutDurationProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation du champ <xref:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty>.  
  
 [!code-csharp[WF_Samples#190](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#190)]
 [!code-vb[WF_Samples#190](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#190)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>