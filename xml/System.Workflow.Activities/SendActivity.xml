<Type Name="SendActivity" FullName="System.Workflow.Activities.SendActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d033385cc4a331a88e3e57028c856ff804508499" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317384" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SendActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.SendActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendActivity sealed : System::Workflow::ComponentModel::Activity" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="43fe9-101">Activité du client qui définit l’appel synchrone d’une opération du service WCF (Windows Communication Foundation).</span>
      <span class="sxs-lookup">
        <span data-stu-id="43fe9-101">Client activity that models the synchronous invocation of a Windows Communication Foundation (WCF) service operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="43fe9-102">Le <xref:System.Workflow.Activities.SendActivity> activité vous permet de participer à une conversation avec un service WCF à l’aide d’un modèle d’échange de messages prédéfinis.</span><span class="sxs-lookup"><span data-stu-id="43fe9-102">The <xref:System.Workflow.Activities.SendActivity> activity enables you to participate in a conversation with a WCF service using a predefined message exchange pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43fe9-103">L'activité <xref:System.Workflow.Activities.SendActivity> est une activité bloquante, signifiant que l'exécution de workflow est bloquée jusqu'à ce que l'activité complète l'exécution.</span><span class="sxs-lookup"><span data-stu-id="43fe9-103">The <xref:System.Workflow.Activities.SendActivity> activity is a blocking activity, meaning that workflow execution is blocked until the activity completes execution.</span></span>  
  
 <span data-ttu-id="43fe9-104">Les modèles d'échange de messages pris en charge par l'activité <xref:System.Workflow.Activities.SendActivity> sont les suivants :</span><span class="sxs-lookup"><span data-stu-id="43fe9-104">The message exchange patterns supported by the <xref:System.Workflow.Activities.SendActivity> activity include:</span></span>  
  
-   <span data-ttu-id="43fe9-105">Envoi de message unidirectionnel </span><span class="sxs-lookup"><span data-stu-id="43fe9-105">One-way Send Message</span></span>  
  
     <span data-ttu-id="43fe9-106">L'activité <xref:System.Workflow.Activities.SendActivity> envoie un message mais n'attend pas de réponse du service.</span><span class="sxs-lookup"><span data-stu-id="43fe9-106">The <xref:System.Workflow.Activities.SendActivity> activity sends a message but does not expect a response from the service.</span></span>  
  
-   <span data-ttu-id="43fe9-107">Envoi d'une demande - Réception d'une réponse</span><span class="sxs-lookup"><span data-stu-id="43fe9-107">Send Request - Receive Reply</span></span>  
  
     <span data-ttu-id="43fe9-108">L'activité <xref:System.Workflow.Activities.SendActivity> envoie un message et attend de recevoir une réponse du service.</span><span class="sxs-lookup"><span data-stu-id="43fe9-108">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response is received from the service.</span></span>  
  
-   <span data-ttu-id="43fe9-109">Envoi d'une demande - Réception d'une erreur</span><span class="sxs-lookup"><span data-stu-id="43fe9-109">Send Request - Receive Fault</span></span>  
  
     <span data-ttu-id="43fe9-110">L'activité <xref:System.Workflow.Activities.SendActivity> envoie un message et attend de recevoir une réponse du service ou une erreur.</span><span class="sxs-lookup"><span data-stu-id="43fe9-110">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response or a fault is received from the service.</span></span> <span data-ttu-id="43fe9-111">Pendant l'exécution, l'activité d'envoi lève toutes les erreurs reçues du serveur.</span><span class="sxs-lookup"><span data-stu-id="43fe9-111">During execution, the send activity throws all of the faults that were received from the server.</span></span> <span data-ttu-id="43fe9-112">Les activités <xref:System.Workflow.ComponentModel.FaultHandlerActivity> peuvent être utilisées pour gérer les erreurs dans le workflow client.</span><span class="sxs-lookup"><span data-stu-id="43fe9-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> activities can be used to handle the faults in the client workflow.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43fe9-113">Cette activité fait partie de [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="43fe9-113">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="43fe9-114">Pour l’activité équivalente dans [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], consultez <xref:System.ServiceModel.Activities.Send>.</span><span class="sxs-lookup"><span data-stu-id="43fe9-114">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Send>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ReceiveActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-115">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.SendActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-116">Le constructeur de l'activité <xref:System.Workflow.Activities.SendActivity> est généralement appelé dans le fichier code-beside créé par le concepteur de workflow.</span><span class="sxs-lookup"><span data-stu-id="43fe9-116">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-117">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.SendActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-117">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-118">Le constructeur de l'activité <xref:System.Workflow.Activities.SendActivity> est généralement appelé dans le fichier code-beside créé par le concepteur de workflow.</span><span class="sxs-lookup"><span data-stu-id="43fe9-118">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-119">L'exemple suivant montre comment créer une nouvelle instance de la classe <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="43fe9-119">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  <span data-ttu-id="43fe9-120">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-120">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="43fe9-121">Valeur assignée à la propriété <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> lorsque l'activité est initialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-121">The value assigned to <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> when the activity is initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43fe9-122">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.SendActivity" /> contenant la propriété <see langword="name" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-122">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class with the specified <see langword="name" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-123">Le constructeur de l'activité <xref:System.Workflow.Activities.SendActivity> est généralement appelé dans le fichier code-beside créé par le concepteur de workflow.</span><span class="sxs-lookup"><span data-stu-id="43fe9-123">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-124">L'exemple suivant montre comment créer une nouvelle instance de la classe <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="43fe9-124">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  
  
 [!code-csharp[SendActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponse">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.AfterResponse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterResponse As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ AfterResponse;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-125">Se produit après la réception de la réponse du service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-125">Occurs after the response has been received from the service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-126">Vous pouvez utiliser le gestionnaire associé à cet événement pour consulter la valeur de retour dans l'opération de service appelée.</span><span class="sxs-lookup"><span data-stu-id="43fe9-126">This event handler associated with this event can be used to read the return value from the service operation invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-127">L'exemple suivant illustre l'utilisation de l'événement `AfterResponse`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-127">The following example shows how to use the `AfterResponse` event.</span></span>  
  
 [!code-csharp[SendActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponseEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AfterResponseEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ AfterResponseEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-128">Représente le <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible l'événement <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-129">Cette propriété d'événement de dépendance peut être utilisée pour lier l'événement <xref:System.Workflow.Activities.SendActivity.AfterResponse> de l'activité d'envoi à un gestionnaire d'événements public de la classe de workflow.</span><span class="sxs-lookup"><span data-stu-id="43fe9-129">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.AfterResponse> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.BeforeSend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSend As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ BeforeSend;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-130">Se produit avant l'envoi du message au service par l'activité <see cref="T:System.Workflow.Activities.SendActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-130">Occurs before the <see cref="T:System.Workflow.Activities.SendActivity" /> activity sends the message to the service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-131">Vous pouvez utiliser le gestionnaire associé à cet événement pour définir les valeurs de paramètres correspondant à l'opération de service appelée.</span><span class="sxs-lookup"><span data-stu-id="43fe9-131">This event handler associated with this event can be used to set the parameter values for the service operation being invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43fe9-132">Le contexte d'un <xref:System.Workflow.Activities.SendActivity> ne peut pas être défini dans ce gestionnaire d'événements.</span><span class="sxs-lookup"><span data-stu-id="43fe9-132">The context of a <xref:System.Workflow.Activities.SendActivity> cannot be set in this event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-133">L'exemple suivant illustre l'utilisation de l'événement `BeforeSend`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-133">The following example shows how to use the `BeforeSend` event.</span></span> <span data-ttu-id="43fe9-134">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-134">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeforeSendEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ BeforeSendEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-135">Représente le <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible l'événement <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-135">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-136">Cette propriété d'événement de dépendance peut être utilisée pour lier l'événement <xref:System.Workflow.Activities.SendActivity.BeforeSend> de l'activité d'envoi à un gestionnaire d'événements public de la classe de workflow.</span><span class="sxs-lookup"><span data-stu-id="43fe9-136">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.BeforeSend> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ChannelToken ChannelToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelToken As ChannelToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ChannelToken ^ ChannelToken { System::Workflow::Activities::ChannelToken ^ get(); void set(System::Workflow::Activities::ChannelToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ChannelToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-137">
            <see cref="T:System.Workflow.Activities.ChannelToken" /> utilisé par le <see cref="T:System.Workflow.Activities.SendActivity" /> pour s'associer lui-même à un canal client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-137">
              <see cref="T:System.Workflow.Activities.ChannelToken" /> used by the <see cref="T:System.Workflow.Activities.SendActivity" /> to associate itself with a client channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43fe9-138">
            <see cref="T:System.Workflow.Activities.ChannelToken" /> définissant un canal client qui est utilisé par un <see cref="T:System.Workflow.Activities.SendActivity" /> pour communiquer avec un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-138">A <see cref="T:System.Workflow.Activities.ChannelToken" /> defining a client channel that a <see cref="T:System.Workflow.Activities.SendActivity" /> uses to communicate with a service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-139">Un jeton de canal indique le nom et l'étendue du canal, ainsi que le nom de la configuration du point de terminaison à utiliser pour établir le canal.</span><span class="sxs-lookup"><span data-stu-id="43fe9-139">A channel token specifies the name of the channel, the scope of the channel, and the endpoint configuration name to be used in establishing the channel.</span></span> <span data-ttu-id="43fe9-140">Le nom de point de terminaison figurant dans le fichier de configuration contient des informations concernant l'adresse, la liaison et le contrat d'un service avec lequel l'activité <xref:System.Workflow.Activities.SendActivity> communique.</span><span class="sxs-lookup"><span data-stu-id="43fe9-140">The endpoint name in the configuration file has the address, binding, and contract information for a service that the <xref:System.Workflow.Activities.SendActivity> activity communicates with.</span></span>  
  
 <span data-ttu-id="43fe9-141">Le jeton de canal spécifie également un nom de canal unique ainsi qu'un nom d'activité propriétaire pour le jeton.</span><span class="sxs-lookup"><span data-stu-id="43fe9-141">The channel token also specifies a unique channel name and an owner activity name for the token.</span></span> <span data-ttu-id="43fe9-142">Il peut être partagé par plusieurs activités d'envoi devant utiliser un même point de terminaison afin de communiquer avec un service.</span><span class="sxs-lookup"><span data-stu-id="43fe9-142">A channel token can be shared between multiple send activities that want to use the same endpoint to communicate with a service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-143">L'exemple suivant montre comment accéder à la propriété `ChannelToken`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-143">The following example shows how to access the `ChannelToken` property.</span></span> <span data-ttu-id="43fe9-144">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-144">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-145">Renvoie un dictionnaire contenant le contexte utilisé pour la communication entre le client et le service avec lequel il communique, y compris des éléments tels que l'identification pour la corrélation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-145">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43fe9-146">Collection basée sur un dictionnaire et contenant des clés <see cref="T:System.Xml.XmlQualifiedName" /> ainsi que les valeurs <see cref="T:System.String" /> qui leur sont associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-146">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-147">Les informations de contexte sont utilisées pour la communication entre le client et le service avec lequel il communique et comprennent des éléments tels que l'identification pour la corrélation.</span><span class="sxs-lookup"><span data-stu-id="43fe9-147">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-148">L'exemple suivant montre comment accéder à la propriété `Context`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-148">The following example shows how to access the `Context` property.</span></span> <span data-ttu-id="43fe9-149">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-149">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#8](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddress">
      <MemberSignature Language="C#" Value="public string CustomAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomAddress" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-150">Obtient ou définit l'adresse personnalisée utilisée pour communiquer avec un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-150">Gets or sets the custom address used to communicate with a service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43fe9-151">Chaîne dont la valeur est l'adresse sur laquelle un service effectue une écoute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-151">String value whose value is the address a service is listening on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-152">Si elle existe, cette valeur est utilisée pour définir l'adresse de point de terminaison pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="43fe9-152">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-153">L'exemple suivant montre comment accéder à la propriété `CustomAddress`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-153">The following example shows how to access the `CustomAddress` property.</span></span> <span data-ttu-id="43fe9-154">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-154">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#9](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddressProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomAddressProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CustomAddressProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-155">Représente le <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> correspondant à la propriété <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-155">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-156">Si elle existe, cette valeur est utilisée pour définir l'adresse de point de terminaison pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="43fe9-156">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-157">Renvoie un dictionnaire contenant le contexte utilisé pour la communication entre le client et le service avec lequel il communique, y compris des éléments tels que l'identification pour la corrélation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-157">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-158">Les informations de contexte sont utilisées pour la communication entre le client et le service avec lequel il communique et comprennent des éléments tels que l'identification pour la corrélation.</span><span class="sxs-lookup"><span data-stu-id="43fe9-158">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="43fe9-159">Activité dont les informations de contexte sont nécessaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-159">Activity whose context information is required.</span>
          </span>
        </param>
        <param name="endpoint">
          <span data-ttu-id="43fe9-160">Informations de point de terminaison pour la corrélation avec un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-160">Endpoint information for correlation with a service.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="43fe9-161">
            <see cref="T:System.Type" /> du contrat implémenté par un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-161">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43fe9-162">Obtient ou définit les informations de contexte correspondant à une opération d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-162">Gets or sets the context information for a send operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43fe9-163">Collection basée sur un dictionnaire et contenant des clés <see cref="T:System.Xml.XmlQualifiedName" /> ainsi que les valeurs <see cref="T:System.String" /> qui leur sont associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-163">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-164">Les informations de contexte sont utilisées pour la communication entre le client et le service avec lequel il communique et comprennent des éléments tels que l'identification pour la corrélation.</span><span class="sxs-lookup"><span data-stu-id="43fe9-164">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-165">L'exemple suivant illustre l'utilisation de la méthode `GetContext`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-165">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="43fe9-166">Activité dont les informations de contexte sont nécessaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-166">Activity whose context information is required.</span>
          </span>
        </param>
        <param name="endpointName">
          <span data-ttu-id="43fe9-167">Nom du point de terminaison utilisé pour la corrélation avec un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-167">Name of the endpoint used for correlation with a service.</span>
          </span>
        </param>
        <param name="ownerActivityName">
          <span data-ttu-id="43fe9-168">Nom de l'activité propriétaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-168">The name of the owning activity.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="43fe9-169">
            <see cref="T:System.Type" /> du contrat implémenté par un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-169">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43fe9-170">Méthode statique renvoyant des informations de contexte selon une instance d'activité, le nom du point de terminaison utilisé par cette activité, le nom de l'activité propriétaire et un objet <see cref="T:System.Type" /> représentant le type du contrat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-170">Static method that returns context information given an activity instance, an endpoint name used by that activity, the name of the owner activity, and a <see cref="T:System.Type" /> object that represents the type of the contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43fe9-171">Collection basée sur un dictionnaire et contenant des clés <see cref="T:System.Xml.XmlQualifiedName" /> ainsi que les valeurs <see cref="T:System.String" /> qui leur sont associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-171">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-172">Les informations de contexte sont utilisées pour la communication entre le client et le service avec lequel il communique et comprennent des éléments tels que l'identification pour la corrélation.</span><span class="sxs-lookup"><span data-stu-id="43fe9-172">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-173">L'exemple suivant illustre l'utilisation de la méthode `GetContext`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-173">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-174">Obtient la collection des paramètres pouvant être liés tels qu’ils apparaissent dans la liste de paramètres formels du service Windows Communication Foundation (WCF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-174">Gets the collection of bindable parameters as found in the Windows Communication Foundation (WCF) service's formal parameter list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43fe9-175">
            <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> de paramètres à lier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-175">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-176">L'activité <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> peut être utilisée pour spécifier les liaisons entre les paramètres de l'opération du service et les propriétés et les champs publics du workflow contenant l'activité <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="43fe9-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can be used to specify bindings between the service operation parameters and public field and properties of the workflow that contains the <xref:System.Workflow.Activities.SendActivity> activity.</span></span> <span data-ttu-id="43fe9-177">Lorsque l'activité <xref:System.Workflow.Activities.SendActivity> s'exécute, les valeurs des paramètres correspondants sont lues dans les propriétés de workflow auxquelles ces paramètres sont liés ; elles sont ensuite envoyées au service comme paramètres de l'opération du service.</span><span class="sxs-lookup"><span data-stu-id="43fe9-177">When the <xref:System.Workflow.Activities.SendActivity> activity executes, the corresponding parameter values are read from the workflow properties they are bound to and are sent to the service as service operation parameters.</span></span>  
  
 <span data-ttu-id="43fe9-178">La propriété <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> peut également être utilisée pour récupérer les valeurs de retour d'une opération de service.</span><span class="sxs-lookup"><span data-stu-id="43fe9-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can also be used to retrieve the return values from a service operation.</span></span>  
  
 <span data-ttu-id="43fe9-179">Tous les paramètres de l'opération de service doivent être liés.</span><span class="sxs-lookup"><span data-stu-id="43fe9-179">All parameters of the service operation should be bound.</span></span> <span data-ttu-id="43fe9-180">Les paramètres indépendants de cette opération affichent des avertissements du compilateur et leurs valeurs par défaut sont envoyées lors de l'appel de <xref:System.Workflow.Activities.SendActivity>.</span><span class="sxs-lookup"><span data-stu-id="43fe9-180">Unbound service operation parameters produce compiler warnings and the default values of the parameter are sent when the <xref:System.Workflow.Activities.SendActivity> is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-181">L'exemple suivant montre comment accéder à la propriété `ParameterBindings`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-181">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="43fe9-182">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-182">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValuePropertyName">
      <MemberSignature Language="C#" Value="public const string ReturnValuePropertyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReturnValuePropertyName" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Const ReturnValuePropertyName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ReturnValuePropertyName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-183">Nom de la propriété utilisée pour la valeur de retour envoyée par le service avec lequel l'activité <see langword="SendActivity" /> communique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-183">Name of the property that is used for the return value sent by the service that the <see langword="SendActivity" /> activity is communicating with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-184">Cette chaîne peut être utilisée pour récupérer la valeur de retour à partir de la propriété <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> qui est associée à l'activité <xref:System.Workflow.Activities.SendActivity> du gestionnaire d'événements <xref:System.Workflow.Activities.SendActivity.AfterResponse>.</span><span class="sxs-lookup"><span data-stu-id="43fe9-184">This string can be used to retrieve the return value from the <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associated with the <xref:System.Workflow.Activities.SendActivity> activity in the <xref:System.Workflow.Activities.SendActivity.AfterResponse> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-185">L'exemple suivant montre comment accéder au champ `ReturnValuePropertyName`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-185">The following example shows how to access the `ReturnValuePropertyName` field.</span></span>  
  
 [!code-csharp[SendActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As TypedOperationInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::TypedOperationInfo ^ ServiceOperationInfo { System::Workflow::Activities::TypedOperationInfo ^ get(); void set(System::Workflow::Activities::TypedOperationInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.TypedOperationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-186">Définit le contrat et l'opération du service avec lequel l'activité <see langword="SendActivity" /> communique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-186">Defines the contract and operation of the service that the <see langword="SendActivity" /> activity communicates with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43fe9-187">Objet <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> contenant le nom du contrat, le type de contrat, le nom de l'opération (lequel peut être différent du nom de méthode réel), si l'opération est une opération monodirectionnelle ou non, ainsi que les informations de méthode (y compris les paramètres relatifs à l'opération).</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-187">A <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> object that contains the contract name, the contract type, the operation name, (which may be distinct from the actual method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-188">L'activité <xref:System.Workflow.Activities.SendActivity> fait toujours référence à un contrat existant et aux opérations correspondantes qui sont définies.</span><span class="sxs-lookup"><span data-stu-id="43fe9-188">The <xref:System.Workflow.Activities.SendActivity> activity always refers to an existing contract and its defined operations.</span></span> <span data-ttu-id="43fe9-189">Il n'est pas possible de permettre à une activité <xref:System.Workflow.Activities.SendActivity> de définir elle-même un contrat.</span><span class="sxs-lookup"><span data-stu-id="43fe9-189">There is no provision that allows a <xref:System.Workflow.Activities.SendActivity> activity to define a contract itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-190">L'exemple suivant montre comment accéder à la propriété `ServiceOperationInfo`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-190">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="43fe9-191">Cet exemple est une adaptation de l'exemple du Kit de développement logiciel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-191">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43fe9-192">Définit les informations de contexte correspondant à une activité <see cref="T:System.Workflow.Activities.SendActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-192">Sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-193">Les informations de contexte sont utilisées pour la communication entre le client et le service avec lequel il communique et comprennent des éléments tels que l'identification pour la corrélation.</span><span class="sxs-lookup"><span data-stu-id="43fe9-193">Context information is used for communication between the client and the service it is communicating and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="43fe9-194">Instance de l'activité à associer aux informations de contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-194">The Activity instance to associate the context information with.</span>
          </span>
        </param>
        <param name="endpoint">
          <span data-ttu-id="43fe9-195">Point de terminaison utilisé pour la corrélation avec un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-195">The endpoint used for correlation with a service.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="43fe9-196">
            <see cref="T:System.Type" /> du contrat implémenté par un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-196">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="43fe9-197">Informations de contexte à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-197">The context information to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43fe9-198">Méthode statique définissant des informations de contexte pour une activité <see cref="T:System.Workflow.Activities.SendActivity" /> selon une instance d'activité, un point de terminaison utilisé par cette activité, un objet <see cref="T:System.Type" /> représentant le type du contrat et les informations de contexte elles-mêmes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-198">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint used by that activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43fe9-199">Les informations de contexte sont utilisées pour la communication entre le client et le service avec lequel il communique et comprennent des éléments tels que l'identification pour la corrélation.</span><span class="sxs-lookup"><span data-stu-id="43fe9-199">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43fe9-200">L'exemple suivant illustre l'utilisation de la méthode `SetContext`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-200">The following example shows how to use the `SetContext` method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="43fe9-201">Instance de l'activité à associer aux informations de contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-201">The Activity instance to associate the context information with.</span>
          </span>
        </param>
        <param name="endpointName">
          <span data-ttu-id="43fe9-202">Nom d'un point de terminaison utilisé pour la corrélation avec un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-202">The name of an endpoint used for correlation with a service.</span>
          </span>
        </param>
        <param name="ownerActivityName">
          <span data-ttu-id="43fe9-203">Nom de l'activité propriétaire</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-203">The name of the owning activity</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="43fe9-204">
            <see cref="T:System.Type" /> du contrat implémenté par un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-204">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="43fe9-205">Informations de contexte à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-205">The context information to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43fe9-206">Méthode statique définissant des informations de contexte pour une activité <see cref="T:System.Workflow.Activities.SendActivity" /> selon une instance d'activité, un nom de point de terminaison utilisé par cette activité, le nom de l'activité propriétaire, un objet <see cref="T:System.Type" /> représentant le type du contrat et les informations de contexte elles-mêmes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43fe9-206">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint name used by that activity, the name of the owner activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43fe9-207">L'exemple suivant illustre l'utilisation de la méthode `SetContext`.</span><span class="sxs-lookup"><span data-stu-id="43fe9-207">The following example shows how to use the `SetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>