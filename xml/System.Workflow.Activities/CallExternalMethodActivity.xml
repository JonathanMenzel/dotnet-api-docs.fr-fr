<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="622f012e2a0d2721e9a6f0c9dcee64d1aa37e774" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32088942" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MethodInvoking")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7a84b-101">Définit une activité de communication du workflow utilisée pour appeler une méthode à un service local.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a84b-101">Defines a workflow communication activity that is used to call a method on a local service.</span>
      </span>
      <span data-ttu-id="7a84b-102">Cette activité est utilisée pour envoyer des données du workflow à l'hôte à travers le service local.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a84b-102">This activity is used to send data from the workflow to the host through the local service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="7a84b-103">Un service local est une classe qui implémente une interface de service local (interface marquée avec <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) et qui est ajoutée au <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-103">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a84b-104">Lorsque la méthode externe est appelée, tous les paramètres de la méthode sont clonés.</span><span class="sxs-lookup"><span data-stu-id="7a84b-104">When the external method is called all parameters of the method are cloned.</span></span> <span data-ttu-id="7a84b-105">Si les types de paramètre implémentent <xref:System.ICloneable> ou s'ils sont sérialisés ou désérialisés avec un `Clone`, la méthode <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> est appelée.</span><span class="sxs-lookup"><span data-stu-id="7a84b-105">If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a84b-106">L'exemple de code suivant indique comment utiliser la <xref:System.Workflow.Activities.CallExternalMethodActivity> dans une activité personnalisée pour appeler une méthode externe.</span><span class="sxs-lookup"><span data-stu-id="7a84b-106">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method.</span></span> <span data-ttu-id="7a84b-107">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Listen (SDK) qui provient du fichier PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-107">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="7a84b-108">Pour plus d’informations, consultez [écouter l’exemple](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="7a84b-108">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-109">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-109">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-110">L'exemple suivant montre comment créer une instance de la classe `CallExternalMethodActivity`.</span><span class="sxs-lookup"><span data-stu-id="7a84b-110">The following example shows how to create an instance of the `CallExternalMethodActivity` class.</span></span>  <span data-ttu-id="7a84b-111">Cet exemple est issu de l'exemple du Kit de développement logiciel PersistenceHost (SDK) qui provient du fichier DocumentApprovalWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-111">This example is from the PersistenceHost SDK sample, from the DocumentApprovalWorkflow.designer.cs file.</span></span> <span data-ttu-id="7a84b-112">Pour plus d’informations, consultez [exemple d’hôte de persistance](http://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span><span class="sxs-lookup"><span data-stu-id="7a84b-112">For more information, see [Persistence Host Sample](http://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span></span>  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-113">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-113">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-114">L'exemple de code suivant montre comment initialiser une nouvelle instance de la <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-114">The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span></span> <span data-ttu-id="7a84b-115">Le code initialise également de nouvelles instances des classes <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> et <xref:System.Workflow.Activities.CodeActivity>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-115">The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes.</span></span> <span data-ttu-id="7a84b-116">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Listen (SDK) qui provient du fichier PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-116">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="7a84b-117">Pour plus d’informations, consultez [écouter l’exemple](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="7a84b-117">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7a84b-118">Nom défini par l'utilisateur de l'activité, utilisé pour initialiser la propriété du nom de l'activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-118">The user-defined name of the activity, used to initialize the activity name property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a84b-119">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> à l'aide du nom de l'activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-119">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class using the name of the activity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-120">Obtient ou définit la <see cref="T:System.Workflow.Runtime.CorrelationToken" /> pour la méthode externe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-120">Gets or sets the <see cref="T:System.Workflow.Runtime.CorrelationToken" /> for the external method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a84b-121">Jeton de corrélation pour la méthode externe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-121">The correlation token for the external method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-122">Cette propriété définit de quelle activité <xref:System.Workflow.Activities.CallExternalMethodActivity> spécifique provient un appel de méthode externe donné.</span><span class="sxs-lookup"><span data-stu-id="7a84b-122">This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from.</span></span> <span data-ttu-id="7a84b-123">Cette valeur peut ensuite être utilisée dans la charge utile d'un événement du service de communication local pour diriger cet événement vers l'activité <xref:System.Workflow.Activities.HandleExternalEventActivity> correcte.</span><span class="sxs-lookup"><span data-stu-id="7a84b-123">This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
 <span data-ttu-id="7a84b-124">Pour obtenir un exemple de corrélation, consultez le [corrélées Local Service (exemple)](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="7a84b-124">For an example of correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a84b-125">L'exemple suivant montre comment accéder à la propriété `CorrelationToken` d'un objet `CallExternalMethodActivity`.</span><span class="sxs-lookup"><span data-stu-id="7a84b-125">The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object.</span></span> <span data-ttu-id="7a84b-126">Cet exemple est issu de l'exemple du Kit de développement logiciel Correlated Local Service (SDK) qui provient du fichier CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-126">This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="7a84b-127">Pour plus d’informations, consultez [corrélées Local Service (exemple)](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="7a84b-127">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-128">Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="7a84b-129">
            <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> contenant l'environnement d'exécution dans lequel exécuter la <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-129">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the execution environment in which to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a84b-130">Essaie d'exécuter la <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> associée au <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-130">Tries to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> with the specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a84b-131">Une des valeurs de <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-131">One of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a84b-132">Ce <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-132">This <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a84b-133">
            <paramref name="executionContext" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-133">
              <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7a84b-134">L'objet de service pour le <paramref name="executionContext" /> est une référence Null (<see langword="Nothing" /> dans Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-134">The service object for the <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-135">Exécute l'initialisation sur les propriétés de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-135">Performs initialization on dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-136">Cette méthode initialise la propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>, vérifie que les propriétés <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> et <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> sont définies et s'assure que l'événement référencé dans la propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> se trouve dans l'interface référencée dans la propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-136">This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-137">Obtient ou définit une méthode externe déclarant l'interface ayant la <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-137">Gets or sets an external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a84b-138">La méthode externe déclare l'interface ayant la <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-138">The external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-139">L'exemple de code suivant montre comment définir la propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-139">The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span> <span data-ttu-id="7a84b-140">Le type d'interface doit être attribué avec la <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-140">The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span> <span data-ttu-id="7a84b-141">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Listen (SDK) qui provient du fichier PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-141">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="7a84b-142">Pour plus d’informations, consultez [écouter l’exemple](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="7a84b-142">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-143">Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-143">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-144">La propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> correspond au nom de l'interface marquée avec la <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-144">The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-145">Se produit avant l'appel de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-145">Occurs before invoking the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-146">L'exemple de code suivant indique comment utiliser l'événement <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> afin de définir la méthode à appeler avant d'appeler la méthode externe.</span><span class="sxs-lookup"><span data-stu-id="7a84b-146">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method.</span></span> <span data-ttu-id="7a84b-147">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Listen (SDK) qui provient du fichier PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-147">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="7a84b-148">Pour plus d’informations, consultez [écouter l’exemple](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="7a84b-148">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-149">Représente le <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible l'événement <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-149">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-150">L'événement <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> définit un délégué d'événement exécuté avant que l'activité appelle la méthode externe sur le service local.</span><span class="sxs-lookup"><span data-stu-id="7a84b-150">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-151">Obtient ou définit le nom de la méthode à appeler sur le service local enregistré avec le <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-151">Gets or sets the name of the method to be called on the local service registered with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a84b-152">Nom de la méthode de l'interface <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-152">The method name of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-153">L'exemple de code suivant montre comment utiliser la propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>, afin de définir le nom de la méthode externe.</span><span class="sxs-lookup"><span data-stu-id="7a84b-153">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method.</span></span> <span data-ttu-id="7a84b-154">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Listen (SDK) qui provient du fichier PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-154">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="7a84b-155">Pour plus d’informations, consultez [écouter l’exemple](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="7a84b-155">For more information, see [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-156">Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-156">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-157">La propriété <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> correspond au nom d'une méthode contenu dans une interface marquée avec le <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7a84b-157">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7a84b-158">
            <see cref="T:System.EventArgs" /> contenant les données de l'événement <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-158">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a84b-159">Fournit un raccordement pour les classes dérivées en vue d'extraire et de renvoyer les valeurs du <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-159">Provides a hook for derived classes to extract out and return values from the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          </span>
          <span data-ttu-id="7a84b-160">Cette méthode est appelée juste après l'exécution de la méthode externe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-160">This method is called just after the external method is run.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-161">L'exemple suivant illustre une implémentation de la méthode `OnMethodInvoked`.</span><span class="sxs-lookup"><span data-stu-id="7a84b-161">The following example shows an implementation of the `OnMethodInvoked` method.</span></span>  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7a84b-162">
            <see cref="T:System.EventArgs" /> contenant les données de l'événement <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-162">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a84b-163">Fournit un raccordement pour les classes dérivées afin de définir <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-163">Provides a hook for derived classes to set <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          </span>
          <span data-ttu-id="7a84b-164">Cette méthode est appelée juste avant l'exécution de la méthode externe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-164">This method is called just before the external method is run.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-165">L'exemple suivant illustre une implémentation de la méthode `OnMethodInvoking`.</span><span class="sxs-lookup"><span data-stu-id="7a84b-165">The following example demonstrates an implementation of the `OnMethodInvoking` method.</span></span> <span data-ttu-id="7a84b-166">Cet exemple est issu de l'exemple du Kit de développement logiciel Correlated Local Service (SDK) qui provient du fichier CreateTask.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-166">This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file.</span></span> <span data-ttu-id="7a84b-167">Pour plus d’informations, consultez [corrélées Local Service (exemple)](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="7a84b-167">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-168">Obtient la collection de paramètres pouvant être liés tels qu’ils apparaissent dans la liste de paramètres formels de la méthode externe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-168">Gets the collection of bindable parameters as found in the external method's formal parameter list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a84b-169">
            <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> de paramètres à lier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-169">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a84b-170">L'exemple suivant montre comment ajouter un paramètre de liaison à la collection de liaisons du paramètre.</span><span class="sxs-lookup"><span data-stu-id="7a84b-170">The following example shows how to add a parameter binding to the parameter bindings collection.</span></span> <span data-ttu-id="7a84b-171">Cet exemple est issu de l'exemple du Kit de développement logiciel Host Communication (SDK) qui provient du fichier VotingServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="7a84b-171">This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="7a84b-172">Pour plus d’informations, consultez [Host (exemple) Communication](http://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span><span class="sxs-lookup"><span data-stu-id="7a84b-172">For more information, see [Host Communication Sample](http://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span></span>  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a84b-173">Représente <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> qui cible la propriété <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-173">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="7a84b-174">Objet qui implémente <see cref="T:System.IServiceProvider" /> afin de fournir l'accès aux services de design le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-174">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="7a84b-175">Nom de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-175">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a84b-176">Retourne le type d'accès pour la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-176">Returns the access type for the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a84b-177">Une valeur d'énumération <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> qui dénote le niveau d'accès de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-177">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-178">Utilisée au moment de la compilation pour confirmer que les propriétés sont liées correctement les unes aux autres.</span><span class="sxs-lookup"><span data-stu-id="7a84b-178">Used at compile time to validate whether the properties are correctly bound to one another.</span></span> <span data-ttu-id="7a84b-179">Sans cette interface, ces informations sont déduites directement des accesseurs Get/Set de la propriété.</span><span class="sxs-lookup"><span data-stu-id="7a84b-179">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="7a84b-180">Objet qui implémente <see cref="T:System.IServiceProvider" /> afin de fournir l'accès aux services de design le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-180">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="7a84b-181">Nom de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-181">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a84b-182">Renvoie le <see cref="T:System.Type" /> de la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-182">Returns the <see cref="T:System.Type" /> of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a84b-183">Le <see cref="T:System.Type" /> de la propriété dont le nom est passé comme paramètre <paramref name="propertyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a84b-183">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a84b-184">Utilisée au moment de la compilation pour confirmer que les propriétés sont liées correctement les unes aux autres.</span><span class="sxs-lookup"><span data-stu-id="7a84b-184">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>