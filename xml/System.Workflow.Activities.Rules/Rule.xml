<Type Name="Rule" FullName="System.Workflow.Activities.Rules.Rule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="548e1be93e161d2090fc65407747807334242692" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39898288" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Rule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Rule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.Rule" />
  <TypeSignature Language="VB.NET" Value="Public Class Rule" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rule" />
  <TypeSignature Language="F#" Value="type Rule = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit une condition avec un ensemble associé d'actions à exécuter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.Rule> se compose de <xref:System.Workflow.Activities.Rules.RuleCondition> et d'une ou des deux collections <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> ou <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A>.  
  
   
  
## Examples  
 L'exemple suivant montre comment créer un <xref:System.Workflow.Activities.Rules.Rule> nommé.  
  
```csharp  
private Rule firstRule = new Rule("firstRule");  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.Rule : string -&gt; System.Workflow.Activities.Rules.Rule" Usage="new System.Workflow.Activities.Rules.Rule name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> à l'aide du nom de <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; thenActions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Workflow.Activities.Rules.RuleCondition condition, class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; thenActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, condition As RuleCondition, thenActions As IList(Of RuleAction))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule(System::String ^ name, System::Workflow::Activities::Rules::RuleCondition ^ condition, System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ thenActions);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.Rule : string * System.Workflow.Activities.Rules.RuleCondition * System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; -&gt; System.Workflow.Activities.Rules.Rule" Usage="new System.Workflow.Activities.Rules.Rule (name, condition, thenActions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="condition" Type="System.Workflow.Activities.Rules.RuleCondition" />
        <Parameter Name="thenActions" Type="System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Nom du <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="condition">
          <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> pour <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="thenActions">Collection d'objets <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à évaluer si la condition a la valeur true.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> à l'aide du nom du <see langword="Rule" />, de la condition de règle et d'une liste d'actions THEN.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; thenActions, System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; elseActions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Workflow.Activities.Rules.RuleCondition condition, class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; thenActions, class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; elseActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, condition As RuleCondition, thenActions As IList(Of RuleAction), elseActions As IList(Of RuleAction))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rule(System::String ^ name, System::Workflow::Activities::Rules::RuleCondition ^ condition, System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ thenActions, System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ elseActions);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.Rule : string * System.Workflow.Activities.Rules.RuleCondition * System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; * System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; -&gt; System.Workflow.Activities.Rules.Rule" Usage="new System.Workflow.Activities.Rules.Rule (name, condition, thenActions, elseActions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="condition" Type="System.Workflow.Activities.Rules.RuleCondition" />
        <Parameter Name="thenActions" Type="System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" />
        <Parameter Name="elseActions" Type="System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Nom du <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="condition">
          <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> pour <see cref="T:System.Workflow.Activities.Rules.Rule" />.</param>
        <param name="thenActions">Collection d'objets <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à évaluer si la condition a la valeur true.</param>
        <param name="elseActions">Collection d'objets <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à évaluer si la condition a la valeur false.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.Rule" /> à l'aide du nom du <see langword="Rule" />, de la condition de règle, d'une liste des actions THEN et d'une liste des actions ELSE.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Active" />
      <MemberSignature Language="VB.NET" Value="Public Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Workflow.Activities.Rules.Rule.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Workflow.Activities.Rules.Rule" /> doit être évalué.</summary>
        <value>
          <see langword="true" /> si la règle doit être évaluée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `false` est affecté à cette propriété, cette dernière revient à commenter la règle. La valeur par défaut est `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.Rule Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.Rules.Rule Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Rule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::Rules::Rule ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Workflow.Activities.Rules.Rule" Usage="rule.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.Rule</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie complète du <see cref="T:System.Workflow.Activities.Rules.Rule" /> en cours.</summary>
        <returns>
          <see cref="T:System.Workflow.Activities.Rules.Rule" /> identique à cette instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleCondition Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.Rules.RuleCondition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As RuleCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::Rules::RuleCondition ^ Condition { System::Workflow::Activities::Rules::RuleCondition ^ get(); void set(System::Workflow::Activities::Rules::RuleCondition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Workflow.Activities.Rules.RuleCondition with get, set" Usage="System.Workflow.Activities.Rules.Rule.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> pour le <see cref="T:System.Workflow.Activities.Rules.Rule" /> à évaluer.</summary>
        <value>
          <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> pour le <see cref="T:System.Workflow.Activities.Rules.Rule" /> à évaluer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Workflow.Activities.Rules.Rule.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une description du <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <value>Description de <see cref="T:System.Workflow.Activities.Rules.Rule" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElseActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; ElseActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; ElseActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.ElseActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElseActions As IList(Of RuleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ ElseActions { System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElseActions : System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" Usage="System.Workflow.Activities.Rules.Rule.ElseActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de classes <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à exécuter dans le cas ELSE.</summary>
        <value>Collection de <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à exécuter dans le cas ELSE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A> affectent généralement l'une des propriétés de l'activité à une valeur de variable, appellent une méthode de l'activité ou appellent des méthodes statiques sur des types des assemblys référencés.  
  
 <xref:System.Workflow.Activities.Rules.RuleHaltAction> a pour conséquence que le <xref:System.Workflow.Activities.Rules.RuleSet> cesse de s'exécuter et retourne le contrôle à la méthode d'appel. <xref:System.Workflow.Activities.Rules.RuleStatementAction> modifie une propriété ou appelle une méthode. <xref:System.Workflow.Activities.Rules.RuleUpdateAction> indique explicitement qu'une règle met à jour une variable. Cela provoque la réévaluation de toutes les règles affectées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rule.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à comparer à l'objet en cours.</param>
        <summary>Détermine si cette instance de <see cref="T:System.Workflow.Activities.Rules.Rule" /> et l'objet passé en tant que paramètre ont la même valeur.</summary>
        <returns>
          <see langword="true" /> si l'objet en cours et <paramref name="obj" /> sont identiques ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.Rule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage de cette instance.</summary>
        <returns>Code de hachage de cette instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Activities.Rules.Rule.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
        <value>Nom du <see cref="T:System.Workflow.Activities.Rules.Rule" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Workflow.Activities.Rules.Rule.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique l'ordre dans lequel un <see cref="T:System.Workflow.Activities.Rules.Rule" /> doit être exécuté.</summary>
        <value>Valeur qui indique l'ordre dans lequel un <see cref="T:System.Workflow.Activities.Rules.Rule" /> doit être exécuté.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes <xref:System.Workflow.Activities.Rules.Rule> qui ont une valeur de priorité supérieure sont exécutées avant les classes <xref:System.Workflow.Activities.Rules.Rule> de priorité inférieure. Les règles qui ont la même priorité sont exécutées dans l'ordre alphabétique de leurs propriétés de nom.  
  
 La valeur <xref:System.Workflow.Activities.Rules.Rule.Priority%2A> peut être positive ou négative. La valeur par défaut de tout <xref:System.Workflow.Activities.Rules.Rule> est 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluationBehavior">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleReevaluationBehavior ReevaluationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Activities.Rules.RuleReevaluationBehavior ReevaluationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ReevaluationBehavior As RuleReevaluationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::Rules::RuleReevaluationBehavior ReevaluationBehavior { System::Workflow::Activities::Rules::RuleReevaluationBehavior get(); void set(System::Workflow::Activities::Rules::RuleReevaluationBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.ReevaluationBehavior : System.Workflow.Activities.Rules.RuleReevaluationBehavior with get, set" Usage="System.Workflow.Activities.Rules.Rule.ReevaluationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleReevaluationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si un <see cref="T:System.Workflow.Activities.Rules.Rule" /> peut être réévalué.</summary>
        <value>
          <see cref="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" /> indiquant si le <see cref="T:System.Workflow.Activities.Rules.Rule" /> peut être réévalué.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt; ThenActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Workflow.Activities.Rules.RuleAction&gt; ThenActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.Rule.ThenActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenActions As IList(Of RuleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ ThenActions { System::Collections::Generic::IList&lt;System::Workflow::Activities::Rules::RuleAction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenActions : System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;" Usage="System.Workflow.Activities.Rules.Rule.ThenActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Workflow.Activities.Rules.RuleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de classes <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à exécuter dans le cas THEN.</summary>
        <value>Collection de classes <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> à exécuter dans le cas THEN.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> affectent généralement l'une des propriétés de l'activité à une valeur de variable, appellent une méthode de l'activité ou appellent des méthodes statiques sur des types d'assemblys référencés.  
  
 <xref:System.Workflow.Activities.Rules.RuleHaltAction> a pour conséquence que le <xref:System.Workflow.Activities.Rules.RuleSet> cesse de s'exécuter et retourne le contrôle à la méthode d'appel. <xref:System.Workflow.Activities.Rules.RuleUpdateAction> indique explicitement qu'une règle met à jour une variable. Cela provoque la réévaluation de toutes les règles affectées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>