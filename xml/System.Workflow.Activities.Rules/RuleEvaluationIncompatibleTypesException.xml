<Type Name="RuleEvaluationIncompatibleTypesException" FullName="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="690fe5a99d9391ae374dcf7011bee128c171e90d" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52365645" /></Metadata><TypeSignature Language="C#" Value="public class RuleEvaluationIncompatibleTypesException : System.Workflow.Activities.Rules.RuleException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RuleEvaluationIncompatibleTypesException extends System.Workflow.Activities.Rules.RuleException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleEvaluationIncompatibleTypesException&#xA;Inherits RuleException" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleEvaluationIncompatibleTypesException : System::Workflow::Activities::Rules::RuleException" />
  <TypeSignature Language="F#" Value="type RuleEvaluationIncompatibleTypesException = class&#xA;    inherit RuleException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.Rules.RuleException</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exception qui est levée lors de la tentative d'application d'un opérateur aux opérandes incompatibles lorsque vous évaluez une règle.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><see langword="string" /> qui contient le message d'erreur à associer à cette instance.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> avec un message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la propriété <xref:System.ArgumentException.Message%2A> de la nouvelle instance à l'aide du paramètre de message.  
  
 Le tableau suivant indique les valeurs de propriétés initiales d'une instance Exception.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RuleEvaluationIncompatibleTypesException (System.Runtime.Serialization.SerializationInfo serializeInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializeInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serializeInfo As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RuleEvaluationIncompatibleTypesException(System::Runtime::Serialization::SerializationInfo ^ serializeInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (serializeInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializeInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializeInfo"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> avec des données sérialisées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé lors de la désérialisation pour reconstituer l'objet exception transmis via un flux.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializeInfo" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Le nom de la classe est une référence Null (<see langword="Nothing" /> en Visual Basic) ou <see cref="P:System.Exception.HResult" /> est égal à zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message, Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message, Exception ^ ex);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string * Exception -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (message, ex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message qui décrit l'exception en cours.</param>
        <param name="ex">Instance <see cref="T:System.Exception" /> ayant provoqué l'exception en cours.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> avec un message d'erreur spécifié et une référence à l'<see cref="T:System.Exception" /> interne qui est à l'origine de cette <see cref="T:System.Exception" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> qui est levée en conséquence directe d'une <xref:System.Exception> précédente doit contenir une référence à celle-ci dans la propriété <xref:System.Exception.InnerException%2A>. La propriété <xref:System.Exception.InnerException%2A> retourne la même valeur que celle qui a été passée dans le constructeur ou une référence Null (`Nothing` en Visual Basic), si la propriété <xref:System.Exception.InnerException%2A> ne fournit pas la valeur de l'exception interne au constructeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message, Type left, System.CodeDom.CodeBinaryOperatorType op, Type right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Type left, valuetype System.CodeDom.CodeBinaryOperatorType op, class System.Type right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, left As Type, op As CodeBinaryOperatorType, right As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message, Type ^ left, System::CodeDom::CodeBinaryOperatorType op, Type ^ right);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string * Type * System.CodeDom.CodeBinaryOperatorType * Type -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (message, left, op, right)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="left" Type="System.Type" />
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
        <Parameter Name="right" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="message">Message qui décrit l'<see cref="T:System.Exception" /> en cours.</param>
        <param name="left"><see cref="T:System.Type" /> apparaissant à gauche de l'opérateur.</param>
        <param name="op"><see cref="T:System.CodeDom.CodeBinaryOperatorType" /> représentant l'opérateur dont la compatibilité est violée.</param>
        <param name="right"><see cref="T:System.Type" /> apparaissant à droite de l'opérateur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> avec les détails de la violation de compatibilité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs de propriétés initiales d'une instance Exception représentée par cette classe.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Valeur de l’argument `message`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left%2A>|Valeur de l’argument `left.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator%2A>|Valeur de l’argument `op.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right%2A>|Valeur de l’argument `right.`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleEvaluationIncompatibleTypesException (string message, Type left, System.CodeDom.CodeBinaryOperatorType op, Type right, Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Type left, valuetype System.CodeDom.CodeBinaryOperatorType op, class System.Type right, class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, left As Type, op As CodeBinaryOperatorType, right As Type, ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleEvaluationIncompatibleTypesException(System::String ^ message, Type ^ left, System::CodeDom::CodeBinaryOperatorType op, Type ^ right, Exception ^ ex);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException : string * Type * System.CodeDom.CodeBinaryOperatorType * Type * Exception -&gt; System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" Usage="new System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException (message, left, op, right, ex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="left" Type="System.Type" />
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
        <Parameter Name="right" Type="System.Type" />
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message qui décrit l'<see cref="T:System.Exception" /> en cours.</param>
        <param name="left"><see cref="T:System.Type" /> apparaissant à gauche de l'opérateur.</param>
        <param name="op"><see cref="T:System.CodeDom.CodeBinaryOperatorType" /> représentant l'opérateur dont la compatibilité est violée.</param>
        <param name="right"><see cref="T:System.Type" /> apparaissant à droite de l'opérateur.</param>
        <param name="ex">Instance <see cref="T:System.Exception" /> ayant provoqué l'exception en cours.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> avec les détails de la violation de compatibilité. Cela inclut <see cref="P:System.Exception.InnerException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs de propriétés initiales d'une instance Exception représentée par cette classe.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Valeur de l’argument `ex.`|  
|<xref:System.Exception.Message%2A>|Valeur de l’argument `message`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left%2A>|Valeur de l’argument `left.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator%2A>|Valeur de l’argument `op.`|  
|<xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right%2A>|Valeur de l’argument `right.`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="ruleEvaluationIncompatibleTypesException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
        <summary>Définit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec des informations concernant l'exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData%2A> définit des <xref:System.Runtime.Serialization.SerializationInfo> avec toutes les données de l'objet <xref:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException> ciblées en vue d'une sérialisation. Au cours de la désérialisation, cette exception est reconstituée à partir des <xref:System.Runtime.Serialization.SerializationInfo> transmises via un flux.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public Type Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Left" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Left { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Left : Type with get, set" Usage="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’objet <see cref="T:System.Type" /> de l’argument gauche de l’expression à l’origine de l’exception.</summary>
        <value><see cref="T:System.Type" /> de l'argument gauche de l'expression à l'origine de l'exception.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeBinaryOperatorType Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeBinaryOperatorType Operator" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As CodeBinaryOperatorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeBinaryOperatorType Operator { System::CodeDom::CodeBinaryOperatorType get(); void set(System::CodeDom::CodeBinaryOperatorType value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.CodeDom.CodeBinaryOperatorType with get, set" Usage="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> représentant l'opérateur qui a provoqué l'exception.</summary>
        <value><see cref="T:System.CodeDom.CodeBinaryOperatorType" /> représentant l'opérateur qui a provoqué l'exception.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public Type Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Right" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right" />
      <MemberSignature Language="VB.NET" Value="Public Property Right As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Right { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Right : Type with get, set" Usage="System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Type" /> de l’argument droit de l’expression à l’origine de l’exception.</summary>
        <value><see cref="T:System.Type" /> de l’argument droit de l’expression à l’origine de l’exception.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>