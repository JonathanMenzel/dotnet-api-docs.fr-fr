<Namespace Name="System.Collections.Concurrent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b370791477b82b47c4f82def2754c6fd0f73546d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36270685" /></Metadata><Docs>
    <summary><span data-ttu-id="2a681-101">L'espace de noms <see langword="System.Collections.Concurrent" /> fournit plusieurs classes de collection thread-safe qui doivent être utilisées à la place des types correspondants dans les espaces de noms <see cref="N:System.Collections" /> et <see cref="N:System.Collections.Generic" /> chaque fois que plusieurs threads accèdent simultanément à la collection.</span><span class="sxs-lookup"><span data-stu-id="2a681-101">The <see langword="System.Collections.Concurrent" /> namespace provides several thread-safe collection classes that should be used in place of the corresponding types in the <see cref="N:System.Collections" /> and <see cref="N:System.Collections.Generic" /> namespaces whenever multiple threads are accessing the collection concurrently.</span></span>  
  
<span data-ttu-id="2a681-102">Toutefois, l’accès aux éléments d’un objet de collection via des méthodes d’extension ou des implémentations d’interfaces explicites n’est pas systématiquement thread-safe et sa synchronisation par l’appelant peut être nécessaire.</span><span class="sxs-lookup"><span data-stu-id="2a681-102">However, access to elements of a collection object through extension methods or through explicit interface implementations are not guaranteed to be thread-safe and may need to be synchronized by the caller.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
</Namespace>