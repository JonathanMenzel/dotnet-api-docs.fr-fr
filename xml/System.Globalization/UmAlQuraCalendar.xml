<Type Name="UmAlQuraCalendar" FullName="System.Globalization.UmAlQuraCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cafbbb203bc6961d42ed64ea30d393044f642f36" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56057594" /></Metadata><TypeSignature Language="C#" Value="public class UmAlQuraCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UmAlQuraCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.UmAlQuraCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class UmAlQuraCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class UmAlQuraCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type UmAlQuraCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente le calendrier Hijri saoudien (Um Al Qura).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.UmAlQuraCalendar> classe est presque identique à la <xref:System.Globalization.HijriCalendar> class, sauf si le calendrier Um Al Qura utilise un algorithme basé sur une table autorisé par le gouvernement saoudien pour calculer des dates express l’année 1500 A.H. les dates et ne prend pas en charge la <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>propriété.  
  
> [!NOTE]
>  Pour plus d’informations sur l’utilisation de la <xref:System.Globalization.UmAlQuraCalendar> classe et autres classes dans le .NET Framework de calendrier, consultez [utilisation des calendriers](~/docs/standard/datetime/working-with-calendars.md).  
  
 Pour le <xref:System.Globalization.UmAlQuraCalendar> (classe), chaque mois a 29 ou 30 jours, mais habituellement dans aucun ordre visible. Alors que la documentation pour le calendrier Hijri donne une table qui affiche les jours correspondants de chaque mois, aucune table générale de ce type ne peut être produit pour le calendrier Um Al Qura.  
  
 Pour plus d’informations sur le calendrier Hijri, consultez la <xref:System.Globalization.HijriCalendar> classe.  
  
 **Remarque** la <xref:System.Globalization.UmAlQuraCalendar> classe prend en charge uniquement les dates à partir du 30/04/1900 00.00.00 (date grégorienne) via le 16/11/2077 23:59:59 (date grégorienne).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md">Utilisation des calendriers</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">Aperçu : Utilitaire de plages de semaine de calendrier</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UmAlQuraCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UmAlQuraCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="umAlQuraCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">Date à laquelle ajouter des mois. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <param name="months">Nombre positif ou négatif de mois à ajouter.</param>
        <summary>Calcule une date qui est un nombre spécifié de mois à partir d'une date initiale spécifiée.</summary>
        <returns>Date obtenue en ajoutant le nombre de mois spécifié par le paramètre <paramref name="months" /> à la date spécifiée par le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La partie jour de résultant <xref:System.DateTime> est affectée si le jour résultant n’est pas un jour valid dans le mois résultant de l’année qui en résulte. Il est modifié pour le dernier jour valide dans le mois résultant de l’année qui en résulte. La partie année de résultant <xref:System.DateTime> est affectée si le mois résultant est en dehors de l’année spécifié <xref:System.DateTime>. Cette implémentation prend en charge uniquement l’ère actuelle. Par conséquent, une exception est levée si l’année qui en résulte est en dehors de l’ère de l’objet <xref:System.DateTime>. La partie heure de la journée de résultant <xref:System.DateTime> reste identique à celui spécifié <xref:System.DateTime>.  
  
 Par exemple, si le mois spécifié est Zulkadah, qui compte 30 jours, le jour spécifié est le jour 30 du mois en question et la valeur de la `months` paramètre est 3, l’année qui en résulte est un plus de l’année spécifiée, le mois résultant est Safar et le d résultant aY est le 29ème, c'est-à-dire le dernier jour de Safar.  
  
 Si la valeur de la `months` paramètre est négatif, résultant <xref:System.DateTime> est antérieure à spécifié <xref:System.DateTime>.  
  
 Le <xref:System.DateTime.Kind%2A> propriété de retourné <xref:System.DateTime> valeur toujours est égale à <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Vous pouvez conserver le <xref:System.DateTime.Kind%2A> propriété de la `time` paramètre en appelant le <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> méthode, comme le montre l’exemple suivant.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 L’exemple suivant instancie un <xref:System.DateTime> valeur et affiche les valeurs de plusieurs de ses composants dans le calendrier Um Al Qura. Ensuite, il appelle le <xref:System.Globalization.UmAlQuraCalendar.AddYears%2A> et <xref:System.Globalization.UmAlQuraCalendar.AddMonths%2A> méthodes pour ajouter 2 années et 10 mois dans le calendrier Um Al Qura à la valeur de date. Enfin, il affiche à nouveau les valeurs de ces composants de date dans le calendrier Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La date obtenue ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="months" /> est inférieur à -120 000 ou supérieur à 120 000.  
  
ou 
 <paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="umAlQuraCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">Date à laquelle ajouter des années. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <param name="years">Nombre positif ou négatif d'années à ajouter.</param>
        <summary>Calcule une date qui est un nombre spécifié d'années à partir d'une date initiale spécifiée.</summary>
        <returns>Date obtenue en ajoutant le nombre d'années spécifié par le paramètre <paramref name="years" /> à la date spécifiée par le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La partie jour de résultant <xref:System.DateTime> est affectée si le jour résultant n’est pas un jour valid dans le mois résultant de l’année qui en résulte. Il est modifié pour le dernier jour valide dans le mois résultant de l’année qui en résulte. La partie mois de résultant <xref:System.DateTime> reste identique à celui spécifié <xref:System.DateTime>. Cette implémentation prend en charge uniquement l’ère actuelle. Par conséquent, une exception est levée si l’année qui en résulte est en dehors de l’ère de l’objet <xref:System.DateTime>. La partie heure de la journée de résultant <xref:System.DateTime> reste identique à celui spécifié <xref:System.DateTime>.  
  
 Par exemple, Zulhijjah comprend 29 jours, sauf durant les années bissextiles quand il a 30 jours. Si la date spécifiée est le jour 30 de Zulhijjah dans une année bissextile et la valeur de la `years` paramètre est 1, la date résultante est le 29ème jour de Zulhijjah de l’année suivante.  
  
 Si `years` est négatif, résultant <xref:System.DateTime> est antérieure à spécifié <xref:System.DateTime>.  
  
 Le <xref:System.DateTime.Kind%2A> propriété de retourné <xref:System.DateTime> valeur toujours est égale à <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Vous pouvez conserver le <xref:System.DateTime.Kind%2A> propriété de la `time` paramètre en appelant le <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> méthode, comme le montre l’exemple suivant.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 L’exemple suivant instancie un <xref:System.DateTime> valeur et affiche les valeurs de plusieurs de ses composants dans le calendrier Um AL Qura. Ensuite, il appelle le <xref:System.Globalization.UmAlQuraCalendar.AddYears%2A> et <xref:System.Globalization.UmAlQuraCalendar.AddMonths%2A> méthodes pour ajouter 2 années et 10 mois dans le calendrier Um Al Qura à la valeur de date. Enfin, il affiche à nouveau les valeurs de ces composants de date dans le calendrier Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La date obtenue ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="years" /> est inférieur à -10 000 ou supérieur à 10 000.  
  
ou 
 <paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.UmAlQuraCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le calendrier actuel est solaire, lunaire, ou une combinaison des deux.</summary>
        <value>Retourne toujours <see cref="F:System.Globalization.CalendarAlgorithmType.LunarCalendar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant utilise la réflexion pour instancier chaque <xref:System.Globalization.Calendar> type trouvé dans le .NET Framework et affiche la valeur de son <xref:System.Globalization.Calendar.AlgorithmType%2A> propriété.  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de jours dans l’année qui précède l’année spécifiée par la propriété <see cref="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" />.</summary>
        <value>Nombre de jours dans l'année qui précède l'année spécifiée par <see cref="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne une valeur constante de 384.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.UmAlQuraCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une liste des ères qui sont prises en charge par le <see cref="T:System.Globalization.UmAlQuraCalendar" /> actuel.</summary>
        <value>Tableau qui se compose d'un élément unique ayant une valeur <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le calendrier Hijri reconnaît une ère : A.H. (Latin « Anno Hegirae », ce qui signifie « l’année de la migration, » en référence à la migration de Muhammad (PBUH) depuis la Mecque). Cette propriété retourne toujours un tableau avec un seul élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="umAlQuraCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valeur de date à lire. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <summary>Calcule le jour du mois auquel une date spécifiée a lieu.</summary>
        <returns>Entier de 1 à 30 qui représente le jour du mois spécifié dans le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant affiche les valeurs de plusieurs composants d’un <xref:System.DateTime> en termes du calendrier Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
        <altmember cref="P:System.DateTime.Day" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="umAlQuraCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valeur de date à lire. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <summary>Calcule le jour de la semaine auquel une date spécifiée a lieu.</summary>
        <returns>Valeur de <see cref="T:System.DayOfWeek" /> qui représente le jour de la semaine spécifié par le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.DayOfWeek> valeurs sont les suivantes :  
  
|Valeur DayOfWeek|qui indique|  
|---------------------|---------------------|  
|Dimanche|الاحد (Al-Ahad)|  
|Le lundi|الاثنين (Al-Ithnayn)|  
|Mardi|الثلاثاء (à Thulaathaa')|  
|Le mercredi|الاربعاء (Al-Arbi'aa')|  
|Jeudi|الخميس (Al-Khamiis)|  
|Le vendredi|الجمعة (Al-Jumu'ah)|  
|Saturday|السبت (comme Sabt)|  
  
   
  
## Examples  
 L’exemple suivant affiche les valeurs de plusieurs composants d’un <xref:System.DateTime> en termes du calendrier Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="umAlQuraCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valeur de date à lire. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <summary>Calcule le jour de l'année auquel une date spécifiée a lieu.</summary>
        <returns>Entier de 1 à 355 qui représente le jour de l'année spécifié par le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le jour de l’année est défini comme le nombre de jours à partir du premier jour de l’année. Par exemple, le <xref:System.Globalization.UmAlQuraCalendar.GetDayOfYear%2A> méthode retourne 1 pour le premier jour du premier mois de l’année et le nombre total de jours dans l’année correspondant au dernier jour du mois dernier.  
  
   
  
## Examples  
 L’exemple suivant affiche les valeurs de plusieurs composants d’un <xref:System.DateTime> en termes du calendrier Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmALQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmALQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="umAlQuraCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="month">Entier de 1 à 12 qui représente un mois.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Calcule le nombre de jours dans le mois spécifié de l'année et de l'ère spécifiées.</summary>
        <returns>Nombre de jours dans le mois spécifié de l'année et de l'ère spécifiées. La valeur de retour est 29 dans une année normale et 30 dans une année bissextile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un nombre différent de jours dans un mois spécifié pour une année normale par rapport à une année bissextile. Par exemple, cette méthode retourne 29 ou 30 pour Zulhijjah (`month` = 12), selon que `year` est une année bissextile.  
  
   
  
## Examples  
 L’exemple suivant appelle la <xref:System.Globalization.UmAlQuraCalendar.GetDaysInMonth%2A> méthode pour obtenir le nombre de jours dans chaque mois de cinq années consécutives.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/cs/getdaysinmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/vb/getdaysinmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />, <paramref name="month" /> ou <paramref name="era" /> ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="umAlQuraCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Calcule le nombre de jours dans l'année spécifiée de l'ère spécifiée.</summary>
        <returns>Nombre de jours dans l'année et l'ère spécifiées. Le nombre de jours est 354 dans une année normale ou 355 dans une année bissextile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant appelle la <xref:System.Globalization.UmAlQuraCalendar.GetDaysInYear%2A> méthode pour obtenir le nombre de jours dans dix années consécutives dans chaque ère prise en charge par le <xref:System.Globalization.UmAlQuraCalendar> classe.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinyear/cs/getdaysinyear1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinyear/vb/getdaysinyear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> ou <paramref name="era" /> ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
        <altmember cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="umAlQuraCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valeur de date à lire.</param>
        <summary>Calcule l'ère dans laquelle une date spécifiée a lieu.</summary>
        <returns>Retourne toujours la valeur <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le calendrier Um Al Qura reconnaît une ère : A.H. (Latin « Anno Hegirae », ce qui signifie « l’année de la migration, » en référence à la migration de Muhammad (PBUH) depuis la Mecque).  
  
   
  
## Examples  
 L’exemple suivant affiche les valeurs de plusieurs composants d’une date dans le calendrier Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="umAlQuraCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Calcule le mois d’une année bissextile d’une année et d’une ère spécifiées.</summary>
        <returns>Retourne toujours 0 puisque la classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> ne prend pas en charge les mois d'une année bissextile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un calendrier qui prend en charge la notion d’une année bissextile, le mois bissextile peut se produire après un mois particulier ou après un mois dans une année. Par exemple, le <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=nameWithType> méthode retourne un nombre compris entre 1 et 13, qui indique le mois associé à une date spécifiée. S’il existe un mois bissextile entre les huitième et neuvième mois de l’année, le <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> méthode retourne 8 pour le huitième mois, 9 pour le huitième mois bissextile et 10 pour le neuvième mois.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> est inférieur à 1318 ou supérieur à 1450.  
  
ou 
 <paramref name="era" /> n'est pas <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" />, ni <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="umAlQuraCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valeur de date à lire. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <summary>Calcule le mois dans lequel une date spécifiée se produit.</summary>
        <returns>Entier de 1 à 12 qui représente le mois de la date spécifiée par le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant affiche les plages de date pris en charge par le <xref:System.Globalization.UmAlQuraCalendar> classe dans les calendriers grégorien et de Um Al Qura. Le <xref:System.Globalization.UmAlQuraCalendar.GetMonth%2A> méthode est utilisée pour récupérer le mois des dates minimales et maximales prises en charge dans le calendrier Um Al Qura si elle n’est pas calendrier actuel de la culture actuelle.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
        <altmember cref="P:System.DateTime.Month" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="umAlQuraCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Calcule le nombre de mois dans l'année spécifiée de l'ère spécifiée.</summary>
        <returns>Toujours 12.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant appelle la <xref:System.Globalization.UmAlQuraCalendar.GetMonthsInYear%2A> méthode pour déterminer le nombre de mois de quatre années consécutives et appelle ensuite la <xref:System.Globalization.UmAlQuraCalendar.GetDaysInMonth%2A> méthode pour déterminer le nombre de jours dans chaque mois.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/cs/getdaysinmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/vb/getdaysinmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="era" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="umAlQuraCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Valeur de date à lire. La classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> prend en charge uniquement les dates comprises entre le 30/04/1900 00.00.00 (date grégorienne) et le 16/11/2077 23:59:59 (date grégorienne).</param>
        <summary>Calcule l'année d'une date représentée par un <see cref="T:System.DateTime" /> spécifié.</summary>
        <returns>Entier qui représente l'année spécifiée par le paramètre <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant affiche les plages de date pris en charge par le <xref:System.Globalization.UmAlQuraCalendar> classe dans les calendriers grégorien et de Um Al Qura. Le <xref:System.Globalization.UmAlQuraCalendar.GetYear%2A> méthode est utilisée pour extraire l’année des dates minimales et maximales prises en charge dans le calendrier Um Al Qura si elle n’est pas calendrier actuel de la culture actuelle.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="umAlQuraCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="month">Entier de 1 à 12 qui représente un mois.</param>
        <param name="day">Entier de 1 à 30 qui représente un jour.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Détermine si la date spécifiée est un jour bissextile.</summary>
        <returns><see langword="true" /> si le jour spécifié est un jour bissextile ; sinon, <see langword="false" />. La valeur de retour est toujours <see langword="false" /> car la classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> ne prend pas en charge les mois bissextiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jour bissextile est un jour qui se produit uniquement dans une année bissextile.  
  
   
  
## Examples  
 L’exemple suivant appelle la <xref:System.Globalization.UmAlQuraCalendar.IsLeapDay%2A> méthode correspondant au dernier jour du deuxième mois (février) pour les cinq années de chacune des ères.  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CPP/hijricalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CS/hijricalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/VB/hijricalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />, <paramref name="month" />, <paramref name="day" /> ou <paramref name="era" /> ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="umAlQuraCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="month">Entier de 1 à 12 qui représente un mois.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Détermine si le mois spécifié de l'année et de l'ère spécifiées est un mois d'une année bissextile.</summary>
        <returns>Retourne toujours <see langword="false" />, car la classe <see cref="T:System.Globalization.UmAlQuraCalendar" /> ne prend pas en charge les mois d'une année bissextile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un mois bissextile est un mois entier qui se produit uniquement dans une année bissextile.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />, <paramref name="month" /> ou <paramref name="era" /> ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="umAlQuraCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Détermine si l'année spécifiée de l'ère spécifiée est une année bissextile.</summary>
        <returns><see langword="true" /> si l'année spécifiée est une année bissextile ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une année normale a 354 jours et une année bissextile a 355 jours.  
  
   
  
## Examples  
 L’exemple suivant répertorie le nombre de jours dans dix années consécutives et appelle le <xref:System.Globalization.UmAlQuraCalendar.IsLeapYear%2A> méthode pour déterminer quelle années sont des années bissextiles.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.isleapyear/cs/isleapyear1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.isleapyear/vb/isleapyear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> ou <paramref name="era" /> ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les dernières date et heure prises en charge par ce calendrier.</summary>
        <value>Dernières date et heure prises en charge par le <see cref="T:System.Globalization.UmAlQuraCalendar" /> classe, qui est équivalent au dernier moment du 16 novembre 2077 (notre ère) dans le calendrier grégorien.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En commençant par le [!INCLUDE[net_v45](~/includes/net-v45-md.md)], la valeur de la <xref:System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime%2A> propriété est 16/11/2077. Dans les versions précédentes du .NET Framework, sa valeur est le dernier moment du 13 mai 2029 (notre ère) dans le calendrier grégorien.  
  
   
  
## Examples  
 L’exemple suivant affiche les plages de date pris en charge par le <xref:System.Globalization.UmAlQuraCalendar> classe dans les calendriers grégorien et de Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les premières date et heure prises en charge par ce calendrier.</summary>
        <value>Premières date et heure prises en charge par le <see cref="T:System.Globalization.UmAlQuraCalendar" /> (classe), qui est équivalent au premier moment du 30 avril 1900 (notre ère) dans le calendrier grégorien.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant affiche les plages de date pris en charge par le <xref:System.Globalization.UmAlQuraCalendar> classe dans les calendriers grégorien et de Um Al Qura.  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="umAlQuraCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Une année.</param>
        <param name="month">Entier de 1 à 12 qui représente un mois.</param>
        <param name="day">Entier de 1 à 29 qui représente un jour.</param>
        <param name="hour">Entier de 0 à 23 qui représente une heure.</param>
        <param name="minute">Entier de 0 à 59 qui représente une minute.</param>
        <param name="second">Entier de 0 à 59 qui représente une seconde.</param>
        <param name="millisecond">Entier de 0 à 999 qui représente une milliseconde.</param>
        <param name="era">Une ère. Spécifiez <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> ou <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />.</param>
        <summary>Retourne un <see cref="T:System.DateTime" /> correspondant à la date, l’heure et l’ère spécifiées.</summary>
        <returns><see cref="T:System.DateTime" /> correspondant à la date et à l’heure spécifiées pour l’ère actuelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.UmAlQuraCalendar.ToDateTime%2A> méthode est utile, car elle peut convertir une date dans le calendrier actuel en une date du calendrier grégorien. La date du calendrier grégorien peut par la suite être utilisée, par exemple, pour comparer des dates dans différents calendriers ou créer une date équivalente dans un calendrier particulier.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />, <paramref name="month" />, <paramref name="day" /> ou <paramref name="era" /> ne figure pas dans la plage prise en charge par la classe <see cref="T:System.Globalization.UmAlQuraCalendar" />.  
  
ou 
 <paramref name="hour" /> est inférieur à zéro ou supérieur à 23.  
  
ou 
 <paramref name="minute" /> est inférieur à 0 ou supérieur à 59.  
  
ou 
 <paramref name="second" /> est inférieur à 0 ou supérieur à 59.  
  
ou 
 <paramref name="millisecond" /> est inférieur à 0 ou supérieur à 999.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="umAlQuraCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Année à 2 chiffres de 0 à 99, ou année civile Um-Al Qura à 4 chiffres de 1318 à 1450.</param>
        <summary>Convertit l’année spécifiée en une année à quatre chiffres en utilisant la propriété <see cref="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" /> pour déterminer le siècle approprié.</summary>
        <returns>Si le paramètre <paramref name="year" /> est une année à 2 chiffres, la valeur de retour est l’année à 4 chiffres correspondante. Si le paramètre <paramref name="year" /> est une année à 4 chiffres, la valeur de retour est le paramètre <paramref name="year" /> inchangé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A> méthode utilise le `year` paramètre, le <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> propriété et une année pour calculer une année à 4 chiffres. Le siècle est déterminé par la recherche de la seule occurrence de 2 chiffres `year` paramètre dans la plage de 100 ans. Par exemple, si <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> a la valeur 1429, la plage de 100 ans va de 1330 à 1429. Par conséquent, une valeur à 2 chiffres de 30 est interprétée comme 1330, tandis qu’une valeur à 2 chiffres de 29 est interprétée comme 1429.  
  
 Si le <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> propriété est la valeur spéciale 99, la <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A> méthode ignore les paramètres dans les options régionales et linguistiques options dans le panneau de configuration et retourne le `year` paramètre inchangé.  
  
 <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A> prend en charge une année à deux chiffres ou une année à quatre chiffres. En passant une valeur d’année à deux chiffres (moins de 100) entraîne la méthode convertir la valeur d’une valeur à quatre chiffres en fonction de la <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> valeur représentant le siècle approprié. Si l’application fournit une valeur d’année à quatre chiffres qui se trouve dans la plage de calendrier prise en charge à <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>, la méthode retourne la valeur d’entrée réelle. Si l’application fournit une valeur à quatre chiffres qui est en dehors de la plage de calendrier prise en charge, ou si elle fournit une valeur négative, la méthode lève une exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> est en dehors de la plage prise en charge par ce calendrier.</exception>
        <altmember cref="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la dernière année d'une plage de 100 ans pouvant être représentée par une année à 2 chiffres.</summary>
        <value>Dernière année d'une plage de 100 ans pouvant être représentée par une année à 2 chiffres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet à une année à 2 chiffres peut être traduit correctement une année à 4 chiffres. Par exemple, si cette propriété a la valeur 1429, la plage de 100 ans est de 1330 à 1429. Par conséquent, une valeur à 2 chiffres de 30 est interprétée comme 1330, tandis qu’une valeur à 2 chiffres de 29 est interprétée comme 1429.  
  
 La valeur initiale de cette propriété est dérivée des paramètres dans la partie des options régionales et linguistiques du Panneau de configuration. Toutefois, elles peuvent être modifiées pendant la durée de vie de la <xref:System.AppDomain>. Le <xref:System.Globalization.UmAlQuraCalendar> classe ne détecte pas les modifications dans les paramètres système automatiquement.  
  
 La valeur spéciale 99 entraîne la <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A> inchangé de la méthode d’ignorer les paramètres du système et de retourner l’année spécifiée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ce calendrier est en lecture seule.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Dans une opération ensembliste, la valeur de l'année civile Um-Al Qura est inférieure à 1318 mais pas 99, ou est supérieure à 1450.</exception>
        <altmember cref="M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="UmAlQuraEra">
      <MemberSignature Language="C#" Value="public const int UmAlQuraEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UmAlQuraEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />
      <MemberSignature Language="VB.NET" Value="Public Const UmAlQuraEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int UmAlQuraEra = 1;" />
      <MemberSignature Language="F#" Value="val mutable UmAlQuraEra : int" Usage="System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Représente l'ère en cours. Ce champ est constant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Globalization.UmAlQuraCalendar.UmAlQuraEra> champ est 1.  
  
 Le calendrier Um Al Qura reconnaît une ère : A.H. (Latin « Anno Hegirae », ce qui signifie « l’année de la migration, » en référence à la migration de Muhammad (PBUH) depuis la Mecque).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>