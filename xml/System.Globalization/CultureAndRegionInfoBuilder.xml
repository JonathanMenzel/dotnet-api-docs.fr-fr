<Type Name="CultureAndRegionInfoBuilder" FullName="System.Globalization.CultureAndRegionInfoBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69bd8830da6e3eb0367f2bbd5e96007c77fa2ece" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48614436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CultureAndRegionInfoBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureAndRegionInfoBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureAndRegionInfoBuilder sealed" />
  <TypeSignature Language="F#" Value="type CultureAndRegionInfoBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>sysglobl</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit une culture personnalisée qui est nouvelle ou basée sur une autre culture et sur un autre pays/région. La culture personnalisée peut être installée sur un ordinateur et être utilisée ultérieurement par n'importe quelle application qui s'exécute sur cet ordinateur. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureInfo> classe contient des informations spécifiques à la culture, telles que la langue associée sous-langue, pays/région, calendrier et conventions culturelles. Cette classe fournit également des instances spécifiques à la culture de la <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, et <xref:System.Globalization.TextInfo> classes, qui sont requises pour les opérations spécifiques à la culture telles que la casse, de mise en forme et l’analyse des dates et des nombres, et comparaison de chaînes.  
  
 Par défaut, le .NET Framework prend en charge <xref:System.Globalization.CultureInfo> objets qui représentent un ensemble prédéfini de cultures. Pour obtenir la liste de ces cultures, consultez la [National Language Support (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) au centre de développement. Le <xref:System.Globalization.CultureAndRegionInfoBuilder> classe vous permet de créer une culture personnalisée qui est complètement nouveau ou qui substitue une culture prédéfinie.  Lorsqu’une culture personnalisée est installée et inscrit sur un ordinateur particulier, il devient indiscernable prédéfinis <xref:System.Globalization.CultureInfo> objets et qui peut être instancié et utilisé comme ces objets.  
  
> [!IMPORTANT]
>  Notez que la <xref:System.Globalization.CultureAndRegionInfoBuilder> classe se trouve dans un assembly nommé sysglobl.dll. Compiler correctement le code qui utilise ce type nécessite que vous ajoutez une référence à sysglobl.dll.  
  
 Une culture personnalisée peut être enregistrée sur un ordinateur uniquement par un utilisateur disposant des droits d’administration sur cet ordinateur. Par conséquent, les applications en général, évitez de créer et installer cultures personnalisées. Au lieu de cela, vous pouvez utiliser la <xref:System.Globalization.CultureAndRegionInfoBuilder> classe pour créer un outil à usage spécial qui un administrateur peut utiliser pour créer, installer et inscrire une culture personnalisée. Une fois la culture personnalisée est inscrite sur un ordinateur, vous pouvez utiliser la <xref:System.Globalization.CultureInfo> classe dans votre application pour créer des instances de la culture personnalisée comme vous le feriez pour une culture prédéfinie.  
  
 Si vous analysez les chaînes de date et d’heure générées pour une culture personnalisée, vous devez utiliser le <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> ou <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> méthode au lieu du <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> ou <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> méthode pour améliorer la probabilité de réussite de l’opération d’analyse. Une chaîne de date et d’heure pour une culture personnalisée peut être compliqué et par conséquent difficiles à analyser. Le <xref:System.DateTime.Parse%2A> et <xref:System.DateTime.TryParse%2A> essayer des méthodes analyser une chaîne avec plusieurs modèles d’analyse implicites, qui risque d’échouer. Le <xref:System.DateTime.TryParseExact%2A> (méthode), en revanche, requiert que l’application pour désigner explicitement un ou plusieurs modèles d’analyse précis, susceptibles de réussir.  
  
## <a name="defining-and-creating-a-custom-culture"></a>Définition et création d’une Culture personnalisée  
 Vous utilisez la <xref:System.Globalization.CultureAndRegionInfoBuilder> classe pour définir et nommer une culture personnalisée. La culture personnalisée peut être une toute nouvelle culture, une nouvelle culture qui est basée sur une culture existante (autrement dit, une culture supplémentaire) ou une culture qui remplace une culture .NET Framework existante. Dans chaque cas, les étapes de base sont les mêmes :  
  
1.  Instancier un <xref:System.Globalization.CultureAndRegionInfoBuilder> objet en appelant son <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%28System.String%2CSystem.Globalization.CultureAndRegionModifiers%29> constructeur. Pour remplacer une culture existante, passez le nom de cette culture et la <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> valeur d’énumération au constructeur. Pour créer une nouvelle culture ou une culture supplémentaire, passez un nom de culture unique et soit le <xref:System.Globalization.CultureAndRegionModifiers.Neutral?displayProperty=nameWithType> ou <xref:System.Globalization.CultureAndRegionModifiers.None?displayProperty=nameWithType> valeur d’énumération.  
  
    > [!NOTE]
    >  Si vous utilisez le <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> valeur d’énumération pour instancier un <xref:System.Globalization.CultureAndRegionInfoBuilder> objet, le <xref:System.Globalization.CultureAndRegionInfoBuilder> propriétés de l’objet sont automatiquement remplies avec les valeurs de la <xref:System.Globalization.CultureInfo> objet à remplacer.  
  
2.  Si vous créez une culture nouveau ou supplémentaire :  
  
    -   Remplir le <xref:System.Globalization.CultureAndRegionInfoBuilder> des propriétés de l’objet en appelant le <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> (méthode) et en passant un <xref:System.Globalization.CultureInfo> objet dont les valeurs propriété sont similaires à votre nouvel objet.  
  
    -   Remplir le <xref:System.Globalization.CultureAndRegionInfoBuilder> propriétés régionales de l’objet en appelant le <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> (méthode) et en passant un <xref:System.Globalization.RegionInfo> objet qui représente la région de votre culture personnalisée.  
  
3.  Modifier les propriétés de la <xref:System.Globalization.CultureAndRegionInfoBuilder> de l’objet en fonction des besoins.  
  
4.  Si vous prévoyez d’inscrire la culture personnalisée dans une routine distincte, appelez le <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> (méthode). Cela génère un fichier XML que vous pouvez charger et inscrire dans une routine d’installation distinct culture personnalisée.  
  
## <a name="registering-a-custom-culture"></a>L’inscription d’une Culture personnalisée  
 Si vous développez une application d’inscription pour une culture personnalisée qui est distincte de l’application qui crée la culture, vous appelez le <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> méthode pour charger le fichier XML qui contient la définition de la culture personnalisée et instancier le <xref:System.Globalization.CultureAndRegionInfoBuilder>objet. Pour gérer l’inscription, appelez le <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> (méthode). Pour l’inscription réussisse, l’application qui inscrit la culture personnalisée doit être en cours d’exécution avec des privilèges d’administrateur sur le système cible. Sinon, l’appel à <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> lève une <xref:System.UnauthorizedAccessException> exception.  
  
> [!WARNING]
>  Données de la culture peuvent différer entre les systèmes. Si vous utilisez le <xref:System.Globalization.CultureAndRegionInfoBuilder> classe pour créer une culture personnalisée qui est uniforme sur plusieurs systèmes et que vous créez votre culture personnalisée en chargeant des données à partir de l’existant <xref:System.Globalization.CultureInfo> et <xref:System.Globalization.RegionInfo> objets et la personnalisation, vous devez développer des deux différents utilitaires. La première crée la culture personnalisée et l’enregistre dans un fichier XML. La deuxième utilise le <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> méthode pour charger la culture personnalisée à partir d’un fichier XML et l’inscrire sur l’ordinateur cible.  
  
 Le processus d’inscription effectue les tâches suivantes :  
  
-   Crée un fichier .nlp qui contient les informations qui sont définies dans le <xref:System.Globalization.CultureAndRegionInfoBuilder> objet.  
  
-   Stocke le fichier .nlp dans le répertoire système %windir%\Globalization sur l’ordinateur cible. Ainsi, les paramètres de la culture personnalisée de persister entre les sessions. (Le <xref:System.Globalization.CultureAndRegionInfoBuilder> méthode nécessite des privilèges d’administrateur, car le fichier .nlp est stocké dans un répertoire du système.)  
  
-   Prépare le .NET Framework à rechercher le répertoire système %windir%\Globalization au lieu d’un cache interne de la prochaine demande de création de votre nouvelle culture personnalisée.  
  
 Lorsqu’une culture personnalisée est enregistrée avec succès, il est indiscernable les cultures sont prédéfinies par le .NET Framework. La culture personnalisée est disponible tant qu’un appel à la <xref:System.Globalization.CultureAndRegionInfoBuilder> méthode supprime le fichier .nlp à partir de l’ordinateur local.  
  
## <a name="instantiating-a-custom-culture"></a>Instanciation d’une Culture personnalisée  
 Vous pouvez créer une instance de la culture personnalisée dans une des manières suivantes :  
  
-   En appelant le <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> constructeur avec le nom de culture.  
  
-   En appelant le <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> méthode portant le nom de culture.  
  
-   En appelant le <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> méthode portant le nom de culture.  
  
 En outre, le tableau de <xref:System.Globalization.CultureInfo> objets retourné par la <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=nameWithType> méthode inclut la culture personnalisée.  
  
   
  
## Examples  
 L’exemple suivant définit une culture personnalisée ru-US qui représente la langue russe aux États-Unis. L’exemple définit la culture personnalisée en chargeant les paramètres à partir du russe (Russie) <xref:System.Globalization.CultureInfo> objet et le fuseau horaire <xref:System.Globalization.RegionInfo> de l’objet, puis définit un nombre de <xref:System.Globalization.CultureAndRegionInfoBuilder> propriétés. L’exemple enregistre la culture personnalisée, puis il instancie et rend la culture du thread actuel.  
  
 [!code-csharp[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/cs/car.cs#1)]
 [!code-vb[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/vb/car.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAndRegionInfoBuilder (string cultureName, System.Globalization.CultureAndRegionModifiers flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Globalization.CultureAndRegionModifiers flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultureName As String, flags As CultureAndRegionModifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureAndRegionInfoBuilder(System::String ^ cultureName, System::Globalization::CultureAndRegionModifiers flags);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureAndRegionInfoBuilder : string * System.Globalization.CultureAndRegionModifiers -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="new System.Globalization.CultureAndRegionInfoBuilder (cultureName, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="flags" Type="System.Globalization.CultureAndRegionModifiers" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nom d'une culture.</param>
        <param name="flags">Une des valeurs de <see cref="T:System.Globalization.CultureAndRegionModifiers" /> qui spécifie si le nouvel objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> est une culture neutre, s’il remplace une culture et un pays ou une région existants, ou s'il constitue une nouvelle culture.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `cultureName` paramètre spécifie le nom du nouveau <xref:System.Globalization.CultureAndRegionInfoBuilder> objet.  
  
 Le `flags` paramètre est utilisé pour un <xref:System.Globalization.CultureAndRegionModifiers> valeur qui spécifie si le nouveau <xref:System.Globalization.CultureAndRegionInfoBuilder> objet est une nouvelle culture personnalisée, ou remplace une culture neutre existante, culture spécifique ou des paramètres régionaux Windows.  
  
 Si le `cultureName` paramètre spécifie une culture .NET Framework existante, le personnalisé inscrit culture ou une culture générée à partir des paramètres régionaux Windows, le <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> constructeur remplit automatiquement la nouvelle <xref:System.Globalization.CultureAndRegionInfoBuilder> objet avec la culture et informations de pays/région.  
  
 Remplir le nouveau <xref:System.Globalization.CultureAndRegionInfoBuilder> avec les informations de culture et de pays/région de l’objet en appelant le <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> et <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> méthodes.  
  
## <a name="custom-culture-names"></a>Noms de Culture personnalisée  
 Le format par défaut de la `cultureName` paramètre pour une nouvelle culture personnalisée est « [`prefix`-]`language`[-`region`] [-`suffix`[`…`]] », où le `language` composant est requis et le `prefix`, `region`, et `suffix` composants sont facultatifs. La longueur maximale de chaque composant est 8 caractères et la longueur maximale de l’ensemble du `cultureName` paramètre est 84 caractères.  
  
 Le `prefix` composant est l’identification Internet IANA Assigned Numbers Authority (). Spécifiez « i- » ou « j’ai- » pour les noms de culture enregistrés avec l’IANA, ou « x- » ou « X- » pour les noms de cultures réservés pour une utilisation privée. Sinon, le préfixe n’est pas nécessaire. Pour plus d’informations, consultez la norme RFC 4646, « Tags for the Identification of langues ».  
  
 Le `language` composant de la `cultureName` paramètre spécifie un code de deux lettres minuscules dérivé d’ISO 639-1, et `region` spécifie un code de deux lettres majuscules dérivé d’ISO 3166. Par exemple, en-US représente anglais parlé aux États-Unis. L’absence de la `region` composant signifie une culture neutre.  
  
 Un `cultureName` qui est la même que le nom d’une culture inclus avec le .NET Framework signifie une culture de remplacement (substitution). Les valeurs qui peuvent être affectées aux propriétés d’une culture de remplacement sont limitées. Pour plus d’informations sur ces limitations, consultez les exceptions pour chaque propriété.  
  
 L’application utilise le `suffix` composant pour distinguer des cultures semblables. Par exemple, les deux entreprises, ABC et XYZ, créez et partagent un nouveau service Web ASP.NET pour promouvoir leurs produits sur différents marchés dans le monde entier. Les pages Web pour le service affichent des informations telles que le logo régional et le numéro de téléphone local de chaque entreprise en fonction de la culture de l’utilisateur. Le contenu spécifique à la culture pour chaque page Web est dans les fichiers de ressources distinct identifié par le nom de culture et qualifiés par le nom de la société.  Par exemple, les fichiers de ressources pour les cultures en-US et ja-JP sont nommés en-US-ABC, en-US-XYZ, ja-JP-ABC et ja-JP-XYZ. Les suffixes « ABC » et « XYZ » activer le service Web à utiliser la même logique d’application pour afficher des informations propres à chaque marché différentes.  
  
 Le `suffix` composant peut contenir des sous-composants, où chaque sous-composant est délimitée par un trait d’union et la longueur maximale de chaque sous-composant est 8 caractères. Par exemple, si « en-US-honda-cars » est le `cultureName` paramètre, « cars - honda- » sont le `suffix` composant.  
  
   
  
## Examples  
 L’exemple de code suivant crée une culture personnalisée avec un préfixe d’utilisation privée, puis répertorie un ensemble de ses propriétés. La première propriété répertorie le nom de la culture.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> est la chaîne vide ("").  
  
- ou - 
 <paramref name="cultureName" /> contient des caractères autres que « 0 » à « 9 », « ’a » à « z », « A » à « Z », le trait d’union (-) ou le trait de soulignement (_).  
  
- ou - 
 <paramref name="cultureName" /> contient des traits d’union (-) pour délimiter des composants, mais un ou plusieurs des composants <paramref name="prefix" />, <paramref name="language" />, <paramref name="region" />, ou <paramref name="suffix" /> est absent. C’est-à-dire deux ou plusieurs traits d’union sont adjacents.  
  
- ou - 
 <paramref name="cultureName" /> fait plus de 84 caractères.  
  
- ou - 
 <paramref name="cultureName" /> contient des traits d’union pour délimiter des composants, mais un ou plusieurs des composants dépassent 8 caractères.  
  
- ou - 
 <paramref name="cultureName" /> contient un trait d’union de fin ou de commencement (-) ou un trait de soulignement (_).  
  
- ou - 
 <paramref name="cultureName" /> spécifie une autre culture de remplacement de tri à la place d’une culture .NET Framework. Par exemple, <paramref name="culturenName" /> est "de-de_phoneb", culture qui trie des chaînes telles qu’elles apparaissent dans un annuaire allemand, au lieu de "de-DE", la culture allemande (Allemagne).  
  
- ou - 
 <paramref name="flags" /> contient une combinaison non valide de valeurs <see cref="T:System.Globalization.CultureAndRegionModifiers" />.  
  
- ou - 
 <paramref name="flags" /> contient <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> ou <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> et <paramref name="cultureName" /> spécifie une culture qui n’est pas trouvée.  
  
- ou - 
 <paramref name="flags" /> contient <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> et <paramref name="cultureName" /> spécifie une culture personnalisée créée par l’utilisateur qui ne remplace pas de culture livrée avec le .NET Framework.  
  
- ou - 
 <paramref name="flags" /> contient <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> et <paramref name="cultureName" /> spécifie une culture qui n’est pas une culture neutre.  
  
- ou - 
 <paramref name="flags" /> contient <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> et <paramref name="cultureName" /> spécifie une culture personnalisée créée par l’utilisateur qui remplace une culture spécifique livrée avec le .NET Framework.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="T:System.Globalization.CultureAndRegionModifiers" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCalendars">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar[] AvailableCalendars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] AvailableCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailableCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Globalization::Calendar ^&gt; ^ AvailableCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); void set(cli::array &lt;System::Globalization::Calendar ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AvailableCalendars : System.Globalization.Calendar[] with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau de calendriers pris en charge par cet objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</summary>
        <value>Tableau de calendriers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, le tableau assigné est <see langword="null" />, ou un élément du tableau assigné est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Cette propriété n’est pas prise en charge pour les cultures neutres.  
  
- ou - 
Dans une opération ensembliste, le tableau assigné contient <see cref="T:System.Globalization.PersianCalendar" />, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" />, <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> ou <see cref="T:System.Globalization.JulianCalendar" />.  
  
- ou - 
Dans une opération ensembliste, le tableau assigné contient un calendrier personnalisé.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); void set(System::Globalization::CompareInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Globalization.CompareInfo" /> qui définit le mode de comparaison des chaînes de la culture.</summary>
        <value>Objet <see cref="T:System.Globalization.CompareInfo" /> qui définit le mode de comparaison des chaînes de la culture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A?displayProperty=nameWithType> propriété correspond à la <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> propriété.  
  
 Le <xref:System.Globalization.TextInfo> et <xref:System.Globalization.CompareInfo> les objets qui sont affectés à la <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> et <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> deux propriétés prennent en charge la comparaison de chaînes dépendantes de la culture et respectant la casse. Le <xref:System.Globalization.CompareInfo> objet a également des méthodes qui incluent un <xref:System.Globalization.CompareOptions> paramètre qui prend en charge la comparaison dépendante de la culture, non-respect de la casse. Ces deux propriétés doivent être attribuées aux <xref:System.Globalization.TextInfo> et <xref:System.Globalization.CompareInfo> objets qui représentent les mêmes paramètres régionaux.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur assignée est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Cette culture personnalisée est une substitution d’une culture intégrée.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConsoleFallbackUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConsoleFallbackUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleFallbackUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConsoleFallbackUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsoleFallbackUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une autre culture de l'interface utilisateur qui convient aux applications console lorsque la culture de l'interface graphique utilisateur par défaut est inappropriée.</summary>
        <value>Autre culture utilisée pour lire et afficher le texte dans la console.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans une opération get, le <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> (méthode). Spécifiez `null` dans une opération ensembliste pour indiquer que la culture définie par la <xref:System.Globalization.CultureAndRegionInfoBuilder> objet est la culture d’interface utilisateur. Si vous tentez de définir la propriété à une culture qui a lui-même une autre Culture de l’interface utilisateur de secours de Console, puis il recevra cette culture « feuille » finale.  
  
 Les langages tels que l’arabe, hébreu, persan, Urdu et SYRIAQUE sont basées sur le texte bidirectionnel. Les applications de Windows, qui emploient une interface utilisateur graphique, prennent en charge les langues bidirectionnelles. Toutefois, les applications de console, qui emploient l’interface utilisateur de texte de la console de système d’exploitation, ne fournissent pas de prise en charge bidirectionnelle. Par conséquent, si une application de console est localisée en arabe ou en hébreu, il affiche un texte illisible sur l’écran de la console.  
  
 La culture d’interface utilisateur spécifie les ressources qu’une application doit prendre en charge l’entrée d’utilisateur et de sortie et par défaut est identique à la culture du système d’exploitation. Par exemple, le <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propriété retourne une culture arabe pour un système d’exploitation arabe. L’application doit utiliser le <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> propriété à récupérer une culture neutre qui convient pour une interface utilisateur d’application console.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dans une opération ensembliste où la culture spécifiée n’est pas <see langword="null" />, la propriété <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> de la culture spécifiée n’est pas la même que la culture spécifiée.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLdml">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml (string xmlFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml(string xmlFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLdml (xmlFileName As String) As CultureAndRegionInfoBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureAndRegionInfoBuilder ^ CreateFromLdml(System::String ^ xmlFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromLdml : string -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml xmlFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureAndRegionInfoBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFileName">Nom de fichier qui contient la représentation XML d'un objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</param>
        <summary>Reconstitue un objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> d'un fichier XML spécifié qui contient une représentation de l'objet.</summary>
        <returns>Nouvel objet qui est équivalent aux informations stockées dans le paramètre <paramref name="xmlFileName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `xmlFileName` paramètre spécifie un nom de fichier qui contient la représentation XML d’un <xref:System.Globalization.CultureAndRegionInfoBuilder> objet. Le format du fichier XML est appelé Locale Data Markup Language (LDML) version 1.1. Un nouveau <xref:System.Globalization.CultureAndRegionInfoBuilder> objet est créé et initialisé avec les données dans `xmlFileName`. Le <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> méthode effectue l’opération inverse de la <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> (méthode).  
  
 Dans le fichier LDML, les propriétés d’une culture sont spécifiées comme éléments enfants de la `<special>` élément dans la `<identity>` section. Une valeur de propriété est généralement spécifiée par l’élément `type` attribut. Par exemple, l’extrait suivant d’un fichier LDML définit le parent d’une culture en tant que la culture neutre.  
  
```xml  
<identity>  
   <version number="1.1">ldml version 1.1</version>  
   <generation date="2012-05-16" />  
   <special xmlns:msLocale="http://schemas.microsoft.com/globalization/2004/08/carib/ldml">  
      <!—content removed -->  
      <msLocale:parentName type="en" />  
      <!—content removed -->  
   </special>  
</identity>  
```  
  
 Pour plus d’informations sur la norme LDML, consultez [Unicode Technical Standard #35, « Locale Data Markup Language (LDML) »](http://go.microsoft.com/fwlink/p/?LinkId=252840) sur le site Web du Unicode Consortium.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> et <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> méthodes.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlFileName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="xmlFileName" /> est une chaîne vide (""), ou un nom de fichier ou de chemin d’accès non valide.</exception>
        <exception cref="T:System.Xml.XmlException">Les données dans <paramref name="xmlFileName" /> ne sont pas au format XML valide.  
  
- ou - 
Une erreur d’E/S s’est produite au moment de l’accès à <paramref name="xmlFileName" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Les données dans <paramref name="xmlFileName" /> ne sont pas au format LDML valide.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CultureEnglishName">
      <MemberSignature Language="C#" Value="public string CultureEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de culture en anglais.</summary>
        <value>Nom de culture en anglais.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.EnglishName%2A> propriété.  
  
 Par exemple, la valeur de retour de la <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> propriété pour la culture spécifique anglais tel qu’il est parlé aux États-Unis est « Anglais (États-Unis) ».  
  
 La valeur de cette propriété est le même, quelle que soit la version linguistique du .NET Framework.  
  
   
  
## Examples  
 L’exemple de code suivant crée une culture personnalisée avec un préfixe d’utilisation privée, puis répertorie un ensemble de ses propriétés. La première propriété répertorie le nom de la culture.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 0 et 79 caractères.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nom de la culture en cours de création.</summary>
        <value>Nom de culture de l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour est le nom de la culture spécifiée dans le <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> constructeur. Si le nom de culture spécifié est identique à une culture existante, à l’exception des cas, la valeur de retour est le nom de la culture existante, pas le nom de la culture spécifiée.  
  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.Name%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant crée une culture personnalisée avec un préfixe d’utilisation privée, puis répertorie un ensemble de ses propriétés. La première propriété répertorie le nom de la culture.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureNativeName">
      <MemberSignature Language="C#" Value="public string CultureNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de culture au format et dans la langue pour lesquels la culture est configurée.</summary>
        <value>Nom de culture au format et dans la langue pour lesquels la culture est configurée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.NativeName%2A> propriété.  
  
 La valeur de cette propriété est le même, quelle que soit la version linguistique du .NET Framework.  
  
 Nom complet de la culture ne peut pas afficher correctement si le système n’est pas défini pour afficher correctement les langue de la culture. Par exemple, si le <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> propriété est « ja-JP » pour le japonais (Japon), le <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> propriété ne s’affiche pas correctement sur un système qui a la valeur anglais uniquement. Toutefois, les systèmes d’exploitation multilingues, tels que Windows 2000, affichez le <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> propriété correctement.  
  
   
  
## Examples  
 L’exemple de code suivant crée une culture personnalisée avec un préfixe d’utilisation privée, puis répertorie un ensemble de ses propriétés. La première propriété répertorie le nom de la culture.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 0 et 79 caractères.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Globalization.CultureTypes" /> qui décrit la culture représentée par l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</summary>
        <value>Une des valeurs de <see cref="T:System.Globalization.CultureTypes" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="P:System.Globalization.CultureInfo.CultureTypes" />
        <altmember cref="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public string CurrencyEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom, en anglais, de la devise utilisée dans le pays ou la région représentés par l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</summary>
        <value>Nom, en anglais, de la devise utilisée dans la région.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName%2A> propriété est équivalente à la <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La valeur dans une opération ensembliste est la chaîne vide ("").</exception>
        <exception cref="T:System.NotSupportedException">L’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel est une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public string CurrencyNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom natif de la devise utilisée dans le pays ou la région représentés par l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</summary>
        <value>Nom de la devise utilisée dans le pays ou la région représentés par l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel, mis en forme dans la langue associée au code de pays ou de région ISO 3166 de la région.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName%2A> propriété est équivalente à la <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La valeur dans une opération ensembliste est la chaîne vide ("").</exception>
        <exception cref="T:System.NotSupportedException">L’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel est une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public int GeoId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GeoId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un numéro d'identification unique pour une région géographique, un pays, une ville ou un emplacement.</summary>
        <value>Nombre signé de 32 bits qui identifie de manière unique un emplacement géographique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.GeoId%2A> propriété.  
  
 L’application doit utiliser le <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> propriété pour fournir des services spécifiques à la culture aux clients. Par exemple, le <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> propriété peut être utilisée en tant que clé pour accéder à un enregistrement de base de données qui contient des informations spécifiques sur une région.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel définit une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="GregorianDateTimeFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property GregorianDateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DateTimeFormatInfo ^ GregorianDateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GregorianDateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> qui définit le format des dates et des heures selon le calendrier grégorien.</summary>
        <value>Objet <see cref="T:System.Globalization.DateTimeFormatInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque culture, notamment la culture définie par la <xref:System.Globalization.CultureAndRegionInfoBuilder> d’objet, contient un calendrier grégorien localisé qui est associé à un <xref:System.Globalization.DateTimeFormatInfo> objet. Le <xref:System.Globalization.DateTimeFormatInfo> objet définit le mode d’affichage des dates et heures dans votre application. Le <xref:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat%2A> valeur de propriété est la <xref:System.Globalization.DateTimeFormatInfo> objet associé au premier calendrier grégorien localisé retourné par la <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Une propriété de la valeur dans une opération ensembliste a retourné une valeur de propriété non valide.</exception>
        <exception cref="T:System.NotSupportedException">L’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel est une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un nom de culture mis en forme selon la norme RFC 4646, « Tags for the Identification of Languages ».</summary>
        <value>Nom de culture mis en forme selon la norme RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag%2A> propriété obtient ou définit un nom de culture mis en forme selon la norme RFC 4646, qui peut être différent du nom de culture retourné par la <xref:System.Globalization.CultureInfo.Name%2A> propriété. Par exemple, dans la version 1.0 du .NET Framework, le nom de culture neutre pour le chinois traditionnel était « zh-CHT ». En revanche, la norme RFC 4646 définit ce nom de culture en tant que « zh-HANT ». (Notez que dans le .NET Framework version 4, le nom d’affichage pour « zh-CHT » est « Chinois (traditionnel) Legacy »).  
  
 Un nom de culture RFC 4646 se compose de plusieurs composants. Un nom de culture classique se compose d’un identificateur de langue obligatoire, d’un identificateur de script facultatif et d’un identificateur facultatif de pays/région. Par exemple, un nom de culture RFC 4646 valide pour la langue serbe, le script cyrillique et la région de la Serbie est « sr-Cyrl-RS ».  
  
 Notez que deux ou plusieurs cultures peuvent avoir la même balise de langue IETF.  
  
 Pour plus d’informations, consultez la norme RFC 4646, « Balises for the Identification of Languages, » à l’adresse [Request For Comments](http://go.microsoft.com/fwlink/?linkid=45286).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Dans une opération ensembliste, la longueur de la valeur n’est pas comprise entre 1 et 84 caractères.</exception>
        <exception cref="T:System.ArgumentException">Dans une opération ensembliste, un composant du nom spécifié dans la valeur est vide ou dépasse 8 caractères, pas un signe alphanumérique ou un trait d’union (-), ou le nom contient un trait d’union de fin ou de commencement.</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public bool IsMetric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMetric { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le pays ou la région utilise le système métrique pour les mesures.</summary>
        <value>
          <see langword="true" /> si le pays ou la région utilise le système métrique pour les mesures ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Cette opération n’est pas valide pour une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public string ISOCurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ISOCurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le symbole de devise à trois caractères défini dans la norme ISO 4217 pour le pays ou la région.</summary>
        <value>Symbole de devise ISO 4217 sur trois caractères associé au pays/région.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> propriété.  
  
 Une liste des symboles de devise ISO 4217 sur trois caractères est fournie dans le <xref:System.Globalization.RegionInfo> rubrique de la classe. Par exemple, le symbole de devise ISO 4217 pour le dollar américain est « USD ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Il s’agit d’une culture neutre.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Dans une opération ensembliste, la longueur d’une valeur n’est pas comprise entre 0 et 8 caractères.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le sens prédominant des lignes de texte dans le système d'écriture associé à l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</summary>
        <value>
          <see langword="true" /> si la direction prédominante des lignes de texte dans le système d'écriture actuel est de droite à gauche ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’application utilise le <xref:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft%2A> barres de propriété afin de déterminer la position relative des contrôles tels que des boutons et défilement dans une interface utilisateur graphique.  
  
 Pour accéder à la direction du texte dans une culture personnalisée créée à partir du prédominante <xref:System.Globalization.CultureAndRegionInfoBuilder> de l’objet, l’application doit utiliser le <xref:System.Globalization.TextInfo.IsRightToLeft%2A> propriété de l’objet retourné par la <xref:System.Globalization.CultureInfo.TextInfo%2A> propriété de la culture personnalisée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public int KeyboardLayoutId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyboardLayoutId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'identificateur des paramètres régionaux d'entrée actifs.</summary>
        <value>Nombre signé de 32 bits qui spécifie un identificateur de paramètres régionaux en entrée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.KeyboardLayoutId%2A> propriété.  
  
 Identificateur de paramètres régionaux d’entrée était précédemment appelé la disposition du clavier. L’identificateur peut être utilisé pour un convertisseur de reconnaissance vocale, un éditeur de méthode d’entrée (IME) ou toute autre forme d’entrée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Dans une opération ensembliste, la valeur est zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur de culture de l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</summary>
        <value>Identificateur de culture de l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.LCID%2A?displayProperty=nameWithType> propriété correspond à la <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> propriété.  
  
 Pour les cultures de remplacement, l’identificateur de culture est mappé à l’identificateur de paramètres régionaux de prise en charge NLS (National Language) correspondant. Pour obtenir des informations sur les cultures personnalisées définies par l’utilisateur, la valeur de cette propriété est toujours 0 x 1000 hexadécimal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromCultureInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromCultureInfo (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromCultureInfo(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromCultureInfo (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromCultureInfo(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromCultureInfo : System.Globalization.CultureInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Objet dont les propriétés seront utilisées.</param>
        <summary>Définit les propriétés de l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel avec les propriétés correspondantes de l'objet <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromRegionInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromRegionInfo (System.Globalization.RegionInfo region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromRegionInfo(class System.Globalization.RegionInfo region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromRegionInfo (region As RegionInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromRegionInfo(System::Globalization::RegionInfo ^ region);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromRegionInfo : System.Globalization.RegionInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromRegionInfo region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Globalization.RegionInfo" />
      </Parameters>
      <Docs>
        <param name="region">Objet dont les propriétés seront utilisées.</param>
        <summary>Définit les propriétés de l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel avec les propriétés correspondantes de l'objet <see cref="T:System.Globalization.RegionInfo" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Les informations de pays ou de région ne peuvent pas être définies parce que l’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel spécifie une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit le format d'affichage des nombres, devises et pourcentages approprié pour la culture.</summary>
        <value>Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit le format d'affichage des nombres, devises et pourcentages approprié pour la culture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propriété.  
  
 Votre application doit appeler cette propriété uniquement pour des cultures spécifiques.  
  
 Le <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, et <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> propriétés de <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> sont ignorés. Le formulaire enregistré d’une culture n’enregistre pas de valeurs explicites pour ces propriétés. Au lieu de cela, lorsque la culture est chargée, ils toujours par défaut <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, respectivement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Cette opération n’est pas valide pour une culture neutre.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La spécification pour une propriété de nombre, de devise ou de pourcentage de cette culture contient trop de chiffres ou est hors limites.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture parente de la culture personnalisée actuelle.</summary>
        <value>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture parente de la culture personnalisée actuelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les cultures ont une hiérarchie. Pour les cultures prédéfinies, le parent d’une culture spécifique est une culture neutre et le parent d’une culture neutre est le <xref:System.Globalization.CultureInfo.InvariantCulture%2A>. La culture parente englobe uniquement les informations qui sont communes à ses enfants.  
  
 Il est généralement recommandé que les cultures personnalisées sont conformes à cette hiérarchie. Toutefois, par défaut, le <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> d’une culture personnalisée est la <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> de la culture sur lequel il est basé. Si l’application crée une culture avec <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> « en-US-MyCulture » en fonction de « en-US », son parent est « fr », car c’est le <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> de « en-US ». Si l’application utilise « en-US » comme le <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> de la nouvelle culture personnalisée, elle doit définir cette valeur explicitement.  
  
 Si les ressources pour la culture spécifique ne sont pas disponibles dans le système, les ressources de la culture neutre sont utilisés. Si les ressources de la culture neutre ne sont pas disponibles, les ressources incorporées dans l’assembly principal sont utilisés. Pour plus d’informations sur le processus de secours, consultez [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 La liste des cultures dans l’API Windows est légèrement différente de la liste des cultures dans le .NET Framework. Si l’interopérabilité avec Windows est nécessaire, par exemple, via la plateforme mécanisme d’appel, l’application doit utiliser une culture spécifique qui est définie dans le .NET Framework. Cela garantit la cohérence avec les paramètres régionaux Windows équivalent, sont identifié avec le même <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Dans une opération ensembliste, la valeur de culture ne peut pas être trouvée. La valeur assignée est probablement une culture personnalisée non enregistrée.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Dans une opération ensembliste qui parcourt les ancêtres de la culture actuelle, la culture invariante ne peut pas être trouvée parmi les 10 générations d’ancêtres.  
  
- ou - 
Dans une opération ensembliste, une référence circulaire a été découverte : la valeur assignée est un ancêtre de la culture personnalisée actuelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionEnglishName">
      <MemberSignature Language="C#" Value="public string RegionEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom complet du pays ou de la région en anglais.</summary>
        <value>Nom complet du pays ou de la région en anglais.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.EnglishName%2A> propriété.  
  
 Par exemple, la valeur de retour de <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> pour les États-Unis est « États-Unis ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette opération n’est pas valide pour une culture neutre.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 0 et 79 caractères.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegionName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du pays ou de la région pour l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</summary>
        <value>Nom du pays ou de la région pour l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour est le nom de la culture spécifiée dans le <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> constructeur. Si le nom de culture spécifié est identique à une culture existante, à l’exception des cas, la valeur de retour est le nom de la culture existante, pas le nom de la culture spécifiée.  
  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.Name%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette opération n’est pas valide pour une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionNativeName">
      <MemberSignature Language="C#" Value="public string RegionNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom complet du pays ou de la région tel qu'il est connu par les personnes de cette culture personnalisée.</summary>
        <value>Nom local du pays ou de la région.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.NativeName%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette opération n’est pas valide pour une culture neutre.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 79 caractères.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberSignature Language="F#" Value="member this.Register : unit -&gt; unit" Usage="cultureAndRegionInfoBuilder.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fait persister l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel comme une culture personnalisée sur l'ordinateur local et rend cette culture disponible aux applications. Requiert des privilèges administratifs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> méthode stocke une culture personnalisée en tant que fichier sur l’ordinateur local, dans le sous-répertoire Globalization du répertoire retourné par Win32 [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) (fonction). Ce processus est appelé l’inscription de la culture personnalisée. Après avoir enregistré la culture personnalisée, une nouvelle culture personnalisée peut être créée en spécifiant le nom de culture dans un <xref:System.Globalization.CultureInfo.%23ctor%2A> constructeur ou lorsqu’il appelle le <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> (méthode).  
  
 La culture personnalisée peut être supprimée en appelant le <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> (méthode).  
  
 [!code-csharp[sys.glob.carib.register#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.register/CS/persist.cs#1)]
 [!code-vb[sys.glob.carib.register#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.register/VB/persist.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La culture personnalisée est déjà enregistrée.  
  
- ou - 
L’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel a une propriété qui doit être définie avant que la culture puisse être enregistrée. <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> et <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" /> doivent être définis pour toutes les cultures, qu’elles soient neutres ou spécifiques. <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" /> et <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" /> doivent également être définis pour les cultures spécifiques.  
  
Cette méthode lève également <see cref="T:System.InvalidOperationException" /> si les propriétés suivantes ne sont pas définies : 
 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Une valeur de propriété d’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> dépasse sa longueur ou valeur maximale.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L’utilisateur n’a pas de privilèges administratifs.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="cultureAndRegionInfoBuilder.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nom d'un fichier chargé de contenir la représentation XML de cette culture personnalisée.</param>
        <summary>Écrit une représentation XML de l'objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel dans le fichier spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> méthode écrit actuel <xref:System.Globalization.CultureAndRegionInfoBuilder> objet dans le fichier spécifié par le `filename` paramètre dans un format XML appelé Locale Data Markup Language (LDML) version 1.1. Le <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> méthode effectue l’opération inverse de la <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> (méthode).  
  
 Pour plus d’informations sur le format d’un fichier LDML, consultez le <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> (méthode). Pour plus d’informations sur la norme LDML, consultez [Unicode Technical Standard #35, « Locale Data Markup Language (LDML) »](http://go.microsoft.com/fwlink/p/?LinkId=252840) sur le site Web du Unicode Consortium.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> et <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> méthodes.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le <paramref name="filename" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur d’une propriété d’un objet <see cref="T:System.Globalization.DateTimeFormatInfo" />, <see cref="T:System.Globalization.TextInfo" /> ou <see cref="T:System.Globalization.NumberFormatInfo" /> contenu dans l’objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> actuel n’est pas valide.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.TextInfo TextInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); void set(System::Globalization::TextInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Globalization.TextInfo" /> qui définit le système d'écriture associé à cette culture personnalisée.</summary>
        <value>Objet qui définit le système d'écriture associé à cette culture personnalisée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A?displayProperty=nameWithType> propriété fournit des informations de casse propres à la culture pour les chaînes. Il correspond à la <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> propriété.  
  
 Le <xref:System.Globalization.TextInfo> et <xref:System.Globalization.CompareInfo> les objets qui sont affectés à la <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> et <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> deux propriétés prennent en charge la comparaison de chaînes dépendantes de la culture et respectant la casse. Le <xref:System.Globalization.CompareInfo> objet a également des méthodes qui incluent un <xref:System.Globalization.CompareOptions> paramètre qui prend en charge la comparaison dépendante de la culture, non-respect de la casse. Ces deux propriétés doivent être attribuées aux <xref:System.Globalization.TextInfo> et <xref:System.Globalization.CompareInfo> objets qui représentent les mêmes paramètres régionaux.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette opération n’est pas prise en charge pour les cultures de substitution.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le nombre de caractères dans un séparateur de liste n’est pas compris entre 0 et 3 caractères.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le code ISO 639-2 de trois lettres correspondant à la langue de cette culture personnalisée.</summary>
        <value>Code ISO 639-2 de trois lettres correspondant à la langue de l'objet <see cref="T:System.Globalization.CultureInfo" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.ThreeLetterISOLanguageName%2A> propriété.  
  
 Par exemple, l’abréviation à trois lettres pour l’anglais est « eng ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 8 caractères.</exception>
        <exception cref="T:System.ArgumentException">La valeur d’une opération ensembliste contient un caractère qui n’est pas compris dans les plages allant de « a » à « z », « A » à « Z » ou « 0 » à « 9 ».</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le code de trois lettres défini dans ISO 3166 pour le pays ou la région.</summary>
        <value>Code à trois lettres défini dans ISO 3166 pour le pays/région.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propriété.  
  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> propriété contient un des codes de trois lettres définis dans ISO 3166 pour le pays/région. Par exemple, le code de trois lettres pour les États-Unis est « USA ».  
  
 Cas n’est pas significatif. Toutefois, le <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A>, <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A>et le <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> propriétés contiennent le code approprié en majuscules.  
  
 Les noms de pays/région prédéfinis sont répertoriés dans le <xref:System.Globalization.RegionInfo> rubrique de la classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 8 caractères.</exception>
        <exception cref="T:System.ArgumentException">La valeur d’une opération ensembliste contient un caractère qui n’est pas compris dans les plages allant de « a » à « z », « A » à « Z » ou « 0 » à « 9 ».</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le code de trois lettres correspondant à la langue, tel que défini dans l'API Windows.</summary>
        <value>Code à trois lettres correspondant à la langue, tel que défini dans l'API Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName%2A> propriété.  
  
 Cette propriété retourne la même valeur que la méthode d’API de Windows `GetLocaleInfo` avec la valeur LOCALE_SABBREVLANGNAME. Par exemple, le code de trois lettres pour l’anglais (États-Unis) tel que défini dans l’API Windows est « enu ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 8 caractères.</exception>
        <exception cref="T:System.ArgumentException">La valeur d’une opération ensembliste contient un caractère qui n’est pas compris dans les plages allant de « a » à « z », « A » à « Z » ou « 0 » à « 9 ».</exception>
        <exception cref="T:System.NotSupportedException">Dans une opération ensembliste, la culture personnalisée actuelle est une culture de substitution.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsRegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le code à trois lettres affecté par Windows au pays ou à la région représenté par la culture personnalisée actuelle.</summary>
        <value>Code à trois lettres affecté par Windows au pays ou à la région représenté par cet objet <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName%2A> propriété.  
  
 Par exemple, le code de trois lettres pour les États-Unis est « USA ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 8 caractères.</exception>
        <exception cref="T:System.ArgumentException">La valeur d’une opération ensembliste contient un caractère qui n’est pas compris dans les plages allant de « a » à « z », « A » à « Z » ou « 0 » à « 9 ».</exception>
        <exception cref="T:System.NotSupportedException">Dans une opération ensembliste, la culture personnalisée actuelle est une culture de substitution ou une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string TwoLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le code à deux lettres ISO 639-1 pour la langue de l'objet <see cref="T:System.Globalization.CultureInfo" /> actuel.</summary>
        <value>Code à deux lettres ISO 639-1 pour la langue de l'objet <see cref="T:System.Globalization.CultureInfo" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName%2A> propriété correspond à la <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> propriété.  
  
 Par exemple, l’abréviation à deux lettres pour l’anglais est « en ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 8 caractères.</exception>
        <exception cref="T:System.ArgumentException">La valeur d’une opération ensembliste contient un caractère qui n’est pas compris dans les plages allant de « a » à « z », « A » à « Z » ou « 0 » à « 9 ».</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public string TwoLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le code à deux lettres défini dans ISO 3166 pour le pays ou la région.</summary>
        <value>Code à deux lettres défini dans ISO 3166 pour le pays/région.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> propriété correspond à la <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> propriété.  
  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> valeur de propriété est un des codes à deux lettres définis dans ISO 3166 pour le pays/région. Par exemple, le code à deux lettres pour les États-Unis est « US ». Prédéfinis <xref:System.Globalization.RegionInfo> noms sont répertoriés dans le <xref:System.Globalization.RegionInfo> rubrique de la classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La longueur de la valeur dans une opération ensembliste n’est pas comprise entre 1 et 8 caractères.</exception>
        <exception cref="T:System.ArgumentException">La valeur d’une opération ensembliste contient un caractère qui n’est pas compris dans les plages allant de « a » à « z », « A » à « Z » ou « 0 » à « 9 ».</exception>
        <exception cref="T:System.NotSupportedException">Dans une opération ensembliste, la culture personnalisée actuelle est une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Globalization.CultureAndRegionInfoBuilder.Unregister cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">Nom de la culture personnalisée à supprimer.</param>
        <summary>Supprime une culture personnalisée de l'ordinateur local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> méthode fait le contraire de la <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> (méthode). Le <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> méthode stocke une culture personnalisée sous la forme d’un fichier sur l’ordinateur local, dans le sous-répertoire de globalisation du répertoire retourné par l’API Win32 [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) (fonction). Le <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> méthode supprime le fichier de culture personnalisée persistant de l’ordinateur. Une fois que le fichier est supprimé, les instances existantes de la culture personnalisée dans la mémoire de l’ordinateur continuent de fonctionner, mais les nouvelles instances de la culture personnalisée ne peut pas être créés.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> (méthode).  
  
 [!code-csharp[sys.glob.carib.unregister#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.unregister/CS/unregister.cs#1)]
 [!code-vb[sys.glob.carib.unregister#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.unregister/VB/unregister.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="cultureName" /> est une culture parente ou une culture de l’interface utilisateur de secours de la console d’une culture dépendante.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L’utilisateur n’a pas de privilège administratif.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> spécifie une culture qui n’est pas trouvée.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      </Docs>
    </Member>
  </Members>
</Type>