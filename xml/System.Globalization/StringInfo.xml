<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfcadf1280b7a99ae67ace6278f0fb80976a6481" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682143" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des fonctionnalités permettant de fractionner une chaîne en éléments de texte et de parcourir ces éléments de texte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework définit un élément de texte comme une unité de texte qui est affiché comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être un caractère de base, une paire de substitution ou un caractère d’association séquence. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une paire de substitution comme une représentation de caractère codée pour un caractère abstrait unique qui se compose d’une séquence de deux unités de code, où la première unité de la paire est un substitut étendu et la deuxième est une faible substitut. La norme Unicode définit une combinaison séquence comme une combinaison d’un caractère de base et un ou plusieurs caractères de combinaison de caractères. Une paire de substitution peut représenter un caractère de base ou d’un caractère d’association.  
  
 Le <xref:System.Globalization.StringInfo> classe vous permet de travailler avec une chaîne comme une série d’éléments textuels plutôt que personne <xref:System.Char> objets.  
  
 Pour instancier un <xref:System.Globalization.StringInfo> objet qui représente une chaîne spécifiée, vous pouvez effectuer l’une des opérations suivantes :  
  
-   Appelez le <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructeur et lui passer la chaîne que le <xref:System.Globalization.StringInfo> objet consiste à représenter en tant qu’argument.  
  
-   Appeler la valeur par défaut <xref:System.Globalization.StringInfo.%23ctor> constructeur et l’affecter la chaîne de la <xref:System.Globalization.StringInfo> objet consiste à représenter à la <xref:System.Globalization.StringInfo.String%2A> propriété.  
  
 Vous pouvez travailler avec les différents éléments de texte dans une chaîne de deux manières :  
  
-   Par l’énumération de chaque élément de texte. Pour ce faire, vous appelez le <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> (méthode) et ensuite appeler la <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> méthode sur le <xref:System.Globalization.TextElementEnumerator> jusqu'à ce que la méthode retourne l’objet `false`.  
  
-   En appelant le <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> méthode pour récupérer un tableau qui contient l’index de début de chaque élément de texte. Vous pouvez ensuite récupérer les éléments de texte individuels en transmettant ces index pour la <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> (méthode).  
  
 L’exemple suivant illustre les deux méthodes de travail avec les éléments de texte dans une chaîne. Il crée deux chaînes :  
  
-   `strCombining`, qui est une chaîne de caractères arabes qui inclut les trois éléments de texte avec plusieurs <xref:System.Char> objets. Le premier élément de texte est le caractère de base arabe lettre ALEF (U +-627) suivie HAMZA ARABE ci-dessous (U +-655) et KASRA ARABE (U + 0650). Le deuxième élément de texte est ARABE HÉ (U + 0647) suivie FATHA ARABE (U +-64E). Le troisième élément de texte est arabe LETTTER BA (U + 0628) suivie DAMMATAN ARABE (U + 064C).  
  
-   `strSurrogates`, qui est une chaîne qui comprend trois paires de substitution : grec ACROPHONIC cinq TALENTS (U + 10148) à partir du plan multilingue supplémentaires, U + 20026 à partir du plan IDÉOGRAPHIQUE supplémentaires et U + F1001 à partir de la zone utilisateur privé. L’encodage UTF-16 de chaque caractère est une paire de substitution se compose d’un substitut suivi d’un substitut faible.  
  
 Chaque chaîne est analysée une seule fois par le <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> (méthode), puis par le <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> (méthode). Les deux méthodes d’analyser les éléments de texte dans les deux chaînes correctement et affichent les résultats de l’opération d’analyse.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 Cet exemple montre comment utiliser le <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> et <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> méthodes de la <xref:System.Globalization.StringInfo> classe pour manipuler une chaîne qui contient des caractères de substitution et combinaison.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>En interne, les méthodes de la <see cref="T:System.Globalization.StringInfo" /> classe appeler les méthodes de la <see cref="T:System.Globalization.CharUnicodeInfo" /> classe pour déterminer les catégories de caractères. En commençant par le [!INCLUDE[net_v462](~/includes/net-v462-md.md)], classification des caractères est basée sur [la norme Unicode, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0). Pour le [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] via la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], il est basé sur [la norme Unicode, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Globalization.StringInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Globalization.StringInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la nouvelle <xref:System.Globalization.StringInfo> objet est initialisé à une chaîne vide (« »). Vous pouvez affecter une autre chaîne à ce dernier à l’aide de la <xref:System.Globalization.StringInfo.String%2A> propriété.  Vous pouvez également instancier un <xref:System.Globalization.StringInfo> objet qui représente une chaîne spécifiée en une seule étape en appelant le <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Chaîne pour initialiser cet objet <see cref="T:System.Globalization.StringInfo" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Globalization.StringInfo" /> avec une chaîne spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur affecte l’argument de valeur à l’objet <xref:System.Globalization.StringInfo.String%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet.</param>
        <summary>Indique si l'objet <see cref="T:System.Globalization.StringInfo" /> actuel est égal à un objet spécifié.</summary>
        <returns>
          <see langword="true" /> si le paramètre <paramref name="value" /> est un objet <see cref="T:System.Globalization.StringInfo" /> et que sa propriété <see cref="P:System.Globalization.StringInfo.String" /> est égale à la propriété <see cref="P:System.Globalization.StringInfo.String" /> de cet objet <see cref="T:System.Globalization.StringInfo" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calcule un code de hachage pour la valeur de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours.</summary>
        <returns>Code de hachage entier 32 bits signé basé sur la valeur de chaîne de cet objet <see cref="T:System.Globalization.StringInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le comportement de <xref:System.Globalization.StringInfo.GetHashCode%2A> dépend de son implémentation, ce qui peut changer d’une version du common language runtime à un autre. Cela peut se produire pour améliorer les performances de <xref:System.Globalization.StringInfo.GetHashCode%2A>. Pour rendre le comportement de <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, l’application doit substituer l’implémentation du runtime <xref:System.Globalization.StringInfo.GetHashCode%2A> par une implémentation connue pour ne jamais changer.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient le premier élément de texte dans une chaîne spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Chaîne dans laquelle obtenir l'élément de texte.</param>
        <summary>Obtient le premier élément de texte dans une chaîne spécifiée.</summary>
        <returns>Chaîne contenant le premier élément de texte dans la chaîne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework définit un élément de texte comme une unité de texte qui est affiché comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être un caractère de base, une paire de substitution ou un caractère d’association séquence. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une paire de substitution comme une représentation de caractère codée pour un caractère abstrait unique qui se compose d’une séquence de deux unités de code, où la première unité de la paire est un substitut étendu et la deuxième est une faible substitut. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une combinaison séquence comme une combinaison d’un caractère de base et un ou plusieurs caractères de combinaison de caractères. Une paire de substitution peut représenter un caractère de base ou d’un caractère d’association.  
  
 Cette méthode retourne uniquement le premier élément de texte. Pour parcourir les éléments de texte de la chaîne, l’application doit utiliser le <xref:System.Globalization.TextElementEnumerator> objet généré par le <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Chaîne dans laquelle obtenir l'élément de texte.</param>
        <param name="index">Index de base zéro au niveau duquel l'élément de texte débute.</param>
        <summary>Obtient l'élément de texte à l'index spécifié de la chaîne spécifiée.</summary>
        <returns>Chaîne contenant l'élément de texte à l'index spécifié de la chaîne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework définit un élément de texte comme une unité de texte qui est affiché comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être un caractère de base, une paire de substitution ou un caractère d’association séquence. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une paire de substitution comme une représentation de caractère codée pour un caractère abstrait unique qui se compose d’une séquence de deux unités de code, où la première unité de la paire est un substitut étendu et la deuxième est une faible substitut. La norme Unicode définit une combinaison séquence comme une combinaison d’un caractère de base et un ou plusieurs caractères de combinaison de caractères. Une paire de substitution peut représenter un caractère de base ou d’un caractère d’association.  
  
 Cette méthode retourne uniquement le premier élément de texte de la sous-chaîne qui commence à l’index spécifié. Pour parcourir les éléments de texte de la chaîne, l’application doit utiliser le <xref:System.Globalization.TextElementEnumerator> généré par le <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> n’est pas compris dans la plage d’index valides pour <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un énumérateur qui itère au sein des éléments de texte d'une chaîne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Chaîne au sein de laquelle itérer.</param>
        <summary>Retourne un énumérateur qui itère au sein des éléments de texte de l'ensemble de la chaîne.</summary>
        <returns>
          <see cref="T:System.Globalization.TextElementEnumerator" /> pour l'ensemble de la chaîne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework définit un élément de texte comme une unité de texte qui est affiché comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être un caractère de base, une paire de substitution ou un caractère d’association séquence. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une paire de substitution comme une représentation de caractère codée pour un caractère abstrait unique qui se compose d’une séquence de deux unités de code, où la première unité de la paire est un substitut étendu et la deuxième est une faible substitut. La norme Unicode définit une combinaison séquence comme une combinaison d’un caractère de base et un ou plusieurs caractères de combinaison de caractères. Une paire de substitution peut représenter un caractère de base ou d’un caractère d’association.  
  
 L’énumérateur d’élément de texte est utilisé uniquement pour lire des données dans la chaîne ; Il ne peut pas modifier la chaîne sous-jacente. L’énumérateur ne dispose pas d’un accès exclusif à la chaîne.  
  
 L’énumérateur est dans un état non valide s’il est positionné avant le premier élément de texte dans la chaîne ou après le dernier élément de texte dans la chaîne. Lorsque l’énumérateur est dans un état non valide, l’appel <xref:System.Globalization.TextElementEnumerator.Current%2A> lève une exception.  
  
 Au départ, l’énumérateur est positionné avant le premier élément de texte dans la chaîne. <xref:System.Globalization.TextElementEnumerator.Reset%2A> replace également l'énumérateur à cette position. Par conséquent, après la création d’un énumérateur ou après <xref:System.Globalization.TextElementEnumerator.Reset%2A> est appelée, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> doit être appelée pour avancer l’énumérateur jusqu’au premier élément de texte de la chaîne avant de lire la valeur de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> retourne le même objet tant que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> n'est pas appelé.  
  
 Après la fin de la chaîne est passée, l’énumérateur est à nouveau dans un état non valide et appel <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retourne `false`. Appel de <xref:System.Globalization.TextElementEnumerator.Current%2A> lève une exception si le dernier appel à <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retourné `false`.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’appel du <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Globalization.StringInfo> classe.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> est <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Chaîne au sein de laquelle itérer.</param>
        <param name="index">Index de base zéro au niveau duquel commencer l'itération.</param>
        <summary>Retourne un énumérateur qui itère au sein des éléments de texte de la chaîne, en commençant à l'index spécifié.</summary>
        <returns>
          <see cref="T:System.Globalization.TextElementEnumerator" /> pour la chaîne commençant à <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework définit un élément de texte comme une unité de texte qui est affiché comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être un caractère de base, une paire de substitution ou un caractère d’association séquence. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une paire de substitution comme une représentation de caractère codée pour un caractère abstrait unique qui se compose d’une séquence de deux unités de code, où la première unité de la paire est un substitut étendu et la deuxième est une faible substitut. La norme Unicode définit une combinaison séquence comme une combinaison d’un caractère de base et un ou plusieurs caractères de combinaison de caractères. Une paire de substitution peut représenter un caractère de base ou d’un caractère d’association.  
  
 L’énumérateur d’élément de texte est utilisé uniquement pour lire des données dans la chaîne ; Il ne peut pas modifier la chaîne sous-jacente. L’énumérateur ne dispose pas d’un accès exclusif à la chaîne.  
  
 L’énumérateur est dans un état non valide s’il est positionné avant le premier élément de texte dans la chaîne ou après le dernier élément de texte dans la chaîne. Lorsque l’énumérateur est dans un état non valide, l’appel <xref:System.Globalization.TextElementEnumerator.Current%2A> lève une exception.  
  
 Au départ, l’énumérateur est positionné avant le premier élément de texte dans la chaîne. <xref:System.Globalization.TextElementEnumerator.Reset%2A> replace également l'énumérateur à cette position. Par conséquent, après la création d’un énumérateur ou après <xref:System.Globalization.TextElementEnumerator.Reset%2A> est appelée, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> doit être appelée pour avancer l’énumérateur jusqu’au premier élément de texte de la chaîne avant de lire la valeur de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> retourne le même objet tant que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> n'est pas appelé.  
  
 Après la fin de la chaîne est passée, l’énumérateur est à nouveau dans un état non valide et appel <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retourne `false`. Appel de <xref:System.Globalization.TextElementEnumerator.Current%2A> lève une exception si le dernier appel à <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retourné `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> n’est pas compris dans la plage d’index valides pour <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d’éléments de texte dans l’objet <see cref="T:System.Globalization.StringInfo" /> actuel.</summary>
        <value>Nombre de caractères de base, paires de substitution et séquences de caractères de non-espacement dans cet objet <see cref="T:System.Globalization.StringInfo" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Chaîne à rechercher.</param>
        <summary>Retourne les index de tous les caractères de base, substituts étendus ou caractères de contrôle dans la chaîne spécifiée.</summary>
        <returns>Tableau d'entiers qui contient les index de base zéro de tous les caractères de base, substituts étendus ou caractères de contrôle dans la chaîne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une paire de substitution comme une représentation de caractère codée pour un caractère abstrait unique qui se compose d’une séquence de deux unités de code, où la première unité de la paire est un substitut étendu et la deuxième est une faible substitut. Un substitut étendu est un point de code Unicode dans la plage U + D800 et U + DBFF, et un substitut faible est un point de code Unicode dans la plage U + DC00 et U + DFFF.  
  
 Un caractère de contrôle est un caractère pour lequel la valeur Unicode est U + 007F ou dans la plage comprise entre U + 0000 à U + 001F ou U + 0080 à U + 009F.  
  
 Le .NET Framework définit un élément de texte comme une unité de texte qui est affiché comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être un caractère de base, une paire de substitution ou un caractère d’association séquence. Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit une combinaison séquence comme une combinaison d’un caractère de base et un ou plusieurs caractères de combinaison de caractères. Une paire de substitution peut représenter un caractère de base ou d’un caractère d’association.  
  
 Si une combinaison séquence de caractères n’est pas valide, chaque caractère d’association de cette séquence est également retourné.  
  
 Chaque index dans le tableau résultant est le début d’un élément de texte, autrement dit, l’index de caractère de base ou du substitut.  
  
 La longueur de chaque élément est facilement calculée comme la différence entre des index successifs. La longueur du tableau sera toujours inférieur ou égal à la longueur de la chaîne. Par exemple, si la chaîne « \u4f00\u302a\ud800\udc00\u4f01 », cette méthode retourne l’index 0, 2 et 4.  
  
## <a name="equivalent-members"></a>Membres équivalents  
 Depuis la version 2.0 du .NET Framework, le <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> (méthode) et <xref:System.Globalization.StringInfo.LengthInTextElements%2A> propriété fournir une implémentation simple d’utilisation des fonctionnalités offertes par le <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre l’appel du <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Globalization.StringInfo> classe.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> est <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours.</summary>
        <value>Chaîne qui est la valeur de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un <xref:System.Globalization.StringInfo> objet est instancié, ses <xref:System.Globalization.StringInfo.String%2A> est définie sur une des valeurs suivantes :  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Si la valeur par défaut <xref:System.Globalization.StringInfo.%23ctor> est appelée. Vous devez ensuite utiliser le <xref:System.Globalization.StringInfo.String%2A> propriété à attribuer la chaîne que ce <xref:System.Globalization.StringInfo> rperesents de l’objet.  
  
-   La chaîne fournie comme le `value` l’argument de la <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructeur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, la valeur est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère une sous-chaîne d'éléments de texte à partir de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Index de base zéro d'un élément de texte dans cet objet <see cref="T:System.Globalization.StringInfo" />.</param>
        <summary>Récupère une sous-chaîne d'éléments de texte à partir de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours, commençant à un élément de texte spécifié et continuant jusqu'au dernier élément de texte.</summary>
        <returns>Sous-chaîne d'éléments de texte dans cet objet <see cref="T:System.Globalization.StringInfo" />, commençant à l'index d'élément de texte spécifié par le paramètre <paramref name="startingTextElement" /> et continuant jusqu'au dernier élément de texte dans cet objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considérez une chaîne qui se compose de cinq éléments de texte, indexés de 0 à 4. Si le `startingTextElement` paramètre est 1, le <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> méthode retourne une sous-chaîne qui se compose des éléments de texte pour laquelle les index sont 1, 2, 3 et 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> est inférieur à zéro.  
  
 - ou -  
  
 La chaîne qui est la valeur de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours est la chaîne vide ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Index de base zéro d'un élément de texte dans cet objet <see cref="T:System.Globalization.StringInfo" />.</param>
        <param name="lengthInTextElements">Nombre d'éléments de texte à récupérer.</param>
        <summary>Récupère une sous-chaîne d'éléments de texte à partir de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours, commençant à un élément de texte spécifié et continuant pour le nombre spécifié d'éléments de texte.</summary>
        <returns>Sous-chaîne d'éléments de texte dans cet objet <see cref="T:System.Globalization.StringInfo" />. La sous-chaîne se compose du nombre d'éléments de texte spécifié par le paramètre <paramref name="lengthInTextElements" /> et commence à l'index d'élément de texte spécifié par le paramètre <paramref name="startingTextElement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considérez une chaîne qui se compose de cinq éléments de texte, indexés de 0 à 4. Si le `startingTextElement` paramètre est 1 et la `lengthInTextElements` paramètre est 3, le <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> méthode retourne une sous-chaîne qui se compose des éléments de texte pour laquelle les index sont 1, 2 et 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> est inférieur à zéro.  
  
 - ou -  
  
 <paramref name="startingTextElement" /> est supérieur ou égal à la longueur de la chaîne qui est la valeur de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours.  
  
 - ou -  
  
 <paramref name="lengthInTextElements" /> est inférieur à zéro.  
  
 - ou -  
  
 La chaîne qui est la valeur de l'objet <see cref="T:System.Globalization.StringInfo" /> en cours est la chaîne vide ("").  
  
 - ou -  
  
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> spécifient un index qui est supérieur au nombre d’éléments de texte dans cet objet <see cref="T:System.Globalization.StringInfo" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>