<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c61f841aef610520777790eef62ffb3efefa5df1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Énumère les éléments de texte d'une chaîne.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework définit un élément de texte en tant qu’unité de texte qui s’affiche comme un caractère unique, autrement dit, groupes de graphèmes. Un élément de texte peut être une des opérations suivantes :  
  
-   Un caractère de base, qui est représenté sous la forme d’un seul <xref:System.Char> valeur. Par exemple, une majuscule latine lettre (U + 0041) et LATIN petite lettre AE (U + 00E6) sont des caractères de base.  
  
-   Une combinaison de caractères séquence, ce qui se compose d’un caractère de base et un ou plusieurs caractères d’association. Par exemple, exemple MAJUSCULE LATINE A (U + 0041) suivi par le trait supérieur de combinaison (U + 0304) est une combinaison séquence de caractères.  
  
-   Paires de substitution qui le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) définit comme une représentation de caractère codée pour un seul caractère abstrait qui se compose d’une séquence de deux unités de code : un substitut étendu et un substitut faible. Les paires de substitution sont utilisés pour représenter des caractères en dehors de l’Unicode Basic Multilingual Plane en tant que caractères encodés en UTF-16. Par exemple, GOTHIC lettre SAUIL (U + 1034 entrant.3) est représenté en UTF-16 comme un substitut étendu dont la valeur est 0xD800 et un substitut faible, dont la valeur est 0xDF43 d’encodage. Une paire de substitution peut représenter un caractère de base ou un caractère d’association.  
  
 Le <xref:System.Globalization.TextElementEnumerator> classe vous permet de travailler avec les éléments de texte dans une chaîne plutôt qu’avec un seul <xref:System.Char> objets.  
  
 Vous instanciez un <xref:System.Globalization.TextElementEnumerator> objet qui représente une chaîne particulière en passant la chaîne à la <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> (méthode). Cela retourne un énumérateur est positionné avant le premier élément de texte dans la chaîne. Appel de la <xref:System.Globalization.TextElementEnumerator.Reset%2A> méthode Replace également l’énumérateur à cette position. Étant donné que cela représente un état non valide, vous devez appeler <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> pour avancer l’énumérateur vers le premier élément de texte de la chaîne avant de lire la valeur de la <xref:System.Globalization.TextElementEnumerator.Current%2A> propriété pour retourner l’élément de texte actuelle.  
  
 Lorsque vous travaillez avec un <xref:System.Globalization.TextElementEnumerator> de l’objet, vous êtes responsable de l’énumérateur de positionnement. Le <xref:System.Globalization.TextElementEnumerator.Current%2A> propriété retourne le même élément de texte jusqu'à ce que vous appelez <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A>. L’énumérateur est dans un état non valide s’il est positionné avant le premier élément de texte ou après le dernier élément de texte dans la chaîne. Lorsque l’énumérateur se trouve dans un état non valide, d’essayer de récupérer la valeur de la <xref:System.Globalization.TextElementEnumerator.Current%2A> propriété lève une exception. Vous pouvez déterminer si l’énumérateur se trouve dans un état non valide en vérifiant si la valeur de retour de la <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> propriété est `false`.  
  
 Le <xref:System.Globalization.TextElementEnumerator> objet représente un instantané de l’état actuel d’une variable de chaîne ou d’un littéral de chaîne au moment qui le <xref:System.Globalization.TextElementEnumerator> objet est instancié. Prenez note de ce qui suit :  
  
-   Énumérateurs d’élément de texte peuvent uniquement servir à lire les données dans une chaîne. Ils ne peuvent pas modifier la chaîne sous-jacente.  
  
-   Un énumérateur ne dispose pas d’un accès exclusif à la chaîne qu’il représente. Une variable de chaîne peut être modifiée après la création de l’énumérateur.  
  
-   Un <xref:System.Globalization.TextElementEnumerator> objet énumère les éléments de texte présents dans la chaîne au moment qui le <xref:System.Globalization.TextElementEnumerator> objet a été instancié. Il ne reflète pas les modifications suivantes à la variable de chaîne si cette variable est modifiée par la suite.  
  
-   Étant donné que le <xref:System.Globalization.TextElementEnumerator> classe ne substitue pas <xref:System.Object.Equals%2A?displayProperty=nameWithType>, deux <xref:System.Globalization.TextElementEnumerator> objets qui représentent la même chaîne seront considérés comme inégaux.  
  
   
  
## Examples  
 L’exemple suivant utilise la <xref:System.Globalization.TextElementEnumerator> classe pour énumérer les éléments de texte d’une chaîne.  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'élément de texte actuel dans la chaîne.</summary>
        <value>Objet contenant l'élément de texte actuel dans la chaîne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Après avoir créé un énumérateur ou après un <xref:System.Globalization.TextElementEnumerator.Reset%2A> est appelée, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> doit être appelée pour avancer l’énumérateur vers le premier élément de texte de la chaîne avant de lire la valeur de <xref:System.Globalization.TextElementEnumerator.Current%2A>. Sinon, <xref:System.Globalization.TextElementEnumerator.Current%2A> n’est pas défini.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> lève également une exception si le dernier appel à <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retourné `false`, ce qui indique la fin de la chaîne.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> ne déplace pas la position de l’énumérateur et les appels consécutifs à <xref:System.Globalization.TextElementEnumerator.Current%2A> retournent le même objet jusqu'à ce que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> ou <xref:System.Globalization.TextElementEnumerator.Reset%2A> est appelée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L’énumérateur est positionné avant le premier élément de texte ou après le dernier élément de texte de la chaîne.</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'index de l'élément de texte sur lequel l'énumérateur est actuellement positionné.</summary>
        <value>Index de l'élément de texte sur lequel l'énumérateur est actuellement positionné.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">L’énumérateur est positionné avant le premier élément de texte ou après le dernier élément de texte de la chaîne.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient l'élément de texte actuel dans la chaîne.</summary>
        <returns>Nouvelle chaîne contenant l'élément de texte actuel dans la chaîne en cours de lecture.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne le même élément de texte comme le <xref:System.Globalization.TextElementEnumerator.Current%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L’énumérateur est positionné avant le premier élément de texte ou après le dernier élément de texte de la chaîne.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fait avancer l'énumérateur à l'élément de texte suivant de la chaîne.</summary>
        <returns>
          <see langword="true" /> si l’énumérateur a réussi à avancer jusqu’à l’élément de texte suivant ; <see langword="false" /> si l’énumérateur a dépassé la fin de la chaîne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Après avoir créé un énumérateur ou après un <xref:System.Globalization.TextElementEnumerator.Reset%2A> est appelée, l’énumérateur est positionné avant le premier élément de texte de la chaîne et le premier appel à <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> déplace l’énumérateur sur le premier élément de texte de la chaîne.  
  
 Si la chaîne est modifiée une fois cet énumérateur a été créé, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> lève une exception.  
  
 Après la fin de la chaîne est passées, les appels suivants à <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> retourner `false` jusqu'à ce que <xref:System.Globalization.TextElementEnumerator.Reset%2A> est appelée.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Affecte à l'énumérateur sa position initiale, qui précède le premier élément de texte de la chaîne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.TextElementEnumerator.Reset%2A> (méthode) déplace l’énumérateur au début de la chaîne, avant le premier élément de texte. Après avoir appelé <xref:System.Globalization.TextElementEnumerator.Reset%2A>, vous devez appeler <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> pour avancer l’énumérateur vers le premier élément de texte de la chaîne avant d’appeler <xref:System.Globalization.TextElementEnumerator.Current%2A> pour lire la valeur du premier élément de texte.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>