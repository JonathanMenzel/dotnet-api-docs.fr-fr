<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Cer.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac470bff59f11addb66604e46af25f3ade4f4d27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac470bff59f11addb66604e46af25f3ade4f4d27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Specifies a method's behavior when called within a constrained execution region.</source>
          <target state="translated">Spécifie le comportement d'une méthode lorsqu'elle est appelée au sein d'une région d'exécution limitée.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> énumération spécifie le comportement d’une méthode, un type ou un assembly dans une région d’exécution limitée (CER).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</source>
          <target state="translated">Utilisez une des trois valeurs disponibles pour indiquer que l’entité réussira, n’a aucune connaissance d’une région d’exécution limitée, ou (de façon déterministe) peut être en mesure de signaler la réussite ou l’échec.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</source>
          <target state="translated">Une région d’exécution limitée garantit que la région de code s’exécute sans interruption même si une exception asynchrone tels qu’une exception d’insuffisance de mémoire de thread abandonné ou un débordement de pile est déclenchée.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration when specifying a constrained execution region for a method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> énumération lors de la spécification d’une région d’exécution limitée pour une méthode.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour le <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In the face of exceptional conditions, the method might fail.</source>
          <target state="translated">Dans des conditions exceptionnelles, la méthode peut échouer.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In this case, the method will report back to the calling method whether it succeeded or failed.</source>
          <target state="translated">Dans ce cas, elle indique à la méthode appelante si elle a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>The method must have a CER around the method body to ensure that it can report the return value.</source>
          <target state="translated">La méthode doit être pourvue d'une région d'exécution limitée autour de son corps pour garantir qu'elle peut signaler la valeur de retour.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method, type, or assembly has no concept of a CER.</source>
          <target state="translated">La méthode, le type ou l'assembly sont dépourvus du concept de région d'exécution limitée.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>It does not take advantage of CER guarantees.</source>
          <target state="translated">Ils ne tirent pas parti des garanties offertes par les régions CER.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>This implies the following:</source>
          <target state="translated">Cela implique ce qui suit :</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>In the face of exceptional conditions the method might fail.</source>
          <target state="translated">Des conditions exceptionnelles, la méthode peut échouer.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method might or might not report that it failed (it is non-deterministic).</source>
          <target state="translated">La méthode peut ou peut ne pas signaler son échec (il est non déterministe).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method is not written with CERs in mind (which is the most likely scenario).</source>
          <target state="translated">La méthode n’est pas écrite avec CER esprit (qui est le scénario le plus probable).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as <ph id="ph1">`Cer.None`</ph>.</source>
          <target state="translated">Si une méthode, un type ou un assembly n’est pas explicitement marqué pour réussir, il est implicitement marquée comme <ph id="ph1">`Cer.None`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>In the face of exceptional conditions, the method is guaranteed to succeed.</source>
          <target state="translated">Dans des conditions exceptionnelles, la réussite de la méthode est garantie.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</source>
          <target state="translated">Vous devez toujours construire une région d'exécution limitée autour de la méthode qui est appelée, même lorsqu'elle est appelée dans une région qui n'est pas une région d'exécution limitée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>A method is successful if it accomplishes what is intended.</source>
          <target state="translated">Une méthode réussit si elle exécute les actions prévues.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>For example, marking <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> with <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept> implies that when it is run under a CER, it always returns a count of the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> and it can never leave the internal fields in an undetermined state.</source>
          <target state="translated">Par exemple, si vous marquez <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> avec <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept>, cela implique que, quand elle est exécutée dans une région d’exécution limitée, elle retourne toujours le nombre d’éléments contenus dans <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> et ne peut jamais laisser les champs internes dans un état indéterminé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>