<Type Name="WriteCodeFragment" FullName="Microsoft.Build.Tasks.WriteCodeFragment">
  <TypeSignature Language="C#" Value="public class WriteCodeFragment : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WriteCodeFragment extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.WriteCodeFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class WriteCodeFragment&#xA;Inherits TaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class WriteCodeFragment : Microsoft::Build::Tasks::TaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b09f-101">Génère un fichier de code temporaire avec le fragment de code généré spécifié.</span><span class="sxs-lookup"><span data-stu-id="9b09f-101">Generates a temporary code file with the specified generated code fragment.</span></span>  <span data-ttu-id="9b09f-102">Ne supprime pas le fichier.</span><span class="sxs-lookup"><span data-stu-id="9b09f-102">Does not delete the file.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WriteCodeFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WriteCodeFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b09f-103">Crée un fichier de code temporaire avec le fragment de code généré spécifié.</span><span class="sxs-lookup"><span data-stu-id="9b09f-103">Creates a temporary code file with the specified generated code fragment.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyAttributes">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyAttributes As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssemblyAttributes { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b09f-104">Obtient ou définit les attributs à écrire.</span><span class="sxs-lookup"><span data-stu-id="9b09f-104">Gets or sets the attributes to write.</span></span></summary>
        <value><span data-ttu-id="9b09f-105">Retourne un élément de dont la valeur est le nom de type complet de l'attribut, par exemple, « System.AssemblyVersionAttribute ».</span><span class="sxs-lookup"><span data-stu-id="9b09f-105">Returns an item whose value is the full type name of he attribute, for example, "System.AssemblyVersionAttribute".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b09f-106">Chaque élément de métadonnées est la paire nom-valeur d’un paramètre, qui doit être de type System.String.</span><span class="sxs-lookup"><span data-stu-id="9b09f-106">Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</span></span>  
  
 <span data-ttu-id="9b09f-107">Certains attributs autorisent uniquement les arguments de constructeur, ou l’utilisateur peut simplement les préférer.</span><span class="sxs-lookup"><span data-stu-id="9b09f-107">Some attributes only allow positional constructor arguments, or the user may just prefer them.</span></span>  <span data-ttu-id="9b09f-108">Pour définir ceux, utilisez les noms de métadonnées comme « _Parameter1 », « _Parameter2 » etc. Si un index de paramètre est ignoré, il est incorrect.</span><span class="sxs-lookup"><span data-stu-id="9b09f-108">To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b09f-109">Exécute la méthode WriteCodeFragment.</span><span class="sxs-lookup"><span data-stu-id="9b09f-109">Executes the WriteCodeFragment method.</span></span></summary>
        <returns><span data-ttu-id="9b09f-110">Retourne la valeur true si le fragment de code a été écrit.</span><span class="sxs-lookup"><span data-stu-id="9b09f-110">Returns true if the code fragment was written.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b09f-111">Obtient ou définit le langage du code à générer.</span><span class="sxs-lookup"><span data-stu-id="9b09f-111">Gets or sets the language of code to generate.</span></span></summary>
        <value><span data-ttu-id="9b09f-112">Retourne le langage de code à générer.</span><span class="sxs-lookup"><span data-stu-id="9b09f-112">Returns the language of code to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b09f-113">Nom de la langue peut être n’importe quel langage pour lequel un fournisseur CodeDom est disponible.</span><span class="sxs-lookup"><span data-stu-id="9b09f-113">Language name can be any language for which a CodeDom provider is available.</span></span> <span data-ttu-id="9b09f-114">Par exemple, « C# », « VisualBasic ».</span><span class="sxs-lookup"><span data-stu-id="9b09f-114">For example, "C#", "VisualBasic".</span></span> <span data-ttu-id="9b09f-115">Le fichier émis porte l’extension par défaut pour cette langue.</span><span class="sxs-lookup"><span data-stu-id="9b09f-115">The file emitted is given the default extension for that language.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputDirectory As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputDirectory { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b09f-116">Obtient ou définit le dossier de destination du code généré, en général le dossier intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="9b09f-116">Gets or sets the destination folder for the generated code, typically the intermediate folder.</span></span></summary>
        <value><span data-ttu-id="9b09f-117">Retourne le dossier de destination du code généré.</span><span class="sxs-lookup"><span data-stu-id="9b09f-117">Returns the destination folder for the generated code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputFile" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b09f-118">Obtient ou définit le chemin d'accès du fichier généré.</span><span class="sxs-lookup"><span data-stu-id="9b09f-118">Gets or sets the path to the file that was generated.</span></span></summary>
        <value><span data-ttu-id="9b09f-119">Retourne le chemin d'accès du fichier généré.</span><span class="sxs-lookup"><span data-stu-id="9b09f-119">Returns the path to the file that was generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b09f-120">Si vous définissez cette propriété avec un nom de fichier, le dossier de destination sera ajouté.</span><span class="sxs-lookup"><span data-stu-id="9b09f-120">If setting this property with a file name, the destination folder will be prepended.</span></span>  
  
 <span data-ttu-id="9b09f-121">Si vous définissez cette propriété avec la valeur racine, le dossier de destination sera ignoré.</span><span class="sxs-lookup"><span data-stu-id="9b09f-121">If setting this property with a rooted value, the destination folder will be ignored.</span></span>  
  
 <span data-ttu-id="9b09f-122">Si cette propriété n’est pas définie, WriteCodeFragment utilise le dossier de destination, un nom de fichier arbitraire et l’extension par défaut pour la langue sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="9b09f-122">If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>