<Type Name="Exec" FullName="Microsoft.Build.Tasks.Exec">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a7964fe8a6de9acc255ae51a8355858a40c3f87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30339843" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Exec : Microsoft.Build.Tasks.ToolTaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Exec extends Microsoft.Build.Tasks.ToolTaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Exec" />
  <TypeSignature Language="VB.NET" Value="Public Class Exec&#xA;Inherits ToolTaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exec : Microsoft::Build::Tasks::ToolTaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.ToolTaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="579c0-101">Implémente la tâche <c>Exec</c>.</span>
      <span class="sxs-lookup">
        <span data-stu-id="579c0-101">Implements the <c>Exec</c> task.</span>
      </span>
      <span data-ttu-id="579c0-102">Utilisez l’élément <c>Exec</c> de votre fichier projet pour créer et exécuter cette tâche.</span>
      <span class="sxs-lookup">
        <span data-stu-id="579c0-102">Use the <c>Exec</c> element in your project file to create and execute this task.</span>
      </span>
      <span data-ttu-id="579c0-103">Pour plus d’informations sur l’utilisation de cet élément et ses paramètres, consultez [Exec, tâche](http://msdn.microsoft.com/library/c9b7525a-b1c9-40fc-8bce-77a5b8f960d8).</span>
      <span class="sxs-lookup">
        <span data-stu-id="579c0-103">For usage and parameter information, see [Exec Task](http://msdn.microsoft.com/library/c9b7525a-b1c9-40fc-8bce-77a5b8f960d8).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exec ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exec();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="579c0-104">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Build.Tasks.Exec" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-104">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Exec" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddCommandLineCommands">
      <MemberSignature Language="C#" Value="protected internal override void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddCommandLineCommands(class Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddCommandLineCommands (commandLine As CommandLineBuilderExtension)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddCommandLineCommands(Microsoft::Build::Tasks::CommandLineBuilderExtension ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="Microsoft.Build.Tasks.CommandLineBuilderExtension" />
      </Parameters>
      <Docs>
        <param name="commandLine">
          <span data-ttu-id="579c0-105">Générateur de ligne de commande auquel ajouter des arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-105">Command line builder to add arguments to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="579c0-106">Génère des arguments de ligne de commande que l’outil en ligne de commande doit exécuter directement à partir de la ligne de commande et non à partir d’un fichier réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-106">Generates command line arguments that the command line tool must run directly from the command line and not from a response file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public string Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Command" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Command { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-107">Obtient ou définit la commande à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-107">Gets or sets the command to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-108">Commande à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-108">The command to run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-109">La commande à exécuter peut être une commande du système, telles qu’attrib, ou un exécutable, comme program.exe.</span><span class="sxs-lookup"><span data-stu-id="579c0-109">The command to run can be a system command, such as attrib, or an executable, such as program.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConsoleOutput">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ConsoleOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] ConsoleOutput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.ConsoleOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleOutput As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ConsoleOutput { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-110">Retourne le résultat en tant qu'élément</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-110">Returns the output as an Item.</span>
          </span>
          <span data-ttu-id="579c0-111">Espace blanc est supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-111">Whitespace is trimmed.</span>
          </span>
          <span data-ttu-id="579c0-112">ConsoleOutput est activé lorsque ConsoleToMSBuild a la valeur true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-112">ConsoleOutput is enabled when ConsoleToMSBuild is true.</span>
          </span>
          <span data-ttu-id="579c0-113">Cela permet de garder des lignes en mémoire si elles ne sont pas utilisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-113">This avoids holding lines in memory if they aren't used.</span>
          </span>
          <span data-ttu-id="579c0-114">ConsoleOutput est une combinaison de stdout et de stderr.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-114">ConsoleOutput is a combination of stdout and stderr.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-115">Retourne <see cref="T:Microsoft.Build.Framework.ITaskItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-115">Returns <see cref="T:Microsoft.Build.Framework.ITaskItem" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConsoleToMSBuild">
      <MemberSignature Language="C#" Value="public bool ConsoleToMSBuild { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConsoleToMSBuild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.ConsoleToMSBuild" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleToMSBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConsoleToMSBuild { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-116">Active la sortie standard au canal d'un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-116">Enable the standard output to pipe to an item.</span>
          </span>
          <span data-ttu-id="579c0-117">(StandardOutput).</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-117">(StandardOutput).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-118">Retourne <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-118">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CustomErrorRegularExpression">
      <MemberSignature Language="C#" Value="public string CustomErrorRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomErrorRegularExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomErrorRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomErrorRegularExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-119">Obtient ou définit une expression régulière permettant de repérer les lignes d'erreur dans la sortie de l'outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-119">Gets or sets a regular expression to spot error lines in the tool output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-120">Expression régulière permettant de repérer les lignes d'erreur dans la sortie de l'outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-120">A regular expression to spot error lines in the tool output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-121">Cette propriété est utile pour les outils qui produisent le résultat mis en forme anormalement.</span><span class="sxs-lookup"><span data-stu-id="579c0-121">This property is useful for tools that produce unusually formatted output.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CustomWarningRegularExpression">
      <MemberSignature Language="C#" Value="public string CustomWarningRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomWarningRegularExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomWarningRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomWarningRegularExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-122">Obtient ou définit une expression régulière permettant de repérer les lignes d'avertissement dans la sortie de l'outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-122">Gets or sets a regular expression to spot warning lines in the tool output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-123">Expression régulière permettant de repérer les lignes d'avertissement dans la sortie de l'outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-123">A regular expression to spot warning lines in the tool output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-124">Cette propriété est utile pour les outils qui produisent le résultat mis en forme anormalement.</span><span class="sxs-lookup"><span data-stu-id="579c0-124">This property is useful for tools that produce unusually formatted output.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExecuteTool">
      <MemberSignature Language="C#" Value="protected override int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.ExecuteTool(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteTool (pathToTool As String, responseFileCommands As String, commandLineCommands As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteTool(System::String ^ pathToTool, System::String ^ responseFileCommands, System::String ^ commandLineCommands);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="responseFileCommands" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="579c0-125">Chemin de l’outil à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-125">The path to the tool to execute.</span>
          </span>
        </param>
        <param name="responseFileCommands">
          <span data-ttu-id="579c0-126">Arguments de ligne de commande à placer dans un fichier réponse temporaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-126">Command line arguments that should go into a temporary response file.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="579c0-127">Arguments de ligne de commande à passer directement à l’outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-127">Command line arguments that should be passed to the tool directly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="579c0-128">Exécute l’outil cmd.exe, attend son achèvement et nettoie le fichier de commandes une fois l’exécution terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-128">Executes the cmd.exe tool, waits for its completion, and cleans up the batch file after execution completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="579c0-129">Code de sortie retourné par l’outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-129">The exit code that the tool returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-130">Si des erreurs ont été enregistrées et l’outil possède un code de sortie égal à zéro, cette méthode définit le code de sortie sur -1.</span><span class="sxs-lookup"><span data-stu-id="579c0-130">If errors were logged and the tool has an exit code of zero, then this method sets the exit code to -1.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected override string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="579c0-131">Retourne le chemin complet à l’outil système cmd.exe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-131">Returns the full path to the system tool cmd.exe.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="579c0-132">Chemin complet à l’outil système cmd.exe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-132">The full path to the system tool cmd.exe.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetWorkingDirectory">
      <MemberSignature Language="C#" Value="protected override string GetWorkingDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetWorkingDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.GetWorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetWorkingDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetWorkingDirectory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="579c0-133">Retourne le répertoire de travail à utiliser pour le processus de l’outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-133">Returns the working directory to use for the tool process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="579c0-134">Répertoire de travail à utiliser pour le processus de l’outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-134">The working directory to use for the tool process.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-135">Si le répertoire de travail est UNC, retourne le chemin d’accès système % SystemRoot%\System32.</span><span class="sxs-lookup"><span data-stu-id="579c0-135">If the working directory is UNC, returns the system path %SystemRoot%\System32.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="HandleTaskExecutionErrors">
      <MemberSignature Language="C#" Value="protected override bool HandleTaskExecutionErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HandleTaskExecutionErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HandleTaskExecutionErrors () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HandleTaskExecutionErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="579c0-136">Enregistre un message d’erreur et gère le code de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-136">Logs error message and handles exit code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="579c0-137">
            <see langword="true" /> si le code de sortie a été ignoré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-137">
              <see langword="true" /> if exit code was ignored; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-138">Cette méthode est uniquement être appelée avec un code de sortie différent de zéro.</span><span class="sxs-lookup"><span data-stu-id="579c0-138">This method will only be called with a non-zero exit code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IgnoreExitCode">
      <MemberSignature Language="C#" Value="public bool IgnoreExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExitCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.IgnoreExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreExitCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExitCode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-139">Obtient ou définit une valeur booléenne qui indique si la tâche <c>Exec</c> doit ignorer le code de sortie fourni par la commande exécutée (<see langword="true" />) ou retourner <see langword="false" /> si la commande exécutée retourne un code de sortie différent de zéro (<see langword="false" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-139">Gets or sets a Boolean value that indicates whether the <c>Exec</c> task should ignore the exit code provided by the executed command (<see langword="true" />) or should return <see langword="false" /> if the executed command returns a non-zero exit code (<see langword="false" />).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-140">
            <see langword="true" /> Si le <c>Exec</c> tâche doit ignorer le code de sortie fourni par la commande exécutée ; <see langword="false" /> si le <c>Exec</c> tâche doit retourner <see langword="false" /> si la commande exécutée retourne un code de sortie différent de zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-140">
              <see langword="true" /> if the <c>Exec</c> task should ignore the exit code provided by the executed command; <see langword="false" /> if the <c>Exec</c> task should return <see langword="false" /> if the executed command returns a non-zero exit code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IgnoreStandardErrorWarningFormat">
      <MemberSignature Language="C#" Value="public bool IgnoreStandardErrorWarningFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreStandardErrorWarningFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreStandardErrorWarningFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreStandardErrorWarningFormat { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-141">Obtient ou définit une valeur booléenne qui indique s’il faut ignorer le format d’erreur et d’avertissement standard et enregistrer les erreurs et les avertissements à partir de la sortie en tant que messages normaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-141">Gets or sets a Boolean value that indicates whether to ignore the standard error and warning format and log errors and warnings from the output as regular messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-142">
            <see langword="true" /> Si le <c>Exec</c> tâche doit ignorer l’erreur standard format et avertissement et enregistrer les erreurs et avertissements en tant que messages ordinaires ; <see langword="false" /> si le <c>Exec</c> tâche doit enregistrer les erreurs et avertissements qui correspondent à l’erreur standard format et avertissement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-142">
              <see langword="true" /> if the <c>Exec</c> task should ignore the standard error and warning format and should log errors and warnings as regular messages; <see langword="false" /> if the <c>Exec</c> task should log the errors and warnings that match the standard error and warning format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-143">La valeur par défaut est `false`.</span><span class="sxs-lookup"><span data-stu-id="579c0-143">The default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected override void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine">
          <span data-ttu-id="579c0-144">Ligne unique de la sortie à analyser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-144">Single line from the output to parse.</span>
          </span>
        </param>
        <param name="messageImportance">
          <span data-ttu-id="579c0-145">Importance avec laquelle enregistrer le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-145">The importance to log the message with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="579c0-146">Enregistre la ligne de texte spécifiée en tant qu'erreur ou avertissement si cette ligne correspond aux formats d'erreur et d'avertissement personnalisés ou standard, ou en tant que message ordinaire si <see cref="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat" /> a la valeur <see langword="true" /> et qu'aucun format personnalisé ne correspond.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-146">Logs the specified single line of text as an error or warning if the single line matched custom or standard error and warning formats or as a regular message if <see cref="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat" /> is set to <see langword="true" /> and no custom format matched.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LogPathToTool">
      <MemberSignature Language="C#" Value="protected override void LogPathToTool (string toolName, string pathToTool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LogPathToTool(string toolName, string pathToTool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.LogPathToTool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LogPathToTool (toolName As String, pathToTool As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LogPathToTool(System::String ^ toolName, System::String ^ pathToTool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="pathToTool" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">
          <span data-ttu-id="579c0-147">Nom de l'outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-147">The tool name.</span>
          </span>
        </param>
        <param name="pathToTool">
          <span data-ttu-id="579c0-148">Répertoire actif dans lequel l’outil est exécuté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-148">The current directory where the tool is run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="579c0-149">Enregistre le nom et le chemin de l’outil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-149">Logs the tool name and path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LogToolCommand">
      <MemberSignature Language="C#" Value="protected override void LogToolCommand (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LogToolCommand(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.LogToolCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LogToolCommand (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LogToolCommand(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="579c0-150">Spécifiez une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-150">Specify an empty string.</span>
          </span>
          <span data-ttu-id="579c0-151">Ce paramètre n'est pas utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-151">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="579c0-152">Consigne la commande du fichier de commandes à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-152">Logs the batch file command to be executed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Outputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Outputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public Property Outputs As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ Outputs { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-153">Obtient ou définit les éléments de sortie de la tâche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-153">Gets or sets the output items from the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-154">Éléments de sortie de la tâche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-154">The output items from the task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="579c0-155">Le `Exec` tâche ne définit pas les éléments de sortie.</span><span class="sxs-lookup"><span data-stu-id="579c0-155">The `Exec` task does not set the output items.</span></span> <span data-ttu-id="579c0-156">Au lieu de cela, vous pouvez fournir les éléments de sortie comme s’ils étaient définis par la tâche, afin qu’ils peuvent être utilisés ultérieurement dans le projet.</span><span class="sxs-lookup"><span data-stu-id="579c0-156">Instead, you can provide the output items as if they were set by the task, so that they can be used later in the project.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="protected override System.Text.Encoding StandardErrorEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-157">Obtient l’encodage du flux d’erreurs standard de la tâche capturée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-157">Gets the encoding of the captured task standard error stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-158">Encodage du flux d’erreurs standard de la tâche capturée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-158">The encoding of the captured task standard error stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorLoggingImportance">
      <MemberSignature Language="C#" Value="protected override Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property StandardErrorLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardErrorLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-159">Obtient l’importance avec laquelle enregistrer les messages ordinaires dans le flux d’erreur standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-159">Gets the importance to log ordinary messages with in the standard error stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-160">Importance avec laquelle enregistrer les messages ordinaires dans le flux d’erreur standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-160">The importance to log ordinary messages with in the standard error stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="protected override System.Text.Encoding StandardOutputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-161">Obtient l’encodage du flux de sortie standard de tâche capturé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-161">Gets the encoding of the captured task standard output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-162">Encodage du flux de sortie standard de tâche capturé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-162">The encoding of the captured task standard output stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StandardOutputLoggingImportance">
      <MemberSignature Language="C#" Value="protected override Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property StandardOutputLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardOutputLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-163">Obtient l’importance avec laquelle enregistrer les messages ordinaires dans le flux de sortie standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-163">Gets the importance to log ordinary messages with in the standard out stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-164">Importance avec laquelle enregistrer les messages ordinaires dans le flux de sortie standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-164">The importance to log ordinary messages with in the standard out stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StdErrEncoding">
      <MemberSignature Language="C#" Value="public string StdErrEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StdErrEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.StdErrEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StdErrEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StdErrEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-165">Obtient ou définit l’encodage du flux d’erreur standard de tâches capturées qui est visible pour le projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-165">Gets or sets the encoding of the captured task standard error stream that is visible to the project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-166">Encodage du flux d’erreur standard de tâches capturées qui est visible pour le projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-166">The encoding of the captured task standard error stream that is visible to the project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StdOutEncoding">
      <MemberSignature Language="C#" Value="public string StdOutEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StdOutEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.StdOutEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StdOutEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StdOutEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-167">Obtient ou définit l’encodage du flux de sortie standard de tâches capturées qui est visible pour le projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-167">Gets or sets the encoding of the captured task standard output stream that is visible to the project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-168">Encodage du flux de sortie standard de tâches capturées qui est visible pour le projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-168">The encoding of the captured task standard output stream that is visible to the project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected override string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-169">Obtient le nom de l’outil (cmd.exe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-169">Gets the name of the tool (cmd.exe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-170">Nom de l’outil (cmd.exe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-170">The name of the tool (cmd.exe).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected override bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Exec.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="579c0-171">Valide les paramètres d’entrée et consigne les erreurs ou les avertissements, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-171">Validates input parameters and logs errors or warnings, if any.</span>
          </span>
          <span data-ttu-id="579c0-172">Retourne une valeur booléenne qui indique si l’exécution de la tâche doit continuer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-172">Returns a Boolean value that indicates whether task execution should proceed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="579c0-173">
            <see langword="true" /> si l'exécution de la tâche doit se poursuivre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-173">
              <see langword="true" /> if task execution should proceed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Exec.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c0-174">Obtient ou définit le répertoire dans lequel la commande sera exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-174">Gets or sets the directory in which the command will run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="579c0-175">Répertoire dans lequel la commande sera exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c0-175">The directory in which the command will run.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>