<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40aa51c114d4ab3b2669d4d437aa854fb9a8f8c4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30739323" /></Metadata><Docs>
    <summary>L'espace de noms <see cref="N:System.Runtime.Remoting.Contexts" /> contient des objets qui définissent les contextes dans lesquels résident tous les objets. Un contexte est une séquence ordonnée de propriétés qui définit un environnement pour les objets dans celui-ci. Les contextes sont créés au cours du processus d'activation pour des objets dont la configuration impose certains services automatiques tels que la synchronisation, les transactions, l'activation juste-à-temps (JIT, Just-In-Time), la sécurité, etc. Plusieurs objets peuvent coexister dans un contexte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois qu’un nouvel objet est créé, le.NET Framework recherche un contexte compatible ou en crée un nouveau contexte pour l’objet. Une fois un objet est placé dans un contexte, il reste à vie. Les classes qui peuvent être liées à un contexte sont appelées classes de contexte. Lors de l’accès à partir d’un autre contexte, ces classes liées au contexte sont référencées directement à l’aide d’un proxy. Un appel à partir d’un objet dans un contexte à un objet dans un autre contexte passe via un proxy de contexte et être affecté par la stratégie implémentée par les propriétés de contexte combinées.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>