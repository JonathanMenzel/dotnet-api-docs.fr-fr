<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0d0af9270a7e64e9da6317aec0fb9470ab64bfd" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57923002" /></Metadata><TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class&#xA;    interface IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6651b-101">Fournit l’accès à des informations détaillées relatives aux fonctionnalités du navigateur du client.</span><span class="sxs-lookup"><span data-stu-id="6651b-101">Provides access to detailed information about the capabilities of the client's browser.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> est la classe de base à partir de laquelle la <xref:System.Web.HttpBrowserCapabilities> classe est dérivée.</span><span class="sxs-lookup"><span data-stu-id="6651b-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="6651b-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offre un grand nombre de propriétés en lecture seule qui fournissent un accès de type sécurisé au dictionnaire des fonctionnalités d’un navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="6651b-104">Vous pouvez accéder à la <xref:System.Web.HttpBrowserCapabilities> classe via la <xref:System.Web.HttpRequest.Browser%2A> propriété exposée par ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="6651b-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-105">L’exemple suivant montre comment accéder aux informations sur le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6651b-106">Crée une instance de la classe <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveXControls : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-107">Obtient une valeur qui indique si le navigateur prend en charge les contrôles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="6651b-107">Gets a value indicating whether the browser supports ActiveX controls.</span></span></summary>
        <value><span data-ttu-id="6651b-108"><see langword="true" /> si le navigateur prend en charge les contrôles ActiveX ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-108"><see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-109">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-109">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-110">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les contrôles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="6651b-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapters : System.Collections.IDictionary" Usage="System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-111">Retourne la collection des adaptateurs de contrôle disponibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-111">Returns the collection of available control adapters.</span></span></summary>
        <value><span data-ttu-id="6651b-112">Collection d'adaptateurs de contrôle inscrits.</span><span class="sxs-lookup"><span data-stu-id="6651b-112">The collection of registered control adapters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.AddBrowser : string -&gt; unit" Usage="httpCapabilitiesBase.AddBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="6651b-113">Nom du navigateur à ajouter.</span><span class="sxs-lookup"><span data-stu-id="6651b-113">The name of the browser to add.</span></span></param>
        <summary><span data-ttu-id="6651b-114">Utilisé en interne pour ajouter une entrée à la collection interne de navigateurs pour lesquels les fonctionnalités sont reconnues.</span><span class="sxs-lookup"><span data-stu-id="6651b-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AOL : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-115">Obtient une valeur qui indique si le client est un navigateur AOL (America Online).</span><span class="sxs-lookup"><span data-stu-id="6651b-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span></span></summary>
        <value><span data-ttu-id="6651b-116"><see langword="true" /> si le navigateur est un navigateur AOL ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-116"><see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-117">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-117">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-118">L’exemple de code suivant montre comment déterminer si le navigateur est un navigateur AOL.</span><span class="sxs-lookup"><span data-stu-id="6651b-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundSounds : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-119">Obtient une valeur indiquant si le navigateur prend en charge la lecture de fonds sonores à l’aide de l’élément HTML <see langword="&lt;bgsounds&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span></span></summary>
        <value><span data-ttu-id="6651b-120"><see langword="true" /> si le navigateur prend en charge la lecture de fonds sonores ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-120"><see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-121">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-121">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-122">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la lecture de fonds sonores.</span><span class="sxs-lookup"><span data-stu-id="6651b-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Beta : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-123">Obtient une valeur indiquant si le navigateur est une version bêta.</span><span class="sxs-lookup"><span data-stu-id="6651b-123">Gets a value indicating whether the browser is a beta version.</span></span></summary>
        <value><span data-ttu-id="6651b-124"><see langword="true" /> si le navigateur est une version bêta ; dans le cas contraire, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-124"><see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-125">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-126">Les navigateurs de version bêta peuvent présenter un comportement imprévisible.</span><span class="sxs-lookup"><span data-stu-id="6651b-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-127">L’exemple de code suivant montre comment déterminer si le navigateur est une version bêta.</span><span class="sxs-lookup"><span data-stu-id="6651b-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-128">Obtient, le cas échéant, la chaîne du navigateur envoyée par le navigateur dans l’en-tête de requête <see langword="User-Agent" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span></span></summary>
        <value><span data-ttu-id="6651b-129">Contenu de l’en-tête de requête <see langword="User-Agent" /> envoyé par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-130">L’exemple de code suivant montre comment déterminer le `User-Agent` en-tête de demande envoyée par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowserCapabilitiesProvider : System.Web.Configuration.HttpCapabilitiesProvider with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-131">Obtient ou définit l’objet <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> du navigateur actuel.</span><span class="sxs-lookup"><span data-stu-id="6651b-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></summary>
        <value><span data-ttu-id="6651b-132">Objet <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> pour le navigateur actuel.</span><span class="sxs-lookup"><span data-stu-id="6651b-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browsers : System.Collections.ArrayList" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-133">Obtient un élément <see cref="T:System.Collections.ArrayList" /> des navigateurs dans le dictionnaire <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="6651b-134"><see cref="T:System.Collections.ArrayList" /> des navigateurs dans le dictionnaire <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCombineFormsInDeck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-135">Obtient une valeur qui indique si le navigateur prend en charge les jeux contenant plusieurs formulaires, comme des cartes distinctes.</span><span class="sxs-lookup"><span data-stu-id="6651b-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span></span></summary>
        <value><span data-ttu-id="6651b-136"><see langword="true" /> si le navigateur prend en charge les jeux contenant plusieurs formulaires ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-136"><see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-137">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-137">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-138">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="6651b-139">Si la valeur est true, l’adaptateur peut sortir plusieurs formulaires à partir de la même page sous forme de cartes d’un paquet unique, lorsque cela est possible.</span><span class="sxs-lookup"><span data-stu-id="6651b-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-140">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les jeux contenant plusieurs formulaires, comme des cartes distinctes.</span><span class="sxs-lookup"><span data-stu-id="6651b-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInitiateVoiceCall : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-141">Obtient une valeur indiquant si l’appareil du navigateur est capable d’initialiser un appel vocal.</span><span class="sxs-lookup"><span data-stu-id="6651b-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span></span></summary>
        <value><span data-ttu-id="6651b-142"><see langword="true" /> si l’appareil du navigateur peut initier un appel vocal ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-142"><see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-143">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-144">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-145">L’exemple de code suivant montre comment déterminer si l’appareil du navigateur est capable d’initier un appel vocal.</span><span class="sxs-lookup"><span data-stu-id="6651b-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderAfterInputOrSelectElement : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-146">Obtient une valeur qui indique si le navigateur prend en charge le contenu de page suivant les éléments WML <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-147"><see langword="true" /> Si le navigateur prend en charge le contenu HTML de la suite de la page <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" /> éléments ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-147"><see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-148">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-148">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-149">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-150">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge le contenu HTML de la suite de la page `<select>` ou `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderEmptySelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-151">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;select&gt;" /> vides.</span><span class="sxs-lookup"><span data-stu-id="6651b-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-152"><see langword="true" /> si le navigateur prend en charge les éléments HTML <see langword="&lt;select&gt;" /> vides ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-152"><see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-153">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-153">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-154">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML vide `<select>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderInputAndSelectElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-155">Obtient une valeur indiquant si le navigateur prend en charge les éléments WML <see langword="INPUT" /> et <see langword="SELECT" /> ensemble sur la même carte.</span><span class="sxs-lookup"><span data-stu-id="6651b-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span></span></summary>
        <value><span data-ttu-id="6651b-156"><see langword="true" /> si le navigateur prend en charge les éléments WML <see langword="&lt;input&gt;" /> et <see langword="&lt;select&gt;" /> ensemble ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-156"><see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-157">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-157">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-158">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-159">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<input>` et `<select>` éléments ensemble.</span><span class="sxs-lookup"><span data-stu-id="6651b-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderMixedSelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-160">Obtient une valeur indiquant si le navigateur prend en charge les éléments WML <see langword="&lt;option&gt;" /> qui spécifient des attributs <see langword="onpick" /> et <see langword="value" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span></span></summary>
        <value><span data-ttu-id="6651b-161"><see langword="true" /> si le navigateur prend en charge les éléments WML <see langword="&lt;option&gt;" /> qui spécifient à la fois les attributs <see langword="onpick" /> et <see langword="value" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-161"><see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-162">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-162">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-163">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-164">Si `false`, `onpick` valeurs sont affichées sous forme de liens hypertexte et `value` attributs nécessitent un `<do>` élément pour la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-165">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<option>` qui spécifient des `onpick` et `value` attributs.</span><span class="sxs-lookup"><span data-stu-id="6651b-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderOneventAndPrevElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-166">Obtient une valeur indiquant si le navigateur prend en charge des éléments WML <see langword="&lt;onevent&gt;" /> et <see langword="&lt;prev&gt;" /> qui coexistent dans la même carte WML.</span><span class="sxs-lookup"><span data-stu-id="6651b-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span></span></summary>
        <value><span data-ttu-id="6651b-167"><see langword="true" /> si le navigateur prend en charge des éléments <see langword="&lt;onevent&gt;" /> et <see langword="&lt;prev&gt;" /> qui coexistent dans la même carte WML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-167"><see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-168">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-168">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-169">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-170">Si `false`, WML `<onevent>` et `<prev>` les éléments qui coexistent dans la même carte WML ne seront pas correctement rendus.</span><span class="sxs-lookup"><span data-stu-id="6651b-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-171">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les éléments WML `<onevent>` et `<prev>` les éléments qui coexistent dans la même carte WML.</span><span class="sxs-lookup"><span data-stu-id="6651b-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderPostBackCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-172">Obtient une valeur indiquant si le navigateur WML prend en charge des cartes WML pour la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-172">Gets a value indicating whether the browser supports WML cards for postback.</span></span></summary>
        <value><span data-ttu-id="6651b-173"><see langword="true" /> si le navigateur prend en charge les cartes WML pour la publication ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-173"><see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-174">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-175">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> propriété s’applique uniquement aux navigateurs d’appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="6651b-176">Si `false`, publication (postback) cartes ne sont pas rendus correctement par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-177">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cartes WML pour la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderSetvarZeroWithMultiSelectionList : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-178">Obtient une valeur indiquant si le navigateur prend en charge des éléments WML <see langword="&lt;setvar&gt;" /> avec un attribut <see langword="value" /> de 0.</span><span class="sxs-lookup"><span data-stu-id="6651b-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span></span></summary>
        <value><span data-ttu-id="6651b-179"><see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;setvar&gt;" /> WML avec un attribut <see langword="value" /> de <see langword="0" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-179"><see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-180">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-180">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-181">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-182">Si `false`, HTML `<setvar>` éléments avec un `value` attribut de `0` s’affichent pas correctement.</span><span class="sxs-lookup"><span data-stu-id="6651b-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-183">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les éléments WML `<setvar>` éléments avec un `value` attribut 0.</span><span class="sxs-lookup"><span data-stu-id="6651b-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSendMail : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-184">Obtient une valeur indiquant si le navigateur prend en charge l’envoi d’e-mails à l’aide de l’élément HTML <see langword="&lt;mailto&gt;" /> pour afficher des adresses électroniques.</span><span class="sxs-lookup"><span data-stu-id="6651b-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span></span></summary>
        <value><span data-ttu-id="6651b-185"><see langword="true" /> Si le navigateur prend en charge l’envoi d’e-mails à l’aide de l’HTML <see langword="&lt;mailto&gt;" /> élément pour afficher des adresses électroniques ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-185"><see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-186">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-186">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-187">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge l’envoi d’e-mails à l’aide de l’HTML `<mailto>` élément pour afficher des adresses électroniques.</span><span class="sxs-lookup"><span data-stu-id="6651b-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Capabilities : System.Collections.IDictionary with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-188">Utilisée en interne pour obtenir les fonctionnalités définies du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-188">Used internally to get the defined capabilities of the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-189">Fonctionnalités définies du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-189">The defined capabilities of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDF : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-190">Obtient une valeur indiquant si le navigateur prend en charge CDF (Channel Definition Format) pour la diffusion sur le Web (webcasting).</span><span class="sxs-lookup"><span data-stu-id="6651b-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span></span></summary>
        <value><span data-ttu-id="6651b-191"><see langword="true" /> si le navigateur prend en charge CDF ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-191"><see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-192">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-192">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-193">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge CDF.</span><span class="sxs-lookup"><span data-stu-id="6651b-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-194">Obtient la version du .NET Framework qui est installée sur le client.</span><span class="sxs-lookup"><span data-stu-id="6651b-194">Gets the version of the .NET Framework that is installed on the client.</span></span></summary>
        <value><span data-ttu-id="6651b-195">Common Language Runtime <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-195">The common language runtime <see cref="T:System.Version" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-196">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propriété est prise en charge uniquement lorsque le navigateur est Internet Explorer version 5.0 et versions ultérieure.</span><span class="sxs-lookup"><span data-stu-id="6651b-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="6651b-197">Si le .NET Framework n’est pas installé sur le client, la valeur des éléments de version retournée est `0, 0,-1,-1`.</span><span class="sxs-lookup"><span data-stu-id="6651b-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="6651b-198">Si plusieurs versions du .NET Framework sont installée sur le client, le <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propriété retourne la dernière version.</span><span class="sxs-lookup"><span data-stu-id="6651b-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-199">Obtient une valeur qui indique si le navigateur prend en charge les cookies.</span><span class="sxs-lookup"><span data-stu-id="6651b-199">Gets a value indicating whether the browser supports cookies.</span></span></summary>
        <value><span data-ttu-id="6651b-200"><see langword="true" /> si le navigateur prend en charge les cookies ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-200"><see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-201">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-202">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propriété indique si l’application de navigateur prend en charge les cookies.</span><span class="sxs-lookup"><span data-stu-id="6651b-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="6651b-203">Si l’utilisateur a désactivé les cookies dans leur application, le <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propriété n’est pas affectée.</span><span class="sxs-lookup"><span data-stu-id="6651b-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-204">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cookies.</span><span class="sxs-lookup"><span data-stu-id="6651b-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Crawler : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-205">Obtient une valeur indiquant si le navigateur est un moteur de recherche Internet.</span><span class="sxs-lookup"><span data-stu-id="6651b-205">Gets a value indicating whether the browser is a search engine Web crawler.</span></span></summary>
        <value><span data-ttu-id="6651b-206"><see langword="true" /> si le navigateur est un moteur de recherche ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-206"><see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-207">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-207">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-208">L’exemple de code suivant montre comment déterminer si le client est un moteur de recherche Web.</span><span class="sxs-lookup"><span data-stu-id="6651b-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="member this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="httpCapabilitiesBase.CreateHtmlTextWriter w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="6651b-209"><see cref="T:System.IO.TextWriter" /> à créer.</span><span class="sxs-lookup"><span data-stu-id="6651b-209"><see cref="T:System.IO.TextWriter" /> to be created.</span></span></param>
        <summary><span data-ttu-id="6651b-210">Crée une nouvelle instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="6651b-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></summary>
        <returns><span data-ttu-id="6651b-211">Une nouvelle instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="6651b-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="6651b-212">La méthode n’a pas pu créer d’instance de <see cref="T:System.Web.UI.HtmlTextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSubmitButtonLimit : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-213">Retourne le nombre maximal de boutons Envoyer qui sont autorisés pour un formulaire.</span><span class="sxs-lookup"><span data-stu-id="6651b-213">Returns the maximum number of Submit buttons that are allowed for a form.</span></span></summary>
        <value><span data-ttu-id="6651b-214">Nombre maximal de boutons Envoyer qui sont autorisés pour un formulaire.</span><span class="sxs-lookup"><span data-stu-id="6651b-214">The maximum number of Submit buttons that are allowed for a form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-215">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> propriété représente principalement le nombre de touches programmables qui sont disponibles sur un appareil mobile WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="6651b-216">Pages Web Forms pour les appareils mobiles peuvent contenir un <xref:System.Web.UI.MobileControls.SelectionList> objet et que plusieurs <xref:System.Web.UI.MobileControls.Command> contrôle.</span><span class="sxs-lookup"><span data-stu-id="6651b-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="6651b-217">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> vous permet de choisir parmi les <xref:System.Web.UI.MobileControls.Command> contrôles doivent être assignés à une touche programmable sur les appareils qui ont plusieurs touches programmables.</span><span class="sxs-lookup"><span data-stu-id="6651b-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberSignature Language="F#" Value="member this.DisableOptimizedCacheKey : unit -&gt; unit" Usage="httpCapabilitiesBase.DisableOptimizedCacheKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6651b-218">Utilisé en interne pour désactiver l'utilisation d'une clé de cache optimisée.</span><span class="sxs-lookup"><span data-stu-id="6651b-218">Used internally to disable use of an optimized cache key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EcmaScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-219">Obtient le numéro de version d’ECMAScript que le navigateur prend en charge.</span><span class="sxs-lookup"><span data-stu-id="6651b-219">Gets the version number of ECMAScript that the browser supports.</span></span></summary>
        <value><span data-ttu-id="6651b-220">Numéro de version d'ECMAScript que le navigateur prend en charge.</span><span class="sxs-lookup"><span data-stu-id="6651b-220">The version number of ECMAScript that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-221">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge un numéro de version principale d’ECMAScript supérieur à 1.</span><span class="sxs-lookup"><span data-stu-id="6651b-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=42245"><span data-ttu-id="6651b-222">Site Web officiel d’ECMA</span><span class="sxs-lookup"><span data-stu-id="6651b-222">ECMA official Web site</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-223">Obtient une valeur qui indique si le navigateur prend en charge les frames HTML.</span><span class="sxs-lookup"><span data-stu-id="6651b-223">Gets a value indicating whether the browser supports HTML frames.</span></span></summary>
        <value><span data-ttu-id="6651b-224"><see langword="true" /> si le navigateur prend en charge les frames ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-224"><see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-225">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-225">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-226">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cadres HTML.</span><span class="sxs-lookup"><span data-stu-id="6651b-226">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-227">Obtient le numéro de version principale de la passerelle sans fil utilisée pour accéder au serveur, s’il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-227">Gets the major version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="6651b-228">Numéro de version principale de la passerelle sans fil utilisée pour accéder au serveur, s'il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-228">The major version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="6651b-229">La valeur par défaut est <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-229">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="6651b-230">Le numéro de version principale de la passerelle sans fil ne peut pas être analysé.</span><span class="sxs-lookup"><span data-stu-id="6651b-230">The major version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-231">Obtient le numéro de version secondaire de la passerelle sans fil utilisée pour accéder au serveur, s’il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-231">Gets the minor version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="6651b-232">Numéro de version secondaire de la passerelle sans fil utilisée pour accéder au serveur, s'il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-232">The minor version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="6651b-233">La valeur par défaut est <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-233">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="6651b-234">Le numéro de version secondaire de la passerelle sans fil ne peut pas être analysé.</span><span class="sxs-lookup"><span data-stu-id="6651b-234">The minor version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayVersion : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-235">Obtient la version de la passerelle sans fil utilisée pour accéder au serveur, s’il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-235">Gets the version of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="6651b-236">Numéro de version de la passerelle sans fil utilisée pour accéder au serveur, s'il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-236">The version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="6651b-237">La valeur par défaut est <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-237">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-238">L’exemple de code suivant montre comment déterminer si la passerelle est un `UP` passerelle.</span><span class="sxs-lookup"><span data-stu-id="6651b-238">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberSignature Language="F#" Value="member this.GetClrVersions : unit -&gt; Version[]" Usage="httpCapabilitiesBase.GetClrVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6651b-239">Retourne toutes les versions du Common Language Runtime .NET Framework installées sur le client.</span><span class="sxs-lookup"><span data-stu-id="6651b-239">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span></span></summary>
        <returns><span data-ttu-id="6651b-240">Tableau d'objets <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-240">An array of <see cref="T:System.Version" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-241">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> méthode est prise en charge uniquement lorsque le navigateur est Internet Explorer version 5.0 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="6651b-241">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="6651b-242">Si le common language runtime n’est pas installé sur le client, la propriété retourne un tableau contenant un seul <xref:System.Version> de l’objet avec les valeurs 0, 0, -1, -1.</span><span class="sxs-lookup"><span data-stu-id="6651b-242">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberSignature Language="F#" Value="static member GetConfigCapabilities : string * System.Web.HttpRequest -&gt; System.Web.Configuration.HttpCapabilitiesBase" Usage="System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities (configKey, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey"><span data-ttu-id="6651b-243">Nom de la section de configuration qui configure les fonctionnalités du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-243">The name of the configuration section that configures browser capabilities.</span></span></param>
        <param name="request"><span data-ttu-id="6651b-244">Objet <see cref="T:System.Web.HttpRequest" /> généré par le navigateur pour lequel retourner des fonctionnalités et qui est généralement l’élément <see cref="T:System.Web.HttpRequest" /> en cours.</span><span class="sxs-lookup"><span data-stu-id="6651b-244">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span></span></param>
        <summary><span data-ttu-id="6651b-245">Utilisé en interne pour retourner une instance de <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> représentant le navigateur qui a généré l’élément <see cref="T:System.Web.HttpRequest" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-245">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></summary>
        <returns><span data-ttu-id="6651b-246">Instance de <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> représentant le navigateur qui a généré l’élément <see cref="T:System.Web.HttpRequest" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-246">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBackButton : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-247">Obtient une valeur indiquant si le navigateur a un bouton **Précédent** dédié.</span><span class="sxs-lookup"><span data-stu-id="6651b-247">Gets a value indicating whether the browser has a dedicated **Back** button.</span></span></summary>
        <value><span data-ttu-id="6651b-248"><see langword="true" /> Si le navigateur a un dédié **retour** bouton ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-248"><see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-249">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-249">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-250">Si `false`, un contrôle de lien peut être nécessaire lorsqu’un **retour** bouton n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="6651b-250">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-251">L’exemple de code suivant montre comment déterminer si le navigateur a un dédié **retour** bouton.</span><span class="sxs-lookup"><span data-stu-id="6651b-251">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidesRightAlignedMultiselectScrollbars : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-252">Obtient une valeur indiquant si la barre de défilement d’un élément HTML <see langword="&lt;select multiple&gt;" /> avec une valeur d’attribut <see langword="align" /> égale à <see langword="right" /> est masquée lors du rendu.</span><span class="sxs-lookup"><span data-stu-id="6651b-252">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span></span></summary>
        <value><span data-ttu-id="6651b-253"><see langword="true" /> si la barre de défilement d'un élément <see langword="&lt;select multiple&gt;" /> HTML avec une valeur d'attribut <see langword="align" /> égal à <see langword="right" /> est masquée lors du rendu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-253"><see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-254">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-254">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-255">L’exemple de code suivant montre comment déterminer si le navigateur masque la barre de défilement pour aligné à droite de sélectionner plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-255">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlTextWriter : string with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-256">Obtient ou définit le nom de classe complet de <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="6651b-256">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></summary>
        <value><span data-ttu-id="6651b-257">Nom de classe qualifié complet du <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="6651b-257">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-258">Obtient l'identificateur interne du navigateur comme spécifié dans le fichier de définition de navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-258">Gets the internal identifier of the browser as specified in the browser definition file.</span></span></summary>
        <value><span data-ttu-id="6651b-259">Identificateur interne du navigateur comme spécifié dans le fichier de définition de navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-259">Internal identifier of the browser as specified in the browser definition file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpCapabilitiesBase.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6651b-260">Utilisé en interne pour initialiser un jeu de valeurs interne.</span><span class="sxs-lookup"><span data-stu-id="6651b-260">Used internally to initialize an internal set of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-261">Retourne le type d’entrée pris en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-261">Returns the type of input supported by browser.</span></span></summary>
        <value><span data-ttu-id="6651b-262">Type d'entrée pris en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-262">The type of input supported by browser.</span></span> <span data-ttu-id="6651b-263">La valeur par défaut est <c>telephoneKeypad</c>.</span><span class="sxs-lookup"><span data-stu-id="6651b-263">The default is <c>telephoneKeypad</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-264">Valeurs de retour possibles sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="6651b-264">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="6651b-265">L’exemple de code suivant montre comment déterminer le type de prise en charge d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6651b-265">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.IsBrowser : string -&gt; bool" Usage="httpCapabilitiesBase.IsBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="6651b-266">Navigateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-266">The specified browser.</span></span></param>
        <summary><span data-ttu-id="6651b-267">Obtient une valeur indiquant si le navigateur client est le même que le navigateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-267">Gets a value indicating whether the client browser is the same as the specified browser.</span></span></summary>
        <returns><span data-ttu-id="6651b-268"><see langword="true" /> si le navigateur client est le même que le navigateur spécifié, sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-268"><see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-269">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-269">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-270">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> méthode retourne également `true` si hérite de la définition de navigateur du client à partir du navigateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-270">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-271">Obtient une valeur indiquant si le navigateur a un affichage couleur.</span><span class="sxs-lookup"><span data-stu-id="6651b-271">Gets a value indicating whether the browser has a color display.</span></span></summary>
        <value><span data-ttu-id="6651b-272"><see langword="true" /> si le navigateur a un affichage couleur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-272"><see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-273">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-273">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-274">L’exemple de code suivant indique si le navigateur du client prend en charge la couleur.</span><span class="sxs-lookup"><span data-stu-id="6651b-274">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="6651b-275">La valeur retournée peut être utilisée pour déterminer l’image appropriée à envoyer au navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-275">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMobileDevice : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-276">Obtient une valeur indiquant si le navigateur est un appareil mobile reconnu.</span><span class="sxs-lookup"><span data-stu-id="6651b-276">Gets a value indicating whether the browser is a recognized mobile device.</span></span></summary>
        <value><span data-ttu-id="6651b-277"><see langword="true" /> si le navigateur est un appareil mobile reconnu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-277"><see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-278">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-278">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-279">L’exemple de code suivant montre comment déterminer si le navigateur est un appareil mobile.</span><span class="sxs-lookup"><span data-stu-id="6651b-279">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="6651b-280">Nom de la fonctionnalité du navigateur à récupérer.</span><span class="sxs-lookup"><span data-stu-id="6651b-280">The name of the browser capability to retrieve.</span></span></param>
        <summary><span data-ttu-id="6651b-281">Obtient la valeur de la fonctionnalité du navigateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-281">Gets the value of the specified browser capability.</span></span> <span data-ttu-id="6651b-282">En C#, cette propriété est l'indexeur pour la classe.</span><span class="sxs-lookup"><span data-stu-id="6651b-282">In C#, this property is the indexer for the class.</span></span></summary>
        <value><span data-ttu-id="6651b-283">Fonctionnalité du navigateur avec le nom de clé spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-283">The browser capability with the specified key name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-284">En JScript, vous pouvez utiliser les propriétés indexées par défaut définies par un type, mais vous ne pouvez pas définir les vôtres explicitement.</span><span class="sxs-lookup"><span data-stu-id="6651b-284">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="6651b-285">Toutefois, la spécification du `expando` attribut sur une classe fournit automatiquement une propriété indexée par défaut avec un type de `Object` et un type d’index `String`.</span><span class="sxs-lookup"><span data-stu-id="6651b-285">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaApplets : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-286">Obtient une valeur indiquant si le navigateur prend en charge Java.</span><span class="sxs-lookup"><span data-stu-id="6651b-286">Gets a value indicating whether the browser supports Java.</span></span></summary>
        <value><span data-ttu-id="6651b-287"><see langword="true" /> si le navigateur prend en charge Java ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-287"><see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-288">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-289">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge Java.</span><span class="sxs-lookup"><span data-stu-id="6651b-289">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-290">Obtient une valeur indiquant si le navigateur prend en charge JavaScript.</span><span class="sxs-lookup"><span data-stu-id="6651b-290">Gets a value indicating whether the browser supports JavaScript.</span></span></summary>
        <value><span data-ttu-id="6651b-291"><see langword="true" /> si le navigateur prend en charge JavaScript ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-291"><see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-292">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-292">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-293">Si le navigateur prend en charge JavaScript, mais le script est désactivé via un paramètre de sécurité, le <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> propriété retournera `true` mais le script s’exécutera pas sur le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-293">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-294">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge JavaScript.</span><span class="sxs-lookup"><span data-stu-id="6651b-294">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-295">Obtient la version JScript prise en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-295">Gets the JScript version that the browser supports.</span></span></summary>
        <value><span data-ttu-id="6651b-296"><see cref="T:System.Version" /> de JScript prise en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-296">The <see cref="T:System.Version" /> of JScript that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-297">Obtient le numéro de version (entier) principale du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-297">Gets the major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-298">Numéro de version principale du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-298">The major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-299">L’exemple de code suivant ajoute la majeure et mineure (entier et décimal) des valeurs de la version du navigateur numéro et envoie le résultat au navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-299">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="6651b-300">La valeur de version principale n’est pas un entier.</span><span class="sxs-lookup"><span data-stu-id="6651b-300">The major version value is not an integer.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHrefLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-301">Obtient la longueur maximale, en caractères, de l’attribut <see langword="href" /> d’un élément HTML <see langword="&lt;a&gt;" /> (ancre).</span><span class="sxs-lookup"><span data-stu-id="6651b-301">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="6651b-302">Longueur maximale de caractères pour l'attribut <see langword="href" /> d'un élément (ancre) <see langword="&lt;a&gt;" /> HTML.</span><span class="sxs-lookup"><span data-stu-id="6651b-302">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRenderedPageSize : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-303">Obtient la longueur maximale de la page, en octets, que le navigateur peut afficher.</span><span class="sxs-lookup"><span data-stu-id="6651b-303">Gets the maximum length of the page, in bytes, which the browser can display.</span></span></summary>
        <value><span data-ttu-id="6651b-304">Longueur maximale de la page, en octets, que le navigateur peut afficher.</span><span class="sxs-lookup"><span data-stu-id="6651b-304">The maximum length of the page, in bytes, which the browser can display.</span></span> <span data-ttu-id="6651b-305">La valeur par défaut est <c>2000</c>.</span><span class="sxs-lookup"><span data-stu-id="6651b-305">The default is <c>2000</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-306">Traitement par une passerelle intermédiaire peut modifier le nombre d’octets qui atteignent le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-306">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="6651b-307">ASP.NET n’applique pas cette limite de taille de page.</span><span class="sxs-lookup"><span data-stu-id="6651b-307">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="6651b-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> est particulièrement utile lorsque vous travaillez avec des navigateurs client mobiles.</span><span class="sxs-lookup"><span data-stu-id="6651b-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSoftkeyLabelLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-309">Retourne la longueur maximale du texte qu’une étiquette de touche programmable peut afficher.</span><span class="sxs-lookup"><span data-stu-id="6651b-309">Returns the maximum length of the text that a soft-key label can display.</span></span></summary>
        <value><span data-ttu-id="6651b-310">Longueur maximale de texte qu'une étiquette de touche programmable peut afficher.</span><span class="sxs-lookup"><span data-stu-id="6651b-310">The maximum length of the text that a soft-key label can display.</span></span> <span data-ttu-id="6651b-311">La valeur par défaut est <see langword="5" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-311">The default is <see langword="5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-312">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-312">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-313">L’exemple de code suivant montre comment déterminer la longueur maximale de l’étiquette de touche programmable pour le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-313">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-314">Obtient le numéro de version secondaire (décimal) du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-314">Gets the minor (that is, decimal) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-315">Numéro de version secondaire du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-315">The minor version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-316">L’exemple de code suivant retourne la version secondaire du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-316">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="6651b-317">Le numéro de version secondaire dans l’en-tête n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="6651b-317">The minor version number in the header is not valid.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersionString : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-318">Obtient le numéro de version secondaire (décimal) du navigateur sous la forme d'une chaîne.</span><span class="sxs-lookup"><span data-stu-id="6651b-318">Gets the minor (decimal) version number of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="6651b-319">Numéro de version secondaire du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-319">The minor version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceManufacturer : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-320">Retourne le nom du fabricant d’un appareil mobile, s’il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-320">Returns the name of the manufacturer of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="6651b-321">Nom du fabricant d'un appareil mobile, s'il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-321">The name of the manufacturer of a mobile device, if known.</span></span> <span data-ttu-id="6651b-322">La valeur par défaut est <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-322">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceModel : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-323">Obtient le nom de modèle d'un appareil mobile, s'il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-323">Gets the model name of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="6651b-324">Nom de modèle d'un appareil mobile, s'il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-324">The model name of a mobile device, if known.</span></span> <span data-ttu-id="6651b-325">La valeur par défaut est <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-325">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MSDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-326">Obtient la version du modèle DOM (Document Object Model) Microsoft HTML pris en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-326">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="6651b-327">Numéro de la version de modèle DOM MSHTML prise en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-327">The number of the MSHTML DOM version that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-328">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge une version principale de modèle DOM MSHTML supérieure à 1.</span><span class="sxs-lookup"><span data-stu-id="6651b-328">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfSoftkeys : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-329">Retourne le nombre de touches programmables sur un appareil mobile.</span><span class="sxs-lookup"><span data-stu-id="6651b-329">Returns the number of soft keys on a mobile device.</span></span></summary>
        <value><span data-ttu-id="6651b-330">Nombre de touches programmables prises en charge sur un appareil mobile.</span><span class="sxs-lookup"><span data-stu-id="6651b-330">The number of soft keys supported on a mobile device.</span></span> <span data-ttu-id="6651b-331">La valeur par défaut est <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-331">The default is <see langword="0" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-332">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-332">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-333">Touches programmables sont des touches spéciales que l’application peut généralement mapper à des tâches personnalisées.</span><span class="sxs-lookup"><span data-stu-id="6651b-333">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="6651b-334">Texte de touche programmable est affiché sur l’écran dans l’angle inférieur gauche et inférieur droit.</span><span class="sxs-lookup"><span data-stu-id="6651b-334">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-335">Obtient le nom de la plateforme que le client utilise, s’il est connu.</span><span class="sxs-lookup"><span data-stu-id="6651b-335">Gets the name of the platform that the client uses, if it is known.</span></span></summary>
        <value><span data-ttu-id="6651b-336">Le système d'exploitation que le client utilise, s'il est connu ; sinon, la valeur est <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-336">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-337">Certaines des valeurs possibles pour le <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> propriété sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="6651b-337">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="6651b-338">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="6651b-338">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="6651b-339">`Windows NT 5.1` (Windows XP)</span><span class="sxs-lookup"><span data-stu-id="6651b-339">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="6651b-340">`WinNT` (toutes les autres versions de Windows NT)</span><span class="sxs-lookup"><span data-stu-id="6651b-340">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="6651b-341">L’exemple de code suivant montre comment déterminer si le navigateur est en cours d’exécution sur la plateforme Windows NT.</span><span class="sxs-lookup"><span data-stu-id="6651b-341">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredImageMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-342">Retourne le type MIME du type de contenu image généralement préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-342">Returns the MIME type of the type of image content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-343">Type MIME du type de contenu image généralement préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-343">The MIME type of the type of image content typically preferred by the browser.</span></span> <span data-ttu-id="6651b-344">La valeur par défaut est <see langword="image/gif" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-344">The default is <see langword="image/gif" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-345">L’exemple de code suivant montre comment déterminer le type d’image généralement préféré par un navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-345">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-346">Retourne le type MIME du type de contenu généralement préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-346">Returns the MIME type of the type of content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-347">Type MIME du type de contenu généralement préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-347">The MIME type of the type of content typically preferred by the browser.</span></span> <span data-ttu-id="6651b-348">La valeur par défaut est <see langword="text/html" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-348">The default is <see langword="text/html" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-349">L’exemple de code suivant montre comment déterminer le type MIME généralement préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-349">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-350">Obtient le nom général pour le type de contenu que le navigateur préfère.</span><span class="sxs-lookup"><span data-stu-id="6651b-350">Gets the general name for the type of content that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="6651b-351"><see langword="html32" /> ou <see langword="chtml10" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-351"><see langword="html32" /> or <see langword="chtml10" />.</span></span> <span data-ttu-id="6651b-352">La valeur par défaut est <see langword="html32" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-352">The default is <see langword="html32" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-353">L’exemple de code suivant montre comment déterminer le type de contenu que le navigateur préfère.</span><span class="sxs-lookup"><span data-stu-id="6651b-353">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRequestEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-354">Obtient le codage de requête préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-354">Gets the request encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-355">Codage de requête préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-355">The request encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredResponseEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-356">Obtient le codage de réponse préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-356">Gets the response encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-357">Codage de réponse préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-357">The response encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreakBeforeWmlSelectAndInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-358">Obtient une valeur indiquant si le navigateur restitue un saut de ligne avant les éléments <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-358">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-359"><see langword="true" /> si le navigateur restitue un saut de ligne avant les éléments <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-359"><see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-360">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-361">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-361">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-362">Si `true`, contenu suivant `<select>` ou `<input>` éléments sont automatiquement placés sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-362">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-363">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne avant `<select>` ou `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-363">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterHtmlLists : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-364">Obtient une valeur indiquant si le navigateur restitue un saut de ligne après des éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="6651b-364">Gets a value indicating whether the browser renders a line break after list-item elements.</span></span></summary>
        <value><span data-ttu-id="6651b-365"><see langword="true" /> si le navigateur restitue un saut de ligne après des éléments de liste ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-365"><see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-366">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-366">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-367">Si `true`, le contenu suivant d’éléments de liste sera automatiquement placé sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-367">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-368">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne après des éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="6651b-368">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlAnchor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-369">Obtient une valeur indiquant si le navigateur restitue un saut de ligne après un élément HTML <see langword="&lt;a&gt;" /> (ancre) autonome.</span><span class="sxs-lookup"><span data-stu-id="6651b-369">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="6651b-370"><see langword="true" /> si le navigateur restitue un saut de ligne après un élément (ancre) <see langword="&lt;a&gt;" /> HTML autonome ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-370"><see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-371">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-371">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-372">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-372">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-373">Si `true`, le contenu suivant un HTML autonome `<a>` élément (ancre) est automatiquement placé sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-373">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-374">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne après un WML autonome `<a>` élément (ancre).</span><span class="sxs-lookup"><span data-stu-id="6651b-374">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-375">Obtient une valeur indiquant si le navigateur restitue un saut de ligne après un élément HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-375">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="6651b-376"><see langword="true" /> Si le navigateur restitue un saut de ligne après un élément HTML <see langword="&lt;input&gt;" /> élément ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-376"><see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-377">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-377">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-378">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-378">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-379">Si `true`, le contenu suivant HTML `<input>` élément sera automatiquement placé sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-379">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-380">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne après un élément HTML `<input>` élément.</span><span class="sxs-lookup"><span data-stu-id="6651b-380">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlDoAcceptsInline : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-381">Obtient une valeur indiquant si le navigateur d’appareil mobile restitue une construction d’acceptation de formulaire WML basé sur <see langword="do" /> comme bouton inclus (inline) plutôt que sous forme de touche programmable.</span><span class="sxs-lookup"><span data-stu-id="6651b-381">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span></span></summary>
        <value><span data-ttu-id="6651b-382"><see langword="true" /> si le navigateur d'appareil mobile restitue une construction Accept de formulaire WML basé sur <see langword="do" /> comme bouton inline ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-382"><see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-383">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-383">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-384">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-384">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-385">L’exemple de code suivant montre comment déterminer si le navigateur restitue un WML `do`-en construction comme bouton inline accept de formulaire.</span><span class="sxs-lookup"><span data-stu-id="6651b-385">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlSelectsAsMenuCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-386">Obtient une valeur indiquant si le navigateur restitue les éléments WML <see langword="&lt;select&gt;" /> comme des cartes de menu plutôt que sous forme de zone de liste modifiable.</span><span class="sxs-lookup"><span data-stu-id="6651b-386">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span></span></summary>
        <value><span data-ttu-id="6651b-387"><see langword="true" /> si le navigateur restitue des éléments <see langword="&lt;select&gt;" /> WML comme des cartes de menu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-387"><see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-388">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-388">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-389">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> propriété s’applique uniquement aux appareils mobiles WML compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-389">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-390">L’exemple de code suivant montre comment déterminer si le navigateur restitue les éléments WML `<select>` comme des cartes de menu.</span><span class="sxs-lookup"><span data-stu-id="6651b-390">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetaTagNameValue : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-391">Utilisé en interne pour produire une balise meta indispensable à certains navigateurs.</span><span class="sxs-lookup"><span data-stu-id="6651b-391">Used internally to produce a meta-tag required by some browsers.</span></span></summary>
        <value><span data-ttu-id="6651b-392">Balise meta requise par certains navigateurs.</span><span class="sxs-lookup"><span data-stu-id="6651b-392">A meta-tag required by some browsers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-393">Destiné exclusivement à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="6651b-393">Intended for internal use only.</span></span> <span data-ttu-id="6651b-394">Certains navigateurs requièrent une balise meta semblable à celle-ci pour le navigateur de restituer correctement.</span><span class="sxs-lookup"><span data-stu-id="6651b-394">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresAttributeColonSubstitution : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-395">Obtient une valeur indiquant si le navigateur requiert que les signes deux-points dans les valeurs d’attribut d’élément soient remplacés par un caractère différent.</span><span class="sxs-lookup"><span data-stu-id="6651b-395">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span></span></summary>
        <value><span data-ttu-id="6651b-396"><see langword="true" /> si le navigateur requiert que les signes deux-points dans les valeurs d'attribut d'élément soient remplacés par un caractère différent ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-396"><see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-397">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-397">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-398">Certains navigateurs ne reconnaissent pas les signes deux-points dans les valeurs d’attribut élément.</span><span class="sxs-lookup"><span data-stu-id="6651b-398">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="6651b-399">Si `true`, un caractère différent sera substitué au rendu et retourné dans les données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-399">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-400">L’exemple de code suivant montre comment déterminer si le navigateur requiert des signes deux-points dans les valeurs d’attribut d’élément soient remplacés par un caractère différent.</span><span class="sxs-lookup"><span data-stu-id="6651b-400">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresContentTypeMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-401">Obtient une valeur indiquant si le navigateur nécessite un élément HTML <see langword="&lt;meta&gt;" /> pour lequel l’attribut <see langword="content-type" /> est spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-401">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span></span></summary>
        <value><span data-ttu-id="6651b-402"><see langword="true" /> si le navigateur requiert un élément <see langword="&lt;meta&gt;" /> HTML pour lequel l'attribut <see langword="content-type" /> est spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-402"><see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-403">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-403">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-404">Si `true`, adaptateurs de contrôle serveur insèrent la balise suivante dans le code HTML `<head>` élément d’une page Web :</span><span class="sxs-lookup"><span data-stu-id="6651b-404">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="6651b-405">Dans cet exemple, `CONTENT` est la valeur retournée par la <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> propriété, et `charset` est l’encodage de caractères utilisé.</span><span class="sxs-lookup"><span data-stu-id="6651b-405">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-406">L’exemple de code suivant montre comment déterminer si le navigateur requiert un élément HTML `<meta>` élément pour lequel le `content-type` attribut est spécifié.</span><span class="sxs-lookup"><span data-stu-id="6651b-406">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresControlStateInSession : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-407">Obtient une valeur indiquant si le navigateur nécessite que l’état du contrôle soit conservé dans les sessions.</span><span class="sxs-lookup"><span data-stu-id="6651b-407">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span></span></summary>
        <value><span data-ttu-id="6651b-408"><see langword="true" /> si le navigateur requiert que l'état du contrôle soit conservé dans les sessions ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-408"><see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-409">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-409">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-410">L’exemple de code suivant montre comment déterminer si le navigateur requiert que l’état de contrôle soit conservé dans les sessions.</span><span class="sxs-lookup"><span data-stu-id="6651b-410">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDBCSCharacter : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-411">Obtient une valeur indiquant si le navigateur nécessite un jeu de caractères codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="6651b-411">Gets a value indicating whether the browser requires a double-byte character set.</span></span></summary>
        <value><span data-ttu-id="6651b-412"><see langword="true" /> si le navigateur requiert un jeu de caractères codés sur deux octets ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-412"><see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-413">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-413">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-414">L’exemple de code suivant montre comment déterminer si le navigateur requiert un jeu de caractères de deux octets.</span><span class="sxs-lookup"><span data-stu-id="6651b-414">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresHtmlAdaptiveErrorReporting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-415">Obtient une valeur indiquant si le navigateur nécessite des messages d’erreur non standard.</span><span class="sxs-lookup"><span data-stu-id="6651b-415">Gets a value indicating whether the browser requires nonstandard error messages.</span></span></summary>
        <value><span data-ttu-id="6651b-416"><see langword="true" /> si le navigateur requiert des messages d'erreur non standard ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-416"><see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-417">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-418">Si `true`, le navigateur n’affiche pas correctement les messages d’erreur HTTP.</span><span class="sxs-lookup"><span data-stu-id="6651b-418">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="6651b-419">Pour corriger ce problème, les adaptateurs de contrôle serveur génèrent une page d’erreur personnalisée pour le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-419">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-420">L’exemple de code suivant montre comment déterminer si le navigateur requiert des messages d’erreur non standard.</span><span class="sxs-lookup"><span data-stu-id="6651b-420">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresLeadingPageBreak : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-421">Obtient une valeur indiquant si le navigateur a besoin que le premier élément dans le corps d’une page Web soit un élément HTML <see langword="&lt;br&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-421">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="6651b-422"><see langword="true" /> si le navigateur requiert que le premier élément dans le corps d'une page Web soit un élément <see langword="BR" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-422"><see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-423">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-423">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-424">Si `true`, insèrent des adaptateurs de contrôle serveur supplémentaire `<br>` élément juste après le `<body>` balise dans une page Web.</span><span class="sxs-lookup"><span data-stu-id="6651b-424">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-425">L’exemple de code suivant montre comment déterminer si le navigateur requiert que le premier élément dans le corps d’une page Web soit un élément HTML `<br>` élément.</span><span class="sxs-lookup"><span data-stu-id="6651b-425">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresNoBreakInFormatting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-426">Obtient une valeur indiquant si le navigateur ne prend pas en charge les éléments HTML <see langword="&lt;br&gt;" /> pour mettre en forme des sauts de ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-426">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span></span></summary>
        <value><span data-ttu-id="6651b-427"><see langword="true" /> si le navigateur ne prend pas en charge les éléments <see langword="&lt;br&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-427"><see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-428">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-428">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-429">Si `true`, le navigateur n’affichera pas correctement les pages contenant le code HTML `<br>` élément.</span><span class="sxs-lookup"><span data-stu-id="6651b-429">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-430">L’exemple de code suivant montre comment déterminer si le navigateur ne prend pas en charge HTML `<br>` éléments à mettre en forme les sauts de ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-430">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresOutputOptimization : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-431">Obtient une valeur indiquant si le navigateur exige que les pages contiennent une forme de balise de langage de balisage avec une taille optimisée.</span><span class="sxs-lookup"><span data-stu-id="6651b-431">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span></summary>
        <value><span data-ttu-id="6651b-432"><see langword="true" /> si le navigateur requiert que les pages contiennent un formulaire de balises de langue de balisage avec une taille optimisée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-432"><see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-433">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-433">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-434">Si `true`, les adaptateurs de contrôle serveur génèrent une sortie minimale pour réduire la taille de la page résultante.</span><span class="sxs-lookup"><span data-stu-id="6651b-434">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6651b-435">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> retourne de la propriété `true` pour les navigateurs i-mode-compatible.</span><span class="sxs-lookup"><span data-stu-id="6651b-435">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-436">L’exemple de code suivant montre comment déterminer si le navigateur exige que les pages contiennent une forme de taille optimisée de balises de langage de balisage.</span><span class="sxs-lookup"><span data-stu-id="6651b-436">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPhoneNumbersAsPlainText : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-437">Obtient une valeur indiquant si le navigateur prend en charge la numérotation téléphonique reposant sur du texte brut ou s’il nécessite un balisage spécial.</span><span class="sxs-lookup"><span data-stu-id="6651b-437">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span></summary>
        <value><span data-ttu-id="6651b-438"><see langword="true" /> si le navigateur prend en charge uniquement la numérotation téléphonique reposant sur du texte brut ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-438"><see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-439">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-439">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-440">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> propriété s’applique uniquement aux navigateurs pour lesquels la <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="6651b-440">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-441">Le code suivant exemple montre comment déterminer si le navigateur prend en charge la numérotation téléphonique basée sur du texte brut, ou si elle nécessite un balisage spécial.</span><span class="sxs-lookup"><span data-stu-id="6651b-441">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSpecialViewStateEncoding : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-442">Obtient une valeur indiquant si le navigateur exige que les valeurs <see langword="VIEWSTATE" /> aient un codage spécial.</span><span class="sxs-lookup"><span data-stu-id="6651b-442">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span></span></summary>
        <value><span data-ttu-id="6651b-443"><see langword="true" /> si le navigateur requiert que les valeurs <see langword="VIEWSTATE" /> aient un codage spécial ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-443"><see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-444">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-444">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-445">HTTP est un protocole sans état, et `VIEWSTATE` est un mécanisme utilisé pour conserver les modifications de client sur plusieurs demandes.</span><span class="sxs-lookup"><span data-stu-id="6651b-445">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="6651b-446">Chaque contrôle sur une page Web contient un <xref:System.Web.UI.Control.ViewState%2A> propriété, qui représente l’accumulation de toutes les modifications apportées par le client.</span><span class="sxs-lookup"><span data-stu-id="6651b-446">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="6651b-447">Dans une page Web Forms, ces modifications sont codées dans les données de publication (postback) comme le `value` de HTML `<input>` élément avec un `type` attribut de `hidden`.</span><span class="sxs-lookup"><span data-stu-id="6651b-447">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="6651b-448">Par exemple :</span><span class="sxs-lookup"><span data-stu-id="6651b-448">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 Si `true`non alphabétiques caractères dans la `VIEWSTATE` valeur ne sera pas envoyée correctement par le navigateur, ni par une passerelle intermédiaire. <span data-ttu-id="6651b-450">Pour corriger ce problème, les adaptateurs de contrôle serveur remplacent des caractères non alphabétiques dans la `VIEWSTATE` valeur avec celles qui ne requièrent pas de codage dans les requêtes HTTP.</span><span class="sxs-lookup"><span data-stu-id="6651b-450">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-451">L’exemple de code suivant montre comment déterminer si le navigateur requiert `VIEWSTATE` valeurs un codage spécial.</span><span class="sxs-lookup"><span data-stu-id="6651b-451">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueFilePathSuffix : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-452">Obtient une valeur indiquant si le navigateur nécessite des URL d’action de formulaire uniques.</span><span class="sxs-lookup"><span data-stu-id="6651b-452">Gets a value indicating whether the browser requires unique form-action URLs.</span></span></summary>
        <value><span data-ttu-id="6651b-453"><see langword="true" /> si le navigateur requiert des URL d'action à formulaire uniques ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-453"><see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-454">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-454">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-455">Une référence automatique HTML `<form>` élément est celui pour lequel le `action` attribut spécifie sa propre URL.</span><span class="sxs-lookup"><span data-stu-id="6651b-455">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="6651b-456">Si `true`, formulaires à référence automatique ne retournent pas les résultats corrects.</span><span class="sxs-lookup"><span data-stu-id="6651b-456">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="6651b-457">Cela est dû à la mise en cache par le navigateur ou une passerelle intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="6651b-457">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="6651b-458">Pour corriger cela, les adaptateurs de contrôle serveur ajoutent une chaîne de requête par défaut (`__ufps=``uniquefilepathsuffix`) sur les valeurs URL d’action de formulaire de formulaires à référence automatique.</span><span class="sxs-lookup"><span data-stu-id="6651b-458">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-459">L’exemple de code suivant montre comment déterminer si le navigateur requiert des URL d’action de formulaire uniques.</span><span class="sxs-lookup"><span data-stu-id="6651b-459">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlCheckboxNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-460">Obtient une valeur indiquant si le navigateur exige des valeurs d’attribut <see langword="name" /> uniques de plusieurs éléments HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-460">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-461"><see langword="true" /> si le navigateur requiert des valeurs d'attribut <see langword="name" /> uniques de plusieurs éléments <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-461"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-462">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-462">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-463">L’exemple de code suivant montre comment déterminer si le navigateur requiert unique `NAME` des valeurs de plusieurs HTML d’attribut `<input type="checkbox">` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-463">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlInputNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-464">Obtient une valeur indiquant si le navigateur exige des valeurs d’attribut <see langword="name" /> uniques de plusieurs éléments HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-464">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-465"><see langword="true" /> si le navigateur requiert des valeurs d'attribut <see langword="name" /> uniques de plusieurs éléments <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-465"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-466">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-466">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-467">L’exemple de code suivant montre comment déterminer si le navigateur requiert unique `name` des valeurs de plusieurs HTML d’attribut `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-467">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUrlEncodedPostfieldValues : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-468">Obtient une valeur indiquant si les données de publication (postback) envoyées par le navigateur sont <see langword="UrlEncoded" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-468">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span></span></summary>
        <value><span data-ttu-id="6651b-469"><see langword="true" /> si les données de publication (postback) envoyées par le navigateur sont <see langword="UrlEncoded" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-469"><see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-470">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-470">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-471">L’exemple de code suivant montre comment déterminer si le navigateur `UrlEncodes` les données de publication.</span><span class="sxs-lookup"><span data-stu-id="6651b-471">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenBitDepth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-472">Retourne la profondeur de l’affichage, en bits par pixel.</span><span class="sxs-lookup"><span data-stu-id="6651b-472">Returns the depth of the display, in bits per pixel.</span></span></summary>
        <value><span data-ttu-id="6651b-473">Profondeur de l'affichage en bits par pixel.</span><span class="sxs-lookup"><span data-stu-id="6651b-473">The depth of the display, in bits per pixel.</span></span> <span data-ttu-id="6651b-474">La valeur par défaut est <see langword="1" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-474">The default is <see langword="1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-475">Retourne la hauteur approximative de l’affichage, en lignes de caractères.</span><span class="sxs-lookup"><span data-stu-id="6651b-475">Returns the approximate height of the display, in character lines.</span></span></summary>
        <value><span data-ttu-id="6651b-476">Hauteur approximative de l'affichage en lignes de caractères.</span><span class="sxs-lookup"><span data-stu-id="6651b-476">The approximate height of the display, in character lines.</span></span> <span data-ttu-id="6651b-477">La valeur par défaut est <see langword="6" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-477">The default is <see langword="6" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-478">La valeur retournée peut être dérivée de la taille de caractère supposée et de la taille réelle de l’écran en pixels.</span><span class="sxs-lookup"><span data-stu-id="6651b-478">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="6651b-479">L’algorithme pour déterminer la hauteur utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au navigateur (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-479">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="6651b-480">Certains navigateurs peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement la hauteur réelle.</span><span class="sxs-lookup"><span data-stu-id="6651b-480">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-481">Retourne la largeur approximative de l’affichage, en caractères.</span><span class="sxs-lookup"><span data-stu-id="6651b-481">Returns the approximate width of the display, in characters.</span></span></summary>
        <value><span data-ttu-id="6651b-482">Largeur approximative de l'affichage en caractères.</span><span class="sxs-lookup"><span data-stu-id="6651b-482">The approximate width of the display, in characters.</span></span> <span data-ttu-id="6651b-483">La valeur par défaut est <see langword="12" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-483">The default is <see langword="12" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-484">La valeur retournée peut être dérivée de la taille de caractère supposée et de la taille réelle de l’écran en pixels.</span><span class="sxs-lookup"><span data-stu-id="6651b-484">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="6651b-485">L’algorithme permettant de déterminer la largeur utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au périphérique (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par les appareils.</span><span class="sxs-lookup"><span data-stu-id="6651b-485">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="6651b-486">Ces valeurs ne sont pas nécessairement exactes (en particulier pour les polices à largeur variable, ces valeurs sont approximatives).</span><span class="sxs-lookup"><span data-stu-id="6651b-486">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="6651b-487">Certains appareils peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement de la largeur réelle.</span><span class="sxs-lookup"><span data-stu-id="6651b-487">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-488">Retourne la hauteur approximative de l’affichage, en pixels.</span><span class="sxs-lookup"><span data-stu-id="6651b-488">Returns the approximate height of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="6651b-489">Hauteur approximative de l'affichage en pixels.</span><span class="sxs-lookup"><span data-stu-id="6651b-489">The approximate height of the display, in pixels.</span></span> <span data-ttu-id="6651b-490">La valeur par défaut est <see langword="72" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-490">The default is <see langword="72" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-491">La valeur retournée peut être dérivée de la taille de caractère supposée et la hauteur de caractère.</span><span class="sxs-lookup"><span data-stu-id="6651b-491">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="6651b-492">L’algorithme permettant de déterminer la hauteur en pixels utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au périphérique (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par les appareils.</span><span class="sxs-lookup"><span data-stu-id="6651b-492">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="6651b-493">Ces valeurs ne sont pas nécessairement exactes.</span><span class="sxs-lookup"><span data-stu-id="6651b-493">These values are not necessarily exact.</span></span> <span data-ttu-id="6651b-494">Certains appareils peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement la hauteur réelle.</span><span class="sxs-lookup"><span data-stu-id="6651b-494">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-495">Retourne la largeur approximative de l’affichage, en pixels.</span><span class="sxs-lookup"><span data-stu-id="6651b-495">Returns the approximate width of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="6651b-496">Largeur approximative de l'affichage en pixels.</span><span class="sxs-lookup"><span data-stu-id="6651b-496">The approximate width of the display, in pixels.</span></span> <span data-ttu-id="6651b-497">La valeur par défaut est <see langword="96" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-497">The default is <see langword="96" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-498">La valeur retournée peut être dérivée de la taille de caractère supposée et de la largeur des caractères.</span><span class="sxs-lookup"><span data-stu-id="6651b-498">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="6651b-499">L’algorithme permettant de déterminer la largeur en pixels utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au périphérique (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par les appareils.</span><span class="sxs-lookup"><span data-stu-id="6651b-499">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="6651b-500">Ces valeurs ne sont pas nécessairement exactes (en particulier pour les polices à largeur variable, ces valeurs sont approximatives).</span><span class="sxs-lookup"><span data-stu-id="6651b-500">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="6651b-501">Certains appareils peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement de la largeur réelle.</span><span class="sxs-lookup"><span data-stu-id="6651b-501">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAccesskeyAttribute : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-502">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="ACCESSKEY" /> des éléments HTML <see langword="&lt;a&gt;" /> (ancre) et <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-502">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-503"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="accesskey" /> des éléments <see langword="&lt;a&gt;" /> (ancre) et <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-503"><see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-504">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-504">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-505">Le `accesskey` attribut étend le contrôle des formulaires et des liens sur une page Web aux plateformes mobiles et accessibles en assignant une touche programmable ou un autre contrôleur à l’appareil pour interagir avec HTML `<a>` (ancre) et `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-505">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-506">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `accesskey` attribut de code HTML `<a>` (ancre) et `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-506">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBodyColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-507">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="bgcolor" /> de l’élément HTML <see langword="&lt;body&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-507">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="6651b-508"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="bgcolor" /> de l'élément <see langword="&lt;body&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-508"><see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-509">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-509">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-510">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `bgcolor` attribut du code HTML `<body>` élément.</span><span class="sxs-lookup"><span data-stu-id="6651b-510">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-511">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;b&gt;" /> pour mettre en forme le texte en gras.</span><span class="sxs-lookup"><span data-stu-id="6651b-511">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span></span></summary>
        <value><span data-ttu-id="6651b-512"><see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;b&gt;" /> HTML pour mettre en forme le texte en gras ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-512"><see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-513">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-513">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-514">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<b>` éléments à mettre en forme le texte en gras.</span><span class="sxs-lookup"><span data-stu-id="6651b-514">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCacheControlMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-515">Obtient une valeur indiquant si le navigateur prend en charge la valeur <see langword="cache-control" /> pour l’attribut <see langword="http-equiv" /> des éléments HTML <see langword="&lt;meta&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-515">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-516"><see langword="true" /> si le navigateur prend en charge la valeur <see langword="cache-control" /> pour l'attribut <see langword="http-equiv" /> des éléments <see langword="&lt;meta&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-516"><see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-517">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-517">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-518">Le `cache-control` valeur pour le `http-equiv` attribut de code HTML `<meta>` éléments permet de contrôler le client de mise en cache du contenu téléchargé qui inclut des pages Web.</span><span class="sxs-lookup"><span data-stu-id="6651b-518">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="6651b-519">Le fragment de code HTML suivant montre un exemple :</span><span class="sxs-lookup"><span data-stu-id="6651b-519">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="6651b-520">Si `true`, l’inclusion de cette balise dans le `<head>` élément d’une page Web doit forcer le navigateur à recharger le contenu à partir du serveur.</span><span class="sxs-lookup"><span data-stu-id="6651b-520">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="6651b-521">Si `false`, les adaptateurs de contrôle serveur ajoutent une chaîne de requête par défaut (`__ufps=``uniquefilepathsuffix`) sur les valeurs d’URL de lien qui n’en avez pas déjà.</span><span class="sxs-lookup"><span data-stu-id="6651b-521">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="6651b-522">Cela force le navigateur à recharger le contenu à partir du serveur.</span><span class="sxs-lookup"><span data-stu-id="6651b-522">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="6651b-523">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> propriété s’applique également au formulaire d’en-tête HTTP équivalent :</span><span class="sxs-lookup"><span data-stu-id="6651b-523">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="6651b-524">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `cache-control` valeur pour le `http-equiv` attribut de code HTML `<meta>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-524">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCallback : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-525">Obtient une valeur indiquant si le navigateur prend en charge les scripts de rappel.</span><span class="sxs-lookup"><span data-stu-id="6651b-525">Gets a value indicating whether the browser supports callback scripts.</span></span></summary>
        <value><span data-ttu-id="6651b-526"><see langword="true" /> si le navigateur prend en charge les scripts de rappel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-526"><see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-527">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-527">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-528">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les scripts de rappel.</span><span class="sxs-lookup"><span data-stu-id="6651b-528">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCss : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-529">Obtient une valeur indiquant si le navigateur prend en charge les feuilles de style en cascade (CSS).</span><span class="sxs-lookup"><span data-stu-id="6651b-529">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span></span></summary>
        <value><span data-ttu-id="6651b-530"><see langword="true" /> si le navigateur prend en charge les CSS ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-530"><see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-531">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-531">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-532">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge CSS.</span><span class="sxs-lookup"><span data-stu-id="6651b-532">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivAlign : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-533">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="align" /> des éléments HTML <see langword="&lt;div&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-533">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-534"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="align" /> des éléments <see langword="&lt;div&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-534"><see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-535">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-535">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-536">HTML `<div>` éléments sont utilisés pour regrouper plusieurs éléments HTML afin que les styles CSS puissent leur être appliqués dans sa globalité.</span><span class="sxs-lookup"><span data-stu-id="6651b-536">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="6651b-537">Le `align` attribut définit l’alignement horizontal d’un `<div>` groupe sur une page Web.</span><span class="sxs-lookup"><span data-stu-id="6651b-537">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-538">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `align` attribut de code HTML `<div>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-538">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivNoWrap : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-539">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="nowrap" /> des éléments HTML <see langword="&lt;div&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-539">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-540"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="nowrap" /> des éléments <see langword="&lt;div&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-540"><see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-541">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-541">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-542">HTML `<div>` éléments sont utilisés pour regrouper plusieurs éléments HTML afin que les styles CSS puissent leur être appliqués dans sa globalité.</span><span class="sxs-lookup"><span data-stu-id="6651b-542">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="6651b-543">Le `nowrap` attribut spécifie que les éléments contenus dans le `<div>` groupe doit rester adjacent sans habillage du texte à une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="6651b-543">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-544">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `nowrap` attribut de code HTML `<div>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-544">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEmptyStringInCookieValue : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-545">Obtient une valeur indiquant si le navigateur prend en charge des chaînes (<see langword="null" />) vides dans les valeurs de cookie.</span><span class="sxs-lookup"><span data-stu-id="6651b-545">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span></span></summary>
        <value><span data-ttu-id="6651b-546"><see langword="true" /> si le navigateur prend en charge les chaînes (<see langword="null" />) vides dans les valeurs du cookie ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-546"><see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-547">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-547">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-548">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge vide (`null`) chaînes dans les valeurs de cookie.</span><span class="sxs-lookup"><span data-stu-id="6651b-548">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-549">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="color" /> des éléments HTML <see langword="&lt;font&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-549">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-550"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="color" /> des éléments <see langword="&lt;font&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-550"><see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-551">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-551">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-552">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `color` attribut de code HTML `<font>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-552">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontName : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-553">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="name" /> des éléments HTML <see langword="&lt;font&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-553">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-554"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="name" /> des éléments <see langword="&lt;font&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-554"><see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-555">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-555">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-556">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `name` attribut de code HTML `<font>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-556">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontSize : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-557">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="size" /> des éléments HTML <see langword="&lt;font&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-557">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-558"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="size" /> des éléments <see langword="&lt;font&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-558"><see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-559">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-559">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-560">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `size` attribut de code HTML `<font>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-560">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsImageSubmit : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-561">Obtient une valeur indiquant si le navigateur prend en charge l’utilisation d’une image personnalisée au lieu du bouton Envoyer d’un formulaire standard.</span><span class="sxs-lookup"><span data-stu-id="6651b-561">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span></span></summary>
        <value><span data-ttu-id="6651b-562"><see langword="true" /> si le navigateur prend en charge l'utilisation d'une image personnalisée au lieu du bouton Envoyer d'un formulaire standard ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-562"><see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-563">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-563">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-564">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge à l’aide d’une image personnalisée à la place d’un bouton d’envoi de formulaire standard.</span><span class="sxs-lookup"><span data-stu-id="6651b-564">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIModeSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-565">Obtient une valeur indiquant si le navigateur prend en charge les symboles i-mode.</span><span class="sxs-lookup"><span data-stu-id="6651b-565">Gets a value indicating whether the browser supports i-mode symbols.</span></span></summary>
        <value><span data-ttu-id="6651b-566"><see langword="true" /> si le navigateur prend en charge les symboles i-mode ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-566"><see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-567">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-567">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-568">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriété s’applique uniquement à i-mode-appareils compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-568">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="6651b-569">Définir les symboles d’images spécifiques i-Phone pour les navigateurs i-mode-compatible en utilisant le <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6651b-569">Set i-Phone-specific picture symbols for i-mode-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-570">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les symboles i-mode.</span><span class="sxs-lookup"><span data-stu-id="6651b-570">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputIStyle : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-571">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="istyle" /> des éléments HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-571">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-572"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="istyle" /> des éléments <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-572"><see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-573">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-573">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-574">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriété s’applique uniquement à i-mode-appareils compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-574">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="6651b-575">Le `istyle` attribut est utilisé pour définir le style d’entrée d’un champ d’entrée de texte sur les navigateurs i-mode-compatible.</span><span class="sxs-lookup"><span data-stu-id="6651b-575">The `istyle` attribute is used for setting the input style of a text-input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-576">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `istyle` attribut de code HTML `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-576">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputMode : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-577">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="mode" /> des éléments HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-577">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-578"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="mode" /> des éléments <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-578"><see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-579">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-579">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-580">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriété s’applique uniquement à i-mode-appareils compatibles.</span><span class="sxs-lookup"><span data-stu-id="6651b-580">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="6651b-581">Le `MODE` attribut est utilisé pour définir le mode de saisie d’un champ d’entrée de texte sur les navigateurs i-mode-compatible.</span><span class="sxs-lookup"><span data-stu-id="6651b-581">The `MODE` attribute is used for setting the input mode of a text input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-582">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `mode` attribut de code HTML `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-582">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-583">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;i&gt;" /> pour mettre en forme le texte en italique.</span><span class="sxs-lookup"><span data-stu-id="6651b-583">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span></span></summary>
        <value><span data-ttu-id="6651b-584"><see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;i&gt;" /> HTML pour mettre en forme le texte italique ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-584"><see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-585">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-585">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-586">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<i>` éléments à mettre en forme du texte en italique.</span><span class="sxs-lookup"><span data-stu-id="6651b-586">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneMultiMediaAttributes : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-587">Obtient une valeur indiquant si le navigateur prend en charge les attributs multimédias J-Phone.</span><span class="sxs-lookup"><span data-stu-id="6651b-587">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span></span></summary>
        <value><span data-ttu-id="6651b-588"><see langword="true" /> si le navigateur prend en charge les attributs multimédias J-Phone ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-588"><see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-589">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-590">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> propriété s’applique uniquement aux appareils mobiles J-Phone-compatible.</span><span class="sxs-lookup"><span data-stu-id="6651b-590">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-591">J-Phone est une spécification de langage de balisage basée sur HTML, pour les navigateurs J-Phone-compatible.</span><span class="sxs-lookup"><span data-stu-id="6651b-591">J-Phone is a markup language specification, based on HTML, for J-Phone-compatible browsers.</span></span> <span data-ttu-id="6651b-592">Si `true`, le navigateur prend en charge les attributs supplémentaires pour HTML `<a>` (ancre) et `<select>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-592">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="6651b-593">Les attributs supplémentaires pris en charge sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="6651b-593">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="6651b-594">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les attributs multimédias J-Phone.</span><span class="sxs-lookup"><span data-stu-id="6651b-594">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-595">Obtient une valeur indiquant si le navigateur prend en charge les symboles d’images propres à J-Phone.</span><span class="sxs-lookup"><span data-stu-id="6651b-595">Gets a value indicating whether the browser supports J-Phone-specific picture symbols.</span></span></summary>
        <value><span data-ttu-id="6651b-596"><see langword="true" /> Si le navigateur prend en charge les symboles d’images spécifiques J-Phone ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-596"><see langword="true" /> if the browser supports J-Phone-specific picture symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-597">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-597">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-598">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> propriété s’applique uniquement aux appareils mobiles J-Phone-compatible.</span><span class="sxs-lookup"><span data-stu-id="6651b-598">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="6651b-599">Définir les symboles d’images spécifiques J-Phone pour les navigateurs J-Phone-compatible en utilisant le <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6651b-599">Set J-Phone-specific picture symbols for J-Phone-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-600">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les symboles d’images spécifiques J-Phone.</span><span class="sxs-lookup"><span data-stu-id="6651b-600">The following code example shows how to determine whether the browser supports J-Phone-specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsQueryStringInFormAction : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-601">Obtient une valeur indiquant si le navigateur prend en charge une chaîne de requête dans la valeur d’attribut <see langword="action" /> des éléments HTML <see langword="&lt;form&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-601">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-602"><see langword="true" /> si le navigateur prend en charge une chaîne de requête dans la valeur d'attribut <see langword="action" /> des éléments <see langword="&lt;form&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-602"><see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-603">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-603">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-604">Si `false`, les paramètres de chaîne de requête sont envoyés, dans les données de publication (postback), au format HTML `<input>` éléments avec le `type` les attributs définis pour `hidden`.</span><span class="sxs-lookup"><span data-stu-id="6651b-604">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-605">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge une chaîne de requête dans la valeur pour le `action` attribut de code HTML `<form>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-605">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectWithCookie : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-606">Obtient une valeur indiquant si le navigateur prend en charge les cookies lors de la redirection.</span><span class="sxs-lookup"><span data-stu-id="6651b-606">Gets a value indicating whether the browser supports cookies on redirection.</span></span></summary>
        <value><span data-ttu-id="6651b-607"><see langword="true" /> si le navigateur prend en charge les cookies lors de la redirection ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-607"><see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-608">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-608">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-609">Avec le haut. Navigateur 4.1 ou à distance. Navigateur 3.2, la <xref:System.Web.HttpResponse.Redirect%2A> méthode se comporte comme si la valeur de la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> propriété de la <xref:System.Web.HttpBrowserCapabilities> objet est `false`, sauf si le <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> propriété dans la <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section du fichier Web.config a été définie explicitement à `true`.</span><span class="sxs-lookup"><span data-stu-id="6651b-609">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="6651b-610">Dans ASP.NET 1.1, les options pour ce paramètre étaient `true` ou `false`, mais avec ASP.NET 2.0, les choix sont développés, et <xref:System.Web.HttpCookieMode.AutoDetect> est maintenant le paramètre par défaut.</span><span class="sxs-lookup"><span data-stu-id="6651b-610">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="6651b-611">Si votre application Web a le `cookieless` attribut de la `<sessionState>` section dans le fichier Web.config a une valeur booléenne, <xref:System.Web.HttpResponse.Redirect%2A> devrait fonctionner comme prévu pour ces navigateurs.</span><span class="sxs-lookup"><span data-stu-id="6651b-611">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-612">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cookies lors de la redirection.</span><span class="sxs-lookup"><span data-stu-id="6651b-612">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSelectMultiple : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-613">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="multiple" /> des éléments HTML <see langword="&lt;select&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-613">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-614"><see langword="true" /> si le navigateur prend en charge l'attribut <see langword="multiple" /> des éléments <see langword="&lt;select&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-614"><see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-615">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-615">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-616">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `multiple` attribut de code HTML `<select>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-616">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsUncheck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-617">Obtient une valeur indiquant si la suppression d’un élément HTML <see langword="&lt;input type=checkbox&gt;" /> activé se répercute dans les données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-617">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span></span></summary>
        <value><span data-ttu-id="6651b-618"><see langword="true" /> si la suppression d'un élément <see langword="&lt;input type=checkbox&gt;" /> HTML activé se répercute dans les données de publication (postback); sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-618"><see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-619">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-619">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-620">Si `false`, la valeur de la `checked` attribut de code HTML `<input type=checkbox>` éléments est omis à partir des données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-620">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-621">L’exemple de code suivant montre comment déterminer si la suppression d’un HTML activé `<input type=checkbox>` élément est reflété dans les données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="6651b-621">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsXmlHttp : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-622">Obtient une valeur indiquant si le navigateur prend en charge la réception du format XML via HTTP.</span><span class="sxs-lookup"><span data-stu-id="6651b-622">Gets a value indicating whether the browser supports receiving XML over HTTP.</span></span></summary>
        <value><span data-ttu-id="6651b-623"><see langword="true" /> si le navigateur prend en charge la réception du format XML via HTTP ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-623"><see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-624">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-625">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la réception du format XML sur HTTP.</span><span class="sxs-lookup"><span data-stu-id="6651b-625">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="filter2" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filter1"><span data-ttu-id="6651b-626">Premier filtre à comparer.</span><span class="sxs-lookup"><span data-stu-id="6651b-626">The first filter to compare.</span></span></param>
        <param name="filter2"><span data-ttu-id="6651b-627">Second filtre à comparer.</span><span class="sxs-lookup"><span data-stu-id="6651b-627">The second filter to compare.</span></span></param>
        <summary><span data-ttu-id="6651b-628">Utilisé en interne pour comparer des filtres.</span><span class="sxs-lookup"><span data-stu-id="6651b-628">Used internally to compare filters.</span></span></summary>
        <returns><span data-ttu-id="6651b-629">1 si <paramref name="filter1" /> est un parent de <paramref name="filter2" /> ; -1 si <paramref name="filter2" /> est un parent de <paramref name="filter1" /> ; 0 en l’absence de relation parent-enfant entre <paramref name="filter1" /> et <paramref name="filter2" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-629">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filterName"><span data-ttu-id="6651b-630">Filtre à évaluer.</span><span class="sxs-lookup"><span data-stu-id="6651b-630">The filter to evaluate.</span></span></param>
        <summary><span data-ttu-id="6651b-631">Utilisé en interne pour évaluer un filtre.</span><span class="sxs-lookup"><span data-stu-id="6651b-631">Used internally to evaluate a filter.</span></span></summary>
        <returns><span data-ttu-id="6651b-632"><see langword="true" /> si le filtre a été correctement évalué ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-632"><see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-633">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;table&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-633">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="6651b-634"><see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;table&gt;" /> HTML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-634"><see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-635">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-635">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-636">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<table>` éléments.</span><span class="sxs-lookup"><span data-stu-id="6651b-636">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagWriter : Type" Usage="System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-637">Utilisé en interne pour obtenir le type de l'objet qui est utilisé pour écrire des balises pour le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-637">Used internally to get the type of the object that is used to write tags for the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-638">Le <see cref="T:System.Type" /> de l'objet qui est utilisé pour écrire des balises pour le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-638">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="6651b-639">Il y a une erreur d’analyse.</span><span class="sxs-lookup"><span data-stu-id="6651b-639">There is a parse error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-640">Obtient le nom et le numéro de version (entier) principale du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-640">Gets the name and major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="6651b-641">Nom et numéro de version principale du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-641">The name and major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-642">L’exemple de code suivant montre comment déterminer si le navigateur est Internet Explorer version 6.</span><span class="sxs-lookup"><span data-stu-id="6651b-642">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseOptimizedCacheKey : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-643">Utilisé en interne pour obtenir une valeur indiquant s’il faut utiliser une clé de cache optimisée.</span><span class="sxs-lookup"><span data-stu-id="6651b-643">Used internally to get a value indicating whether to use an optimized cache key.</span></span></summary>
        <value><span data-ttu-id="6651b-644"><see langword="true" /> pour utiliser une clé de cache optimisée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-644"><see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-645">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-645">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.VBScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-646">Obtient une valeur indiquant si le navigateur prend en charge Visual Basic Script Edition (VBScript).</span><span class="sxs-lookup"><span data-stu-id="6651b-646">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span></span></summary>
        <value><span data-ttu-id="6651b-647"><see langword="true" /> si le navigateur prend en charge VBScript ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-647"><see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-648">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-648">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-649">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge VBScript.</span><span class="sxs-lookup"><span data-stu-id="6651b-649">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-650">Obtient le numéro de version complet (entier et décimal) du navigateur sous la forme d'une chaîne.</span><span class="sxs-lookup"><span data-stu-id="6651b-650">Gets the full version number (integer and decimal) of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="6651b-651">Numéro de version complet du navigateur sous la forme d'une chaîne.</span><span class="sxs-lookup"><span data-stu-id="6651b-651">The full version number of the browser as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6651b-652">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propriété retourne une chaîne.</span><span class="sxs-lookup"><span data-stu-id="6651b-652">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="6651b-653">Dans certains scénarios, le <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propriété peut contenir des lettres, comme dans le cas d’un navigateur ou du périphérique client qui est une version bêta, tels que « 7. 0 b ».</span><span class="sxs-lookup"><span data-stu-id="6651b-653">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="6651b-654">Pour obtenir correctement la version comme un type de données qui peut être utilisé dans une comparaison numérique, concaténez les <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> et <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> les valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="6651b-654">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6651b-655">L’exemple de code suivant montre comment déterminer le <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> du navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-655">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="6651b-656">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> propriété et <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> propriété sont concaténées et le résultat est utilisé pour déterminer si la version du navigateur est supérieure à 5.01.</span><span class="sxs-lookup"><span data-stu-id="6651b-656">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.W3CDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-657">Obtient la version du modèle DOM (Document Object Model) Microsoft XML du W3C (World Wide Web Consortium) pris en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-657">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="6651b-658">Numéro de version de modèle XML DOM du W3C prise en charge par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="6651b-658">The number of the W3C XML DOM version number that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-659">L’exemple de code suivant montre comment déterminer si la version de W3C XML DOM du navigateur est supérieure à 1.</span><span class="sxs-lookup"><span data-stu-id="6651b-659">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win16 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-660">Obtient une valeur indiquant si le navigateur client est exécuté sur un ordinateur Win16.</span><span class="sxs-lookup"><span data-stu-id="6651b-660">Gets a value indicating whether the client is a Win16-based computer.</span></span></summary>
        <value><span data-ttu-id="6651b-661"><see langword="true" /> si le navigateur est exécuté sur un ordinateur Win16 ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-661"><see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-662">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-662">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-663">L’exemple de code suivant montre comment déterminer si le navigateur est en cours d’exécution sur un ordinateur Win16.</span><span class="sxs-lookup"><span data-stu-id="6651b-663">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win32 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6651b-664">Obtient une valeur indiquant si le navigateur client est exécuté sur un ordinateur Win32.</span><span class="sxs-lookup"><span data-stu-id="6651b-664">Gets a value indicating whether the client is a Win32-based computer.</span></span></summary>
        <value><span data-ttu-id="6651b-665"><see langword="true" /> si le client est un ordinateur Win32 ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-665"><see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6651b-666">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6651b-666">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6651b-667">L’exemple de code suivant montre comment déterminer si le client est un ordinateur Win32.</span><span class="sxs-lookup"><span data-stu-id="6651b-667">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>