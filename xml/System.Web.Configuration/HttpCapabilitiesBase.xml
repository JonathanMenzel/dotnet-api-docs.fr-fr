<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2741cd146ad06167b675eac2f28399d1e5f587c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="aea9e-101">Fournit l’accès à des informations détaillées relatives aux fonctionnalités du navigateur du client.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aea9e-101">Provides access to detailed information about the capabilities of the client's browser.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> est la classe de base à partir de laquelle la <xref:System.Web.HttpBrowserCapabilities> classe est dérivée.</span><span class="sxs-lookup"><span data-stu-id="aea9e-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="aea9e-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offre un grand nombre de propriétés en lecture seule qui fournissent un accès de type sécurisé au dictionnaire des fonctionnalités d’un navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="aea9e-104">Vous pouvez accéder à la <xref:System.Web.HttpBrowserCapabilities> par le biais du <xref:System.Web.HttpRequest.Browser%2A> propriété exposée par ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="aea9e-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-105">L’exemple suivant montre comment accéder aux informations sur le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-106">Crée une instance de la classe <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-107">Obtient une valeur qui indique si le navigateur prend en charge les contrôles ActiveX.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-107">Gets a value indicating whether the browser supports ActiveX controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-108">
            <see langword="true" /> si le navigateur prend en charge les contrôles ActiveX ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-108">
              <see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-109">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-109">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-110">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les contrôles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="aea9e-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-111">Retourne la collection des adaptateurs de contrôle disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-111">Returns the collection of available control adapters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-112">Collection d'adaptateurs de contrôle inscrits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-112">The collection of registered control adapters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="aea9e-113">Nom du navigateur à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-113">The name of the browser to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-114">Utilisé en interne pour ajouter une entrée à la collection interne de navigateurs pour lesquels les fonctionnalités sont reconnues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-115">Obtient une valeur qui indique si le client est un navigateur AOL (America Online).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-116">
            <see langword="true" /> si le navigateur est un navigateur AOL ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-116">
              <see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-117">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-117">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-118">L’exemple de code suivant montre comment déterminer si le navigateur est un navigateur AOL.</span><span class="sxs-lookup"><span data-stu-id="aea9e-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-119">Obtient une valeur indiquant si le navigateur prend en charge la lecture de fonds sonores à l’aide de l’élément HTML <see langword="&lt;bgsounds&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-120">
            <see langword="true" /> si le navigateur prend en charge la lecture de fonds sonores ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-120">
              <see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-121">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-122">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la lecture de fonds sonores.</span><span class="sxs-lookup"><span data-stu-id="aea9e-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-123">Obtient une valeur indiquant si le navigateur est une version bêta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-123">Gets a value indicating whether the browser is a beta version.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-124">
            <see langword="true" /> si le navigateur est une version bêta ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-124">
              <see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-125">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-126">Les navigateurs de version bêta peuvent présenter un comportement imprévisible.</span><span class="sxs-lookup"><span data-stu-id="aea9e-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-127">L’exemple de code suivant montre comment déterminer si le navigateur est une version bêta.</span><span class="sxs-lookup"><span data-stu-id="aea9e-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-128">Obtient, le cas échéant, la chaîne du navigateur envoyée par le navigateur dans l’en-tête de requête <see langword="User-Agent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-129">Contenu de l’en-tête de requête <see langword="User-Agent" /> envoyé par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-130">L’exemple de code suivant montre comment déterminer le `User-Agent` en-tête de demande envoyée par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-131">Obtient ou définit l’objet <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> du navigateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-132">Objet <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> pour le navigateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-133">Obtient un élément <see cref="T:System.Collections.ArrayList" /> des navigateurs dans le dictionnaire <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-134">
            <see cref="T:System.Collections.ArrayList" /> des navigateurs dans le dictionnaire <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-135">Obtient une valeur qui indique si le navigateur prend en charge les jeux contenant plusieurs formulaires, comme des cartes distinctes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-136">
            <see langword="true" /> si le navigateur prend en charge les jeux contenant plusieurs formulaires ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-136">
              <see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-137">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-137">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-138">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="aea9e-139">Si la valeur est true, l’adaptateur peut sortir plusieurs formulaires à partir de la même page comme des cartes d’un paquet unique, lorsque cela est possible.</span><span class="sxs-lookup"><span data-stu-id="aea9e-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-140">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les jeux contenant plusieurs formulaires, comme des cartes distinctes.</span><span class="sxs-lookup"><span data-stu-id="aea9e-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-141">Obtient une valeur indiquant si l’appareil du navigateur est capable d’initialiser un appel vocal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-142">
            <see langword="true" /> si l’appareil du navigateur peut initier un appel vocal ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-142">
              <see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-143">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-144">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-145">L’exemple de code suivant montre comment déterminer si le périphérique du navigateur est capable d’initialiser un appel vocal.</span><span class="sxs-lookup"><span data-stu-id="aea9e-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-146">Obtient une valeur qui indique si le navigateur prend en charge le contenu de page suivant les éléments WML <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-147">
            <see langword="true" /> Si le navigateur prend en charge le contenu HTML de la suite de la page <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" /> éléments ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-147">
              <see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-148">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-148">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-149">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-150">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge le contenu HTML de la suite de la page `<select>` ou `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-151">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;select&gt;" /> vides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-152">
            <see langword="true" /> si le navigateur prend en charge les éléments HTML <see langword="&lt;select&gt;" /> vides ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-152">
              <see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-153">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-153">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-154">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML vide `<select>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-155">Obtient une valeur indiquant si le navigateur prend en charge les éléments WML <see langword="INPUT" /> et <see langword="SELECT" /> ensemble sur la même carte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-156">
            <see langword="true" /> si le navigateur prend en charge les éléments WML <see langword="&lt;input&gt;" /> et <see langword="&lt;select&gt;" /> ensemble ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-156">
              <see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-157">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-157">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-158">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-159">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<input>` et `<select>` éléments ensemble.</span><span class="sxs-lookup"><span data-stu-id="aea9e-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-160">Obtient une valeur indiquant si le navigateur prend en charge les éléments WML <see langword="&lt;option&gt;" /> qui spécifient des attributs <see langword="onpick" /> et <see langword="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-161">
            <see langword="true" /> si le navigateur prend en charge les éléments WML <see langword="&lt;option&gt;" /> qui spécifient à la fois les attributs <see langword="onpick" /> et <see langword="value" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-161">
              <see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-162">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-162">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-163">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-164">Si `false`, `onpick` valeurs sont affichées sous forme de liens hypertexte et `value` attributs requièrent un `<do>` , élément pour la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="aea9e-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-165">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<option>` les éléments qui spécifient des `onpick` et `value` attributs.</span><span class="sxs-lookup"><span data-stu-id="aea9e-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-166">Obtient une valeur indiquant si le navigateur prend en charge des éléments WML <see langword="&lt;onevent&gt;" /> et <see langword="&lt;prev&gt;" /> qui coexistent dans la même carte WML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-167">
            <see langword="true" /> si le navigateur prend en charge des éléments <see langword="&lt;onevent&gt;" /> et <see langword="&lt;prev&gt;" /> qui coexistent dans la même carte WML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-167">
              <see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-168">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-168">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-169">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-170">Si `false`, WML `<onevent>` et `<prev>` les éléments qui coexistent dans la même carte WML ne seront pas correctement rendus.</span><span class="sxs-lookup"><span data-stu-id="aea9e-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-171">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les éléments WML `<onevent>` et `<prev>` les éléments qui coexistent dans la même carte WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-172">Obtient une valeur indiquant si le navigateur WML prend en charge des cartes WML pour la publication (postback).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-172">Gets a value indicating whether the browser supports WML cards for postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-173">
            <see langword="true" /> si le navigateur prend en charge les cartes WML pour la publication ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-173">
              <see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-174">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-175">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> propriété s’applique uniquement aux navigateurs d’appareils mobiles compatibles avec les éléments WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="aea9e-176">Si `false`, publication (postback) cartes ne sont pas rendus correctement par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-177">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cartes WML pour la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="aea9e-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-178">Obtient une valeur indiquant si le navigateur prend en charge des éléments WML <see langword="&lt;setvar&gt;" /> avec un attribut <see langword="value" /> de 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-179">
            <see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;setvar&gt;" /> WML avec un attribut <see langword="value" /> de <see langword="0" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-179">
              <see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-180">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-180">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-181">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-182">Si `false`, HTML `<setvar>` éléments avec un `value` attribut de `0` s’affichent pas correctement.</span><span class="sxs-lookup"><span data-stu-id="aea9e-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-183">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les éléments WML `<setvar>` éléments avec un `value` attribut de 0.</span><span class="sxs-lookup"><span data-stu-id="aea9e-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-184">Obtient une valeur indiquant si le navigateur prend en charge l’envoi d’e-mails à l’aide de l’élément HTML <see langword="&lt;mailto&gt;" /> pour afficher des adresses électroniques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-185">
            <see langword="true" /> Si le navigateur prend en charge l’envoi de courrier électronique à l’aide du code HTML <see langword="&lt;mailto&gt;" /> , élément pour afficher des adresses électroniques ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-185">
              <see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-186">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-186">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-187">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge l’envoi de courrier électronique à l’aide du code HTML `<mailto>` , élément pour afficher des adresses électroniques.</span><span class="sxs-lookup"><span data-stu-id="aea9e-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-188">Utilisée en interne pour obtenir les fonctionnalités définies du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-188">Used internally to get the defined capabilities of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-189">Fonctionnalités définies du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-189">The defined capabilities of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-190">Obtient une valeur indiquant si le navigateur prend en charge CDF (Channel Definition Format) pour la diffusion sur le Web (webcasting).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-191">
            <see langword="true" /> si le navigateur prend en charge CDF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-191">
              <see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-192">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-192">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-193">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge CDF.</span><span class="sxs-lookup"><span data-stu-id="aea9e-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-194">Obtient la version du .NET Framework qui est installée sur le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-194">Gets the version of the .NET Framework that is installed on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-195">Common Language Runtime <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-195">The common language runtime <see cref="T:System.Version" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-196">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propriété est prise en charge uniquement lorsque le navigateur est Internet Explorer version 5.0 et versions ultérieure.</span><span class="sxs-lookup"><span data-stu-id="aea9e-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="aea9e-197">Si le .NET Framework n’est pas installé sur le client, la valeur des éléments de la version retournée est `0, 0,-1,-1`.</span><span class="sxs-lookup"><span data-stu-id="aea9e-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="aea9e-198">Si plusieurs versions du .NET Framework sont installée sur le client, le <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propriété retourne la dernière version.</span><span class="sxs-lookup"><span data-stu-id="aea9e-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-199">Obtient une valeur qui indique si le navigateur prend en charge les cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-199">Gets a value indicating whether the browser supports cookies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-200">
            <see langword="true" /> si le navigateur prend en charge les cookies ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-200">
              <see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-201">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-201">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-202">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propriété indique si l’application navigateur prend en charge les cookies.</span><span class="sxs-lookup"><span data-stu-id="aea9e-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="aea9e-203">Si l’utilisateur a désactivé les cookies dans leur application, le <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propriété n’est pas affectée.</span><span class="sxs-lookup"><span data-stu-id="aea9e-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-204">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cookies.</span><span class="sxs-lookup"><span data-stu-id="aea9e-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-205">Obtient une valeur indiquant si le navigateur est un moteur de recherche Internet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-205">Gets a value indicating whether the browser is a search engine Web crawler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-206">
            <see langword="true" /> si le navigateur est un moteur de recherche ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-206">
              <see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-207">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-207">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-208">L’exemple de code suivant montre comment déterminer si le client est un moteur de recherche Web.</span><span class="sxs-lookup"><span data-stu-id="aea9e-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="aea9e-209">
            <see cref="T:System.IO.TextWriter" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-209">
              <see cref="T:System.IO.TextWriter" /> to be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-210">Crée une nouvelle instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aea9e-211">Une nouvelle instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="aea9e-212">La méthode n’a pas pu créer d’instance de <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-213">Retourne le nombre maximal de boutons Envoyer qui sont autorisés pour un formulaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-213">Returns the maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-214">Nombre maximal de boutons Envoyer qui sont autorisés pour un formulaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-214">The maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-215">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> propriété représente principalement le nombre de touches programmables qui sont disponibles sur un appareil mobile compatible avec les éléments WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="aea9e-216">Pages Web Forms pour les appareils mobiles peuvent contenir un <xref:System.Web.UI.MobileControls.SelectionList> objet et plusieurs <xref:System.Web.UI.MobileControls.Command> contrôle.</span><span class="sxs-lookup"><span data-stu-id="aea9e-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="aea9e-217">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> vous permet de choisir parmi les <xref:System.Web.UI.MobileControls.Command> contrôles doivent être assignées à une touche programmable sur les appareils qui ont plusieurs touches programmables.</span><span class="sxs-lookup"><span data-stu-id="aea9e-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-218">Utilisé en interne pour désactiver l’utilisation d’une clé de cache optimisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-218">Used internally to disable use of an optimized cache key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-219">Obtient le numéro de version d’ECMAScript que le navigateur prend en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-219">Gets the version number of ECMAScript that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-220">Numéro de version d'ECMAScript que le navigateur prend en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-220">The version number of ECMAScript that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-221">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge un numéro de version principale d’ECMAScript supérieur à 1.</span><span class="sxs-lookup"><span data-stu-id="aea9e-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-222">Obtient une valeur qui indique si le navigateur prend en charge les frames HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-222">Gets a value indicating whether the browser supports HTML frames.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-223">
            <see langword="true" /> si le navigateur prend en charge les frames ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-223">
              <see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-224">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-225">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cadres HTML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-225">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-226">Obtient le numéro de version principale de la passerelle sans fil utilisée pour accéder au serveur, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-226">Gets the major version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-227">Numéro de version principale de la passerelle sans fil utilisée pour accéder au serveur, s'il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-227">The major version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="aea9e-228">La valeur par défaut est <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-228">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="aea9e-229">Le numéro de version principale de la passerelle sans fil ne peut pas être analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-229">The major version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-230">Obtient le numéro de version secondaire de la passerelle sans fil utilisée pour accéder au serveur, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-230">Gets the minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-231">Numéro de version secondaire de la passerelle sans fil utilisée pour accéder au serveur, s'il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-231">The minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="aea9e-232">La valeur par défaut est <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-232">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="aea9e-233">Le numéro de version secondaire de la passerelle sans fil ne peut pas être analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-233">The minor version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-234">Obtient la version de la passerelle sans fil utilisée pour accéder au serveur, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-234">Gets the version of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-235">Numéro de version de la passerelle sans fil utilisée pour accéder au serveur, s'il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-235">The version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="aea9e-236">La valeur par défaut est <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-236">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-237">L’exemple de code suivant montre comment déterminer si la passerelle est un `UP` passerelle.</span><span class="sxs-lookup"><span data-stu-id="aea9e-237">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-238">Retourne toutes les versions du Common Language Runtime .NET Framework installées sur le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-238">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aea9e-239">Tableau d'objets <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-239">An array of <see cref="T:System.Version" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-240">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> méthode est prise en charge uniquement lorsque le navigateur est Internet Explorer version 5.0 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="aea9e-240">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="aea9e-241">Si le common language runtime n’est pas installé sur le client, la propriété retourne un tableau contenant un seul <xref:System.Version> de l’objet avec les valeurs 0, 0, -1, -1.</span><span class="sxs-lookup"><span data-stu-id="aea9e-241">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey">
          <span data-ttu-id="aea9e-242">Nom de la section de configuration qui configure les fonctionnalités du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-242">The name of the configuration section that configures browser capabilities.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="aea9e-243">Objet <see cref="T:System.Web.HttpRequest" /> généré par le navigateur pour lequel retourner des fonctionnalités et qui est généralement l’élément <see cref="T:System.Web.HttpRequest" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-243">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-244">Utilisé en interne pour retourner une instance de <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> représentant le navigateur qui a généré l’élément <see cref="T:System.Web.HttpRequest" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-244">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aea9e-245">Instance de <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> représentant le navigateur qui a généré l’élément <see cref="T:System.Web.HttpRequest" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-245">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-246">Obtient une valeur indiquant si le navigateur a un bouton **Précédent** dédié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-246">Gets a value indicating whether the browser has a dedicated **Back** button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-247">
            <see langword="true" /> Si le navigateur a un dédié **précédent** bouton ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-247">
              <see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-248">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-248">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-249">Si `false`, un contrôle de lien peut être nécessaire quand une **précédent** bouton n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="aea9e-249">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-250">L’exemple de code suivant montre comment déterminer si le navigateur a un dédié **précédent** bouton.</span><span class="sxs-lookup"><span data-stu-id="aea9e-250">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-251">Obtient une valeur indiquant si la barre de défilement d’un élément HTML <see langword="&lt;select multiple&gt;" /> avec une valeur d’attribut <see langword="align" /> égale à <see langword="right" /> est masquée lors du rendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-251">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-252">
            <see langword="true" /> si la barre de défilement d'un élément <see langword="&lt;select multiple&gt;" /> HTML avec une valeur d'attribut <see langword="align" /> égal à <see langword="right" /> est masquée lors du rendu ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-252">
              <see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-253">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-254">L’exemple de code suivant montre comment déterminer si le navigateur masque la barre de défilement pour les éléments de multisélection alignés à droite.</span><span class="sxs-lookup"><span data-stu-id="aea9e-254">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-255">Obtient ou définit le nom de classe complet de <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-255">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-256">Nom de classe qualifié complet du <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-256">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-257">Obtient l’identificateur interne du navigateur tel que spécifié dans le fichier de définition de navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-257">Gets the internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-258">Identificateur interne du navigateur comme spécifié dans le fichier de définition de navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-258">Internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-259">Utilisé en interne pour initialiser un jeu de valeurs interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-259">Used internally to initialize an internal set of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-260">Retourne le type d’entrée pris en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-260">Returns the type of input supported by browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-261">Type d'entrée pris en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-261">The type of input supported by browser.</span>
          </span>
          <span data-ttu-id="aea9e-262">La valeur par défaut est <c>telephoneKeypad</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-262">The default is <c>telephoneKeypad</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-263">Valeurs de retour possibles sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="aea9e-263">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-264">L’exemple de code suivant montre comment déterminer le type de prise en charge d’entrée.</span><span class="sxs-lookup"><span data-stu-id="aea9e-264">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="aea9e-265">Navigateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-265">The specified browser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-266">Obtient une valeur indiquant si le navigateur client est le même que le navigateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-266">Gets a value indicating whether the client browser is the same as the specified browser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aea9e-267">
            <see langword="true" /> si le navigateur client est le même que le navigateur spécifié, sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-267">
              <see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-268">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-268">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-269">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> méthode retourne également `true` si la définition du navigateur client hérite du navigateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="aea9e-269">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-270">Obtient une valeur indiquant si le navigateur a un affichage couleur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-270">Gets a value indicating whether the browser has a color display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-271">
            <see langword="true" /> si le navigateur a un affichage couleur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-271">
              <see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-272">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-272">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-273">L’exemple de code suivant indique si le navigateur du client prend en charge la couleur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-273">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="aea9e-274">La valeur retournée peut être utilisée pour déterminer l’image appropriée à envoyer au navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-274">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-275">Obtient une valeur indiquant si le navigateur est un appareil mobile reconnu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-275">Gets a value indicating whether the browser is a recognized mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-276">
            <see langword="true" /> si le navigateur est un appareil mobile reconnu ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-276">
              <see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-277">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-277">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-278">L’exemple de code suivant montre comment déterminer si le navigateur est un appareil mobile.</span><span class="sxs-lookup"><span data-stu-id="aea9e-278">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="aea9e-279">Nom de la capacité du navigateur à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-279">The name of the browser capability to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-280">Obtient la valeur de la capacité du navigateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-280">Gets the value of the specified browser capability.</span>
          </span>
          <span data-ttu-id="aea9e-281">En C#, cette propriété est l’indexeur pour la classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-281">In C#, this property is the indexer for the class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-282">Capacité du navigateur avec le nom de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-282">The browser capability with the specified key name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-283">En JScript, vous pouvez utiliser les propriétés indexées par défaut définies par un type, mais vous ne pouvez pas définir les vôtres explicitement.</span><span class="sxs-lookup"><span data-stu-id="aea9e-283">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="aea9e-284">Toutefois, la spécification du `expando` attribut sur une classe fournit automatiquement une propriété indexée par défaut avec un type de `Object` et un type d’index `String`.</span><span class="sxs-lookup"><span data-stu-id="aea9e-284">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-285">Obtient une valeur indiquant si le navigateur prend en charge Java.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-285">Gets a value indicating whether the browser supports Java.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-286">
            <see langword="true" /> si le navigateur prend en charge Java ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-286">
              <see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-287">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-287">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-288">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge Java.</span><span class="sxs-lookup"><span data-stu-id="aea9e-288">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-289">Obtient une valeur indiquant si le navigateur prend en charge JavaScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-289">Gets a value indicating whether the browser supports JavaScript.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-290">
            <see langword="true" /> si le navigateur prend en charge JavaScript ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-290">
              <see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-291">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-291">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-292">Si le navigateur prend en charge JavaScript, mais que le script est désactivé via un paramètre de sécurité, le <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> propriété retournera `true` , mais le script ne s’exécute pas sur le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-292">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-293">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge JavaScript.</span><span class="sxs-lookup"><span data-stu-id="aea9e-293">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-294">Obtient la version de JScript prise en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-294">Gets the JScript version that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-295">
            <see cref="T:System.Version" /> de JScript prise en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-295">The <see cref="T:System.Version" /> of JScript that the browser supports.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-296">Obtient le numéro de version principale (entier) du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-296">Gets the major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-297">Numéro de version principale du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-297">The major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-298">L’exemple de code suivant ajoute la majeure et mineure (entier et décimal) des valeurs de la version du navigateur numéro et envoie le résultat au navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-298">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="aea9e-299">La valeur de version principale n’est pas un entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-299">The major version value is not an integer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-300">Obtient la longueur maximale, en caractères, de l’attribut <see langword="href" /> d’un élément HTML <see langword="&lt;a&gt;" /> (ancre).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-300">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-301">Longueur maximale de caractères pour l'attribut <see langword="href" /> d'un élément (ancre) <see langword="&lt;a&gt;" /> HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-301">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-302">Obtient la longueur maximale de la page, en octets, que le navigateur peut afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-302">Gets the maximum length of the page, in bytes, which the browser can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-303">Longueur maximale de la page, en octets, que le navigateur peut afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-303">The maximum length of the page, in bytes, which the browser can display.</span>
          </span>
          <span data-ttu-id="aea9e-304">La valeur par défaut est <c>2000</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-304">The default is <c>2000</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-305">Le traitement par une passerelle intermédiaire peut modifier le nombre d’octets qui atteignent le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-305">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="aea9e-306">ASP.NET n’applique pas cette limite de taille de page.</span><span class="sxs-lookup"><span data-stu-id="aea9e-306">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="aea9e-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> est particulièrement utile lorsque vous travaillez avec des navigateurs client mobiles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-308">Retourne la longueur maximale du texte qu’une étiquette de touche programmable peut afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-308">Returns the maximum length of the text that a soft-key label can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-309">Longueur maximale de texte qu’une étiquette de touche programmable peut afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-309">The maximum length of the text that a soft-key label can display.</span>
          </span>
          <span data-ttu-id="aea9e-310">La valeur par défaut est <see langword="5" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-310">The default is <see langword="5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-311">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-311">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-312">L’exemple de code suivant montre comment déterminer la longueur maximale de l’étiquette de touche programmable pour le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-312">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-313">Obtient le numéro de version secondaire (décimal) du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-313">Gets the minor (that is, decimal) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-314">Numéro de la version mineure du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-314">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-315">L’exemple de code suivant retourne la version secondaire du navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-315">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="aea9e-316">Le numéro de version secondaire dans l’en-tête n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-316">The minor version number in the header is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-317">Obtient le numéro de version secondaire (décimal) du navigateur sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-317">Gets the minor (decimal) version number of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-318">Numéro de la version mineure du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-318">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-319">Retourne le nom du fabricant d’un appareil mobile, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-319">Returns the name of the manufacturer of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-320">Nom du fabricant d’un appareil mobile, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-320">The name of the manufacturer of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="aea9e-321">La valeur par défaut est <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-321">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-322">Obtient le nom de modèle d’un appareil mobile, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-322">Gets the model name of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-323">Nom du modèle d’un appareil mobile, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-323">The model name of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="aea9e-324">La valeur par défaut est <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-324">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-325">Obtient la version du modèle DOM (Document Object Model) Microsoft HTML pris en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-325">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-326">Numéro de la version de modèle DOM MSHTML prise en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-326">The number of the MSHTML DOM version that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-327">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge une version principale de modèle DOM MSHTML supérieure à 1.</span><span class="sxs-lookup"><span data-stu-id="aea9e-327">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-328">Retourne le nombre de touches programmables sur un appareil mobile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-328">Returns the number of soft keys on a mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-329">Nombre de touches programmables prises en charge sur un appareil mobile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-329">The number of soft keys supported on a mobile device.</span>
          </span>
          <span data-ttu-id="aea9e-330">La valeur par défaut est <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-330">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-331">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-331">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-332">Touches programmables sont des touches spéciales que l’application peut généralement faire correspondre à des tâches personnalisées.</span><span class="sxs-lookup"><span data-stu-id="aea9e-332">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="aea9e-333">Texte de touche programmable s’affiche sur l’écran dans l’angle inférieur gauche et à droite.</span><span class="sxs-lookup"><span data-stu-id="aea9e-333">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-334">Obtient le nom de la plateforme que le client utilise, s’il est connu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-334">Gets the name of the platform that the client uses, if it is known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-335">Le système d'exploitation que le client utilise, s'il est connu ; sinon, la valeur est <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-335">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-336">Certaines des valeurs possibles pour le <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> propriété sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="aea9e-336">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="aea9e-337">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="aea9e-337">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="aea9e-338">`Windows NT 5.1` (Windows XP)</span><span class="sxs-lookup"><span data-stu-id="aea9e-338">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="aea9e-339">`WinNT` (toutes les autres versions de Windows NT)</span><span class="sxs-lookup"><span data-stu-id="aea9e-339">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-340">L’exemple de code suivant montre comment déterminer si le navigateur est en cours d’exécution sur la plate-forme Windows NT.</span><span class="sxs-lookup"><span data-stu-id="aea9e-340">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-341">Retourne le type MIME du type de contenu image généralement préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-341">Returns the MIME type of the type of image content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-342">Type MIME du type de contenu image généralement préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-342">The MIME type of the type of image content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="aea9e-343">La valeur par défaut est <see langword="image/gif" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-343">The default is <see langword="image/gif" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-344">L’exemple de code suivant montre comment déterminer le type d’image généralement préféré par un navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-344">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-345">Retourne le type MIME du type de contenu généralement préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-345">Returns the MIME type of the type of content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-346">Type MIME du type de contenu généralement préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-346">The MIME type of the type of content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="aea9e-347">La valeur par défaut est <see langword="text/html" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-347">The default is <see langword="text/html" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-348">L’exemple de code suivant montre comment déterminer le type MIME généralement préféré par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-348">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-349">Obtient le nom général pour le type de contenu que le navigateur préfère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-349">Gets the general name for the type of content that the browser prefers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-350">
            <see langword="html32" /> ou <see langword="chtml10" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-350">
              <see langword="html32" /> or <see langword="chtml10" />.</span>
          </span>
          <span data-ttu-id="aea9e-351">La valeur par défaut est <see langword="html32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-351">The default is <see langword="html32" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-352">L’exemple de code suivant montre comment déterminer le type de contenu que le navigateur préfère.</span><span class="sxs-lookup"><span data-stu-id="aea9e-352">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-353">Obtient le codage de requête préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-353">Gets the request encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-354">Encodage de la requête préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-354">The request encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-355">Obtient le codage de réponse préféré par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-355">Gets the response encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-356">Encodage de réponse par défaut du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-356">The response encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-357">Obtient une valeur indiquant si le navigateur restitue un saut de ligne avant les éléments <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-357">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-358">
            <see langword="true" /> si le navigateur restitue un saut de ligne avant les éléments <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-358">
              <see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-359">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-359">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-360">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-360">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-361">Si `true`, contenu suivant `<select>` ou `<input>` éléments seront automatiquement placés sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-361">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-362">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne avant `<select>` ou `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-362">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-363">Obtient une valeur indiquant si le navigateur restitue un saut de ligne après des éléments de liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-363">Gets a value indicating whether the browser renders a line break after list-item elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-364">
            <see langword="true" /> si le navigateur restitue un saut de ligne après des éléments de liste ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-364">
              <see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-365">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-365">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-366">Si `true`, le contenu suivant d’éléments de liste sera automatiquement placé sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-366">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-367">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne après des éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="aea9e-367">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-368">Obtient une valeur indiquant si le navigateur restitue un saut de ligne après un élément HTML <see langword="&lt;a&gt;" /> (ancre) autonome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-368">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-369">
            <see langword="true" /> si le navigateur restitue un saut de ligne après un élément (ancre) <see langword="&lt;a&gt;" /> HTML autonome ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-369">
              <see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-370">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-370">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-371">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-371">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-372">Si `true`, le contenu suivant un HTML autonome `<a>` (ancre) sera automatiquement placé sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-372">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-373">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne après un élément WML autonome `<a>` (ancre).</span><span class="sxs-lookup"><span data-stu-id="aea9e-373">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-374">Obtient une valeur indiquant si le navigateur restitue un saut de ligne après un élément HTML <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-374">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-375">
            <see langword="true" /> Si le navigateur restitue un saut de ligne après un élément HTML <see langword="&lt;input&gt;" /> élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-375">
              <see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-376">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-376">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-377">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-377">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-378">Si `true`, le contenu suivant d’un élément HTML `<input>` élément sera automatiquement placé sur une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-378">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-379">L’exemple de code suivant montre comment déterminer si le navigateur restitue un saut de ligne après un élément HTML `<input>` élément.</span><span class="sxs-lookup"><span data-stu-id="aea9e-379">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-380">Obtient une valeur indiquant si le navigateur d’appareil mobile restitue une construction d’acceptation de formulaire WML basé sur <see langword="do" /> comme bouton inclus (inline) plutôt que sous forme de touche programmable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-380">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-381">
            <see langword="true" /> si le navigateur d'appareil mobile restitue une construction Accept de formulaire WML basé sur <see langword="do" /> comme bouton inline ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-381">
              <see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-382">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-382">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-383">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-383">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-384">L’exemple de code suivant montre comment déterminer si le navigateur restitue un WML `do`-basé construction sous forme de bouton inline d’acceptation de formulaire.</span><span class="sxs-lookup"><span data-stu-id="aea9e-384">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-385">Obtient une valeur indiquant si le navigateur restitue les éléments WML <see langword="&lt;select&gt;" /> comme des cartes de menu plutôt que sous forme de zone de liste modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-385">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-386">
            <see langword="true" /> si le navigateur restitue des éléments <see langword="&lt;select&gt;" /> WML comme des cartes de menu ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-386">
              <see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-387">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-387">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-388">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> propriété s’applique uniquement aux appareils mobiles compatibles WML.</span><span class="sxs-lookup"><span data-stu-id="aea9e-388">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-389">L’exemple de code suivant montre comment déterminer si le navigateur restitue les éléments WML `<select>` comme des cartes de menu.</span><span class="sxs-lookup"><span data-stu-id="aea9e-389">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-390">Utilisé en interne pour produire une balise meta indispensable à certains navigateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-390">Used internally to produce a meta-tag required by some browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-391">Balise meta requise par certains navigateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-391">A meta-tag required by some browsers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-392">Destiné exclusivement à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-392">Intended for internal use only.</span></span> <span data-ttu-id="aea9e-393">Certains navigateurs requièrent une balise meta semblable au suivant pour le navigateur afficher correctement.</span><span class="sxs-lookup"><span data-stu-id="aea9e-393">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-394">Obtient une valeur indiquant si le navigateur requiert que les signes deux-points dans les valeurs d’attribut d’élément soient remplacés par un caractère différent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-394">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-395">
            <see langword="true" /> si le navigateur requiert que les signes deux-points dans les valeurs d'attribut d'élément soient remplacés par un caractère différent ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-395">
              <see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-396">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-396">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-397">Certains navigateurs ne reconnaissent pas les signes deux-points dans les valeurs d’attribut élément.</span><span class="sxs-lookup"><span data-stu-id="aea9e-397">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="aea9e-398">Si `true`, un caractère différent sera substitué au rendu et retourné dans les données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="aea9e-398">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-399">L’exemple de code suivant montre comment déterminer si le navigateur requiert des signes deux-points dans les valeurs d’attribut d’élément soient remplacés par un caractère différent.</span><span class="sxs-lookup"><span data-stu-id="aea9e-399">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-400">Obtient une valeur indiquant si le navigateur nécessite un élément HTML <see langword="&lt;meta&gt;" /> pour lequel l’attribut <see langword="content-type" /> est spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-400">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-401">
            <see langword="true" /> si le navigateur requiert un élément <see langword="&lt;meta&gt;" /> HTML pour lequel l'attribut <see langword="content-type" /> est spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-401">
              <see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-402">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-403">Si `true`, adaptateurs de contrôle serveur insèrent la balise suivante dans le code HTML `<head>` élément d’une page Web :</span><span class="sxs-lookup"><span data-stu-id="aea9e-403">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="aea9e-404">Dans cet exemple, `CONTENT` est la valeur retournée par la <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> propriété, et `charset` est l’encodage de caractères utilisé.</span><span class="sxs-lookup"><span data-stu-id="aea9e-404">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-405">L’exemple de code suivant montre comment déterminer si le navigateur requiert un élément HTML `<meta>` élément pour lequel le `content-type` attribut est spécifié.</span><span class="sxs-lookup"><span data-stu-id="aea9e-405">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-406">Obtient une valeur indiquant si le navigateur nécessite que l’état du contrôle soit conservé dans les sessions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-406">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-407">
            <see langword="true" /> si le navigateur requiert que l'état du contrôle soit conservé dans les sessions ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-407">
              <see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-408">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-408">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-409">L’exemple de code suivant montre comment déterminer si le navigateur requiert d’état du contrôle soit conservé dans les sessions.</span><span class="sxs-lookup"><span data-stu-id="aea9e-409">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-410">Obtient une valeur indiquant si le navigateur nécessite un jeu de caractères codés sur deux octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-410">Gets a value indicating whether the browser requires a double-byte character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-411">
            <see langword="true" /> si le navigateur requiert un jeu de caractères codés sur deux octets ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-411">
              <see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-412">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-412">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-413">L’exemple de code suivant montre comment déterminer si le navigateur requiert un jeu de caractères DBCS.</span><span class="sxs-lookup"><span data-stu-id="aea9e-413">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-414">Obtient une valeur indiquant si le navigateur nécessite des messages d’erreur non standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-414">Gets a value indicating whether the browser requires nonstandard error messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-415">
            <see langword="true" /> si le navigateur requiert des messages d'erreur non standard ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-415">
              <see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-416">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-417">Si `true`, le navigateur ne rend pas correctement les messages d’erreur HTTP.</span><span class="sxs-lookup"><span data-stu-id="aea9e-417">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="aea9e-418">Pour corriger ce problème, les adaptateurs de contrôle serveur génèrent une page d’erreurs personnalisée pour le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-418">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-419">L’exemple de code suivant montre comment déterminer si le navigateur requiert des messages d’erreur non standard.</span><span class="sxs-lookup"><span data-stu-id="aea9e-419">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-420">Obtient une valeur indiquant si le navigateur a besoin que le premier élément dans le corps d’une page Web soit un élément HTML <see langword="&lt;br&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-420">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-421">
            <see langword="true" /> si le navigateur requiert que le premier élément dans le corps d'une page Web soit un élément <see langword="BR" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-421">
              <see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-422">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-422">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-423">Si `true`, insèrent des adaptateurs de contrôle serveur supplémentaire `<br>` élément juste après le `<body>` balise dans une page Web.</span><span class="sxs-lookup"><span data-stu-id="aea9e-423">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-424">L’exemple de code suivant montre comment déterminer si le navigateur requiert que le premier élément dans le corps d’une page Web soit un élément HTML `<br>` élément.</span><span class="sxs-lookup"><span data-stu-id="aea9e-424">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-425">Obtient une valeur indiquant si le navigateur ne prend pas en charge les éléments HTML <see langword="&lt;br&gt;" /> pour mettre en forme des sauts de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-425">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-426">
            <see langword="true" /> si le navigateur ne prend pas en charge les éléments <see langword="&lt;br&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-426">
              <see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-427">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-427">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-428">Si `true`, le navigateur ne renvoie pas correctement les pages contenant le code HTML `<br>` élément.</span><span class="sxs-lookup"><span data-stu-id="aea9e-428">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-429">L’exemple de code suivant montre comment déterminer si le navigateur ne prend pas en charge HTML `<br>` éléments à mettre en forme les sauts de ligne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-429">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-430">Obtient une valeur indiquant si le navigateur exige que les pages contiennent une forme de balise de langage de balisage avec une taille optimisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-430">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-431">
            <see langword="true" /> si le navigateur requiert que les pages contiennent un formulaire de balises de langue de balisage avec une taille optimisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-431">
              <see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-432">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-432">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-433">Si `true`, les adaptateurs de contrôle serveur génèrent une sortie minimale pour réduire la taille de la page résultante.</span><span class="sxs-lookup"><span data-stu-id="aea9e-433">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aea9e-434">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> retourne de la propriété `true` pour les navigateurs i-mode compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-434">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-435">L’exemple de code suivant montre comment déterminer si le navigateur requiert que les pages contiennent un formulaire de taille optimisée de balises de langage de balisage.</span><span class="sxs-lookup"><span data-stu-id="aea9e-435">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-436">Obtient une valeur indiquant si le navigateur prend en charge la numérotation téléphonique reposant sur du texte brut ou s’il nécessite un balisage spécial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-436">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-437">
            <see langword="true" /> si le navigateur prend en charge uniquement la numérotation téléphonique reposant sur du texte brut ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-437">
              <see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-438">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-438">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-439">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> propriété s’applique uniquement aux navigateurs pour lesquels la <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="aea9e-439">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-440">Le code suivant exemple montre comment faire pour déterminer si le navigateur prend en charge la numérotation téléphonique basée sur du texte brut, ou s’il requiert un balisage spécial.</span><span class="sxs-lookup"><span data-stu-id="aea9e-440">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-441">Obtient une valeur indiquant si le navigateur exige que les valeurs <see langword="VIEWSTATE" /> aient un codage spécial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-441">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-442">
            <see langword="true" /> si le navigateur requiert que les valeurs <see langword="VIEWSTATE" /> aient un codage spécial ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-442">
              <see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-443">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-443">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-444">HTTP est un protocole sans état, et `VIEWSTATE` est un mécanisme utilisé pour rendre persistantes les modifications client sur plusieurs demandes.</span><span class="sxs-lookup"><span data-stu-id="aea9e-444">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="aea9e-445">Chaque contrôle sur une page Web contient un <xref:System.Web.UI.Control.ViewState%2A> propriété, qui représente l’accumulation de toutes les modifications apportées par le client.</span><span class="sxs-lookup"><span data-stu-id="aea9e-445">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="aea9e-446">Dans une page Web Forms, ces modifications sont codées dans les données de publication (postback) comme la `value` de HTML `<input>` élément avec un `type` attribut de `hidden`.</span><span class="sxs-lookup"><span data-stu-id="aea9e-446">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="aea9e-447">Exemple :</span><span class="sxs-lookup"><span data-stu-id="aea9e-447">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 Si `true`non alphabétiques caractères dans la `VIEWSTATE` valeur ne sera pas envoyée correctement par le navigateur, ni par une passerelle intermédiaire. <span data-ttu-id="aea9e-449">Pour corriger ce problème, les adaptateurs de contrôle serveur remplacent les caractères non alphabétiques dans la `VIEWSTATE` valeur avec ceux qui ne requièrent pas de codage dans les demandes HTTP.</span><span class="sxs-lookup"><span data-stu-id="aea9e-449">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-450">L’exemple de code suivant montre comment déterminer si le navigateur requiert `VIEWSTATE` valeurs un codage spécial.</span><span class="sxs-lookup"><span data-stu-id="aea9e-450">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-451">Obtient une valeur indiquant si le navigateur nécessite des URL d’action de formulaire uniques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-451">Gets a value indicating whether the browser requires unique form-action URLs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-452">
            <see langword="true" /> si le navigateur requiert des URL d'action à formulaire uniques ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-452">
              <see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-453">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-453">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-454">Une référence automatique HTML `<form>` élément est celui pour lequel le `action` attribut spécifie sa propre URL.</span><span class="sxs-lookup"><span data-stu-id="aea9e-454">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="aea9e-455">Si `true`, formulaires à référence automatique ne retournent pas les résultats corrects.</span><span class="sxs-lookup"><span data-stu-id="aea9e-455">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="aea9e-456">Cela est dû à la mise en cache par le navigateur ou une passerelle intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="aea9e-456">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="aea9e-457">Pour corriger cela, les adaptateurs de contrôle de serveur ajoutent une chaîne de requête par défaut (`__ufps=``uniquefilepathsuffix`) sur les valeurs de URL d’action de formulaire de formulaires à référence automatique.</span><span class="sxs-lookup"><span data-stu-id="aea9e-457">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-458">L’exemple de code suivant montre comment déterminer si le navigateur requiert des URL d’action de formulaire uniques.</span><span class="sxs-lookup"><span data-stu-id="aea9e-458">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-459">Obtient une valeur indiquant si le navigateur exige des valeurs d’attribut <see langword="name" /> uniques de plusieurs éléments HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-459">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-460">
            <see langword="true" /> si le navigateur requiert des valeurs d'attribut <see langword="name" /> uniques de plusieurs éléments <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-460">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-461">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-461">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-462">L’exemple de code suivant montre comment déterminer si le navigateur requiert unique `NAME` HTML plusieurs valeurs d’attribut `<input type="checkbox">` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-462">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-463">Obtient une valeur indiquant si le navigateur exige des valeurs d’attribut <see langword="name" /> uniques de plusieurs éléments HTML <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-463">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-464">
            <see langword="true" /> si le navigateur requiert des valeurs d'attribut <see langword="name" /> uniques de plusieurs éléments <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-464">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-465">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-465">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-466">L’exemple de code suivant montre comment déterminer si le navigateur requiert unique `name` HTML plusieurs valeurs d’attribut `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-466">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-467">Obtient une valeur indiquant si les données de publication (postback) envoyées par le navigateur sont <see langword="UrlEncoded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-467">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-468">
            <see langword="true" /> si les données de publication (postback) envoyées par le navigateur sont <see langword="UrlEncoded" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-468">
              <see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-469">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-469">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-470">L’exemple de code suivant montre comment déterminer si le navigateur `UrlEncodes` les données de publication.</span><span class="sxs-lookup"><span data-stu-id="aea9e-470">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-471">Retourne la profondeur de l’affichage, en bits par pixel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-471">Returns the depth of the display, in bits per pixel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-472">Profondeur de l’affichage en bits par pixel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-472">The depth of the display, in bits per pixel.</span>
          </span>
          <span data-ttu-id="aea9e-473">La valeur par défaut est <see langword="1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-473">The default is <see langword="1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-474">Retourne la hauteur approximative de l’affichage, en lignes de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-474">Returns the approximate height of the display, in character lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-475">Hauteur approximative de l’affichage, en lignes de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-475">The approximate height of the display, in character lines.</span>
          </span>
          <span data-ttu-id="aea9e-476">La valeur par défaut est <see langword="6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-476">The default is <see langword="6" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-477">La valeur retournée peut être dérivée de la taille de caractère supposée et de la taille réelle de l’écran en pixels.</span><span class="sxs-lookup"><span data-stu-id="aea9e-477">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="aea9e-478">L’algorithme pour déterminer la hauteur utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au navigateur (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par le navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-478">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="aea9e-479">Certains navigateurs peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement la hauteur réelle.</span><span class="sxs-lookup"><span data-stu-id="aea9e-479">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-480">Retourne la largeur approximative de l’affichage, en caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-480">Returns the approximate width of the display, in characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-481">Largeur approximative de l’affichage, en caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-481">The approximate width of the display, in characters.</span>
          </span>
          <span data-ttu-id="aea9e-482">La valeur par défaut est <see langword="12" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-482">The default is <see langword="12" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-483">La valeur retournée peut être dérivée de la taille de caractère supposée et de la taille réelle de l’écran en pixels.</span><span class="sxs-lookup"><span data-stu-id="aea9e-483">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="aea9e-484">L’algorithme permettant de déterminer la largeur utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au périphérique (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par les appareils.</span><span class="sxs-lookup"><span data-stu-id="aea9e-484">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="aea9e-485">Ces valeurs ne sont pas nécessairement exactes (en particulier pour les polices à largeur variable, ces valeurs sont approximatives).</span><span class="sxs-lookup"><span data-stu-id="aea9e-485">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="aea9e-486">Certains appareils peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement la largeur réelle.</span><span class="sxs-lookup"><span data-stu-id="aea9e-486">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-487">Retourne la hauteur approximative de l’affichage, en pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-487">Returns the approximate height of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-488">Hauteur approximative de l’affichage, en pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-488">The approximate height of the display, in pixels.</span>
          </span>
          <span data-ttu-id="aea9e-489">La valeur par défaut est <see langword="72" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-489">The default is <see langword="72" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-490">La valeur retournée peut être dérivée de la taille de caractère supposée et la hauteur de caractère.</span><span class="sxs-lookup"><span data-stu-id="aea9e-490">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="aea9e-491">L’algorithme permettant de déterminer la hauteur en pixels utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au périphérique (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par les appareils.</span><span class="sxs-lookup"><span data-stu-id="aea9e-491">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="aea9e-492">Ces valeurs ne sont pas nécessairement exactes.</span><span class="sxs-lookup"><span data-stu-id="aea9e-492">These values are not necessarily exact.</span></span> <span data-ttu-id="aea9e-493">Certains appareils peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement la hauteur réelle.</span><span class="sxs-lookup"><span data-stu-id="aea9e-493">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-494">Retourne la largeur approximative de l’affichage, en pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-494">Returns the approximate width of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-495">Largeur approximative de l’affichage, en pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-495">The approximate width of the display, in pixels.</span>
          </span>
          <span data-ttu-id="aea9e-496">La valeur par défaut est <see langword="96" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-496">The default is <see langword="96" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-497">La valeur retournée peut être dérivée de la taille de caractère supposée et de la largeur des caractères.</span><span class="sxs-lookup"><span data-stu-id="aea9e-497">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="aea9e-498">L’algorithme permettant de déterminer la largeur en pixels utilise une combinaison des tailles de police par défaut (à partir d’un fichier .config), des tailles spécifiques au périphérique (là encore, à partir d’un fichier .config) et des en-têtes explicites envoyés par les appareils.</span><span class="sxs-lookup"><span data-stu-id="aea9e-498">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="aea9e-499">Ces valeurs ne sont pas nécessairement exactes (en particulier pour les polices à largeur variable, ces valeurs sont approximatives).</span><span class="sxs-lookup"><span data-stu-id="aea9e-499">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="aea9e-500">Certains appareils peuvent compter sur les valeurs internes par défaut, qui se rapprochent uniquement la largeur réelle.</span><span class="sxs-lookup"><span data-stu-id="aea9e-500">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-501">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="ACCESSKEY" /> des éléments HTML <see langword="&lt;a&gt;" /> (ancre) et <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-501">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-502">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="accesskey" /> des éléments <see langword="&lt;a&gt;" /> (ancre) et <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-502">
              <see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-503">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-503">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-504">Le `accesskey` attribut étend le contrôle des formulaires et des liens sur une page Web aux plateformes mobiles et accessibles en assignant une touche programmable ou un autre contrôleur à l’appareil pour interagir avec du code HTML `<a>` (ancre) et `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-504">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-505">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `accesskey` attribut HTML `<a>` (ancre) et `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-505">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-506">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="bgcolor" /> de l’élément HTML <see langword="&lt;body&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-506">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-507">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="bgcolor" /> de l'élément <see langword="&lt;body&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-507">
              <see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-508">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-508">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-509">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `bgcolor` attribut du code HTML `<body>` élément.</span><span class="sxs-lookup"><span data-stu-id="aea9e-509">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-510">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;b&gt;" /> pour mettre en forme le texte en gras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-510">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-511">
            <see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;b&gt;" /> HTML pour mettre en forme le texte en gras ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-511">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-512">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-512">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-513">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<b>` éléments à mettre en forme le texte en gras.</span><span class="sxs-lookup"><span data-stu-id="aea9e-513">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-514">Obtient une valeur indiquant si le navigateur prend en charge la valeur <see langword="cache-control" /> pour l’attribut <see langword="http-equiv" /> des éléments HTML <see langword="&lt;meta&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-514">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-515">
            <see langword="true" /> si le navigateur prend en charge la valeur <see langword="cache-control" /> pour l'attribut <see langword="http-equiv" /> des éléments <see langword="&lt;meta&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-515">
              <see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-516">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-516">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-517">Le `cache-control` la valeur pour le `http-equiv` attribut HTML `<meta>` éléments permet de contrôler le client mise en cache du contenu téléchargé qui inclut des pages Web.</span><span class="sxs-lookup"><span data-stu-id="aea9e-517">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="aea9e-518">Le fragment de code HTML suivant montre un exemple :</span><span class="sxs-lookup"><span data-stu-id="aea9e-518">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="aea9e-519">Si `true`, l’inclusion de cette balise dans le `<head>` élément d’une page Web doit forcer le navigateur à recharger le contenu à partir du serveur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-519">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="aea9e-520">Si `false`, les adaptateurs de contrôle serveur ajoutent une chaîne de requête par défaut (`__ufps=``uniquefilepathsuffix`) sur les valeurs d’URL de lien qui n’en avez pas déjà.</span><span class="sxs-lookup"><span data-stu-id="aea9e-520">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="aea9e-521">Cela force le navigateur à recharger le contenu à partir du serveur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-521">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="aea9e-522">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> propriété s’applique également au formulaire d’en-tête HTTP équivalent :</span><span class="sxs-lookup"><span data-stu-id="aea9e-522">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-523">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `cache-control` la valeur pour le `http-equiv` attribut HTML `<meta>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-523">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-524">Obtient une valeur indiquant si le navigateur prend en charge les scripts de rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-524">Gets a value indicating whether the browser supports callback scripts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-525">
            <see langword="true" /> si le navigateur prend en charge les scripts de rappel ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-525">
              <see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-526">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-527">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les scripts de rappel.</span><span class="sxs-lookup"><span data-stu-id="aea9e-527">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-528">Obtient une valeur indiquant si le navigateur prend en charge les feuilles de style en cascade (CSS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-528">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-529">
            <see langword="true" /> si le navigateur prend en charge les CSS ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-529">
              <see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-530">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-530">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-531">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge CSS.</span><span class="sxs-lookup"><span data-stu-id="aea9e-531">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-532">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="align" /> des éléments HTML <see langword="&lt;div&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-532">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-533">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="align" /> des éléments <see langword="&lt;div&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-533">
              <see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-534">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-534">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-535">HTML `<div>` éléments sont utilisées pour regrouper plusieurs éléments HTML afin que les styles CSS puissent leur être appliqués dans sa globalité.</span><span class="sxs-lookup"><span data-stu-id="aea9e-535">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="aea9e-536">Le `align` attribut définit l’alignement horizontal d’un `<div>` groupe sur une page Web.</span><span class="sxs-lookup"><span data-stu-id="aea9e-536">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-537">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `align` attribut HTML `<div>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-537">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-538">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="nowrap" /> des éléments HTML <see langword="&lt;div&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-538">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-539">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="nowrap" /> des éléments <see langword="&lt;div&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-539">
              <see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-540">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-540">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-541">HTML `<div>` éléments sont utilisées pour regrouper plusieurs éléments HTML afin que les styles CSS puissent leur être appliqués dans sa globalité.</span><span class="sxs-lookup"><span data-stu-id="aea9e-541">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="aea9e-542">Le `nowrap` attribut spécifie que les éléments contenus dans le `<div>` groupe doit rester adjacent sans renvoi à la ligne vers une nouvelle ligne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-542">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-543">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `nowrap` attribut HTML `<div>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-543">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-544">Obtient une valeur indiquant si le navigateur prend en charge des chaînes (<see langword="null" />) vides dans les valeurs de cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-544">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-545">
            <see langword="true" /> si le navigateur prend en charge les chaînes (<see langword="null" />) vides dans les valeurs du cookie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-545">
              <see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-546">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-546">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-547">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge vide (`null`) des chaînes dans les valeurs de cookie.</span><span class="sxs-lookup"><span data-stu-id="aea9e-547">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-548">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="color" /> des éléments HTML <see langword="&lt;font&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-548">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-549">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="color" /> des éléments <see langword="&lt;font&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-549">
              <see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-550">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-550">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-551">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `color` attribut HTML `<font>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-551">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-552">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="name" /> des éléments HTML <see langword="&lt;font&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-552">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-553">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="name" /> des éléments <see langword="&lt;font&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-553">
              <see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-554">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-554">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-555">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `name` attribut HTML `<font>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-555">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-556">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="size" /> des éléments HTML <see langword="&lt;font&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-556">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-557">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="size" /> des éléments <see langword="&lt;font&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-557">
              <see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-558">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-558">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-559">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `size` attribut HTML `<font>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-559">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-560">Obtient une valeur indiquant si le navigateur prend en charge l’utilisation d’une image personnalisée au lieu du bouton Envoyer d’un formulaire standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-560">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-561">
            <see langword="true" /> si le navigateur prend en charge l'utilisation d'une image personnalisée au lieu du bouton Envoyer d'un formulaire standard ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-561">
              <see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-562">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-562">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-563">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge à l’aide d’une image personnalisée à la place d’un bouton d’envoi de formulaire standard.</span><span class="sxs-lookup"><span data-stu-id="aea9e-563">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-564">Obtient une valeur indiquant si le navigateur prend en charge les symboles i-mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-564">Gets a value indicating whether the browser supports i-mode symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-565">
            <see langword="true" /> si le navigateur prend en charge les symboles i-mode ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-565">
              <see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-566">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-566">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-567">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriété s’applique uniquement à i-mode appareils compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-567">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="aea9e-568">Définir des symboles d’images spécifiques i-Phone pour les navigateurs i-mode compatibles en utilisant la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aea9e-568">Set i-Phone–specific picture symbols for i-mode–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-569">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les symboles i-mode.</span><span class="sxs-lookup"><span data-stu-id="aea9e-569">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-570">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="istyle" /> des éléments HTML <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-570">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-571">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="istyle" /> des éléments <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-571">
              <see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-572">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-572">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-573">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriété s’applique uniquement à i-mode appareils compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-573">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="aea9e-574">Le `istyle` attribut est utilisé pour définir le style d’entrée d’un champ d’entrée de texte sur les navigateurs i-mode compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-574">The `istyle` attribute is used for setting the input style of a text-input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-575">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `istyle` attribut HTML `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-575">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-576">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="mode" /> des éléments HTML <see langword="&lt;input&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-576">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-577">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="mode" /> des éléments <see langword="&lt;input&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-577">
              <see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-578">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-578">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-579">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriété s’applique uniquement à i-mode appareils compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-579">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="aea9e-580">Le `MODE` attribut est utilisé pour définir le mode d’entrée d’un champ d’entrée de texte sur les navigateurs i-mode compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-580">The `MODE` attribute is used for setting the input mode of a text input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-581">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `mode` attribut HTML `<input>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-581">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-582">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;i&gt;" /> pour mettre en forme le texte en italique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-582">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-583">
            <see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;i&gt;" /> HTML pour mettre en forme le texte italique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-583">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-584">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-584">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-585">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<i>` éléments à mettre en forme du texte en italique.</span><span class="sxs-lookup"><span data-stu-id="aea9e-585">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-586">Obtient une valeur indiquant si le navigateur prend en charge les attributs multimédias J-Phone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-586">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-587">
            <see langword="true" /> si le navigateur prend en charge les attributs multimédias J-Phone ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-587">
              <see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-588">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-588">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-589">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> propriété s’applique uniquement aux appareils mobiles J-Phone compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-589">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-590">J-Phone est une spécification de langage de balisage basée sur HTML pour les navigateurs J-Phone compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-590">J-Phone is a markup language specification, based on HTML, for J-Phone–compatible browsers.</span></span> <span data-ttu-id="aea9e-591">Si `true`, le navigateur prend en charge les attributs supplémentaires pour HTML `<a>` (ancre) et `<select>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-591">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="aea9e-592">Les attributs supplémentaires pris en charge sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="aea9e-592">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-593">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les attributs multimédias J-Phone.</span><span class="sxs-lookup"><span data-stu-id="aea9e-593">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-594">Obtient une valeur indiquant si le navigateur prend en charge les symboles d’images propres à J-Phone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-594">Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-595">
            <see langword="true" /> si le navigateur prend en charge les symboles d'images spécifiques J-Phone ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-595">
              <see langword="true" /> if the browser supports J-Phone–specific picture symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-596">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-596">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-597">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> propriété s’applique uniquement aux appareils mobiles J-Phone compatibles.</span><span class="sxs-lookup"><span data-stu-id="aea9e-597">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="aea9e-598">Définir les symboles d’images propres à J-Phone pour les navigateurs J-Phone compatibles à l’aide de la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aea9e-598">Set J-Phone–specific picture symbols for J-Phone–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-599">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les symboles d’images propres à J-Phone.</span><span class="sxs-lookup"><span data-stu-id="aea9e-599">The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-600">Obtient une valeur indiquant si le navigateur prend en charge une chaîne de requête dans la valeur d’attribut <see langword="action" /> des éléments HTML <see langword="&lt;form&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-600">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-601">
            <see langword="true" /> si le navigateur prend en charge une chaîne de requête dans la valeur d'attribut <see langword="action" /> des éléments <see langword="&lt;form&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-601">
              <see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-602">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-602">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-603">Si `false`, les paramètres de chaîne de requête sont envoyés, dans les données de publication (postback), au format HTML `<input>` éléments avec le `type` attributs `hidden`.</span><span class="sxs-lookup"><span data-stu-id="aea9e-603">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-604">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge une chaîne de requête dans la valeur pour le `action` attribut HTML `<form>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-604">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-605">Obtient une valeur indiquant si le navigateur prend en charge les cookies lors de la redirection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-605">Gets a value indicating whether the browser supports cookies on redirection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-606">
            <see langword="true" /> si le navigateur prend en charge les cookies lors de la redirection ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-606">
              <see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-607">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-607">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-608">Avec le haut. Navigateur 4.1 ou à distance. Navigateur 3.2, la <xref:System.Web.HttpResponse.Redirect%2A> méthode se comporte comme si la valeur de la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> propriété de la <xref:System.Web.HttpBrowserCapabilities> objet est `false`, sauf si le <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> propriété dans la <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section du fichier Web.config a été définie explicitement à `true`.</span><span class="sxs-lookup"><span data-stu-id="aea9e-608">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="aea9e-609">Dans la version 1.1 d’ASP.NET, les options de ce paramètre étaient `true` ou `false`, mais avec ASP.NET 2.0, les choix sont développés, et <xref:System.Web.HttpCookieMode.AutoDetect> est désormais le paramètre par défaut.</span><span class="sxs-lookup"><span data-stu-id="aea9e-609">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="aea9e-610">Si votre application Web a la `cookieless` attribut de la `<sessionState>` section dans le fichier Web.config a une valeur booléenne, <xref:System.Web.HttpResponse.Redirect%2A> doit fonctionner comme prévu pour ces navigateurs.</span><span class="sxs-lookup"><span data-stu-id="aea9e-610">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-611">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge les cookies lors de la redirection.</span><span class="sxs-lookup"><span data-stu-id="aea9e-611">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-612">Obtient une valeur indiquant si le navigateur prend en charge l’attribut <see langword="multiple" /> des éléments HTML <see langword="&lt;select&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-612">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-613">
            <see langword="true" /> si le navigateur prend en charge l'attribut <see langword="multiple" /> des éléments <see langword="&lt;select&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-613">
              <see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-614">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-614">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-615">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la `multiple` attribut HTML `<select>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-615">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-616">Obtient une valeur indiquant si la suppression d’un élément HTML <see langword="&lt;input type=checkbox&gt;" /> activé se répercute dans les données de publication (postback).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-616">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-617">
            <see langword="true" /> si la suppression d'un élément <see langword="&lt;input type=checkbox&gt;" /> HTML activé se répercute dans les données de publication (postback); sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-617">
              <see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-618">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-618">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-619">Si `false`, la valeur de la `checked` attribut HTML `<input type=checkbox>` éléments est omis à partir des données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="aea9e-619">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-620">L’exemple de code suivant montre comment déterminer si la suppression d’un HTML activé `<input type=checkbox>` élément est reflété dans les données de publication (postback).</span><span class="sxs-lookup"><span data-stu-id="aea9e-620">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-621">Obtient une valeur indiquant si le navigateur prend en charge la réception du format XML via HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-621">Gets a value indicating whether the browser supports receiving XML over HTTP.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-622">
            <see langword="true" /> si le navigateur prend en charge la réception du format XML via HTTP ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-622">
              <see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-623">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-623">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-624">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge la réception du format XML sur HTTP.</span><span class="sxs-lookup"><span data-stu-id="aea9e-624">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" />
        <Parameter Name="filter2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter1">
          <span data-ttu-id="aea9e-625">Premier filtre à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-625">The first filter to compare.</span>
          </span>
        </param>
        <param name="filter2">
          <span data-ttu-id="aea9e-626">Deuxième filtre à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-626">The second filter to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-627">Utilisé en interne pour comparer des filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-627">Used internally to compare filters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aea9e-628">1 si <paramref name="filter1" /> est un parent de <paramref name="filter2" /> ; -1 si <paramref name="filter2" /> est un parent de <paramref name="filter1" /> ; 0 en l’absence de relation parent-enfant entre <paramref name="filter1" /> et <paramref name="filter2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-628">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterName">
          <span data-ttu-id="aea9e-629">Filtre à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-629">The filter to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aea9e-630">Utilisé en interne pour évaluer un filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-630">Used internally to evaluate a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aea9e-631">
            <see langword="true" /> si le filtre a été correctement évalué ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-631">
              <see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-632">Obtient une valeur indiquant si le navigateur prend en charge les éléments HTML <see langword="&lt;table&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-632">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-633">
            <see langword="true" /> si le navigateur prend en charge les éléments <see langword="&lt;table&gt;" /> HTML ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-633">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-634">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-634">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-635">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge HTML `<table>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aea9e-635">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-636">Utilisé en interne pour obtenir le type de l’objet qui est utilisé pour écrire des étiquettes pour le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-636">Used internally to get the type of the object that is used to write tags for the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-637">Le <see cref="T:System.Type" /> de l'objet qui est utilisé pour écrire des balises pour le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-637">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="aea9e-638">Il y a une erreur d’analyse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-638">There is a parse error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-639">Obtient le numéro de la version majeure (entier) du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-639">Gets the name and major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-640">Nom et numéro de la version majeure du navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-640">The name and major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-641">L’exemple de code suivant montre comment déterminer si le navigateur est Internet Explorer version 6.</span><span class="sxs-lookup"><span data-stu-id="aea9e-641">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-642">Utilisé en interne pour obtenir une valeur indiquant s’il faut utiliser une clé de cache optimisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-642">Used internally to get a value indicating whether to use an optimized cache key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-643">
            <see langword="true" /> pour utiliser une clé de cache optimisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-643">
              <see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-644">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-644">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-645">Obtient une valeur indiquant si le navigateur prend en charge Visual Basic Script Edition (VBScript).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-645">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-646">
            <see langword="true" /> si le navigateur prend en charge VBScript ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-646">
              <see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-647">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-647">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-648">L’exemple de code suivant montre comment déterminer si le navigateur prend en charge VBScript.</span><span class="sxs-lookup"><span data-stu-id="aea9e-648">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-649">Obtient le numéro de version complet (entier et décimal) du navigateur sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-649">Gets the full version number (integer and decimal) of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-650">Numéro de version complet du navigateur sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-650">The full version number of the browser as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aea9e-651">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propriété retourne une chaîne.</span><span class="sxs-lookup"><span data-stu-id="aea9e-651">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="aea9e-652">Dans certains scénarios, le <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propriété peut contenir des lettres, comme dans le cas d’un navigateur ou le périphérique client qui est une version bêta, tel que « 7. 0 b ».</span><span class="sxs-lookup"><span data-stu-id="aea9e-652">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="aea9e-653">Pour obtenir correctement la version en tant que type de données qui peut être utilisé dans une comparaison numérique, concaténez les <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> et <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> les valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="aea9e-653">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aea9e-654">L’exemple de code suivant montre comment déterminer le <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> du navigateur.</span><span class="sxs-lookup"><span data-stu-id="aea9e-654">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="aea9e-655">Le <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> propriété et <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> propriété sont concaténées et le résultat est utilisé pour déterminer si la version du navigateur est supérieure à 5.01.</span><span class="sxs-lookup"><span data-stu-id="aea9e-655">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-656">Obtient la version du modèle DOM (Document Object Model) XML du W3C (World Wide Web Consortium) prise en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-656">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-657">Numéro de version du modèle XML DOM du W3C prise en charge par le navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-657">The number of the W3C XML DOM version number that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-658">L’exemple de code suivant montre comment déterminer si la version du navigateur W3C XML DOM est supérieure à 1.</span><span class="sxs-lookup"><span data-stu-id="aea9e-658">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-659">Obtient une valeur indiquant si le navigateur client est exécuté sur un ordinateur Win16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-659">Gets a value indicating whether the client is a Win16-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-660">
            <see langword="true" /> si le navigateur est exécuté sur un ordinateur Win16 ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-660">
              <see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-661">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-661">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-662">L’exemple de code suivant montre comment déterminer si le navigateur est en cours d’exécution sur un ordinateur Win16.</span><span class="sxs-lookup"><span data-stu-id="aea9e-662">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aea9e-663">Obtient une valeur indiquant si le navigateur client est exécuté sur un ordinateur Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-663">Gets a value indicating whether the client is a Win32-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aea9e-664">
            <see langword="true" /> si le client est un ordinateur Win32 ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-664">
              <see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aea9e-665">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aea9e-665">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aea9e-666">L’exemple de code suivant montre comment déterminer si le client est un ordinateur Win32.</span><span class="sxs-lookup"><span data-stu-id="aea9e-666">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>