<Type Name="HttpHandlerAction" FullName="System.Web.Configuration.HttpHandlerAction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5e5dcd4a7574249583bb42a8e9467aec7865f83" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpHandlerAction : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpHandlerAction extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpHandlerAction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpHandlerAction&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpHandlerAction sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configure une section de configuration <see cref="T:System.Web.Configuration.HttpHandlersSection" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpHandlerAction> classe fournit un moyen d’accéder par programme et de modifier le `add` élément de la `httpHandlers` section de configuration.  
  
 Ce type fait partie d’un groupe qui inclut le <xref:System.Web.Configuration.HttpHandlerActionCollection> et <xref:System.Web.Configuration.HttpHandlersSection> types.  
  
> [!NOTE]
>  Le <xref:System.Web.Configuration.HttpHandlerAction> peuvent lire et écrire des informations depuis et vers la section connexe du fichier de configuration en fonction de la propriété de la section <xref:System.Configuration.SectionInformation.AllowDefinition%2A> dont la valeur est <xref:System.Configuration.ConfigurationAllowDefinition.Everywhere>.  
  
 ASP.NET recherche la DLL d’assembly de gestionnaire en privé de l’application répertoire \bin tout d’abord, et il recherche ensuite dans le cache d’assembly système.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.Configuration.HttpModuleAction> type.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#2)]
 [!code-vb[System.Web.Configuration.HttpHandlers#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#2)]  
  
 L’extrait de configuration suivant montre comment spécifier des valeurs de manière déclarative pour le `httpHandlers` section.  
  
```  
<httpHandlers>  
  <add path="Calculator.custom"  
    type="Samples.Aspnet.SystemWebConfiguration.Calculator, CalculatorHandler"  
    verb="GET" validate="false" />  
</httpHandlers>   
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.HttpHandlerActionCollection" />
    <altmember cref="T:System.Web.Configuration.HttpHandlersSection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpHandlerAction (string path, string type, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string type, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, type As String, verb As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpHandlerAction(System::String ^ path, System::String ^ type, System::String ^ verb);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès d'URL <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</param>
        <param name="type">Combinaison classe/assembly séparée par des virgules constituée de jetons de version, de culture et de clé publique.</param>
        <param name="verb">Liste séparée par des virgules de verbes HTTP (par exemple, "GET, PUT, POST").</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Configuration.HttpHandlerAction" /> avec les paramètres passés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpHandlerAction.%23ctor%2A> constructeur n’est pas destiné à être utilisée directement à partir de votre code. Elle est appelée par le système de configuration ASP.NET. Pour obtenir une instance de la <xref:System.Web.Configuration.HttpHandlerAction> classe à l’aide de la <xref:System.Web.Configuration.HttpHandlersSection.Handlers%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpHandlerAction (string path, string type, string verb, bool validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string type, string verb, bool validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, type As String, verb As String, validate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpHandlerAction(System::String ^ path, System::String ^ type, System::String ^ verb, bool validate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="verb" Type="System.String" />
        <Parameter Name="validate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès d'URL <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</param>
        <param name="type">Combinaison classe/assembly séparée par des virgules constituée de jetons de version, de culture et de clé publique.</param>
        <param name="verb">Liste séparée par des virgules de verbes HTTP (par exemple, "GET, PUT, POST").</param>
        <param name="validate">
          <see langword="true" /> pour autoriser la validation ; sinon, <see langword="false" />. Si <see langword="false" />, ASP.NET n'essaiera de charger la classe qu'à l'arrivée de la demande correspondante réelle, ce qui différera potentiellement l'erreur mais améliorera la durée de démarrage.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Configuration.HttpHandlerAction" /> avec les paramètres passés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpHandlerAction.%23ctor%2A> constructeur n’est pas destiné à être utilisée directement à partir de votre code. Elle est appelée par le système de configuration ASP.NET. Pour obtenir une instance de la <xref:System.Web.Configuration.HttpHandlerAction> classe à l’aide de la <xref:System.Web.Configuration.HttpHandlersSection.Handlers%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un <xref:System.Web.Configuration.HttpHandlerAction> objet.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#3)]
 [!code-vb[System.Web.Configuration.HttpHandlers#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("path", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le chemin d'accès <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</summary>
        <value>Chemin d'accès d'URL <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpHandlerAction.Path%2A> propriété peut contenir une URL unique ou une chaîne de caractères génériques.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'accès à la propriété <xref:System.Web.Configuration.HttpHandlerAction.Path%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#5)]
 [!code-vb[System.Web.Configuration.HttpHandlers#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("type", IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</summary>
        <value>Type de <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpHandlerAction.Type%2A> propriété est une combinaison classe/assembly séparée par des virgules comprenant version, culture et les jetons de clé publique.  
  
> [!NOTE]
>  ASP.NET recherche la DLL d’assembly de gestionnaire en privé de l’application répertoire \bin tout d’abord, et il recherche ensuite dans le cache d’assembly système.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'accès à la propriété <xref:System.Web.Configuration.HttpHandlerAction.Type%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#6)]
 [!code-vb[System.Web.Configuration.HttpHandlers#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Validate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Property Validate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Validate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validate", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la validation <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</summary>
        <value>
          <see langword="true" /> si la validation est autorisée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.Configuration.HttpHandlerAction.Validate%2A> propriété est `false`, ASP.NET ne tente pas de charger la classe jusqu'à ce que la demande correspondante est fourni, potentiellement retarder l’erreur mais permet d’améliorer le temps de démarrage.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'accès à la propriété <xref:System.Web.Configuration.HttpHandlerAction.Validate%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#8)]
 [!code-vb[System.Web.Configuration.HttpHandlers#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("verb", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le verbe autorisé par l'objet <see cref="T:System.Web.Configuration.HttpHandlerAction" />.</summary>
        <value>Verbe autorisé par l'objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela <xref:System.Web.Configuration.HttpHandlerAction.Verb%2A> propriété peut être une liste séparée par des virgules de verbes HTTP (par exemple, « GET, PUT, POST »).  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'accès à la propriété <xref:System.Web.Configuration.HttpHandlerAction.Verb%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpHandlers#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#7)]
 [!code-vb[System.Web.Configuration.HttpHandlers#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>