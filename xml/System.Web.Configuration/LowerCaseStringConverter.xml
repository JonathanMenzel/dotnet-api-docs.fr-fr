<Type Name="LowerCaseStringConverter" FullName="System.Web.Configuration.LowerCaseStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d54c5fcd1dd7a6ac9f1a1144be7cb9a722f31ce" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39929920" /></Metadata><TypeSignature Language="C#" Value="public sealed class LowerCaseStringConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LowerCaseStringConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.LowerCaseStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LowerCaseStringConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LowerCaseStringConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LowerCaseStringConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit la prise en charge pour convertir un objet en chaîne minuscule. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.LowerCaseStringConverter> classe permet à un objet à convertir en chaîne minuscule. Cette classe fournit également la prise en charge pour vérifier qu’un type d’objet peut être converti en chaîne minuscule avant la conversion est effectuée.  
  
 Les méthodes de <xref:System.Web.Configuration.LowerCaseStringConverter> prennent comme paramètre un objet qui implémente le <xref:System.ComponentModel.ITypeDescriptorContext> interface. Cette interface fournit des informations contextuelles sur un composant. En règle générale, cette interface est utilisée au moment du design pour fournir des informations relatives à un conteneur au moment du design. Le <xref:System.ComponentModel.ITypeDescriptorContext> est couramment utilisé dans la conversion de type.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LowerCaseStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LowerCaseStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une instance de la classe <see cref="T:System.Web.Configuration.LowerCaseStringConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.Configuration.LowerCaseStringConverter.%23ctor%2A> constructeur.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#2)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lowerCaseStringConverter.CanConvertFrom (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objet qui implémente l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="type">Type d'objet à convertir.</param>
        <summary>Détermine si un objet peut être converti en une chaîne minuscule selon les paramètres spécifiés.</summary>
        <returns><see langword="true" /> si les paramètres décrivent un objet qui peut être converti en objet de chaîne minuscule ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode utilise un objet qui implémente le <xref:System.ComponentModel.ITypeDescriptorContext> interface en tant que le `ctx` paramètre. Cette interface fournit des informations contextuelles sur un composant. En règle générale, cette interface est utilisée au moment du design pour fournir des informations relatives à un conteneur au moment du design. Le <xref:System.ComponentModel.ITypeDescriptorContext> est couramment utilisé dans la conversion de type. Substituez cette méthode dans une classe dérivée si un comportement personnalisé est requis.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#3)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="lowerCaseStringConverter.CanConvertTo (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objet qui implémente l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="type">Type d'objet à convertir.</param>
        <summary>Détermine si un objet peut être converti en une chaîne minuscule selon les paramètres spécifiés.</summary>
        <returns><see langword="true" /> si les paramètres décrivent un objet qui peut être converti en objet de chaîne minuscule ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode utilise un objet qui implémente le <xref:System.ComponentModel.ITypeDescriptorContext> interface en tant que le `ctx` paramètre. Cette interface fournit des informations contextuelles sur un composant. En règle générale, cette interface est utilisée au moment du design pour fournir des informations relatives à un conteneur au moment du design. Le <xref:System.ComponentModel.ITypeDescriptorContext> est couramment utilisé dans la conversion de type. Substituez cette méthode dans une classe dérivée si un comportement personnalisé est requis.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#4)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="lowerCaseStringConverter.ConvertFrom (ctx, ci, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">Objet qui implémente l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="ci">Objet qui implémente la classe <see cref="T:System.Globalization.CultureInfo" />.</param>
        <param name="data">Objet à convertir.</param>
        <summary>Convertit un objet de sa valeur d'origine en une chaîne minuscule selon les paramètres spécifiés.</summary>
        <returns>Objet de chaîne minuscule.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode utilise un objet qui implémente le <xref:System.ComponentModel.ITypeDescriptorContext> interface en tant que le `ctx` paramètre. Cette interface fournit des informations contextuelles sur un composant. En règle générale, cette interface est utilisée au moment du design pour fournir des informations relatives à un conteneur au moment du design. Le <xref:System.ComponentModel.ITypeDescriptorContext> est couramment utilisé dans la conversion de type. Le `ci` objet de paramètre fournit les informations liées à la culture. Le `data` objet de paramètre agit comme objet à convertir et l’objet qui en résulte une fois que la méthode est terminée. Substituez cette méthode dans une classe dérivée si un comportement personnalisé est requis.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#5)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="lowerCaseStringConverter.ConvertTo (ctx, ci, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objet qui implémente l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="ci">Objet qui implémente la classe <see cref="T:System.Globalization.CultureInfo" />.</param>
        <param name="value">Objet à convertir.</param>
        <param name="type">Type d'objet à convertir.</param>
        <summary>Convertit un objet en chaîne minuscule selon les paramètres spécifiés.</summary>
        <returns>Objet de chaîne minuscule.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode utilise un objet qui implémente le <xref:System.ComponentModel.ITypeDescriptorContext> interface en tant que le `ctx` paramètre. Cette interface fournit des informations contextuelles sur un composant. En règle générale, cette interface est utilisée au moment du design pour fournir des informations relatives à un conteneur au moment du design. Le <xref:System.ComponentModel.ITypeDescriptorContext> est couramment utilisé dans la conversion de type. Le `ci` objet de paramètre fournit les informations liées à la culture. Le `value` objet agit comme objet à convertir et l’objet qui en résulte une fois que la méthode est terminée. Substituez cette méthode dans une classe dérivée si un comportement personnalisé est requis.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#6)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>