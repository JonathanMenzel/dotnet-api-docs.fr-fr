<Type Name="WebConfigurationManager" FullName="System.Web.Configuration.WebConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e849ea942a338de8136445fd9dcd3d1d21b4283" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36601910" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.WebConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type WebConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit l'accès aux fichiers de configuration tels qu'ils s'appliquent aux applications Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Configuration.WebConfigurationManager> classe vous permet d’accéder aux informations ordinateur et d’application.  
  
 À l’aide de <xref:System.Web.Configuration.WebConfigurationManager> est la meilleure façon de travailler avec des fichiers de configuration associés aux applications Web. Pour les applications clientes, utilisez la <xref:System.Configuration.ConfigurationManager> classe.  
  
 Votre application peut étendre la <xref:System.Configuration> types ou les utiliser directement pour gérer les informations de configuration, comme décrit dans la liste suivante :  
  
-   `Handling configuration`. Pour gérer les informations de configuration à l’aide des types standard, vous utilisez une des approches suivantes :  
  
    -   `Accessing a section`. Pour accéder aux informations de configuration pour votre application, vous devez utiliser un de le `GetSection` méthodes fournies par <xref:System.Web.Configuration.WebConfigurationManager>. Pour `<appSettings>` et `<connectionStrings>`, vous utilisez la <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> et <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> propriétés. Effectuer des opérations en lecture seule de ces méthodes, utiliser une instance unique mise en cache de la configuration et sont multithread prenant en charge.  
  
    -   `Accessing configuration files`. Votre application peut lire et écrire les paramètres de configuration à tout niveau, pour elle-même ou pour d’autres applications ou ordinateurs, localement ou à distance. Vous utilisez une de le `open` méthodes fournies par <xref:System.Web.Configuration.WebConfigurationManager>. Ces méthodes retournent un <xref:System.Configuration.Configuration> objet, qui à son tour fournit les méthodes et propriétés requises pour gérer les fichiers de configuration sous-jacents. Ces méthodes effectuer de lecture ou les opérations d’écriture et recréent les données de configuration chaque fois qu’un fichier est ouvert.  
  
    -   `Advanced configuration`. Gestion de configuration plus avancée est fournie par les types <xref:System.Configuration.SectionInformation>, <xref:System.Configuration.PropertyInformation>, <xref:System.Configuration.PropertyInformationCollection>, <xref:System.Configuration.ElementInformation>, <xref:System.Configuration.ContextInformation>, <xref:System.Configuration.ConfigurationSectionGroup>, et <xref:System.Configuration.ConfigurationSectionGroupCollection>.  
  
-   `Extending configuration standard types`. Vous pouvez également fournir vos éléments de configuration personnalisés en étendant les types de configuration standard tels que <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, et <xref:System.Configuration.ConfigurationSection> à l’aide d’un modèle attribué ou par programmation. Reportez-vous à la <xref:System.Configuration.ConfigurationSection> classe pour obtenir un exemple montrant comment étendre un type de configuration standard par programme. Reportez-vous à la <xref:System.Configuration.ConfigurationElement> classe pour obtenir un exemple montrant comment étendre un type de configuration standard à l’aide du modèle attribué.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec le  
  
 Méthode <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>La <see cref="T:System.Configuration.Configuration" /> classe permet l’accès par programme pour modifier les fichiers de configuration. Vous utilisez une des méthodes open fournies par <see cref="T:System.Web.Configuration.WebConfigurationManager" />. Ces méthodes retournent un <see cref="T:System.Configuration.Configuration" /> objet, qui à son tour fournit les méthodes et propriétés requises pour gérer les fichiers de configuration sous-jacents. Vous pouvez accéder à ces fichiers pour lire ou écrire comme suit : vous utilisez <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> ou <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> pour lire les informations de configuration. Notez que l’utilisateur ou le processus qui lit doit avoir les autorisations suivantes :-autorisation de lecture sur le fichier de configuration au niveau de la hiérarchie de configuration en cours.  -Autorisations de lecture sur tous les fichiers de configuration.  Si votre application a besoin d’un accès en lecture seule à sa propre configuration, il est recommandé d’utiliser le <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> méthodes. Ces méthodes fournissent l’accès aux valeurs de configuration mises en cache pour l’application actuelle, qui offre de meilleures performances que la <see cref="T:System.Configuration.Configuration" /> classe.  <block subset="none" type="note"><para> Si vous utilisez un mappage statique <see langword="GetSection" /> méthode qui accepte un <paramref name="path" /> paramètre, le paramètre path doit faire référence à l’application dans laquelle le code est en cours d’exécution ; sinon, le paramètre est ignoré et les informations de configuration pour l’en cours d’exécution application est retournée.  </para></block>  Vous utilisez une de le <see cref="Overload:System.Configuration.Configuration.Save" /> méthodes permettant d’écrire les informations de configuration. Notez que l’utilisateur ou le processus qui écrit doit avoir les autorisations suivantes :-autorisation en écriture sur le fichier de configuration et le répertoire au niveau de la hiérarchie de configuration en cours.  -Autorisations de lecture sur tous les fichiers de configuration.</para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.ConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les paramètres d'application du site Web.</summary>
        <value>Objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> qui contient l'objet <see cref="T:System.Configuration.AppSettingsSection" /> pour la configuration par défaut de l'application Web active.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Configuration.AppSettingsSection> objet contient le fichier de configuration `<appSettings>` section.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#8)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> valide n'a pas pu être récupéré avec les données des paramètres de l'application.</exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les chaînes de connexion du site Web.</summary>
        <value>Objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> qui comporte le contenu de l'objet <see cref="T:System.Configuration.ConnectionStringsSection" /> pour la configuration par défaut de l'application Web active.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> propriété pour accéder aux informations de configuration et énumérer les résultats. Pour accéder à une chaîne de connexion spécifique, utilisez retourné <xref:System.Configuration.ConnectionStringSettingsCollection> avec le nom de la chaîne de connexion de votre choix en tant qu’indexeur.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#7)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> valide n'a pas pu être récupéré.</exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSection">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la section de configuration spécifiée à partir du fichier de configuration par défaut de l'application Web en cours.</summary>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationManager" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Nom de la section de configuration.</param>
        <summary>Récupère la section de configuration spécifiée à partir du fichier de configuration de l'application Web en cours.</summary>
        <returns>Objet de la section de configuration spécifiée ou <see langword="null" /> si la section n'existe pas. Souvenez-vous que des restrictions de sécurité s'appliquent quant à l'utilisation de <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" /> en tant qu'opération d'exécution. Par exemple, il se peut que vous ne puissiez pas accéder à une section pour la modifier au moment de l'exécution.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> est appelée à partir d’une application Web, il obtient la section du fichier de configuration sélectionné par le système en fonction de la hiérarchie de configuration d’application Web.  
  
> [!CAUTION]
>  Si votre application utilise un protocole autre que HTTP, le <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> surcharge qui accepte un nom de section et un chemin d’accès dans sa liste de paramètres est celui à utiliser. Vous devez spécifier le chemin d’accès du fichier de configuration, car le système ne peut pas faire d’hypothèses sur le niveau de la hiérarchie de configuration. Si vous utilisez la <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> surcharge qui accepte uniquement un nom de section, le système essaiera toujours de retourner les paramètres de configuration au niveau de l’application. Notez, cependant, que si son chemin d’accès spécifié est en dehors de l’application actuelle, la surcharge qui prend un chemin d’accès retournera également les paramètres de configuration de niveau application pour l’application en cours d’exécution.  
  
 Vous pouvez appeler <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> à partir d’une application cliente. Dans ce cas, il obtient la section par défaut du fichier de configuration sélectionné par le système en fonction de la hiérarchie de configuration client. En règle générale, il s’agit du fichier Machine.config, sauf si vous avez une configuration mappée en place. Pour le mappage des fichiers de configuration, reportez-vous aux méthodes de mappage décrits ci-après.  
  
> [!NOTE]
>  Le <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> méthode est une méthode d’exécution qui opère sur la section d’un fichier de configuration au niveau de hiérarchie dans laquelle l’application s’exécute. Pour une opération non exécution, utilisez <xref:System.Configuration.Configuration.GetSection%2A> à la place. Cette méthode opère sur la section spécifiée d’un fichier de configuration que vous obtenez à l’aide d’une des méthodes surchargées d’ouverture d’un fichier de configuration <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>.  
  
   
  
## Examples  
 Les exemples de cette section montrent comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> (méthode).  
  
 L’exemple suivant montre une section qui sont accessibles à partir d’une application Web ou une application console.  
  
> [!NOTE]
>  Cet exemple montre comment utiliser le <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> méthode pour obtenir un <xref:System.Configuration.ConfigurationSection> objet à partir d’un fichier de configuration.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <block subset="none" type="overrides">
          <para>La valeur de retour doit être castée en type de configuration attendu avant des utiliser. Pour éviter toute exception de conversion, vous devez utiliser une opération de cast conditionnelle telle que la <see langword="as" /> opérateur dans la fonction en Visual Basic ou c#.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String, path As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetSection : string * string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection (sectionName, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Nom de la section de configuration.</param>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <summary>Récupère la section de configuration spécifiée à partir du fichier de configuration de l'application Web à l'emplacement spécifié.</summary>
        <returns>Objet de la section de configuration spécifiée ou <see langword="null" /> si la section n'existe pas. Souvenez-vous que des restrictions de sécurité s'appliquent quant à l'utilisation de <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" /> en tant qu'opération d'exécution. Par exemple, il se peut que vous ne puissiez pas accéder à une section pour la modifier au moment de l'exécution.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> est appelée à partir d’une application Web, il obtient la section du fichier de configuration défini par le chemin d’accès spécifié dans la hiérarchie de configuration.  
  
> [!CAUTION]
>  Si votre application utilise un protocole autre que HTTP, le <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> surcharge qui accepte un nom de section et un chemin d’accès dans sa liste de paramètres est celui à utiliser. Vous devez spécifier le chemin d’accès du fichier de configuration, car le système ne peut pas faire d’hypothèses sur le niveau de la hiérarchie de configuration. Si vous utilisez la <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> surcharge qui accepte uniquement un nom de section, le système essaiera toujours de retourner les paramètres de configuration au niveau de l’application. Notez, cependant, que si son chemin d’accès spécifié est en dehors de l’application actuelle, la surcharge qui prend un chemin d’accès retournera également les paramètres de configuration de niveau application pour l’application en cours d’exécution.  
  
 Cette méthode ne peut pas être appelée à partir de dans une application cliente.  
  
 Si vous souhaitez récupérer la section de configuration à partir du fichier de configuration situé dans le niveau de répertoire d’application Web en cours, utilisez le <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> méthode est une méthode d’exécution opérant dans la section d’un fichier de configuration au niveau de hiérarchie dans laquelle l’application s’exécute. Pour une opération non exécution, utilisez <xref:System.Configuration.Configuration.GetSection%2A> à la place. Cette méthode opère sur la section spécifiée d’un fichier de configuration que vous obtenez à l’aide d’un de le `open` méthodes de fichier de configuration.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> (méthode).  
  
> [!NOTE]
>  Cet exemple montre comment utiliser le <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> méthode pour obtenir un <xref:System.Configuration.ConfigurationSection> objet à partir d’un fichier de configuration spécifié.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#5)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée depuis l'extérieur d'une application Web.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <block subset="none" type="overrides">
          <para>La valeur de retour doit être castée en type de configuration attendu avant des utiliser. Pour éviter toute exception de conversion, vous devez utiliser une opération de cast conditionnelle telle que la <see langword="as" /> opérateur dans la fonction en Visual Basic ou c#.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationSection">
      <MemberSignature Language="C#" Value="public static object GetWebApplicationSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWebApplicationSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWebApplicationSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWebApplicationSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetWebApplicationSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Nom de la section de configuration.</param>
        <summary>Récupère la section de configuration spécifiée à partir du fichier de configuration de l'application Web en cours.</summary>
        <returns>Objet de la section de configuration spécifiée ou <see langword="null" /> si la section n'existe pas, ou objet interne si la section n'est pas accessible au moment de l'exécution.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> est appelée à partir d’une application Web, il obtient la section du fichier de configuration sélectionné par le système en fonction de la hiérarchie de configuration d’application Web.  
  
 Vous pouvez appeler <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> à partir d’une application cliente. Dans ce cas, il obtient la section par défaut du fichier de configuration sélectionné par le système en fonction de la hiérarchie de configuration client. En règle générale, il s’agit du fichier Machine.config, sauf si vous avez une configuration mappée en place. Pour le mappage des fichiers de configuration, reportez-vous aux méthodes de mappage décrits ci-après.  
  
> [!NOTE]
>  Le <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> méthode est une opération d’exécution qui agit sur la section du fichier de configuration d’application situé au niveau actuel. Le <xref:System.Configuration.Configuration.GetSection%2A> méthode, n’est pas une opération d’exécution mais agit sur la section spécifiée obtenue via une des méthodes permettant d’ouvrir les fichiers de configuration.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> (méthode).  
  
> [!NOTE]
>  Cet exemple montre comment utiliser le <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> méthode pour obtenir un <xref:System.Configuration.ConfigurationSection> objet à partir du fichier de configuration par défaut.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#6)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <block subset="none" type="overrides">
          <para>La valeur de retour doit être castée en type de configuration attendu avant des utiliser. Pour éviter toute exception de conversion, vous devez utiliser une opération de cast conditionnelle telle que la <see langword="as" /> opérateur dans la fonction en Visual Basic ou c#.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ouvre le fichier de configuration de l'ordinateur en tant qu'objet <see cref="T:System.Configuration.Configuration" /> afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre le fichier de configuration de l'ordinateur sur l'ordinateur actuel en tant qu'objet <see cref="T:System.Configuration.Configuration" /> afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> méthode ouvre le fichier de configuration de l’ordinateur sur l’ordinateur qui exécute l’application. Ce fichier se trouve dans le répertoire de génération standard % windir%\Microsoft.NET\Framework\version\config.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#9)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration locationSubPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Chemin d'accès de l'application auquel s'applique la configuration de l'ordinateur.</param>
        <summary>Ouvre le fichier de configuration de l'ordinateur sur l'ordinateur actuel en tant qu'objet <see cref="T:System.Configuration.Configuration" /> afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ouvre le fichier de configuration de l’ordinateur qui est applicable au répertoire spécifié par le `locationSubPath` paramètre.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#10)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Chemin d'accès de l'application auquel s'applique la configuration.</param>
        <param name="server">Nom qualifié complet du serveur pour lequel la configuration doit être retournée.</param>
        <summary>Ouvre le fichier de configuration de l'ordinateur spécifié sur le serveur déterminé en tant qu'objet <see cref="T:System.Configuration.Configuration" /> afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ouvre le fichier de configuration de l’ordinateur qui se trouve dans le répertoire spécifié par le `locationSubPath` paramètre et sur l’ordinateur spécifié par le `server` paramètre.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#11)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Chemin d'accès de l'application auquel s'applique la configuration.</param>
        <param name="server">Nom qualifié complet du serveur pour lequel la configuration doit être retournée.</param>
        <param name="userToken">Jeton de compte à utiliser.</param>
        <summary>Ouvre le fichier de configuration de l'ordinateur spécifié sur le serveur déterminé en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du contexte de sécurité spécifié afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour accéder à un fichier de configuration à l’aide de l’emprunt d’identité.  
  
> [!NOTE]
>  Le jeton de compte est généralement récupéré à partir d’une instance de la <xref:System.Security.Principal.WindowsIdentity> classe ou via un appel au code non managé, tel qu’un appel à l’API Win32 `LogonUser`. Pour plus d’informations sur les appels au code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#12)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Les valeurs valides n'ont pas été fournies pour les paramètres <paramref name="server" /> ou <paramref name="userToken" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Chemin d'accès de l'application auquel s'applique la configuration.</param>
        <param name="server">Nom qualifié complet du serveur pour lequel la configuration doit être retournée.</param>
        <param name="userName">Nom d'utilisateur complet (Domaine\Utilisateur) à utiliser lors de l'ouverture du fichier.</param>
        <param name="password">Mot de passe pour le nom d'utilisateur.</param>
        <summary>Ouvre le fichier de configuration de l'ordinateur spécifié sur le serveur déterminé en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du contexte de sécurité spécifié afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour accéder à un fichier de configuration à l’aide de l’emprunt d’identité.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#13)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Les paramètres <paramref name="server" /> ou <paramref name="userName" /> et <paramref name="password" /> n'étaient pas valides.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ouvre le fichier de configuration de l'ordinateur en tant qu'objet <see cref="T:System.Configuration.Configuration" /> afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">Objet <see cref="T:System.Configuration.ConfigurationFileMap" /> à utiliser à la place du fichier de configuration de l'ordinateur par défaut.</param>
        <summary>Ouvre le fichier de configuration de l'ordinateur en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du mappage de fichiers spécifié afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration (fileMap, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Objet <see cref="T:System.Configuration.ConfigurationFileMap" /> à utiliser à la place du fichier de configuration de l'ordinateur par défaut.</param>
        <param name="locationSubPath">Ressource spécifique à laquelle la configuration s'applique.</param>
        <summary>Ouvre le fichier de configuration de l'ordinateur en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide de l'emplacement et du mappage de fichiers spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du mappage de fichiers spécifié afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez le mécanisme de mappage lorsque vous avez besoin mapper votre hiérarchie de répertoires virtuels à un répertoire physique.  
  
   
  
## Examples  
 L’exemple suivant montre comment mapper une hiérarchie de répertoires virtuels à un physique. L’exemple suivant est utilisé dans les membres surchargés.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Objet <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> à utiliser à la place du fichier de configuration de l'application Web par défaut.</param>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <summary>Ouvre le fichier de configuration de l'application Web spécifiée en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du mappage de fichiers et du chemin d'accès virtuel spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer de privilèges de lecture sur tous les fichiers de configuration à partir de laquelle il hérite des paramètres. Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des privilèges d’écriture pour le fichier de configuration et le répertoire dans lequel il existe.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#21)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#21)]  
  
 L’exemple précédent utilise la méthode personnalisée ci-après pour générer un <xref:System.Configuration.ConfigurationFileMap> objet.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 Reportez-vous à <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> pour obtenir un exemple qui montre comment mapper une hiérarchie de répertoires virtuels à un physique.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Objet <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> à utiliser à la place du mappage du fichier de configuration de l'application Web par défaut.</param>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <summary>Ouvre le fichier de configuration de l'application Web spécifiée en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du mappage de fichiers, du chemin d'accès virtuel et du nom du site spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer de privilèges de lecture sur tous les fichiers de configuration à partir de laquelle il hérite des paramètres. Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des privilèges d’écriture pour le fichier de configuration et le répertoire dans lequel il existe.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#22)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#22)]  
  
 Reportez-vous à <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> pour obtenir un exemple qui montre comment mapper une hiérarchie de répertoires virtuels à un physique.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Objet <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> à utiliser à la place du mappage du fichier de configuration de l'application Web par défaut.</param>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <param name="locationSubPath">Ressource spécifique à laquelle la configuration s'applique.</param>
        <summary>Ouvre le fichier de configuration de l'application Web spécifiée en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du mappage de fichiers, du chemin d'accès virtuel, du nom du site et de l'emplacement spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer de privilèges de lecture sur tous les fichiers de configuration à partir de laquelle il hérite des paramètres. Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des privilèges d’écriture pour le fichier de configuration et le répertoire dans lequel il existe.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#23)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#23)]  
  
 Reportez-vous à <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> pour obtenir un exemple qui montre comment mapper une hiérarchie de répertoires virtuels à un physique.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès virtuel du fichier de configuration. Si <see langword="null" />, le fichier racine Web.config est ouvert.</param>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du chemin d'accès virtuel spécifié, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer de privilèges de lecture sur tous les fichiers de configuration à partir de laquelle il hérite des paramètres. Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des privilèges d’écriture pour le fichier de configuration et le répertoire dans lequel il existe.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#14)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du chemin d'accès virtuel et du nom du site spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer de privilèges de lecture sur tous les fichiers de configuration à partir de laquelle il hérite des paramètres. Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des privilèges d’écriture pour le fichier de configuration et le répertoire dans lequel il existe.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#15)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <param name="locationSubPath">Ressource spécifique à laquelle la configuration s'applique.</param>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du chemin d'accès virtuel, du nom du site et de l'emplacement spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer de privilèges de lecture sur tous les fichiers de configuration à partir de laquelle il hérite des paramètres. Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des privilèges d’écriture pour le fichier de configuration et le répertoire dans lequel il existe.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#16)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <param name="locationSubPath">Ressource spécifique à laquelle la configuration s'applique.</param>
        <param name="server">Nom de réseau du serveur sur lequel réside l'application Web.</param>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du chemin d'accès virtuel, du nom du site, de l'emplacement et du serveur spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet pour une ressource distante, votre code doit avoir des privilèges d’administrateur sur l’ordinateur distant.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#17)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre du serveur n'était pas valide.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <param name="locationSubPath">Ressource spécifique à laquelle la configuration s'applique.</param>
        <param name="server">Nom de réseau du serveur sur lequel réside l'application Web.</param>
        <param name="userToken">Jeton de compte à utiliser.</param>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du chemin d'accès virtuel, du nom du site, de l'emplacement, du serveur et du contexte de sécurité spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour accéder à un fichier de configuration à l’aide de l’emprunt d’identité.  
  
> [!NOTE]
>  Le jeton de compte est généralement récupéré à partir d’une instance de la <xref:System.Security.Principal.WindowsIdentity> classe ou via un appel au code non managé, tel qu’un appel à l’API Win32 `LogonUser`. Pour plus d’informations sur les appels au code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet pour une ressource distante, votre code doit avoir des privilèges d’administrateur sur l’ordinateur distant.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> méthode pour accéder aux informations de configuration.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#19)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Les paramètres <paramref name="server" /> ou <paramref name="userToken" /> n'étaient pas valides.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un fichier de configuration valide n'a pas pu être chargé.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Chemin d'accès virtuel du fichier de configuration.</param>
        <param name="site">Nom du site Web de l'application tel qu'affiché dans la configuration des services IIS (Internet Information Services).</param>
        <param name="locationSubPath">Ressource spécifique à laquelle la configuration s'applique.</param>
        <param name="server">Nom de réseau du serveur sur lequel réside l'application Web.</param>
        <param name="userName">Nom d'utilisateur complet (Domaine\Utilisateur) à utiliser lors de l'ouverture du fichier.</param>
        <param name="password">Mot de passe pour le nom d'utilisateur.</param>
        <summary>Ouvre le fichier de configuration de l'application Web en tant qu'objet <see cref="T:System.Configuration.Configuration" />, à l'aide du chemin d'accès virtuel, du nom du site, de l'emplacement, du serveur et du contexte de sécurité spécifiés, afin d'autoriser les opérations de lecture ou d'écriture.</summary>
        <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour accéder à un fichier de configuration à l’aide de l’emprunt d’identité.  
  
 Pour obtenir le <xref:System.Configuration.Configuration> de l’objet pour une ressource distante, votre code doit avoir des privilèges d’administrateur sur l’ordinateur distant.  
  
 Vous devrez peut-être exécuter le [ASP.NET IIS Registration Tool (Aspnet_regiis.exe)](http://msdn.microsoft.com/library/6491c41e-e2b0-481f-9863-db3614d5f96b) avec la `-config+` option pour activer l’accès aux fichiers de configuration sur l’ordinateur distant.  
  
   
  
## Examples  
 L’exemple suivant montre comment accéder aux informations de configuration avec la <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> (méthode).  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#18)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Les paramètres <paramref name="server" /> ou <paramref name="userName" /> et <paramref name="password" /> n'étaient pas valides.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible de charger un fichier de configuration valide.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
  </Members>
</Type>