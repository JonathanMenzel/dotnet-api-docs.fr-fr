<Type Name="PublishLicense" FullName="System.Security.RightsManagement.PublishLicense">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4b691a1e38d75b21fef0fb74bea439cbe47723d" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55408052" /></Metadata><TypeSignature Language="C#" Value="public class PublishLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PublishLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.PublishLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class PublishLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishLicense" />
  <TypeSignature Language="F#" Value="type PublishLicense = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une licence de publication signée gérée par des droits.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense> définit les données de sécurité sur les droits, les utilisateurs et les autres informations liées à la sécurité.  La licence définit comment un utilisateur spécifique sur un ordinateur spécifique peut utiliser contenu géré de droits d’accès spécifiés.  
  
 Le processus de publication commence par l’auteur du document, qui définit les informations de droits dans un <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Ensuite, l’auteur crée un signé <xref:System.Security.RightsManagement.PublishLicense> en appelant le <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> méthode de la <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  La forme sérialisée de l’élément signé <xref:System.Security.RightsManagement.PublishLicense> peut ensuite être fournie aux utilisateurs finals qui peut l’utiliser pour acquérir un <xref:System.Security.RightsManagement.UseLicense> en appelant le <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> méthode de la <xref:System.Security.RightsManagement.PublishLicense>.  Retourné <xref:System.Security.RightsManagement.UseLicense> permet ensuite à l’application cliente à exercer les droits qui ont été accordées à l’utilisateur.  
  
 Comme avec d’autres <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.PublishLicense> est uniquement utilisable dans les applications de confiance totale.  
  
   
  
## Examples  
 L’exemple suivant montre comment initialiser un <xref:System.Security.RightsManagement.PublishLicense> à l’aide de la <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> (méthode).  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishLicense (string signedPublishLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string signedPublishLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signedPublishLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishLicense(System::String ^ signedPublishLicense);" />
      <MemberSignature Language="F#" Value="new System.Security.RightsManagement.PublishLicense : string -&gt; System.Security.RightsManagement.PublishLicense" Usage="new System.Security.RightsManagement.PublishLicense signedPublishLicense" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signedPublishLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedPublishLicense">Licence de publication signée et sérialisée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> à partir d'une <see cref="T:System.Security.RightsManagement.PublishLicense" />sérialisée et signée spécifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="signedPublishLicense" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Le chemin d'accès n'est pas valide.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicense(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicense(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicense : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicense secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
        <summary>Tente d'acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> spécifié.</summary>
        <returns><see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans le <paramref name="secureEnvironment" /> spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="secureEnvironment" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'authentification a échoué.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicenseNoUI">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicenseNoUI(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicenseNoUI : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicenseNoUI secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
        <summary>Tente d'acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> spécifié.</summary>
        <returns><see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans le <paramref name="secureEnvironment" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> méthode supprime la boîte de dialogue de l’authentification de réseau Windows. Si la demande de licence est refusée, car l’utilisateur n’est pas autorisé, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> empêche l’affichage de la boîte de dialogue d’authentification réseau. Utilisez acquisition en mode silencieux lors d’une tentative pour obtenir des licences dans une tâche en arrière-plan ou dans une interface non-utilisateur qui peut afficher des boîtes de dialogue à confusion.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="secureEnvironment" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'authentification a échoué.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentId : Guid" Usage="System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur de contenu créé par éditeur.</summary>
        <value>L'identificateur de contenu créé par éditeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Créent des serveurs de publication un <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> pour identifier le contenu protégé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptUnsignedPublishLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense(class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UnsignedPublishLicense ^ DecryptUnsignedPublishLicense(System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="member this.DecryptUnsignedPublishLicense : System.Security.RightsManagement.CryptoProvider -&gt; System.Security.RightsManagement.UnsignedPublishLicense" Usage="publishLicense.DecryptUnsignedPublishLicense cryptoProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UnsignedPublishLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="cryptoProvider">Service de gestion des droits à utiliser pour déchiffrer la licence.</param>
        <summary>Retourne une version <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> déchiffrée de cette <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée.</summary>
        <returns>Une version de cette licence déchiffrée et non signée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> méthode autorise le propriétaire de la licence et les utilisateurs qui ont été accordées <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> pour extraire les informations d’origine qui a été chiffré lorsque le <xref:System.Security.RightsManagement.PublishLicense> a été créé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cryptoProvider" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoName">
      <MemberSignature Language="C#" Value="public string ReferralInfoName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReferralInfoName" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReferralInfoName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoName : string" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de contact pour l'auteur ou l'éditeur du contenu.</summary>
        <value>Nom de contact pour l'auteur ou l'éditeur du contenu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne retournée par la <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> propriété n’est pas chiffrée et sont accessibles même lorsque l’utilisateur ne dispose pas encore un <xref:System.Security.RightsManagement.UseLicense>.  La chaîne retournée permet aux utilisateurs de contacter le serveur de publication pour demander un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoUri">
      <MemberSignature Language="C#" Value="public Uri ReferralInfoUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ReferralInfoUri" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ReferralInfoUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoUri : Uri" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de contact  pour l'auteur ou l'éditeur du contenu.</summary>
        <value>L'[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de contact pour l'auteur ou l'éditeur du contenu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne retournée par la <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> propriété n’est pas chiffrée et sont accessibles même lorsque l’utilisateur ne dispose pas encore un <xref:System.Security.RightsManagement.UseLicense>.  La chaîne retournée permet aux utilisateurs de contacter le serveur de publication pour demander un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="publishLicense.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la chaîne [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] sérialisée qui a été utilisée pour créer cette licence.</summary>
        <returns>Chaîne [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] sérialisée qui a été utilisée pour créer cette licence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLicenseAcquisitionUrl">
      <MemberSignature Language="C#" Value="public Uri UseLicenseAcquisitionUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UseLicenseAcquisitionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseLicenseAcquisitionUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UseLicenseAcquisitionUrl { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UseLicenseAcquisitionUrl : Uri" Usage="System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] à utiliser pour acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
        <value>L'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] à utiliser pour acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> propriété est utilisée par le <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> méthode lorsqu’un utilisateur acquiert un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
  </Members>
</Type>