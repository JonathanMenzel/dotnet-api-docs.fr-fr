<Type Name="UseLicense" FullName="System.Security.RightsManagement.UseLicense">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="803db9a829116ebfa9f031814373e17787b4eb6d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498643" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UseLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UseLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.UseLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class UseLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class UseLicense" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une licence qui active l’accès au contenu protégé géré par des droits.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comme avec d’autres <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UseLicense> n’est utilisable dans les applications de confiance totale.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette classe pour initialiser un <xref:System.Security.RightsManagement.PublishLicense>.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseLicense (string useLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string useLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseLicense(System::String ^ useLicense);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useLicense">Une licence d'utilisation dans un formulaire [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] sérialisé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="useLicense" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">
          <paramref name="useLicense" /> n'est pas valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ApplicationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ApplicationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.UseLicense.ApplicationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationData As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ ApplicationData { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dictionnaire de données d'application qui contient des paires clé/valeur transmises de l'application d'édition à l'application consommateur.</summary>
        <value>Le dictionnaire de données d'application qui contient des paires clé/valeur transmises de l'application d'édition à l'application consommateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paire clé/valeur de données qui est traité par un serveur Rights Management Services (RMS) est la paire de chaîne « Allow_Server_Editing » / « True ».  Lorsque l’émission de licence « Allow_Server_Editing » / « True » est définie, le service, ou un service approuvé, peut réutiliser la clé de contenu.  
  
 La paire clé/valeur « NOLICCACHE » / « 1 » contrôle la stratégie d’utilisation des applications d’incorporation la licence d’utilisation.  Lorsque « NOLICCACHE » / « 1 » est définie, les applications sont censées ne pas incorporer la licence d’utilisation dans le document managé droits.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.CryptoProvider Bind (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.CryptoProvider Bind(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::CryptoProvider ^ Bind(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.CryptoProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">L’environnement auquel lier la licence.</param>
        <summary>Lie la licence à un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> donné.</summary>
        <returns>Une instance de <see cref="T:System.Security.RightsManagement.CryptoProvider" /> si la liaison de la licence a réussi ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois la licence est liée à un environnement sécurisé, l’application peut examiner et exercer les droits accordés par cette licence.  
  
 Retourné <xref:System.Security.RightsManagement.CryptoProvider> instance fournit l’accès au contenu protégé rights managé et le déchiffrement.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode pour initialiser un <xref:System.Security.RightsManagement.CryptoProvider>.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.UseLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur de contenu créé par l'éditeur.</summary>
        <value>L'identificateur de contenu créé par l'éditeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.UseLicense.ContentId%2A> est créé par le serveur de publication et peut être utilisé pour associer du contenu à un <xref:System.Security.RightsManagement.UseLicense> et <xref:System.Security.RightsManagement.PublishLicense>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object x);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (x As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">La licence à comparer.</param>
        <summary>Indique si cette licence est équivalente à une autre licence donnée.</summary>
        <returns>
          <see langword="true" /> si les deux licences sont équivalentes ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.UseLicense.Equals%2A> teste l’équivalence sérialisées [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] chaînes spécifiées à le <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructeurs.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.UseLicense.ToString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage associé à cette licence.</summary>
        <returns>Code de hachage de cette licence.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le code de hachage retournée est basé sur les données sérialisées [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] chaîne passée à la <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.ContentUser Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.RightsManagement.ContentUser Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.UseLicense.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::ContentUser ^ Owner { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le propriétaire de la licence.</summary>
        <value>Le propriétaire de la licence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Propriétaire de la licence est obtenu à partir de la série [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] chaîne passée à la <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la chaîne [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] sérialisée utilisée pour créer cette licence.</summary>
        <returns>La chaîne [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] sérialisée est transmise à l'origine au constructeur <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>