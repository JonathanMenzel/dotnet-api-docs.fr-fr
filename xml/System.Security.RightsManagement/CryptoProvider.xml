<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4433c729502f6370101f8372637a4b4892049b25" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52741349" /></Metadata><TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type CryptoProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f1d21-101">Fournit des services de gestion des droits numériques pour chiffrer et déchiffrer du contenu protégé.</span><span class="sxs-lookup"><span data-stu-id="f1d21-101">Provides digital rights management services for encrypting and decrypting protected content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-102"><xref:System.Security.RightsManagement.CryptoProvider> est créé comme résultat de la <xref:System.Security.RightsManagement.UseLicense.Bind%2A> méthode lors de la liaison d’un droits gérés <xref:System.Security.RightsManagement.UseLicense> à un <xref:System.Security.RightsManagement.SecureEnvironment>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="f1d21-103">Comme avec d’autres <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> est uniquement utilisable dans les applications de confiance totale.</span><span class="sxs-lookup"><span data-stu-id="f1d21-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d21-104">L’exemple suivant montre comment utiliser le <xref:System.Security.RightsManagement.CryptoProvider> classe pour créer un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1d21-105">Obtient la taille des blocs de chiffrement, en octets.</span><span class="sxs-lookup"><span data-stu-id="f1d21-105">Gets the cipher block size, in bytes.</span></span></summary>
        <value><span data-ttu-id="f1d21-106">La taille des blocs de chiffrement, en octets.</span><span class="sxs-lookup"><span data-stu-id="f1d21-106">The cipher block size, in bytes.</span></span>  <span data-ttu-id="f1d21-107">La taille de bloc pour Advanced Encryption Standard (AES) par défaut est 8.</span><span class="sxs-lookup"><span data-stu-id="f1d21-107">The default block size for Advanced Encryption Standard (AES) is 8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-108">Le `clearText` et `cipherText` mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> et <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> doit être n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> octets, où « n » est un entier supérieur ou égal à 1.</span><span class="sxs-lookup"><span data-stu-id="f1d21-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="f1d21-109">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> est `false`, mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> doit avoir la même longueur que les mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="f1d21-110">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> est `true`, mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> peut avoir une longueur différente à partir de mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (toutes les tailles de mémoire tampon doivent être toujours toujours un multiple de <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> octets de longueur).</span><span class="sxs-lookup"><span data-stu-id="f1d21-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="f1d21-111">Un <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> de 1 indique que le chiffrement est un chiffrement de flux ; une <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> égale ou supérieure à 2 indique un chiffrement par blocs.</span><span class="sxs-lookup"><span data-stu-id="f1d21-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d21-112">L’exemple suivant montre comment utiliser le <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> propriété pour convertir les données en texte clair en texte chiffré.</span><span class="sxs-lookup"><span data-stu-id="f1d21-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundGrants : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;" Usage="System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1d21-113">Obtient une collection qui répertorie les droits qui ont été vérifiés et accordés à l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f1d21-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span></span></summary>
        <value><span data-ttu-id="f1d21-114">Une collection énumérant les droits qui ont été vérifiés et accordés à l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f1d21-114">A collection enumerating the rights that passed verification and that are granted to the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1d21-115">L’exemple suivant montre comment utiliser le <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> propriété pour obtenir une liste de droits accordés via un <xref:System.Security.RightsManagement.UseLicense>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1d21-116">Obtient une valeur qui indique si l'utilisateur possède les droits de déchiffrement.</span><span class="sxs-lookup"><span data-stu-id="f1d21-116">Gets a value that indicates whether the user has rights to decrypt.</span></span></summary>
        <value><span data-ttu-id="f1d21-117"><see langword="true" /> Si le <see cref="T:System.Security.RightsManagement.UseLicense" /> accorde les droits d’utilisateur à déchiffrer ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-117"><see langword="true" /> if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Retourne `true` si le <xref:System.Security.RightsManagement.UseLicense> liés à ce <xref:System.Security.RightsManagement.CryptoProvider> accorde des droits d’accès en lecture tels que la vue, modifier, imprimer ou propriétaire de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f1d21-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns `true` if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d21-119">L’exemple suivant montre comment utiliser le <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> propriété afin de déterminer si le déchiffrement est autorisé.</span><span class="sxs-lookup"><span data-stu-id="f1d21-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1d21-120">Obtient une valeur qui indique si l'utilisateur possède les droits de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="f1d21-120">Gets a value that indicates whether the user has rights to encrypt.</span></span></summary>
        <value><span data-ttu-id="f1d21-121"><see langword="true" /> Si le <see cref="T:System.Security.RightsManagement.UseLicense" /> accorde les droits d’utilisateur pour chiffrer ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-121"><see langword="true" /> if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Retourne `true` si le <xref:System.Security.RightsManagement.UseLicense> liés à ce <xref:System.Security.RightsManagement.CryptoProvider> accorde des droits d’accès en écriture telles que la modification ou propriétaire de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f1d21-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns `true` if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMergeBlocks : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1d21-123">Obtient une valeur qui indique si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> et <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> peuvent accepter des mémoires tampon ayant des tailles de bloc différentes.</span><span class="sxs-lookup"><span data-stu-id="f1d21-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span></span></summary>
        <value><span data-ttu-id="f1d21-124"><see langword="true" /> Si la mémoire tampon passée à <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> peut être une longueur différente de la mémoire tampon passée à <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; sinon, <see langword="false" /> si les mémoires tampon transmises à <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> et <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> doit être de même longueur.</span><span class="sxs-lookup"><span data-stu-id="f1d21-124"><see langword="true" /> if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, <see langword="false" /> if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span></span>  <span data-ttu-id="f1d21-125">AES est la valeur par défaut <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-125">For AES the default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-126">Le `clearText` et `cipherText` mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> et <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> doit être n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> octets, où « n » est un entier supérieur ou égal à 1.</span><span class="sxs-lookup"><span data-stu-id="f1d21-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="f1d21-127">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> est `false`, mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> doit avoir la même longueur que les mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="f1d21-128">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> est `true`, mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> peut avoir une longueur différente à partir de mémoires tampon transmises à <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (toutes les tailles de mémoire tampon doivent être toujours toujours un multiple de <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> octets de longueur).</span><span class="sxs-lookup"><span data-stu-id="f1d21-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Decrypt cryptoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText"><span data-ttu-id="f1d21-129">Le texte chiffré à déchiffrer.</span><span class="sxs-lookup"><span data-stu-id="f1d21-129">The cipher text to decrypt.</span></span></param>
        <summary><span data-ttu-id="f1d21-130">Déchiffre le texte chiffré en texte clair.</span><span class="sxs-lookup"><span data-stu-id="f1d21-130">Decrypts cipher text to clear text.</span></span></summary>
        <returns><span data-ttu-id="f1d21-131">Le texte clair déchiffré de <paramref name="cryptoText" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-131">The decrypted clear text of <paramref name="cryptoText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1d21-132">L’exemple suivant montre comment utiliser le <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> méthode pour convertir des données chiffrées non chiffrées.</span><span class="sxs-lookup"><span data-stu-id="f1d21-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f1d21-133"><paramref name="cipherText" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f1d21-133"><paramref name="cipherText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="f1d21-134">Droit de déchiffrement non accordé.</span><span class="sxs-lookup"><span data-stu-id="f1d21-134">Decryption right not granted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1d21-135">Libère les ressources utilisées par le <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1d21-136">Libère toutes les ressources utilisées par <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> effectue <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`).</span><span class="sxs-lookup"><span data-stu-id="f1d21-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`).</span></span>  
  
 <span data-ttu-id="f1d21-138">Appelez la méthode <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Security.RightsManagement.CryptoProvider>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="f1d21-139">La méthode <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> rend le <xref:System.Security.RightsManagement.CryptoProvider> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="f1d21-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="f1d21-140">Après avoir appelé <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Security.RightsManagement.CryptoProvider> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.RightsManagement.CryptoProvider> occupée.</span><span class="sxs-lookup"><span data-stu-id="f1d21-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="f1d21-141">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f1d21-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d21-142">Appelez toujours <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Security.RightsManagement.CryptoProvider>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="f1d21-143">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.RightsManagement.CryptoProvider> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="f1d21-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f1d21-144"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="f1d21-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f1d21-145">Libère les ressources non managées utilisées par <see cref="T:System.Security.RightsManagement.CryptoProvider" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="f1d21-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-146">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f1d21-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f1d21-147">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="f1d21-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f1d21-148"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="f1d21-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f1d21-149">Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Security.RightsManagement.CryptoProvider> références.</span><span class="sxs-lookup"><span data-stu-id="f1d21-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="f1d21-150">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="f1d21-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f1d21-151">
            <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="f1d21-151">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="f1d21-152">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="f1d21-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="f1d21-153">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f1d21-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="f1d21-154">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="f1d21-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Encrypt clearText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText"><span data-ttu-id="f1d21-155">Contenu de texte clair à chiffrer.</span><span class="sxs-lookup"><span data-stu-id="f1d21-155">The clear text content to encrypt.</span></span></param>
        <summary><span data-ttu-id="f1d21-156">Chiffre un texte clair en texte de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="f1d21-156">Encrypts clear text to cipher text.</span></span></summary>
        <returns><span data-ttu-id="f1d21-157">Texte de chiffrement chiffré du <paramref name="clearText" /> donné.</span><span class="sxs-lookup"><span data-stu-id="f1d21-157">Encrypted cipher text of the given <paramref name="clearText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-158">La longueur d’octet de la `clearText` mémoire tampon doit être un multiple du chiffrement <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f1d21-158">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="f1d21-159">Le système de gestion des droits numériques utilise un chiffrement par blocs AES.</span><span class="sxs-lookup"><span data-stu-id="f1d21-159">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="f1d21-160">Avec AES, les blocs sont chiffrés indépendamment telles que les deux blocs de texte clair identique produisent des résultats de texte de chiffrement identiques.</span><span class="sxs-lookup"><span data-stu-id="f1d21-160">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="f1d21-161">Pour réduire les menaces potentielles de déchiffrement du chiffrement de bloc indépendant, les applications doivent employer des méthodes permettant de modifier le contenu, telles que la compression, afin d’éviter le chiffrement de blocs de texte clair identiques.</span><span class="sxs-lookup"><span data-stu-id="f1d21-161">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d21-162">L’exemple suivant montre comment utiliser le <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> méthode pour convertir les données de texte en clair en texte chiffré.</span><span class="sxs-lookup"><span data-stu-id="f1d21-162">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f1d21-163"><paramref name="clearText" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f1d21-163"><paramref name="clearText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="f1d21-164">Le chiffrement n’est pas autorisé.</span><span class="sxs-lookup"><span data-stu-id="f1d21-164">Encryption is not permitted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1d21-165">Libère des ressources et effectue un nettoyage interne avant que l’instance ne soit récupérée par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="f1d21-165">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d21-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> effectue <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`).</span><span class="sxs-lookup"><span data-stu-id="f1d21-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`).</span></span>  
  
 <span data-ttu-id="f1d21-167">Cette méthode remplace <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1d21-167">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="f1d21-168">Code d’application ne doit pas appeler cette méthode ; d’un objet `Finalize` méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f1d21-168">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="f1d21-169">Pour plus d’informations, consultez [destructeurs et méthodes Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md), et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="f1d21-169">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>