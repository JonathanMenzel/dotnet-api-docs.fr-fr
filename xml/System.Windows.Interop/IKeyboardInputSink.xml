<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e01f04a0316b49465d2bea8652d90257b7fe1b5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39770602" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="68048-101">Fournit un récepteur de clavier pour les composants qui gèrent les opérations de tabulation, les accélérateurs et les mnémoniques au-delà des limites d'interopérabilité et entre les HWND.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68048-101">Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</span>
      </span>
      <span data-ttu-id="68048-102">Cette interface implémente la gestion des messages de clavier dans les scénarios d'interopérabilité WPF-Win32.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68048-102">This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-103">Un récepteur de clavier gère les entrées provenant de sous-ensembles spécifiques du modèle d’entrée clavier globale pour [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] et [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]et Active certains clavier d’entrée à traiter et à diriger vers des HWND différente de celle ayant le focus clavier actuel.</span><span class="sxs-lookup"><span data-stu-id="68048-103">A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</span></span>  
  
 <span data-ttu-id="68048-104">Si votre composant contient d’autres composants et maintient un ordre de tabulation, votre composant doit également implémenter <xref:System.Windows.Interop.IKeyboardInputSite> et effectuer le suivi de composant qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="68048-104">If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.</span></span>  
  
 <span data-ttu-id="68048-105">Pour une présentation de l’architecture d’entrée spécifiquement implémentée pour [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, consultez [Windows Forms et l’Architecture d’entrée de l’interopérabilité entre WPF](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).</span><span class="sxs-lookup"><span data-stu-id="68048-105">For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).</span></span>  
  
 <span data-ttu-id="68048-106"><xref:System.Windows.Interop.HwndSource> et <xref:System.Windows.Interop.HwndHost> chaque implémentent la <xref:System.Windows.Interop.IKeyboardInputSink> interface, via des définitions d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="68048-106"><xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions.</span></span> <span data-ttu-id="68048-107">Les définitions explicites fournissent des comportements par défaut et est également accessible si nécessaire via un <xref:System.Windows.Interop.IKeyboardInputSink> effectuer un cast de l’interface de <xref:System.Windows.Interop.HwndSource> ou <xref:System.Windows.Interop.HwndHost>.</span><span class="sxs-lookup"><span data-stu-id="68048-107">The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68048-108">Obtient une valeur qui indique si le récepteur ou un de ses composants contenus a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-108">Gets a value that indicates whether the sink or one of its contained components has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68048-109">
            <see langword="true" /> si le récepteur ou un de ses composants contenus a le focus ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-109">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-110">Cette méthode est nécessaire pour le transfert <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> appels aux composants enfants avec le focus depuis le <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implémentation.</span><span class="sxs-lookup"><span data-stu-id="68048-110">This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation.</span></span> <span data-ttu-id="68048-111">Appelez <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> récursive jusqu'à ce que vous atteigniez le niveau de focus spécifique et transférez <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> il.</span><span class="sxs-lookup"><span data-stu-id="68048-111">Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68048-112">Obtient ou définit une référence à l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du conteneur du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-112">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68048-113">Référence à l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-113">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-114">Cette propriété doit initialement définie `null`.</span><span class="sxs-lookup"><span data-stu-id="68048-114">This property should initially be set to `null`.</span></span> <span data-ttu-id="68048-115">Tout conteneur qui ajoute le récepteur à sa liste de composants définira <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> avant toutes les autres méthodes sont appelées, et elle peut être définie plusieurs fois après cela.</span><span class="sxs-lookup"><span data-stu-id="68048-115">Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that.</span></span> <span data-ttu-id="68048-116">Vous devez définir la propriété sur `null` avant la suppression.</span><span class="sxs-lookup"><span data-stu-id="68048-116">You should set the property to `null` again before disposal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="68048-117">Message pour le mnémonique et les données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-117">The message for the mnemonic and associated data.</span>
          </span>
          <span data-ttu-id="68048-118">Ne modifiez pas cette structure de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-118">Do not modify this message structure.</span>
          </span>
          <span data-ttu-id="68048-119">Elle est passée par référence pour des raisons de performances uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-119">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="68048-120">Touches de modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-120">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68048-121">Appelé lorsque l'un des mnémoniques (touches d'accès rapide) pour ce récepteur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-121">Called when one of the mnemonics (access keys) for this sink is invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68048-122">
            <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-122">
              <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-123">Le [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message doit être WM_CHAR, WM_SYSCHAR, WM_DEADCHAR ou WM_SYSDEADCHAR.</span><span class="sxs-lookup"><span data-stu-id="68048-123">The [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</span></span>  
  
 <span data-ttu-id="68048-124">Si le composant a des composants contenus, le message doit être passé dans votre composant de mise en œuvre en appelant chaque contenu <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="68048-124">If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.</span></span>  
  
 <span data-ttu-id="68048-125">Une interface qui retourne `true` de <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> n’appellera pas <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span><span class="sxs-lookup"><span data-stu-id="68048-125">An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span> <span data-ttu-id="68048-126">Implémentations peuvent choisir d’effectuer toutes les spécifique combinaisons de touches dans <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.et contourner <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span><span class="sxs-lookup"><span data-stu-id="68048-126">Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="68048-127">Récepteur <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> du composant contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-127">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68048-128">Enregistre l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> d'un composant contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-128">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68048-129">Site <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du composant contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-129">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-130">Composants avec des composants enfants doivent mettre à jour les collections internes de sites et utilisez cette méthode pour ajouter un nouveau récepteur et retourner le nouveau site.</span><span class="sxs-lookup"><span data-stu-id="68048-130">Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</span></span> <span data-ttu-id="68048-131">Vous devez uniquement maintenir la collection de sites, étant donné que le récepteur peut être obtenu à partir du site.</span><span class="sxs-lookup"><span data-stu-id="68048-131">You only need to maintain the site collection, because the sink can be obtained from the site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="68048-132">Spécifie si le focus doit avoir pour valeur le premier ou le dernier taquet de tabulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-132">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68048-133">Définit le focus sur le premier ou le dernier taquet de tabulation du récepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-133">Sets focus on either the first tab stop or the last tab stop of the sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68048-134">
            <see langword="true" />, si le focus a été défini comme demandé ; <see langword="false" />, s'il n'y a pas de taquets de tabulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-134">
              <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-135"><xref:System.Windows.Input.FocusNavigationDirection.First> et <xref:System.Windows.Input.FocusNavigationDirection.Last> sont les seules valeurs pertinentes qui doivent être passés à cette méthode dans le <xref:System.Windows.Input.TraversalRequest>.</span><span class="sxs-lookup"><span data-stu-id="68048-135"><xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="68048-136">Message et données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-136">The message and associated data.</span>
          </span>
          <span data-ttu-id="68048-137">Ne modifiez pas cette structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-137">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="68048-138">Elle est passée par référence pour des raisons de performances uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-138">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="68048-139">Touches de modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-139">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68048-140">Traite l'entrée au clavier au niveau du message keydown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-140">Processes keyboard input at the keydown message level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68048-141">
            <see langword="true" /> si le message a été géré par l'implémentation de la méthode ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-141">
              <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-142">Le message doit être WM_KEYDOWN ou WM_SYSKEYDOWN.</span><span class="sxs-lookup"><span data-stu-id="68048-142">The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</span></span>  
  
 <span data-ttu-id="68048-143">Si le composant est incapable de gérer les traductions d’entrée et comporte des éléments enfants qui peuvent avoir des traductions, il appelle généralement <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> méthode sur le composant enfant qui maintient le focus actuel avant de retourner un résultat.</span><span class="sxs-lookup"><span data-stu-id="68048-143">If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.</span></span>  
  
 <span data-ttu-id="68048-144">Si le message ne peut pas être traité immédiatement, vous pouvez le redistribuer depuis le <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implémentation si nécessaire, puis revenez ensuite `false`.</span><span class="sxs-lookup"><span data-stu-id="68048-144">If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`.</span></span>  
  
 <span data-ttu-id="68048-145">Un scénario principal pour traduire des touches accélérateur est gère le message keydown VK_TAB et de déterminer s’il faut définir le focus dans le composant, d’appeler <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> à un composant enfant ou appeler <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> sur le site parent, car la séquence de tabulation a atteint les limites de début ou fin.</span><span class="sxs-lookup"><span data-stu-id="68048-145">A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds.</span></span> <span data-ttu-id="68048-146">Certains composants peuvent choisir de ne pas gérer la clé de l’onglet de cette manière.</span><span class="sxs-lookup"><span data-stu-id="68048-146">Certain components may choose to not handle the tab key in this fashion.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="68048-147">Message et données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-147">The message and associated data.</span>
          </span>
          <span data-ttu-id="68048-148">Ne modifiez pas cette structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-148">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="68048-149">Elle est passée par référence pour des raisons de performances uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-149">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="68048-150">Touches de modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-150">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68048-151">Traite les messages d'entrée WM_CHAR, WM_SYSCHAR, WM_DEADCHAR et WM_SYSDEADCHAR avant que <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> ne soit appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-151">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> is called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68048-152">
            <see langword="true" /> si le message a été traité et <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> ne doit pas être appelé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68048-152">
              <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68048-153">Si vous implémentez cette méthode pour retourner `true`, l’architecture d’entrée n’appellera pas <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> pour ce message de touche.</span><span class="sxs-lookup"><span data-stu-id="68048-153">If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>