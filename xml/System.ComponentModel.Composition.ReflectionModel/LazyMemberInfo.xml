<Type Name="LazyMemberInfo" FullName="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54e7b93108352ba046daf08302edfbd163381ea0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30366483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LazyMemberInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LazyMemberInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure LazyMemberInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class LazyMemberInfo" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un objet <see cref="T:System.Reflection.MemberInfo" /> qui ne charge des assemblys ou ne crée des objets que lorsque cela lui est demandé.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberInfo ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="member">Membre à représenter.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> représentant le membre spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberTypes memberType, Func&lt;System.Reflection.MemberInfo[]&gt; accessorsCreator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.MemberTypes memberType, class System.Func`1&lt;class System.Reflection.MemberInfo[]&gt; accessorsCreator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberType As MemberTypes, accessorsCreator As Func(Of MemberInfo()))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberTypes memberType, Func&lt;cli::array &lt;System::Reflection::MemberInfo ^&gt; ^&gt; ^ accessorsCreator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="accessorsCreator" Type="System.Func&lt;System.Reflection.MemberInfo[]&gt;" />
      </Parameters>
      <Docs>
        <param name="memberType">Type du membre représenté.</param>
        <param name="accessorsCreator">Fonction dont la valeur de retour est une collection des accesseurs pour le membre représenté.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> pour un membre du type spécifié avec les accesseurs spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberTypes memberType, params System.Reflection.MemberInfo[] accessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.MemberTypes memberType, class System.Reflection.MemberInfo[] accessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberType As MemberTypes, ParamArray accessors As MemberInfo())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberTypes memberType, ... cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ accessors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="accessors" Type="System.Reflection.MemberInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="memberType">Type du membre représenté.</param>
        <param name="accessors">Tableau des accesseurs pour le membre représenté.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> pour un membre du type spécifié avec les accesseurs spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Un ou plusieurs des objets dans <paramref name="accessors" /> ne sont pas des accesseurs valides pour ce membre.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Autre objet de comparaison.</param>
        <summary>Indique si cette instance et un objet spécifié sont égaux.</summary>
        <returns>
          <see langword="true" /> si <paramref name="obj" /> et cette instance sont du même type et représentent la même valeur ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MemberInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetAccessors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un tableau des accesseurs pour le membre représenté.</summary>
        <returns>Tableau des accesseurs pour le membre représenté.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Un ou plusieurs accesseurs dans cet objet ne sont pas valides.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage de cette instance.</summary>
        <returns>Entier signé 32 bits qui est le code de hachage pour cette instance.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type du membre représenté.</summary>
        <value>Type du membre représenté.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As LazyMemberInfo, right As LazyMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo left, System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="right" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </Parameters>
      <Docs>
        <param name="left">Premier objet à tester.</param>
        <param name="right">Deuxième objet à tester.</param>
        <summary>Détermine si les deux objets <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> spécifiés sont égaux.</summary>
        <returns>
          <see langword="true" /> si les objets sont égaux ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As LazyMemberInfo, right As LazyMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo left, System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="right" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </Parameters>
      <Docs>
        <param name="left">Premier objet à tester.</param>
        <param name="right">Deuxième objet à tester.</param>
        <summary>Détermine si les deux objets <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> spécifiés ne sont pas égaux.</summary>
        <returns>
          <see langword="true" /> si les objets sont égaux ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>