<Type Name="KeyTime" FullName="System.Windows.Media.Animation.KeyTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f65959b62dd359a5d925b08ee67e47d4c1e249c" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394081" /></Metadata><TypeSignature Language="C#" Value="public struct KeyTime : IEquatable&lt;System.Windows.Media.Animation.KeyTime&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit KeyTime extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.Animation.KeyTime&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.KeyTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure KeyTime&#xA;Implements IEquatable(Of KeyTime)" />
  <TypeSignature Language="C++ CLI" Value="public value class KeyTime : IEquatable&lt;System::Windows::Media::Animation::KeyTime&gt;" />
  <TypeSignature Language="F#" Value="type KeyTime = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.Animation.KeyTime&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.KeyTimeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Pendant la progression relative d’une animation, une instance de <see cref="T:System.Windows.Media.Animation.KeyTime" /> spécifie le moment précis où une image clé particulière doit être présentée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque image clé <xref:System.Windows.Media.Animation.KeyTime> spécifie quand cette image clé se termine. Elle ne spécifie pas la durée pendant laquelle la clé lecture du temps. La durée de lecture d’une image clé est déterminée par le moment où l’image clé se termine, par le moment où l’image clé précédente a pris fin et par la durée de l’animation. Consultez [vue d’ensemble des Animations image clé](~/docs/framework/wpf/graphics-multimedia/key-frame-animations-overview.md) pour plus d’informations.  
  
 Un <xref:System.Windows.Media.Animation.KeyTime> peuvent être exprimées dans différents formats, y compris une valeur numérique d’heure sous forme de pourcentage ou d’une des valeurs spéciales sentinel <xref:System.Windows.Media.Animation.KeyTime.Uniform%2A> ou <xref:System.Windows.Media.Animation.KeyTime.Paced%2A>.  
  
<a name="xamlAttributeUsage_KeyTime"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
 \<*objet* *propriété*= "[*jours*.] *heures*:*minutes*:*secondes*[. *fractionalSeconds*] "/ >  
  
ou
  
 \<*objet* *propriété*= "[*jours*.] *heures*:*minutes*« / >  
  
ou
  
 \<*object* *property*="*pctValue*%"/>  
  
ou
  
 \<*object* *property*="<xref:System.Windows.Media.Animation.KeyTime.Uniform%2A>"/>  
  
ou
  
 \<*object* *property*="<xref:System.Windows.Media.Animation.KeyTime.Paced%2A>"/>  
  
<a name="xamlValues_KeyTime"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *Jours*  
 Valeur entière supérieure ou égale à 0 qui spécifie le nombre de jours couverts par ce <xref:System.Windows.Media.Animation.KeyTime>. Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Animation.KeyTime.TimeSpan%2A>.  
  
 *Heures*  
 Valeur entière comprise entre 0 et 23 qui spécifie le nombre d’heures jusqu'à cette <xref:System.Windows.Media.Animation.KeyTime>. Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Animation.KeyTime.TimeSpan%2A>.  
  
 *minutes*  
 Valeur entière comprise entre 0 et 59 qui spécifie le nombre de minutes couvertes par ce <xref:System.Windows.Media.Animation.KeyTime>. Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Animation.KeyTime.TimeSpan%2A>.  
  
 *secondes*  
 Valeur à virgule flottante comprise entre 0 et 59 qui spécifie le nombre de secondes jusqu'à cette <xref:System.Windows.Media.Animation.KeyTime>. Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Animation.KeyTime.TimeSpan%2A>.  
  
 *fractionalSeconds*  
 Valeur entière composé de 1 à 7 chiffres qui spécifie les fractions de secondes. Pour plus d'informations, consultez la propriété <xref:System.Windows.Media.Animation.KeyTime.TimeSpan%2A>.  
  
 *pctValue*  
 Valeur à virgule flottante comprise entre 0 et 100 (inclus), qui spécifie ce <xref:System.Windows.Media.Animation.KeyTime> sous forme de pourcentage de la durée totale de l’animation. Cela doit être suivi par le caractère littéral `%`. Pour plus d’informations, consultez le <xref:System.Windows.Media.Animation.KeyTime.Percent%2A> propriété.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indique si deux structures <see cref="T:System.Windows.Media.Animation.KeyTime" /> sont égales.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="keyTime.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet à comparer avec cette instance.</param>
        <summary>Indique si cette instance est égale à l'objet spécifié.</summary>
        <returns><see langword="true" /> si <paramref name="value" /> est un <see cref="T:System.Windows.Media.Animation.KeyTime" /> qui représente la même durée que cette instance ; sinon, <see langword="false" />,</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparaison de deux <xref:System.Windows.Media.Animation.KeyTime> tapé différemment des instances avec <xref:System.Windows.Media.Animation.KeyTimeType> propriétés, y compris les valeurs spéciales Uniform ou Paced, différentes () retourne la valeur false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Animation.KeyTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.Animation.KeyTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As KeyTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::Animation::KeyTime value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Animation.KeyTime -&gt; bool" Usage="keyTime.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Animation.KeyTime" />
      </Parameters>
      <Docs>
        <param name="value">Objet à comparer avec cette instance.</param>
        <summary>Indique si cette instance est égale au paramètre <see cref="T:System.Windows.Media.Animation.KeyTime" /> spécifié.</summary>
        <returns><see langword="true" /> si <paramref name="value" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Animation.KeyTime keyTime1, System.Windows.Media.Animation.KeyTime keyTime2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Animation.KeyTime keyTime1, valuetype System.Windows.Media.Animation.KeyTime keyTime2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (keyTime1 As KeyTime, keyTime2 As KeyTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Animation::KeyTime keyTime1, System::Windows::Media::Animation::KeyTime keyTime2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Animation.KeyTime * System.Windows.Media.Animation.KeyTime -&gt; bool" Usage="System.Windows.Media.Animation.KeyTime.Equals (keyTime1, keyTime2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyTime1" Type="System.Windows.Media.Animation.KeyTime" />
        <Parameter Name="keyTime2" Type="System.Windows.Media.Animation.KeyTime" />
      </Parameters>
      <Docs>
        <param name="keyTime1">Première valeur à comparer.</param>
        <param name="keyTime2">Deuxième valeur à comparer.</param>
        <summary>Indique si les deux structures <see cref="T:System.Windows.Media.Animation.KeyTime" /> spécifiées sont égales.</summary>
        <returns><see langword="true" /> si les valeurs de <paramref name="keyTime1" /> et de <paramref name="keyTime2" /> sont égales ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparaison de deux <xref:System.Windows.Media.Animation.KeyTime> tapé différemment des instances avec <xref:System.Windows.Media.Animation.KeyTimeType> propriétés, y compris les valeurs spéciales Uniform ou Paced, différentes () retourne la valeur false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPercent">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Animation.KeyTime FromPercent (double percent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Animation.KeyTime FromPercent(float64 percent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.FromPercent(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPercent (percent As Double) As KeyTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Animation::KeyTime FromPercent(double percent);" />
      <MemberSignature Language="F#" Value="static member FromPercent : double -&gt; System.Windows.Media.Animation.KeyTime" Usage="System.Windows.Media.Animation.KeyTime.FromPercent percent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.KeyTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percent" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="percent">Valeur de la nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
        <summary>Crée une nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" /> en initialisant la valeur de la propriété <see cref="T:System.Windows.Media.Animation.KeyTimeType" /> en fonction du paramètre spécifié.</summary>
        <returns>Nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" />, avec valeur initialisée sur <paramref name="percent" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre de pourcentage est passé en tant que double, comptant entre les valeurs 0.0 et 1.0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percent" /> est inférieur à 0,0 ou supérieur à 1,0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromTimeSpan">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Animation.KeyTime FromTimeSpan (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Animation.KeyTime FromTimeSpan(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.FromTimeSpan(System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Animation::KeyTime FromTimeSpan(TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="static member FromTimeSpan : TimeSpan -&gt; System.Windows.Media.Animation.KeyTime" Usage="System.Windows.Media.Animation.KeyTime.FromTimeSpan timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.KeyTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Valeur de la nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
        <summary>Crée une nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" /> en initialisant la valeur de la propriété <see cref="T:System.Windows.Media.Animation.KeyTimeType" /> en fonction du paramètre spécifié.</summary>
        <returns>Nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" />, avec valeur initialisée sur <paramref name="timeSpan" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="keyTime.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un code de hachage entier représentant cette instance.</summary>
        <returns>Code de hachage entier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Animation.KeyTime keyTime1, System.Windows.Media.Animation.KeyTime keyTime2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Animation.KeyTime keyTime1, valuetype System.Windows.Media.Animation.KeyTime keyTime2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.op_Equality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (keyTime1 As KeyTime, keyTime2 As KeyTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Animation::KeyTime keyTime1, System::Windows::Media::Animation::KeyTime keyTime2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Animation.KeyTime * System.Windows.Media.Animation.KeyTime -&gt; bool" Usage="keyTime1 = keyTime2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyTime1" Type="System.Windows.Media.Animation.KeyTime" />
        <Parameter Name="keyTime2" Type="System.Windows.Media.Animation.KeyTime" />
      </Parameters>
      <Docs>
        <param name="keyTime1">Première valeur à comparer.</param>
        <param name="keyTime2">Deuxième valeur à comparer.</param>
        <summary>Opérateur surchargé qui compare deux structures <see cref="T:System.Windows.Media.Animation.KeyTime" /> afin de savoir si elles sont de valeur égale.</summary>
        <returns><see langword="true" /> si <paramref name="keyTime1" /> et <paramref name="keyTime2" /> sont égales ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparaison <xref:System.Windows.Media.Animation.KeyTime> tapé différemment des instances avec <xref:System.Windows.Media.Animation.KeyTimeType> propriétés, y compris les valeurs spéciales Uniform ou Paced, différentes () retourne la valeur false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Windows.Media.Animation.KeyTime (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Animation.KeyTime op_Implicit(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.op_Implicit(System.TimeSpan)~System.Windows.Media.Animation.KeyTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Windows::Media::Animation::KeyTime(TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : TimeSpan -&gt; System.Windows.Media.Animation.KeyTime" Usage="System.Windows.Media.Animation.KeyTime.op_Implicit timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.KeyTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Valeur <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> à convertir.</param>
        <summary>Opérateur surchargé qui convertit implicitement un <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> en un <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
        <returns>Nouvelle instance <see cref="T:System.Windows.Media.Animation.KeyTime" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Animation.KeyTime keyTime1, System.Windows.Media.Animation.KeyTime keyTime2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Animation.KeyTime keyTime1, valuetype System.Windows.Media.Animation.KeyTime keyTime2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.op_Inequality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (keyTime1 As KeyTime, keyTime2 As KeyTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Animation::KeyTime keyTime1, System::Windows::Media::Animation::KeyTime keyTime2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Animation.KeyTime * System.Windows.Media.Animation.KeyTime -&gt; bool" Usage="System.Windows.Media.Animation.KeyTime.op_Inequality (keyTime1, keyTime2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyTime1" Type="System.Windows.Media.Animation.KeyTime" />
        <Parameter Name="keyTime2" Type="System.Windows.Media.Animation.KeyTime" />
      </Parameters>
      <Docs>
        <param name="keyTime1">Première valeur à comparer.</param>
        <param name="keyTime2">Deuxième valeur à comparer.</param>
        <summary>Opérateur surchargé qui compare deux structures <see cref="T:System.Windows.Media.Animation.KeyTime" /> afin de savoir si leurs valeurs ne sont pas identiques.</summary>
        <returns><see langword="true" /> si <paramref name="keyTime1" /> et <paramref name="keyTime2" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paced">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Animation.KeyTime Paced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Animation.KeyTime Paced" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.KeyTime.Paced" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Paced As KeyTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Animation::KeyTime Paced { System::Windows::Media::Animation::KeyTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Paced : System.Windows.Media.Animation.KeyTime" Usage="System.Windows.Media.Animation.KeyTime.Paced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.KeyTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Paced" /> qui crée un comportement de minutage entraînant une fréquence d’interpolation constante pour l’animation.</summary>
        <value>Valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Paced" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un temps clé est défini sur <xref:System.Windows.Media.Animation.KeyTime.Paced%2A>, temps disponible est alloué en fonction de la longueur de chacune des images clés pour déterminer la durée de chaque image.  Ceci fournira le comportement que le « velocity » ou le rythme de l’animation reste constante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Percent">
      <MemberSignature Language="C#" Value="public double Percent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Percent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.KeyTime.Percent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Percent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Percent { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Percent : double" Usage="System.Windows.Media.Animation.KeyTime.Percent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’heure de fin de l’image clé, exprimée en pourcentage de la durée totale de l’animation.</summary>
        <value>Valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Percent" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un temps clé est exprimé sous forme de pourcentage, l’image clé, heure de fin est spécifiée sous forme de pourcentage de la durée de l’animation d’image clé. Par exemple, si une animation d’image clé a une durée de quatre secondes et 75 % est étant donné que le <xref:System.Windows.Media.Animation.KeyTime> pourcentage de l’image clé, l’image clé se termine après le 3 secondes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si cette instance n’est pas de type <see cref="P:System.Windows.Media.Animation.KeyTime.Percent" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan TimeSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeSpan" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.KeyTime.TimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeSpan As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeSpan { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeSpan : TimeSpan" Usage="System.Windows.Media.Animation.KeyTime.TimeSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’heure de fin de l’image clé, exprimée par rapport au début de l’animation.</summary>
        <value>Valeur <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un temps clé est exprimé comme un intervalle de temps, l’image clé, heure de fin est spécifiée sous forme d’heure par rapport au début de l’animation. Par exemple, si l’intervalle de temps est défini sur « 0:0:2 », l’image clé se termine à deux secondes après que l’animation commence.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si cette instance n’est pas de type <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.KeyTime.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="keyTime.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une chaîne représentant l'instance <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
        <returns>Représentation sous forme de chaîne de cette instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.KeyTimeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.KeyTimeType Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.KeyTime.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As KeyTimeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::KeyTimeType Type { System::Windows::Media::Animation::KeyTimeType get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Windows.Media.Animation.KeyTimeType" Usage="System.Windows.Media.Animation.KeyTime.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.KeyTimeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Type" /> représentée par cette instance.</summary>
        <value>Valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Type" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Animation.KeyTime Uniform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Animation.KeyTime Uniform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.KeyTime.Uniform" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Uniform As KeyTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Animation::KeyTime Uniform { System::Windows::Media::Animation::KeyTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Uniform : System.Windows.Media.Animation.KeyTime" Usage="System.Windows.Media.Animation.KeyTime.Uniform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.KeyTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" /> qui répartit équitablement le temps imparti à l’animation entre les images clés.</summary>
        <value>Valeur <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un temps clé est défini sur <xref:System.Windows.Media.Animation.KeyTime.Uniform%2A>, le temps total imparti à l’animation est réparti uniformément entre les images clés. Par exemple, si l’animation d’image clé a une durée de quatre secondes et il existe quatre images clés, chaque image clé pendant une seconde de la dernière et commencer immédiatement après que la précédente se termine.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>