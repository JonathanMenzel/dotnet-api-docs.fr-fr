<Type Name="Animatable" FullName="System.Windows.Media.Animation.Animatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff55ed07eba5643cb3c2706efd5fe5b3a2b4d772" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39883439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Animatable : System.Windows.Freezable, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Animatable extends System.Windows.Freezable implements class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Animatable&#xA;Inherits Freezable&#xA;Implements IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Animatable abstract : System::Windows::Freezable, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type Animatable = class&#xA;    inherit Freezable&#xA;    interface IAnimatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="827ff-101">Classe abstraite qui fournit le support d'animation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="827ff-101">Abstract class that provides animation support.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Animatable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Animatable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="827ff-102">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.Animatable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-102">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Animatable" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="827ff-103">Anime la propriété <see cref="T:System.Windows.DependencyProperty" /> spécifiée à l'aide de l'horloge <see cref="T:System.Windows.Media.Animation.AnimationClock" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-103">Animates the specified <see cref="T:System.Windows.DependencyProperty" /> using the specified <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="animatable.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="827ff-104">Propriété à animer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-104">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="827ff-105">Horloge avec laquelle animer la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-105">The clock with which to animate the specified property.</span>
          </span>
          <span data-ttu-id="827ff-106">Si <c>clock</c> a la valeur <see langword="null" />, toutes les animations sont supprimées de la propriété spécifiée (mais pas arrêtées).</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-106">If <c>clock</c> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-107">Applique <see cref="T:System.Windows.Media.Animation.AnimationClock" /> au <see cref="T:System.Windows.DependencyProperty" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-107">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="827ff-108">Si la propriété est déjà animée, le comportement de transfert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-108">If the property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-109">Notez que l’utilisation de cette méthode pour supprimer les horloges d’une propriété n’arrête pas ces horloges.</span><span class="sxs-lookup"><span data-stu-id="827ff-109">Note that using this method to removing clocks from a property does not stop those clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="animatable.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="827ff-110">Propriété à animer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-110">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="827ff-111">Horloge avec laquelle animer la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-111">The clock with which to animate the specified property.</span>
          </span>
          <span data-ttu-id="827ff-112">Si <c>handoffBehavior</c> est <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> et que <c>clock</c> a la valeur <see langword="null" />, toutes les animations sont supprimées de la propriété spécifiée (mais pas arrêtées).</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-112">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <c>clock</c> is <see langword="null" />, all animations will be removed from the specified property (but not stopped).</span>
          </span>
          <span data-ttu-id="827ff-113">Si <c>handoffBehavior</c> est <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> et que clock a la valeur <see langword="null" />, cette méthode est sans effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-113">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> and clock is <see langword="null" />, this method has no effect.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="827ff-114">Valeur qui spécifie comment la nouvelle animation doit interagir avec les animations en cours, affectant déjà la valeur de propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-114">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-115">Applique <see cref="T:System.Windows.Media.Animation.AnimationClock" /> au <see cref="T:System.Windows.DependencyProperty" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-115">Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="827ff-116">Si la propriété spécifiée est déjà animée, le comportement <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> spécifié est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-116">If the property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-117">Notez que l’utilisation de cette méthode pour supprimer les horloges d’une propriété n’arrête pas ces horloges.</span><span class="sxs-lookup"><span data-stu-id="827ff-117">Note that using this method to remove clocks from a property does not stop those clocks.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="827ff-118">À l’aide de la composition HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="827ff-118">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="827ff-119">Lorsque vous appliquez un <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, ou <xref:System.Windows.Media.Animation.AnimationClock> à une propriété à l’aide de la <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, n’importe quel <xref:System.Windows.Media.Animation.Clock> objets précédemment associés à cette propriété continuent de consommer des ressources système ; le système de minutage ne sera pas Supprimez ces horloges automatiquement.</span><span class="sxs-lookup"><span data-stu-id="827ff-119">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="827ff-120">Pour éviter les problèmes de performances lorsque vous appliquez un grand nombre d’horloges à l’aide de <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, vous devez supprimer la composition des horloges de la propriété animée lorsqu’elles ont terminé.</span><span class="sxs-lookup"><span data-stu-id="827ff-120">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="827ff-121">Il existe plusieurs manières de supprimer une horloge.</span><span class="sxs-lookup"><span data-stu-id="827ff-121">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="827ff-122">Pour supprimer toutes les horloges d’une propriété, utilisez le <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> ou <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> méthode de l’objet animé.</span><span class="sxs-lookup"><span data-stu-id="827ff-122">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="827ff-123">Spécifiez la propriété animée comme premier paramètre, et `null` en tant que la seconde.</span><span class="sxs-lookup"><span data-stu-id="827ff-123">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="827ff-124">Cela supprimera toutes les horloges d’animation de la propriété.</span><span class="sxs-lookup"><span data-stu-id="827ff-124">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="827ff-125">Pour supprimer un spécifique <xref:System.Windows.Media.Animation.AnimationClock> à partir d’une liste d’horloges, utilisez la <xref:System.Windows.Media.Animation.Clock.Controller%2A> propriété de la <xref:System.Windows.Media.Animation.AnimationClock> pour récupérer un <xref:System.Windows.Media.Animation.ClockController>, puis appelez le <xref:System.Windows.Media.Animation.ClockController.Remove%2A> méthode de la <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="827ff-125">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="827ff-126">Cela s’effectue généralement dans le <xref:System.Windows.Media.Animation.Clock.Completed> Gestionnaire d’événements pour une horloge.</span><span class="sxs-lookup"><span data-stu-id="827ff-126">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="827ff-127">Notez que seules les horloges racine peuvent être contrôlées par un <xref:System.Windows.Media.Animation.ClockController>; le <xref:System.Windows.Media.Animation.Clock.Controller%2A> propriété d’une horloge enfant retournera `null`.</span><span class="sxs-lookup"><span data-stu-id="827ff-127">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="827ff-128">Notez également que le <xref:System.Windows.Media.Animation.Clock.Completed> événement ne sera pas appelé si la durée effective de l’horloge est illimitée.</span><span class="sxs-lookup"><span data-stu-id="827ff-128">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="827ff-129">Dans ce cas, l’utilisateur devra déterminer quand appeler <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="827ff-129">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="827ff-130">Il s’agit principalement d’un problème pour les animations sur des objets qui ont une durée de vie longue.</span><span class="sxs-lookup"><span data-stu-id="827ff-130">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="827ff-131">Lorsqu’un objet est récupéré par le garbage collector, ses horloges sont également déconnectées et récupérées.</span><span class="sxs-lookup"><span data-stu-id="827ff-131">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="827ff-132">Pour plus d’informations sur les objets clock, consultez le [Animation et vue d’ensemble du système de minutage](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="827ff-132">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="827ff-133">L’exemple suivant montre comment appliquer les horloges d’animation à l’aide de différents <xref:System.Windows.Media.Animation.HandoffBehavior> paramètres.</span><span class="sxs-lookup"><span data-stu-id="827ff-133">The following example shows how to apply animation clocks using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="827ff-134">Applique une animation au <see cref="T:System.Windows.DependencyProperty" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-134">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="animatable.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="827ff-135">Propriété à animer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-135">The property to animate.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="827ff-136">Animation utilisée pour animer la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-136">The animation used to animate the specified property.</span>
          </span>
          <span data-ttu-id="827ff-137">Si le <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> de l’animation est <see langword="null" />, toutes les animations en cours seront supprimées et la propriété conservera sa valeur actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-137">If the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span>
          </span>
          <span data-ttu-id="827ff-138">Si <c>animation</c> est <see langword="null" />, toutes les animations sont supprimées de la propriété et cette dernière est rétablie à sa valeur de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-138">If <c>animation</c> is <see langword="null" />, all animations will be removed from the property and the property value will revert back to its base value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-139">Applique une animation au <see cref="T:System.Windows.DependencyProperty" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-139">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="827ff-140">L’animation est démarrée lors de la restitution de l’image suivante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-140">The animation is started when the next frame is rendered.</span>
          </span>
          <span data-ttu-id="827ff-141">Si la propriété spécifiée est déjà animée, le comportement de transfert <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-141">If the specified property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-142">Si l’animation a un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> qui est supérieure à zéro, l’animation commence une fois ce laps de temps écoulé à la restitution de l’image suivante.</span><span class="sxs-lookup"><span data-stu-id="827ff-142">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="animatable.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="827ff-143">Propriété à animer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-143">The property to animate.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="827ff-144">Animation utilisée pour animer la propriété spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-144">The animation used to animate the specified property.</span>
          </span>
          <span data-ttu-id="827ff-145">Si <c>handoffBehavior</c> est <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> et que le <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> de l'animation est <see langword="null" />, toutes les animations en cours sont supprimées et la propriété conserve sa valeur actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-145">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />, any current animations will be removed and the current value of the property will be held.</span>
          </span>
          <span data-ttu-id="827ff-146">Si <c>handoffBehavior</c> est <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> et que <c>animation</c> est une référence <see langword="null" />, toutes les animations sont supprimées de la propriété et cette dernière est rétablie à sa valeur de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-146">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <c>animation</c> is a <see langword="null" /> reference, all animations will be removed from the property and the property value will revert back to its base value.</span>
          </span>
          <span data-ttu-id="827ff-147">Si <c>handoffBehavior</c> est <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, cette méthode est sans effet si l'animation ou son <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-147">If <c>handoffBehavior</c> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, this method will have no effect if the animation or its <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is <see langword="null" />.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="827ff-148">Valeur qui spécifie comment la nouvelle animation doit interagir avec les animations en cours, affectant déjà la valeur de propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-148">A value that specifies how the new animation should interact with any current animations already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-149">Applique une animation au <see cref="T:System.Windows.DependencyProperty" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-149">Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
          <span data-ttu-id="827ff-150">L’animation est démarrée lors de la restitution de l’image suivante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-150">The animation is started when the next frame is rendered.</span>
          </span>
          <span data-ttu-id="827ff-151">Si la propriété spécifiée est déjà animée, le comportement <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> spécifié est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-151">If the specified property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-152">Si l’animation a un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> qui est supérieure à zéro, l’animation commence une fois ce laps de temps écoulé à la restitution de l’image suivante.</span><span class="sxs-lookup"><span data-stu-id="827ff-152">If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="827ff-153">À l’aide de la composition HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="827ff-153">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="827ff-154">Lorsque vous appliquez un <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, ou <xref:System.Windows.Media.Animation.AnimationClock> à une propriété à l’aide de la <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, n’importe quel <xref:System.Windows.Media.Animation.Clock> objets précédemment associés à cette propriété continuent de consommer des ressources système ; le système de minutage ne sera pas Supprimez ces horloges automatiquement.</span><span class="sxs-lookup"><span data-stu-id="827ff-154">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="827ff-155">Pour éviter les problèmes de performances lorsque vous appliquez un grand nombre d’horloges à l’aide de <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, vous devez supprimer la composition des horloges de la propriété animée lorsqu’elles ont terminé.</span><span class="sxs-lookup"><span data-stu-id="827ff-155">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="827ff-156">Il existe plusieurs manières de supprimer une horloge.</span><span class="sxs-lookup"><span data-stu-id="827ff-156">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="827ff-157">Pour supprimer toutes les horloges d’une propriété, utilisez le <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> ou <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> méthode de l’objet animé.</span><span class="sxs-lookup"><span data-stu-id="827ff-157">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="827ff-158">Spécifiez la propriété animée comme premier paramètre, et `null` en tant que la seconde.</span><span class="sxs-lookup"><span data-stu-id="827ff-158">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="827ff-159">Cela supprimera toutes les horloges d’animation de la propriété.</span><span class="sxs-lookup"><span data-stu-id="827ff-159">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="827ff-160">Pour supprimer un spécifique <xref:System.Windows.Media.Animation.AnimationClock> à partir d’une liste d’horloges, utilisez la <xref:System.Windows.Media.Animation.Clock.Controller%2A> propriété de la <xref:System.Windows.Media.Animation.AnimationClock> pour récupérer un <xref:System.Windows.Media.Animation.ClockController>, puis appelez le <xref:System.Windows.Media.Animation.ClockController.Remove%2A> méthode de la <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="827ff-160">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="827ff-161">Cela s’effectue généralement dans le <xref:System.Windows.Media.Animation.Clock.Completed> Gestionnaire d’événements pour une horloge.</span><span class="sxs-lookup"><span data-stu-id="827ff-161">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="827ff-162">Notez que seules les horloges racine peuvent être contrôlées par un <xref:System.Windows.Media.Animation.ClockController>; le <xref:System.Windows.Media.Animation.Clock.Controller%2A> propriété d’une horloge enfant retournera `null`.</span><span class="sxs-lookup"><span data-stu-id="827ff-162">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`.</span></span> <span data-ttu-id="827ff-163">Notez également que le <xref:System.Windows.Media.Animation.Clock.Completed> événement ne sera pas appelé si la durée effective de l’horloge est illimitée.</span><span class="sxs-lookup"><span data-stu-id="827ff-163">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="827ff-164">Dans ce cas, l’utilisateur devra déterminer quand appeler <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="827ff-164">In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="827ff-165">Il s’agit principalement d’un problème pour les animations sur des objets qui ont une durée de vie longue.</span><span class="sxs-lookup"><span data-stu-id="827ff-165">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="827ff-166">Lorsqu’un objet est récupéré par le garbage collector, ses horloges sont également déconnectées et récupérées.</span><span class="sxs-lookup"><span data-stu-id="827ff-166">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="827ff-167">Pour plus d’informations sur les objets clock, consultez le [Animation et vue d’ensemble du système de minutage](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="827ff-167">For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="827ff-168">L’exemple suivant montre comment appliquer des animations à l’aide de différents <xref:System.Windows.Media.Animation.HandoffBehavior> paramètres.</span><span class="sxs-lookup"><span data-stu-id="827ff-168">The following example shows how to apply animations using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.</span></span>  
  
 [!code-cpp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/cpp/VS_Snippets_Wpf/animateproperty/CPP/InteractiveExample.cpp#interactiveanimationexamplewholepage)]
 [!code-csharp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animateproperty/CSharp/InteractiveExample.cs#interactiveanimationexamplewholepage)]
 [!code-vb[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateproperty/VisualBasic/InteractiveExample.vb#interactiveanimationexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Animatable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Animatable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Animatable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Animatable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Media.Animation.Animatable" Usage="animatable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Animatable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="827ff-169">Crée un clone modifiable de ce <see cref="T:System.Windows.Media.Animation.Animatable" />, en créant des copies complètes des valeurs de cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-169">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Animatable" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="827ff-170">Lors de la copie de propriétés de dépendance de cet objet, cette méthode copie les références de ressource et les liaisons de données (lesquelles risquent de ne plus pouvoir se résoudre), mais non les animations ou leurs valeurs actuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-170">When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="827ff-171">Clone modifiable de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-171">A modifiable clone of this instance.</span>
          </span>
          <span data-ttu-id="827ff-172">Le clone retourné est effectivement une copie intégrale de l'objet actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-172">The returned clone is effectively a deep copy of the current object.</span>
          </span>
          <span data-ttu-id="827ff-173">La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> du clone est **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-173">The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is **false**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-174">Le <xref:System.Windows.Media.Animation.Animatable.Clone%2A> méthode peut être utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets.</span><span class="sxs-lookup"><span data-stu-id="827ff-174">The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects.</span></span> <span data-ttu-id="827ff-175">Pour plus de commodité, cette méthode occulte héritées <xref:System.Windows.Freezable.Clone%2A> méthode pour fournir une implémentation fortement typée.</span><span class="sxs-lookup"><span data-stu-id="827ff-175">For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="animatable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="827ff-176">
            <see langword="true" /> si cette méthode doit uniquement indiquer si cette instance peut ou non être figée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-176">
              <see langword="true" /> if this method should simply determine whether this instance can be frozen.</span>
          </span>
          <span data-ttu-id="827ff-177">
            <see langword="false" /> si cette instance doit réellement se figer lorsque cette méthode est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-177">
              <see langword="false" /> if this instance should actually freeze itself when this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-178">Rend cet objet <see cref="T:System.Windows.Media.Animation.Animatable" /> non modifiable ou détermine s'il peut être rendu non modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-178">Makes this <see cref="T:System.Windows.Media.Animation.Animatable" /> object unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="827ff-179">Si <paramref name="isChecking" /> a la valeur <see langword="true" />, cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Windows.Media.Animation.Animatable" /> peut être rendu non modifiable, ou <see langword="false" /> dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-179">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Animatable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="827ff-180">Lorsque <paramref name="isChecking" /> a la valeur <see langword="false" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Media.Animation.Animatable" /> est à présent non modifiable ou <see langword="false" /> s'il ne peut pas être rendu non modifiable, avec comme conséquence la modification de l'état figé de cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-180">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if this <see cref="T:System.Windows.Media.Animation.Animatable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-181">Cette méthode retournera **false** lorsque <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> est **true**.</span><span class="sxs-lookup"><span data-stu-id="827ff-181">This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.</span></span>  
  
 <span data-ttu-id="827ff-182">N’appelez pas cette méthode directement (sauf lorsque vous appelez base dans une implémentation).</span><span class="sxs-lookup"><span data-stu-id="827ff-182">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="827ff-183">Cette méthode est appelée en interne par <xref:System.Windows.Freezable.CanFreeze%2A> (avec `isChecking` égal à `true`) et <xref:System.Windows.Freezable.Freeze%2A> (avec `isChecking` égale à `false`).</span><span class="sxs-lookup"><span data-stu-id="827ff-183">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="827ff-184">
            <para>Les classes qui dérivent de <see cref="T:System.Windows.Media.Animation.Animatable" /> doit remplacer cette méthode lorsque la classe contient des données qui ne sont pas stockées à l’aide des propriétés de dépendance.  Une implémentation classique serait appeler l’implémentation de base, puis appelez la méthode statique <see cref="M:System.Windows.Freezable.Freeze" /> (méthode) sur tous les <see cref="T:System.Windows.Freezable" /> propriétés contenant la classe, retournant typées <see langword="true" /> uniquement si toutes les propriétés ont été figées (ou auraient pu être figées, dans le cas de traverser un <see langword="false" /> valeur pour <paramref name="isChecking" />).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-184">
              <para>Classes that derive from <see cref="T:System.Windows.Media.Animation.Animatable" /> must override this method when the class contains data that is not stored using dependency properties.  A typical implementation would call the base implementation, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="animatable.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="827ff-185">Identifie la propriété dont la valeur de base (non animée) doit être récupérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-185">Identifies the property whose base (non-animated) value should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-186">Retourne la valeur non animée de la propriété <see cref="T:System.Windows.DependencyProperty" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-186">Returns the non-animated value of the specified <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="827ff-187">Valeur qui serait retournée si la propriété spécifiée n'était pas animée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-187">The value that would be returned if the specified property were not animated.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-188">Si la propriété spécifiée n’est pas animée, cette méthode retourne le même résultat que <xref:System.Windows.DependencyObject.GetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="827ff-188">If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="827ff-189">Dans l’exemple suivant, les valeurs non animées de propriétés animées sont récupérées et affichées.</span><span class="sxs-lookup"><span data-stu-id="827ff-189">In the following example, the non-animated values of animated properties are retrieved and displayed.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalueexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalueexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="827ff-190">Obtient une valeur qui indique si un ou plusieurs objets <see cref="T:System.Windows.Media.Animation.AnimationClock" /> sont associés à l'une ou l'autre des propriétés de dépendance de cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-190">Gets a value that indicates whether one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="827ff-191">**true** si un ou plusieurs <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objets est associé à une des propriétés de dépendance de cet objet ; sinon, **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-191">**true** if one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-192">Cette propriété n’indique pas si cet objet contient des sous-objets animés.</span><span class="sxs-lookup"><span data-stu-id="827ff-192">This property does not indicate whether this object contains animated sub-objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStoredWeakReference">
      <MemberSignature Language="C#" Value="public static bool ShouldSerializeStoredWeakReference (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSerializeStoredWeakReference(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShouldSerializeStoredWeakReference (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ShouldSerializeStoredWeakReference(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ShouldSerializeStoredWeakReference : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="827ff-193">Représente un objet qui participe au système des propriétés de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-193">Represents an object that participates in the dependency property system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="827ff-194">Spécifie si un objet de dépendance doit être sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-194">Specifies whether a dependency object should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="827ff-195">
            <see langword="true" /> pour sérialiser <paramref name="target" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-195">
              <see langword="true" /> to serialize <paramref name="target" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="827ff-196">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="827ff-196">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="827ff-197">Le <xref:System.ComponentModel.TypeDescriptor> classe utilise le <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> méthode pour déterminer si une propriété doit être sérialisée.</span><span class="sxs-lookup"><span data-stu-id="827ff-197">The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>