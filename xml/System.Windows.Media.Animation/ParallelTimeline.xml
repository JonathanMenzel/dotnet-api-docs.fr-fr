<Type Name="ParallelTimeline" FullName="System.Windows.Media.Animation.ParallelTimeline">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc97ff6f56de39d3b10d64c528de8c9a498b173f" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48636755" /></Metadata><TypeSignature Language="C#" Value="public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelTimeline extends System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelTimeline&#xA;Inherits TimelineGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelTimeline : System::Windows::Media::Animation::TimelineGroup" />
  <TypeSignature Language="F#" Value="type ParallelTimeline = class&#xA;    inherit TimelineGroup" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.TimelineGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit un segment de temps qui peut contenir des objets <see cref="T:System.Windows.Media.Animation.Timeline" /> enfants. Ces chronologies enfants s'activent en fonction de leurs propriétés <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> respectives. Les chronologies enfants peuvent aussi se chevaucher (s’exécuter en parallèle) l’une l’autre.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline> objets peuvent être des enfants (imbriqués à l’intérieur) d’un <xref:System.Windows.Media.Animation.Storyboard>. Ceci peut fournir une meilleure encapsulation de séquences temporelles dans des animations complexes.  
  
 <xref:System.Windows.Media.Animation.ParallelTimeline> possède son propre <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propriété donc de tous les enfants chronologie <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> sont des valeurs par rapport au parent <xref:System.Windows.Media.Animation.ParallelTimeline> valeur pour <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> de ce <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> avec le <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> de ce <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="duration"><see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> de ce <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> avec les <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> et <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> de ce <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="duration"><see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> de ce <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="repeatBehavior"><see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> de ce <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> avec les <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> et <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="parallelTimeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un clone modifiable de ce <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />, en créant des copies complètes des valeurs de cet objet. Pendant la copie des propriétés de dépendance, cette méthode copie les références de ressources et les liaisons de données (qui risquent toutefois de ne plus pouvoir se résoudre), mais pas les animations ni leurs valeurs actuelles.</summary>
        <returns>Clone modifiable de l'objet actif. La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné sera <see langword="false" />, même si la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet). Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="parallelTimeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un clone modifiable de cet objet <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />, en effectuant une copie complète des valeurs actuelles de cet objet. Contrairement à leurs valeurs actuelles, les références de ressources, les liaisons de données et les animations ne sont pas copiées.</summary>
        <returns>Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l'objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet). Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.  
  
 Pour plus d'informations, consultez <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="parallelTimeline.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une nouvelle instance de ce <see cref="T:System.Windows.Freezable" />.</summary>
        <returns>Nouvelle <see cref="T:System.Windows.Freezable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la <xref:System.Windows.Freezable.CreateInstanceCore%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="parallelTimeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock"><see cref="T:System.Windows.Media.Animation.Clock" /> à partir duquel retourner la durée naturelle.</param>
        <summary>Retourne la durée naturelle (durée d'une itération unique) à partir d'un <see cref="T:System.Windows.Media.Animation.Clock" /> spécifié.</summary>
        <returns>Quantité <see cref="T:System.Windows.Duration" /> représentant la durée naturelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une durée naturelle est la période d’une seule itération. Si cette méthode retourne <xref:System.Windows.Duration.Automatic%2A> cela signifie que la durée naturelle est inconnue. Dans ce cas, le <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> de la <xref:System.Windows.Media.Animation.Clock> est déterminé par l’auteur. Par exemple, la durée de la diffusion multimédia en continu serait être déterminée par le fournisseur de la diffusion multimédia en continu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlipBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.SlipBehavior SlipBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property SlipBehavior As SlipBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::SlipBehavior SlipBehavior { System::Windows::Media::Animation::SlipBehavior get(); void set(System::Windows::Media::Animation::SlipBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.SlipBehavior : System.Windows.Media.Animation.SlipBehavior with get, set" Usage="System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.SlipBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie le comportement de cette chronologie en cas de glissement d'un ou de plusieurs de ses enfants <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <value>Valeur qui indique le comportement de cette chronologie en cas de glissement d'un ou de plusieurs de ses enfants <see cref="T:System.Windows.Media.Animation.Timeline" />. La valeur par défaut est <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il est souvent souhaitable pour synchroniser les animations et des médias. Toutefois, ceci est compliqué par le fait que la lecture du média peut être retardée de chargement ou de mise en mémoire tampon rend difficile fiable jouer une animation en même temps que le média. Le <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> propriété est utilisée pour déterminer ce qui se passe lors de la lecture simultanée de média et des animations. La valeur <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (valeur par défaut) Spécifie que les chronologies d’animation n’avez pas besoin d’être synchronisées et joueront lorsque spécifié, quel que soit l’état des autres médias de la chronologie. La valeur <xref:System.Windows.Media.Animation.SlipBehavior.Slip> quant à eux, indique qu’une animation patiente (slip) jusqu'à ce que le média est prêt à lire. Les schémas ci-dessous illustrent ce comportement.  
  
 Cela <xref:System.Windows.Media.Animation.Storyboard> lit une vidéo et une animation. Lorsque <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> a la valeur <xref:System.Windows.Media.Animation.SlipBehavior.Grow> et le <xref:System.Windows.Media.Animation.Timeline.Duration%2A> propriété de la <xref:System.Windows.Media.Animation.Storyboard> a la valeur <xref:System.Windows.Duration.Automatic%2A>, le <xref:System.Windows.Media.Animation.Storyboard> s’agrandit pour lire tous les médias et des animations.  
  
 ![Diagramme : Clé du diagramme SlipBehavior](~/add/media/slipbehaviorkey.png "diagramme : clé du diagramme SlipBehavior")  
  
 ![Diagramme : Valeur de propriété SlipBehavior de Grow](~/add/media/slipbehaviorgrow1.png "diagramme : valeur de propriété SlipBehavior de Grow")  
  
 Cela <xref:System.Windows.Media.Animation.Storyboard> a un <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Grow> et un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 5 secondes, ce qui donne les 5 secondes média et des animations pour lire, quel que soit la quantité de bon.  
  
 ![Diagramme : Valeur de propriété SlipBehavior de Grow](~/add/media/slipbehaviorgrow2.png "diagramme : valeur de propriété SlipBehavior de Grow")  
  
 Cela <xref:System.Windows.Media.Animation.Storyboard> a un <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Notez que le <xref:System.Windows.Media.Animation.DoubleAnimation> (et tout autre enfant sans média de la <xref:System.Windows.Media.Animation.Storyboard>) ne progresse pas, sauf si la chronologie du média progresse également.  Si le média prend un certain temps pour charger, ou si elle est mise en mémoire tampon, l’animation patiente (glisse) avec lui.  Ainsi, les animations pour se synchroniser avec un seul fichier multimédia.  
  
 ![Diagramme SlipBehavior pour média et animation](~/add/media/slipbehaviorslip1.png "diagramme SlipBehavior pour média et animation")  
  
 Cela <xref:System.Windows.Media.Animation.Storyboard> a un <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Slip> et un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 5 secondes.  Dans ce scénario, le fichier multimédia et l’animation sont garanti que lire pendant 5 secondes.  
  
 ![Diagramme : Propriété SlipBehavior d’un Storyboard](~/add/media/slipbehaviorslip2.png "diagramme : propriété SlipBehavior d’une table de montage séquentiel")  
  
<a name="dependencyPropertyInfo_SlipBehavior"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.MediaTimeline" />
      </Docs>
    </Member>
    <Member MemberName="SlipBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlipBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SlipBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SlipBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SlipBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificateur de la propriété de dépendance <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
   
  
## Examples  
 [Vue d’ensemble des propriétés de dépendance](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>