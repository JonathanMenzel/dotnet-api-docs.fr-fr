<Type Name="Rotation3DAnimationBase" FullName="System.Windows.Media.Animation.Rotation3DAnimationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="797434fe67dbeee8b27bf82389470009833c841a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39763690" /></Metadata><TypeSignature Language="C#" Value="public abstract class Rotation3DAnimationBase : System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Rotation3DAnimationBase extends System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Rotation3DAnimationBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Rotation3DAnimationBase&#xA;Inherits AnimationTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rotation3DAnimationBase abstract : System::Windows::Media::Animation::AnimationTimeline" />
  <TypeSignature Language="F#" Value="type Rotation3DAnimationBase = class&#xA;    inherit AnimationTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.AnimationTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4b7c8-101">Classe abstraite qui, en cas d’implémentation, anime une valeur <see cref="T:System.Windows.Media.Media3D.Rotation3D" />.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-101">Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value.</span></span></summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides"><span data-ttu-id="4b7c8-102"><para>Consultez le [vue d’ensemble des Animations personnalisées](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md) pour plus d’informations sur l’extension des classes d’animation.</para></span><span class="sxs-lookup"><span data-stu-id="4b7c8-102"><para>See the [Custom Animations Overview](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md) for information about extending animation classes.</para></span></span></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Rotation3DAnimationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Rotation3DAnimationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Rotation3DAnimationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b7c8-103">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationBase" />.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-103">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Rotation3DAnimationBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Rotation3DAnimationBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Rotation3DAnimationBase.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Rotation3DAnimationBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Rotation3DAnimationBase ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Rotation3DAnimationBase" Usage="rotation3DAnimationBase.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Rotation3DAnimationBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b7c8-104">Crée un clone modifiable de ce <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationBase" />, en créant des copies complètes des valeurs de cet objet.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-104">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationBase" />, making deep copies of this object's values.</span></span> <span data-ttu-id="4b7c8-105">Pendant la copie des propriétés de dépendance, cette méthode copie les références de ressources et les liaisons de données (qui risquent toutefois de ne plus pouvoir se résoudre), mais pas les animations ni leurs valeurs actuelles.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-105">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="4b7c8-106">Clone modifiable de l'objet actif.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-106">A modifiable clone of the current object.</span></span> <span data-ttu-id="4b7c8-107">La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné sera <see langword="false" />, même si la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true." />.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-107">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b7c8-108">Cette méthode est utilisée pour générer des copies modifiables de figé <xref:System.Windows.Freezable> objets (ou n’importe quel <xref:System.Windows.Freezable> objet).</span><span class="sxs-lookup"><span data-stu-id="4b7c8-108">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="4b7c8-109">Pour des raisons pratiques, cette méthode occulte la version héritée avec une implémentation fortement typée.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-109">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="4b7c8-110">Pour plus d'informations, consultez <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-110">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentValue">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4b7c8-111">Obtient la valeur actuelle de l’animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-111">Gets the current value of the animation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public override sealed object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetCurrentValue(object defaultOriginValue, object defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetCurrentValue(System::Object ^ defaultOriginValue, System::Object ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValue : obj * obj * System.Windows.Media.Animation.AnimationClock -&gt; obj" Usage="rotation3DAnimationBase.GetCurrentValue (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Object" />
        <Parameter Name="defaultDestinationValue" Type="System.Object" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue"><span data-ttu-id="4b7c8-112">Valeur d’origine fournie à l’animation si l’animation ne dispose pas de sa propre valeur de départ.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-112">The origin value provided to the animation if the animation does not have its own start value.</span></span> <span data-ttu-id="4b7c8-113">Si cette animation occupe la première position dans une chaîne de composition, sa valeur sera égale à la valeur de base de la propriété en cours d'animation. Dans le cas contraire, sa valeur correspondra à la valeur retournée par l'animation la précédant dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-113">If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</span></span></param>
        <param name="defaultDestinationValue"><span data-ttu-id="4b7c8-114">Valeur de destination fournie à l’animation si l’animation ne dispose pas de sa propre valeur de destination.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-114">The destination value provided to the animation if the animation does not have its own destination value.</span></span></param>
        <param name="animationClock"><span data-ttu-id="4b7c8-115"><see cref="T:System.Windows.Media.Animation.AnimationClock" /> qui permet de générer la valeur <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou la valeur <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> utilisée par l'animation pour générer sa valeur de sortie.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-115">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</span></span></param>
        <summary><span data-ttu-id="4b7c8-116">Obtient la valeur actuelle de l’animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-116">Gets the current value of the animation.</span></span></summary>
        <returns><span data-ttu-id="4b7c8-117">Valeur actuelle de l’animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-117">The current value of the animation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.Rotation3D GetCurrentValue (System.Windows.Media.Media3D.Rotation3D defaultOriginValue, System.Windows.Media.Media3D.Rotation3D defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.Rotation3D GetCurrentValue(class System.Windows.Media.Media3D.Rotation3D defaultOriginValue, class System.Windows.Media.Media3D.Rotation3D defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::Rotation3D ^ GetCurrentValue(System::Windows::Media::Media3D::Rotation3D ^ defaultOriginValue, System::Windows::Media::Media3D::Rotation3D ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValue : System.Windows.Media.Media3D.Rotation3D * System.Windows.Media.Media3D.Rotation3D * System.Windows.Media.Animation.AnimationClock -&gt; System.Windows.Media.Media3D.Rotation3D" Usage="rotation3DAnimationBase.GetCurrentValue (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Rotation3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Media3D.Rotation3D" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Media3D.Rotation3D" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue"><span data-ttu-id="4b7c8-118">Valeur d’origine fournie à l’animation si l’animation ne dispose pas de sa propre valeur de départ.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-118">The origin value provided to the animation if the animation does not have its own start value.</span></span> <span data-ttu-id="4b7c8-119">Si cette animation occupe la première position dans une chaîne de composition, sa valeur sera égale à la valeur de base de la propriété en cours d'animation. Dans le cas contraire, sa valeur correspondra à la valeur retournée par l'animation la précédant dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-119">If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</span></span></param>
        <param name="defaultDestinationValue"><span data-ttu-id="4b7c8-120">Valeur de destination fournie à l’animation si l’animation ne dispose pas de sa propre valeur de destination.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-120">The destination value provided to the animation if the animation does not have its own destination value.</span></span></param>
        <param name="animationClock"><span data-ttu-id="4b7c8-121"><see cref="T:System.Windows.Media.Animation.AnimationClock" /> qui permet de générer la valeur <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou la valeur <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> utilisée par l'animation pour générer sa valeur de sortie.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-121">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</span></span></param>
        <summary><span data-ttu-id="4b7c8-122">Obtient la valeur actuelle de l’animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-122">Gets the current value of the animation.</span></span></summary>
        <returns><span data-ttu-id="4b7c8-123">Valeur actuelle de l’animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-123">The current value of the animation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.Media3D.Rotation3D GetCurrentValueCore (System.Windows.Media.Media3D.Rotation3D defaultOriginValue, System.Windows.Media.Media3D.Rotation3D defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Media3D.Rotation3D GetCurrentValueCore(class System.Windows.Media.Media3D.Rotation3D defaultOriginValue, class System.Windows.Media.Media3D.Rotation3D defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::Media3D::Rotation3D ^ GetCurrentValueCore(System::Windows::Media::Media3D::Rotation3D ^ defaultOriginValue, System::Windows::Media::Media3D::Rotation3D ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueCore : System.Windows.Media.Media3D.Rotation3D * System.Windows.Media.Media3D.Rotation3D * System.Windows.Media.Animation.AnimationClock -&gt; System.Windows.Media.Media3D.Rotation3D" Usage="rotation3DAnimationBase.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Rotation3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Media3D.Rotation3D" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Media3D.Rotation3D" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue"><span data-ttu-id="4b7c8-124">Valeur d’origine suggérée, utilisée si l’animation ne possède pas sa propre valeur de départ explicitement définie.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-124">The suggested origin value, used if the animation does not have its own explicitly set start value.</span></span></param>
        <param name="defaultDestinationValue"><span data-ttu-id="4b7c8-125">Valeur de destination suggérée, utilisée si l’animation ne possède pas sa propre valeur de fin explicitement définie.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-125">The suggested destination value, used if the animation does not have its own explicitly set end value.</span></span></param>
        <param name="animationClock"><span data-ttu-id="4b7c8-126"><see cref="T:System.Windows.Media.Animation.AnimationClock" /> qui génère le <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> utilisé par l'animation hôte.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-126">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</span></span></param>
        <summary><span data-ttu-id="4b7c8-127">Calcule une valeur qui représente la valeur actuelle de la propriété animée, comme la détermine l’animation hôte.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-127">Calculates a value that represents the current value of the property being animated, as determined by the host animation.</span></span></summary>
        <returns><span data-ttu-id="4b7c8-128">Valeur calculée de la propriété, comme la détermine l’animation actuelle.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-128">The calculated value of the property, as determined by the current animation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b7c8-129">Si le `defaultOriginValue` est le premier dans la chaîne de composition, cette valeur sera la valeur instantanée (si celui-ci est disponible) ou la valeur de propriété de base ; sinon, cette valeur sera la valeur retournée par l’animation la précédant dans la chaîne avec un <xref:System.Windows.Media.Animation.AnimationClock> qui n’est pas < C4 > <xref:System.Windows.Media.Animation.Clock.Stopped%2A> .</span><span class="sxs-lookup"><span data-stu-id="4b7c8-129">If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</span></span>  
  
 <span data-ttu-id="4b7c8-130">Le `defaultDestinationValue` est la valeur de base si l’animation est dans la première couche de composition d’animations sur une propriété ; sinon la valeur est la valeur de sortie à partir de la couche de composition précédente d’animations pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-130">The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyType">
      <MemberSignature Language="C#" Value="public override sealed Type TargetPropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetPropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Rotation3DAnimationBase.TargetPropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property TargetPropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetPropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetPropertyType : Type" Usage="System.Windows.Media.Animation.Rotation3DAnimationBase.TargetPropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b7c8-131">Obtient le type de valeur généré par cette animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-131">Gets the type of value this animation generates.</span></span></summary>
        <value><span data-ttu-id="4b7c8-132">Type de valeur produit par cette animation.</span><span class="sxs-lookup"><span data-stu-id="4b7c8-132">The type of value produced by this animation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>