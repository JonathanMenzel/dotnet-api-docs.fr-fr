<Type Name="TransactedInstaller" FullName="System.Configuration.Install.TransactedInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7aac5c1f17d9ff36c26f646255d272b113397651" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37689336" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TransactedInstaller : System.Configuration.Install.Installer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransactedInstaller extends System.Configuration.Install.Installer" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.TransactedInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class TransactedInstaller&#xA;Inherits Installer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactedInstaller : System::Configuration::Install::Installer" />
  <TypeSignature Language="F#" Value="type TransactedInstaller = class&#xA;    inherit Installer" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.Installer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit un programme d'installation qui soit réussit complètement, soit échoue et laisse l'ordinateur dans son état initial.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour exécuter les programmes d’installation dans une transaction, ajoutez-les à la <xref:System.Configuration.Install.Installer.Installers%2A> propriété de ce <xref:System.Configuration.Install.TransactedInstaller> instance.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> et <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> méthodes de la <xref:System.Configuration.Install.TransactedInstaller> classe.  
  
 Cet exemple fournit une implémentation similaire à celle de [Installutil.exe (outil Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md). Il installe des assemblys avec les options qui précèdent cet assembly spécifique. Si une option n’est pas spécifiée pour un assembly, les options de l’assembly précédent sont utilisées si un assembly est dans la liste. Si le « / u » ou « / désinstaller » est spécifiée, les assemblys sont désinstallés. Si le « / » ? ou « /Help » option est fournie, les informations d’aide s’affiche dans la console.  
  
 [!code-cpp[TransactedInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/TransactedInstaller/CPP/transactedinstaller.cpp#1)]
 [!code-csharp[TransactedInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/TransactedInstaller/CS/transactedinstaller.cs#1)]
 [!code-vb[TransactedInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TransactedInstaller/VB/transactedinstaller.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactedInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.TransactedInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactedInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Install.TransactedInstaller" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="transactedInstaller.Install savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Collections.IDictionary" /> dans lequel cette méthode enregistre les informations nécessaires à l'exécution d'une opération de validation, de restauration ou de désinstallation.</param>
        <summary>Effectue l'installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode appelle la <xref:System.Configuration.Install.TransactedInstaller.Install%2A> (méthode) de chaque programme d’installation contenu dans le <xref:System.Configuration.Install.Installer.Installers%2A> propriété de cette instance. Le <xref:System.Collections.IDictionary> objet référencé par le `savedState` paramètre est mis à jour pour refléter l’état de l’installation après exécution des programmes d’installation des relation contenant-contenus. Si tous les le <xref:System.Configuration.Install.TransactedInstaller.Install%2A> méthodes réussissent, le <xref:System.Configuration.Install.Installer.Commit%2A> méthode est appelée. Sinon, le <xref:System.Configuration.Install.Installer.Rollback%2A> méthode est appelée pour chaque programme d’installation.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> et <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> méthodes de la <xref:System.Configuration.Install.TransactedInstaller> classe.  
  
 Cet exemple fournit une implémentation similaire à celle de InstallUtil.exe. Il installe des assemblys avec les options qui précèdent cet assembly spécifique. Si une option n’est pas spécifiée pour un assembly, les options d’assemblys précédentes sont effectuées si un assembly est dans la liste. Si le « / u' ou '/ désinstaller' option est spécifiée, puis les assemblys sont désinstallés. Si le « / » ? ou '/help' option est fournie, les informations d’aide sont affichées dans la console.  
  
 [!code-cpp[TransactedInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/TransactedInstaller/CPP/transactedinstaller.cpp#1)]
 [!code-csharp[TransactedInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/TransactedInstaller/CS/transactedinstaller.cs#1)]
 [!code-vb[TransactedInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TransactedInstaller/VB/transactedinstaller.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="savedState" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Exception">L'installation a échoué et est en cours de restauration.</exception>
        <block subset="none" type="usage">
          <para>Le <see cref="T:System.Collections.IDictionary" /> spécifié par le <paramref name="savedState" /> paramètre doit être vide quand il est passé à la <see cref="M:System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)" /> (méthode).</para>
        </block>
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Configuration.Install.InstallerCollection" />
        <altmember cref="P:System.Configuration.Install.Installer.Installers" />
        <altmember cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="transactedInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Collections.IDictionary" /> qui contient l'état de l'ordinateur une fois l'installation terminée.</param>
        <summary>Supprime une installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour supprimer une installation déjà terminée. Cela <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> les appels de méthode le <xref:System.Configuration.Install.Installer.Uninstall%2A> (méthode) de chaque programme d’installation dans le <xref:System.Configuration.Install.Installer.Installers%2A> propriété pour désinstaller les ressources définies pendant l’installation. Toutes les exceptions lors de la désinstallation sont ignorées.  
  
> [!NOTE]
>  Bien que le <xref:System.Configuration.Install.Installer.Install%2A> et <xref:System.Configuration.Install.Installer.Commit%2A> méthodes enregistrent l’état de l’ordinateur après l’installation, le fichier contenant le <xref:System.Collections.IDictionary> à partir de la `savedState` paramètre a peut-être été supprimé à un moment donné une fois l’installation terminée. Si le fichier est supprimé, le `savedState` paramètre est `null`.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> et <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> méthodes de la <xref:System.Configuration.Install.TransactedInstaller> classe.  
  
 Cet exemple fournit une implémentation similaire à celle de [Installutil.exe (outil Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md). Il installe des assemblys avec les options qui précèdent cet assembly spécifique. Si une option n’est pas spécifiée pour un assembly, les options de l’assembly précédent sont utilisées si un assembly est dans la liste. Si le « / u » ou « / désinstaller » est spécifiée, les assemblys sont désinstallés. Si le « / » ? ou « /Help » option est fournie, les informations d’aide s’affiche dans la console.  
  
 [!code-cpp[TransactedInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/TransactedInstaller/CPP/transactedinstaller.cpp#1)]
 [!code-csharp[TransactedInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/TransactedInstaller/CS/transactedinstaller.cs#1)]
 [!code-vb[TransactedInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TransactedInstaller/VB/transactedinstaller.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.InstallerCollection" />
        <altmember cref="P:System.Configuration.Install.Installer.Installers" />
      </Docs>
    </Member>
  </Members>
</Type>