<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="490aa1005f294d7655c6ef034b3a59f0c10bc3a4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37689892" /></Metadata><TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <TypeSignature Language="F#" Value="type InstallContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ce581-101">Contient des informations sur l'installation en cours.</span><span class="sxs-lookup"><span data-stu-id="ce581-101">Contains information about the current installation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce581-102">En règle générale, un <xref:System.Configuration.Install.InstallContext> est créé par une installation exécutable, tel que InstallUtil.exe, qui installe les assemblys.</span><span class="sxs-lookup"><span data-stu-id="ce581-102">Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</span></span> <span data-ttu-id="ce581-103">Le programme d’installation appelle le <xref:System.Configuration.Install.InstallContext> constructeur, et transmettez-lui le chemin d’accès du fichier journal par défaut et les paramètres de ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="ce581-103">The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.</span></span>  
  
 <span data-ttu-id="ce581-104">Avant d’appeler ses <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, ou <xref:System.Configuration.Install.Installer.Uninstall%2A> méthodes, le programme d’installation définit le <xref:System.Configuration.Install.Installer.Context%2A> propriété d’un <xref:System.Configuration.Install.Installer> à l’instance de <xref:System.Configuration.Install.InstallContext>.</span><span class="sxs-lookup"><span data-stu-id="ce581-104">Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>.</span></span> <span data-ttu-id="ce581-105">Avant d’appeler ces méthodes, un <xref:System.Configuration.Install.Installer> qui contient une collection de programme d’installation dans le <xref:System.Configuration.Install.Installer.Installers%2A> jeux de propriétés la <xref:System.Configuration.Install.Installer.Context%2A> propriété de chaque programme d’installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-105">Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.</span></span>  
  
 <span data-ttu-id="ce581-106">Le <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriété contient une version analysée de la ligne de commande entrée pour lancer l’exécutable d’installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-106">The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable.</span></span> <span data-ttu-id="ce581-107">La propriété contient des informations telles que le chemin d’accès à un fichier journal, s’il faut afficher les informations du journal sur la console et s’il faut afficher une interface utilisateur pendant l’installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-107">The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</span></span> <span data-ttu-id="ce581-108">Appelez le <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> méthode pour déterminer si un paramètre de ligne de commande `true`.</span><span class="sxs-lookup"><span data-stu-id="ce581-108">Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.</span></span>  
  
 <span data-ttu-id="ce581-109">Utilisez le <xref:System.Configuration.Install.InstallContext.LogMessage%2A> méthode pour écrire des messages d’état dans le fichier journal d’installation et de la console.</span><span class="sxs-lookup"><span data-stu-id="ce581-109">Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce581-110">L’exemple suivant montre le <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructeurs, le <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriété et la <xref:System.Configuration.Install.InstallContext.LogMessage%2A> et <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> méthodes de la <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="ce581-110">The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="ce581-111">Lorsque le <xref:System.Configuration.Install.Installer.Install%2A> méthode du programme d’installation est appelée, elle vérifie les paramètres de la ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="ce581-111">When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line.</span></span> <span data-ttu-id="ce581-112">En fonction de cela, il affiche les messages de progression sur la console et l’enregistre également dans le fichier journal spécifié.</span><span class="sxs-lookup"><span data-stu-id="ce581-112">Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</span></span>  
  
 <span data-ttu-id="ce581-113">Lorsque le programme est appelé sans arguments, vide <xref:System.Configuration.Install.InstallContext> est créé.</span><span class="sxs-lookup"><span data-stu-id="ce581-113">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span> <span data-ttu-id="ce581-114">Lorsque « / LogFile » et « / LogtoConsole » sont spécifiés, le <xref:System.Configuration.Install.InstallContext> est créé en passant les arguments respectifs à <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce581-114">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce581-115">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Install.InstallContext" />.</span><span class="sxs-lookup"><span data-stu-id="ce581-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce581-116">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Install.InstallContext" />.</span><span class="sxs-lookup"><span data-stu-id="ce581-116">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce581-117">Cette surcharge ne crée pas un fichier journal pour l’installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-117">This overload does not create a log file for the installation.</span></span>  
  
   
  
## Examples  
  
> [!NOTE]
>  <span data-ttu-id="ce581-118">Cet exemple montre comment utiliser une des versions surchargées de la <xref:System.Configuration.Install.InstallContext> constructeur.</span><span class="sxs-lookup"><span data-stu-id="ce581-118">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor.</span></span> <span data-ttu-id="ce581-119">Pour obtenir des exemples qui peuvent être disponibles, consultez les rubriques de surcharges individuelles.</span><span class="sxs-lookup"><span data-stu-id="ce581-119">For other examples that might be available, see the individual overload topics.</span></span>  
  
 <span data-ttu-id="ce581-120">Lorsque le programme est appelé sans arguments, vide <xref:System.Configuration.Install.InstallContext> est créé.</span><span class="sxs-lookup"><span data-stu-id="ce581-120">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallContext : string * string[] -&gt; System.Configuration.Install.InstallContext" Usage="new System.Configuration.Install.InstallContext (logFilePath, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath"><span data-ttu-id="ce581-121">Chemin d'accès du fichier journal pour cette installation, ou <see langword="null" /> si aucun fichier journal ne doit être créé.</span><span class="sxs-lookup"><span data-stu-id="ce581-121">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</span></span></param>
        <param name="commandLine"><span data-ttu-id="ce581-122">Paramètres de ligne de commande entrés lors de l'exécution du programme d'installation, ou <see langword="null" /> si aucun paramètre n'a été entré.</span><span class="sxs-lookup"><span data-stu-id="ce581-122">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</span></span></param>
        <summary><span data-ttu-id="ce581-123">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Install.InstallContext" /> et crée un fichier journal pour l'installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-123">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce581-124">Si l’installation utilise [Installutil.exe (outil Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), ce constructeur crée un fichier journal dans le chemin spécifié et analyse le tableau de paramètres de ligne de commande dans le <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ce581-124">If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="ce581-125">Si un chemin d’accès du fichier journal est spécifié dans les paramètres de ligne de commande, il est utilisé pour créer le fichier.</span><span class="sxs-lookup"><span data-stu-id="ce581-125">If a log-file path is specified in the command-line parameters, it is used to create the file.</span></span> <span data-ttu-id="ce581-126">Si l’argument de fichier journal n’est pas spécifié dans la ligne de commande, la valeur de la `logFilePath` paramètre est utilisé.</span><span class="sxs-lookup"><span data-stu-id="ce581-126">If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used.</span></span> <span data-ttu-id="ce581-127">Pour supprimer la création d’un fichier journal, vous devez passer le « / logfile = "paramètre de ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="ce581-127">To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce581-128">Cet exemple est un extrait de l’exemple dans la vue d’ensemble de la classe de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="ce581-128">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="ce581-129">Lorsque « / LogFile » et « / LogtoConsole » sont spécifiés, le <xref:System.Configuration.Install.InstallContext> est créé en passant les arguments respectifs à <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce581-129">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><span data-ttu-id="ce581-130"><para>Transmettre votre chemin d’accès du fichier journal par défaut dans le <paramref name="logFilePath" /> paramètre lorsque vous appelez ce constructeur. C’est l’emplacement où le fichier journal est créé, sauf si le paramètre de ligne de commande /logfile est utilisé lors de l’exécution de l’exécutable d’installation.</para></span><span class="sxs-lookup"><span data-stu-id="ce581-130"><para>Pass your default log-file path in the <paramref name="logFilePath" /> parameter when you call this constructor. This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</para></span></span></block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="member this.IsParameterTrue : string -&gt; bool" Usage="installContext.IsParameterTrue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="ce581-131">Nom du paramètre de ligne de commande à vérifier.</span><span class="sxs-lookup"><span data-stu-id="ce581-131">The name of the command-line parameter to check.</span></span></param>
        <summary><span data-ttu-id="ce581-132">Détermine si le paramètre de ligne de commande spécifié a la valeur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ce581-132">Determines whether the specified command-line parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="ce581-133"><see langword="true" /> si le paramètre spécifié a la valeur "yes", "true", "1" ou une chaîne vide ("") ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce581-133"><see langword="true" /> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce581-134">Cette méthode accède à la <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriété, qui contient une version analysée des paramètres de ligne de commande, pour déterminer si le paramètre spécifié est `true`.</span><span class="sxs-lookup"><span data-stu-id="ce581-134">This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce581-135">Cet exemple est un extrait de l’exemple dans la vue d’ensemble de la classe de la <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="ce581-135">This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="ce581-136">Il utilise le <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> méthode pour déterminer si le `LogtoConsole` paramètre a été défini.</span><span class="sxs-lookup"><span data-stu-id="ce581-136">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="ce581-137">Si `yes`, il utilisera alors le <xref:System.Configuration.Install.InstallContext.LogMessage%2A> méthode pour écrire des messages d’état dans le fichier journal d’installation et de la console.</span><span class="sxs-lookup"><span data-stu-id="ce581-137">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.LogMessage : string -&gt; unit" Usage="installContext.LogMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ce581-138">Message à écrire.</span><span class="sxs-lookup"><span data-stu-id="ce581-138">The message to write.</span></span></param>
        <summary><span data-ttu-id="ce581-139">Affiche un message dans la console et l'enregistre dans le fichier journal de l'installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-139">Writes a message to the console and to the log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce581-140">Un programme d’installation peut appeler cette méthode pour écrire des cours ou autres informations d’état dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="ce581-140">An installer can call this method to write progress or other status information to the log file.</span></span> <span data-ttu-id="ce581-141">Si les paramètres de ligne de commande spécifient qu’une interface utilisateur doit être affichée, le programme d’installation doit afficher des boîtes de message ou effectuer des requêtes parallèlement à l’appel le <xref:System.Configuration.Install.InstallContext.LogMessage%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ce581-141">If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method.</span></span> <span data-ttu-id="ce581-142">Texte écrit dans le fichier journal n’est pas visibles par l’utilisateur à moins que InstallUtil.exe est utilisé pour exécuter l’installation et « / LogToConsole = true » est spécifié dans la ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="ce581-142">Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce581-143">Cet exemple est un extrait de l’exemple dans la vue d’ensemble de la classe de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="ce581-143">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="ce581-144">Il utilise le <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> méthode pour déterminer si le `LogtoConsole` paramètre a été défini.</span><span class="sxs-lookup"><span data-stu-id="ce581-144">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="ce581-145">Si `yes`, il utilisera alors le <xref:System.Configuration.Install.InstallContext.LogMessage%2A> méthode pour écrire des messages d’état dans le fichier journal d’installation et de la console.</span><span class="sxs-lookup"><span data-stu-id="ce581-145">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce581-146">Obtient les paramètres de ligne de commande qui ont été entrés lors de l'exécution de InstallUtil.exe.</span><span class="sxs-lookup"><span data-stu-id="ce581-146">Gets the command-line parameters that were entered when InstallUtil.exe was run.</span></span></summary>
        <value><span data-ttu-id="ce581-147"><see cref="T:System.Collections.Specialized.StringDictionary" /> représentant les paramètres de ligne de commande qui ont été entrés lors du lancement de l'exécutable d'installation.</span><span class="sxs-lookup"><span data-stu-id="ce581-147">A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce581-148">Lorsqu’un nouveau <xref:System.Configuration.Install.InstallContext> est créé, la ligne de commande paramètres sont analysés dans le <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ce581-148">When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="ce581-149">Les clés et les valeurs des paramètres sont des chaînes.</span><span class="sxs-lookup"><span data-stu-id="ce581-149">Both the keys and the values of the parameters are strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce581-150">Cet exemple est un extrait de l’exemple dans la vue d’ensemble de la classe de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="ce581-150">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="ce581-151">L’exemple récupère le <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriété pour déterminer si un argument de ligne de commande a été entré par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ce581-151">The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user.</span></span> <span data-ttu-id="ce581-152">Il utilise également le <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> méthode pour déterminer si le `LogtoConsole` paramètre a été défini.</span><span class="sxs-lookup"><span data-stu-id="ce581-152">It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="ce581-153">Si `yes`, il utilisera alors le <xref:System.Configuration.Install.InstallContext.LogMessage%2A> méthode pour écrire des messages d’état dans le fichier journal d’installation et de la console.</span><span class="sxs-lookup"><span data-stu-id="ce581-153">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member ParseCommandLine : string[] -&gt; System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.ParseCommandLine args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="ce581-154">Tableau contenant les paramètres de ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="ce581-154">An array containing the command-line parameters.</span></span></param>
        <summary><span data-ttu-id="ce581-155">Analyse les paramètres de ligne de commande dans un dictionnaire de chaînes.</span><span class="sxs-lookup"><span data-stu-id="ce581-155">Parses the command-line parameters into a string dictionary.</span></span></summary>
        <returns><span data-ttu-id="ce581-156"><see cref="T:System.Collections.Specialized.StringDictionary" /> contenant les paramètres de ligne de commande analysés.</span><span class="sxs-lookup"><span data-stu-id="ce581-156">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>