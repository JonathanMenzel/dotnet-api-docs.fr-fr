<Type Name="CodeTypeParameter" FullName="System.CodeDom.CodeTypeParameter">
  <TypeSignature Language="C#" Value="public class CodeTypeParameter : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeParameter extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeParameter&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeParameter : System::CodeDom::CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="93cbf-101">Représente un paramètre de type d'un type ou d'une méthode générique.</span><span class="sxs-lookup"><span data-stu-id="93cbf-101">Represents a type parameter of a generic type or method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbf-102">La <xref:System.CodeDom.CodeTypeParameter> classe représente un paramètre de type dans la déclaration d’un type générique ou une méthode.</span><span class="sxs-lookup"><span data-stu-id="93cbf-102">The <xref:System.CodeDom.CodeTypeParameter> class represents a type parameter in the declaration of a generic type or method.</span></span>  
  
 <span data-ttu-id="93cbf-103">Une déclaration de type ou de méthode générique contient un ou plusieurs types connus comme paramètres non spécifiés.</span><span class="sxs-lookup"><span data-stu-id="93cbf-103">A generic type or method declaration contains one or more unspecified types known as type parameters.</span></span> <span data-ttu-id="93cbf-104">Un nom de paramètre de type représente le type dans le corps de la déclaration générique.</span><span class="sxs-lookup"><span data-stu-id="93cbf-104">A type parameter name stands for the type within the body of the generic declaration.</span></span> <span data-ttu-id="93cbf-105">Par exemple, la déclaration générique pour la <xref:System.Collections.Generic.List%601> classe contient le paramètre de type `T`.</span><span class="sxs-lookup"><span data-stu-id="93cbf-105">For example, the generic declaration for the <xref:System.Collections.Generic.List%601> class contains the type parameter `T`.</span></span>  
  
 <span data-ttu-id="93cbf-106">Pour plus d’informations sur les types génériques, consultez [génériques dans la bibliothèque de classes .NET Framework](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md).</span><span class="sxs-lookup"><span data-stu-id="93cbf-106">For more information on generics, see [Generics in the .NET Framework Class Library](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cbf-107">L’exemple de code suivant illustre l’utilisation de la <xref:System.CodeDom.CodeTypeParameter> classe pour créer un graphique CodeDOM pour générer une application contenant le code de génériques.</span><span class="sxs-lookup"><span data-stu-id="93cbf-107">The following code example shows the use of the <xref:System.CodeDom.CodeTypeParameter> class to create a CodeDOM graph to generate an application containing generics code.</span></span>  
  
 [!code-csharp[System.CodeDom.Generics.1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#1)]
 [!code-vb[System.CodeDom.Generics.1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93cbf-108">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeParameter" />.</span><span class="sxs-lookup"><span data-stu-id="93cbf-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cbf-109">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeParameter" />.</span><span class="sxs-lookup"><span data-stu-id="93cbf-109">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbf-110">Si vous utilisez ce constructeur, vous devez définir le <xref:System.CodeDom.CodeTypeParameter.Name%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="93cbf-110">If you use this constructor, you should set the <xref:System.CodeDom.CodeTypeParameter.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeParameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeParameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeParameter(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93cbf-111">Nom du paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-111">The name of the type parameter.</span></span></param>
        <summary><span data-ttu-id="93cbf-112">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeParameter" /> avec le nom du paramètre de type spécifié.</span><span class="sxs-lookup"><span data-stu-id="93cbf-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameter" /> class with the specified type parameter name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cbf-113">L’exemple de code suivant illustre l’utilisation de <xref:System.CodeDom.CodeTypeParameter.%23ctor%2A> constructeur pour ajouter un paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-113">The following code example shows the use of <xref:System.CodeDom.CodeTypeParameter.%23ctor%2A> constructor to add a type parameter.</span></span>  <span data-ttu-id="93cbf-114">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.CodeTypeParameter> classe.</span><span class="sxs-lookup"><span data-stu-id="93cbf-114">This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Generics.1#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#10)]
 [!code-vb[System.CodeDom.Generics.1#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeParameter.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ Constraints { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbf-115">Obtient les contraintes pour le paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-115">Gets the constraints for the type parameter.</span></span></summary>
        <value><span data-ttu-id="93cbf-116">Objet <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> qui contient les contraintes pour le paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-116">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> object that contains the constraints for the type parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbf-117">Une contrainte spécifie le type que le paramètre de type doit dériver d’ou l’implémenter.</span><span class="sxs-lookup"><span data-stu-id="93cbf-117">A constraint specifies the type that the type parameter must derive from or implement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cbf-118">L’exemple de code suivant illustre l’utilisation de la <xref:System.CodeDom.CodeTypeParameter.Constraints%2A> propriété à ajouter une nouvelle contrainte.</span><span class="sxs-lookup"><span data-stu-id="93cbf-118">The following code example shows the use of the <xref:System.CodeDom.CodeTypeParameter.Constraints%2A> property to add a new constraint.</span></span>  <span data-ttu-id="93cbf-119">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.CodeTypeParameter> classe.</span><span class="sxs-lookup"><span data-stu-id="93cbf-119">This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Generics.1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#4)]
 [!code-vb[System.CodeDom.Generics.1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeParameter.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomAttributes As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ CustomAttributes { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbf-120">Obtient les attributs personnalisés du paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-120">Gets the custom attributes of the type parameter.</span></span></summary>
        <value><span data-ttu-id="93cbf-121"><see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> qui indique les attributs personnalisés du paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-121">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes of the type parameter.</span></span> <span data-ttu-id="93cbf-122">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cbf-122">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbf-123">Cette propriété peut être utilisée pour ajouter des attributs de métadonnées à la déclaration du paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-123">This property can be used to add metadata attributes to the declaration of the type parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="93cbf-124">Cette propriété est `null` par défaut et doit être vérifiée avant de le référencer.</span><span class="sxs-lookup"><span data-stu-id="93cbf-124">This property is `null` by default and should be checked before referencing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cbf-125">L’exemple de code suivant illustre l’utilisation de la <xref:System.CodeDom.CodeTypeParameter.CustomAttributes%2A> propriété à ajouter un nouvel attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="93cbf-125">The following code example shows the use of the <xref:System.CodeDom.CodeTypeParameter.CustomAttributes%2A> property to add a new custom attribute.</span></span>  <span data-ttu-id="93cbf-126">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.CodeTypeParameter> classe.</span><span class="sxs-lookup"><span data-stu-id="93cbf-126">This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Generics.1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#5)]
 [!code-vb[System.CodeDom.Generics.1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="HasConstructorConstraint">
      <MemberSignature Language="C#" Value="public bool HasConstructorConstraint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasConstructorConstraint" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeParameter.HasConstructorConstraint" />
      <MemberSignature Language="VB.NET" Value="Public Property HasConstructorConstraint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasConstructorConstraint { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbf-127">Obtient ou définit une valeur qui indique si le paramètre de type possède une contrainte de constructeur.</span><span class="sxs-lookup"><span data-stu-id="93cbf-127">Gets or sets a value indicating whether the type parameter has a constructor constraint.</span></span></summary>
        <value>
          <span data-ttu-id="93cbf-128"><see langword="true" /> si le paramètre de type possède une contrainte de constructeur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93cbf-128"><see langword="true" /> if the type parameter has a constructor constraint; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="93cbf-129">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93cbf-129">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbf-130">Une contrainte de constructeur indique au compilateur que le paramètre de type expose un constructeur public de valeur par défaut (un constructeur public sans paramètres).</span><span class="sxs-lookup"><span data-stu-id="93cbf-130">A constructor constraint indicates to the compiler that the type parameter exposes a default public constructor (a public constructor with no parameters).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cbf-131">L’exemple de code suivant illustre l’utilisation de la <xref:System.CodeDom.CodeTypeParameter.HasConstructorConstraint%2A> propriété pour déterminer si le paramètre de type a une contrainte de constructeur.</span><span class="sxs-lookup"><span data-stu-id="93cbf-131">The following code example shows the use of the <xref:System.CodeDom.CodeTypeParameter.HasConstructorConstraint%2A> property in determining if the type parameter has a constructor constraint.</span></span>  <span data-ttu-id="93cbf-132">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.CodeTypeParameter> classe.</span><span class="sxs-lookup"><span data-stu-id="93cbf-132">This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Generics.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#3)]
 [!code-vb[System.CodeDom.Generics.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbf-133">Obtient ou définit le nom du paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-133">Gets or sets the name of the type parameter.</span></span></summary>
        <value><span data-ttu-id="93cbf-134">Nom du paramètre de type.</span><span class="sxs-lookup"><span data-stu-id="93cbf-134">The name of the type parameter.</span></span> <span data-ttu-id="93cbf-135">La valeur par défaut est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="93cbf-135">The default is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>