<Type Name="CodeStatementCollection" FullName="System.CodeDom.CodeStatementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7a16f9757b4fb9e5f8c98e01959f42ea1d1e16d" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52381986" /></Metadata><TypeSignature Language="C#" Value="public class CodeStatementCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeStatementCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeStatementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeStatementCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeStatementCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type CodeStatementCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une collection d'objets <see cref="T:System.CodeDom.CodeStatement" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.CodeDom.CodeStatementCollection> fournit un objet de collection simple qui peut être utilisé pour stocker un ensemble d’objets <xref:System.CodeDom.CodeStatement>.  
  
   
  
## Examples  
 L'exemple suivant montre comment utiliser la classe <xref:System.CodeDom.CodeStatementCollection>. L’exemple crée une nouvelle instance de la classe et utilise plusieurs méthodes pour ajouter des instructions à la collection, retourner leur index et ajouter ou supprimer des instructions à un point d’index spécifique.  
  
 [!code-cpp[CodeStatementCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeStatementCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeStatementCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeStatement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeStatementCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeStatementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeStatementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeStatementCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer une instance vide de la <xref:System.CodeDom.CodeStatementCollection> classe.  
  
 [!code-cpp[CodeStatementCollectionExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#2)]
 [!code-csharp[CodeStatementCollectionExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#2)]
 [!code-vb[CodeStatementCollectionExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeStatementCollection (System.CodeDom.CodeStatement[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeStatement[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeStatement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeStatementCollection(cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeStatementCollection : System.CodeDom.CodeStatement[] -&gt; System.CodeDom.CodeStatementCollection" Usage="new System.CodeDom.CodeStatementCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement[]" />
      </Parameters>
      <Docs>
        <param name="value">Tableau d'objets <see cref="T:System.CodeDom.CodeStatement" /> à utiliser pour initialiser la collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeStatementCollection" /> qui contient le tableau d'objets <see cref="T:System.CodeDom.CodeStatement" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeStatementCollection (System.CodeDom.CodeStatementCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeStatementCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatementCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeStatementCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeStatementCollection(System::CodeDom::CodeStatementCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeStatementCollection : System.CodeDom.CodeStatementCollection -&gt; System.CodeDom.CodeStatementCollection" Usage="new System.CodeDom.CodeStatementCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatementCollection" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.CodeDom.CodeStatementCollection" /> à utiliser pour initialiser la collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeStatementCollection" /> qui contient les éléments de la collection source spécifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute l'objet <see cref="T:System.CodeDom.CodeStatement" /> spécifié à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CodeExpression) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::CodeExpression ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.CodeExpression -&gt; int" Usage="codeStatementCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.CodeDom.CodeExpression" /> à ajouter.</param>
        <summary>Ajoute l'objet <see cref="T:System.CodeDom.CodeExpression" /> spécifié à la collection.</summary>
        <returns>Index au niveau duquel le nouvel élément a été inséré.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeStatement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeStatement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CodeStatement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::CodeStatement ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.CodeStatement -&gt; int" Usage="codeStatementCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.CodeDom.CodeStatement" /> à ajouter.</param>
        <summary>Ajoute l'objet <see cref="T:System.CodeDom.CodeStatement" /> spécifié à la collection.</summary>
        <returns>Index au niveau duquel le nouvel élément a été inséré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment ajouter un <xref:System.CodeDom.CodeStatement> de l’objet à un <xref:System.CodeDom.CodeStatementCollection> instance.  
  
 [!code-cpp[CodeStatementCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeStatementCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeStatementCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un ensemble d'objets <see cref="T:System.CodeDom.CodeStatement" /> à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeStatement[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeStatement[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeStatement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeStatement[] -&gt; unit" Usage="codeStatementCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement[]" />
      </Parameters>
      <Docs>
        <param name="value">Tableau d'objets <see cref="T:System.CodeDom.CodeStatement" /> à ajouter à la collection.</param>
        <summary>Ajoute un ensemble d'objets <see cref="T:System.CodeDom.CodeStatement" /> à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.CodeDom.CodeStatementCollection.AddRange%28System.CodeDom.CodeStatement%5B%5D%29> surcharge de méthode pour ajouter les membres d’un tableau à un <xref:System.CodeDom.CodeStatementCollection> instance.  
  
 [!code-cpp[CodeStatementCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeStatementCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeStatementCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeStatementCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeStatementCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatementCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeStatementCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::CodeDom::CodeStatementCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeStatementCollection -&gt; unit" Usage="codeStatementCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatementCollection" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.CodeDom.CodeStatementCollection" /> qui contient les objets à ajouter à la collection.</param>
        <summary>Ajoute le contenu d'un autre objet <see cref="T:System.CodeDom.CodeStatementCollection" /> à la fin de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.CodeDom.CodeStatementCollection.AddRange%28System.CodeDom.CodeStatementCollection%29> surcharge de méthode pour ajouter les membres d’un <xref:System.CodeDom.CodeStatementCollection> à un autre.  
  
 [!code-cpp[CodeStatementCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeStatementCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeStatementCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeStatement)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeStatement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeStatement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.Contains(System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As CodeStatement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::CodeDom::CodeStatement ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.CodeDom.CodeStatement -&gt; bool" Usage="codeStatementCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.CodeDom.CodeStatement" /> à rechercher dans la collection.</param>
        <summary>Obtient une valeur qui indique si la collection contient l'<see cref="T:System.CodeDom.CodeStatement" /> spécifiée.</summary>
        <returns><see langword="true" /> si la collection contient l'objet spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant utilise le <xref:System.CodeDom.CodeStatementCollection.Contains%2A> méthode pour rechercher la présence d’une <xref:System.CodeDom.CodeStatement> et récupérer la valeur d’index à laquelle elle a été trouvée.  
  
 [!code-cpp[CodeStatementCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeStatementCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeStatementCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeStatementCollection.IndexOf(System.CodeDom.CodeStatement)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeStatement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeStatement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.CopyTo(System.CodeDom.CodeStatement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CodeStatement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.CodeDom.CodeStatement[] * int -&gt; unit" Usage="codeStatementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeStatement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
        <param name="index">Index du tableau à partir duquel commencer l'insertion.</param>
        <summary>Copie les éléments de l'objet <see cref="T:System.CodeDom.CodeStatementCollection" /> dans une instance <see cref="T:System.Array" /> unidimensionnelle, en commençant à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment copier le contenu d’un <xref:System.CodeDom.CodeStatementCollection> objet dans un tableau, en commençant à la valeur d’index spécifiée.  
  
 [!code-cpp[CodeStatementCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeStatementCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeStatementCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le tableau de destination est multidimensionnel.  
  
- ou - 
Le nombre d'éléments dans le <see cref="T:System.CodeDom.CodeStatementCollection" /> est supérieur à l'espace disponible entre l'index du tableau cible spécifié par le paramètre <paramref name="index" /> et la fin du tableau cible.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="array" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à l'index minimal du tableau cible.</exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeStatement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeStatement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.IndexOf(System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CodeStatement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::CodeDom::CodeStatement ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.CodeDom.CodeStatement -&gt; int" Usage="codeStatementCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.CodeDom.CodeStatement" /> à rechercher dans la collection.</param>
        <summary>Obtient l'index de l'objet <see cref="T:System.CodeDom.CodeStatement" /> spécifié dans la <see cref="T:System.CodeDom.CodeStatementCollection" />, s'il existe dans la collection.</summary>
        <returns>Index de l'objet spécifié, s'il existe, dans la collection ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant recherche la présence d’un spécifique <xref:System.CodeDom.CodeStatement> et utilise le <xref:System.CodeDom.CodeStatementCollection.IndexOf%2A> méthode pour récupérer la valeur d’index à laquelle elle a été trouvée.  
  
 [!code-cpp[CodeStatementCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeStatementCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeStatementCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeStatementCollection.Contains(System.CodeDom.CodeStatement)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeStatement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeStatement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.Insert(System.Int32,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::CodeDom::CodeStatement ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.CodeDom.CodeStatement -&gt; unit" Usage="codeStatementCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro dans lequel l'objet spécifié doit être inséré.</param>
        <param name="value">Objet <see cref="T:System.CodeDom.CodeStatement" /> à insérer.</param>
        <summary>Insère l'objet <see cref="T:System.CodeDom.CodeStatement" /> indiqué dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.CodeDom.CodeStatementCollection.Insert%2A> méthode pour ajouter un <xref:System.CodeDom.CodeStatement> de l’objet à un <xref:System.CodeDom.CodeStatementCollection>.  
  
 [!code-cpp[CodeStatementCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeStatementCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeStatementCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeStatement)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatement this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeStatementCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CodeStatement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatement ^ default[int] { System::CodeDom::CodeStatement ^ get(int index); void set(int index, System::CodeDom::CodeStatement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CodeDom.CodeStatement with get, set" Usage="System.CodeDom.CodeStatementCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de la collection à laquelle accéder.</param>
        <summary>Obtient ou définit l'objet <see cref="T:System.CodeDom.CodeStatement" /> à l'index spécifié dans la collection.</summary>
        <value><see cref="T:System.CodeDom.CodeStatement" /> pour chaque index valide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est un indexeur qui peut être utilisé pour accéder à la collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est en dehors de la plage valide des index pour la collection.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeStatement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeStatement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeStatementCollection.Remove(System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::CodeDom::CodeStatement ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.CodeDom.CodeStatement -&gt; unit" Usage="codeStatementCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.CodeDom.CodeStatement" /> à supprimer de la collection.</param>
        <summary>Supprime l'objet <see cref="T:System.CodeDom.CodeStatement" /> spécifié de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.CodeDom.CodeStatementCollection.Remove%2A> méthode pour supprimer un <xref:System.CodeDom.CodeStatement> de l’objet à partir d’un <xref:System.CodeDom.CodeStatementCollection>.  
  
 [!code-cpp[CodeStatementCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeStatementCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeStatementCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeStatementCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeStatementCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeStatementCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'objet spécifié est introuvable dans la collection.</exception>
      </Docs>
    </Member>
  </Members>
</Type>