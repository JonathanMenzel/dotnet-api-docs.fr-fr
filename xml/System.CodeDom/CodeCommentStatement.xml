<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeCommentStatement.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5466537bbab088adb6c5a3d053844e25837f44537.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">466537bbab088adb6c5a3d053844e25837f44537</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeCommentStatement">
          <source>Represents a statement consisting of a single comment.</source>
          <target state="translated">Représente une instruction constituée d'un seul commentaire.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can be used to represent a single-line comment statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> peut être utilisé pour représenter une instruction de commentaire sur une ligne.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> is a statement, so it can be inserted into a statements collection and will appear on its own line.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> étant une instruction, il peut être inséré dans une collection d’instructions et apparaîtra sur sa propre ligne.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can also be added to the comments collection of <ph id="ph2">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> or any object that derives from <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> peut également être ajoutée à la collection de commentaires de <ph id="ph2">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> ou tout objet qui dérive de <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> to represent a comment in source code.</source>
          <target state="translated">Cet exemple montre comment utiliser un <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> pour représenter un commentaire dans le code source.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeCommentStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> that indicates the comment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> indiquant le commentaire.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified comment.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> avec le commentaire spécifié.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
          <source>The contents of the comment.</source>
          <target state="translated">Contenu du commentaire.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified text as contents.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> avec le texte spécifié comme contenu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The contents of the comment.</source>
          <target state="translated">Contenu du commentaire.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comment is a documentation comment; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le commentaire est un commentaire de la documentation ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified text and documentation comment flag.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> avec le texte et l'indicateur de commentaire de documentation spécifiés.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`docComment`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> is a documentation comment and the comment is structured using triple delimiter characters.</source>
          <target state="translated">Si le <ph id="ph1">`docComment`</ph> paramètre est <ph id="ph2">`true`</ph>, le <ph id="ph3">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> est un commentaire de documentation et le commentaire est structuré à l’aide de caractères de délimitation triple.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>For example, in C# the comment is "<ph id="ph1">`///`</ph>", in Visual Basic "<ph id="ph2">`'''`</ph>".</source>
          <target state="translated">Par exemple, en c#, le commentaire est «<ph id="ph1">`///`</ph>», en Visual Basic «<ph id="ph2">`'''`</ph>».</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the <ph id="ph1">`&lt;summary&gt;`</ph> element.</source>
          <target state="translated">Commentaires de documentation sont utilisés pour identifier un champ de commentaire XML, tel qu’un type ou un résumé de membre identifié par le <ph id="ph1">`&lt;summary&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor to create a comment statement to be used as an XML comment field.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructeur pour créer une instruction de commentaire à utiliser comme champ de commentaire XML.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>This example is part of a larger example that follows.</source>
          <target state="translated">Cet exemple fait partie d’un exemple plus complet qui suit.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates the creation of a simple "Hello World" console application and the generation of an XML documentation file for the compiled application.</source>
          <target state="translated">L’exemple de code suivant illustre la création d’une application de console simple « Hello World » et la génération d’un fichier de documentation XML pour l’application compilée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeCommentStatement.Comment">
          <source>Gets or sets the contents of the comment.</source>
          <target state="translated">Obtient ou définit le contenu du commentaire.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeCommentStatement.Comment">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> that indicates the comment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> indiquant le commentaire.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>