<Type Name="CodeTypeReference" FullName="System.CodeDom.CodeTypeReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d35cc2b9937c2c9fcdb98dd3b5f2b3135aceaf" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49148777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeTypeReference : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeReference&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeReference : System::CodeDom::CodeObject" />
  <TypeSignature Language="F#" Value="type CodeTypeReference = class&#xA;    inherit CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c38cf-101">Représente une référence à un type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c38cf-101">Represents a reference to a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-102">Un <xref:System.CodeDom.CodeTypeReference> objet est utilisé pour représenter un type pour les objets CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="c38cf-102">A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects.</span></span> <span data-ttu-id="c38cf-103">Lorsque les types CodeDOM ont un `Type` propriété, il est de type <xref:System.CodeDom.CodeTypeReference>.</span><span class="sxs-lookup"><span data-stu-id="c38cf-103">When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>.</span></span> <span data-ttu-id="c38cf-104">Par exemple, le <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> propriété est un <xref:System.CodeDom.CodeTypeReference> qui représente le type de données d’un champ.</span><span class="sxs-lookup"><span data-stu-id="c38cf-104">For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.</span></span>  
  
 <span data-ttu-id="c38cf-105">Un <xref:System.CodeDom.CodeTypeReference> peut être initialisée avec un <xref:System.Type> objet ou une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c38cf-105">A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string.</span></span> <span data-ttu-id="c38cf-106">Il est généralement recommandé d’utiliser un <xref:System.Type> pour ce faire, même s’il ne peut pas toujours possible.</span><span class="sxs-lookup"><span data-stu-id="c38cf-106">It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible.</span></span> <span data-ttu-id="c38cf-107">Si initialisez une instance de cette classe avec une chaîne, il est fortement recommandé de toujours utiliser des types qualifiés complets, tels que « System.Console » au lieu de simplement « Console », car tous les langages ne prennent en charge l’importation des espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="c38cf-107">If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</span></span> <span data-ttu-id="c38cf-108">Types de tableau peuvent être spécifiés en passant dans un objet de type pour un tableau ou à l’aide d’un des constructeurs qui acceptent le rang en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="c38cf-108">Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</span></span>  
  
 <span data-ttu-id="c38cf-109">Le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriété spécifie le nom du type à référencer.</span><span class="sxs-lookup"><span data-stu-id="c38cf-109">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference.</span></span> <span data-ttu-id="c38cf-110">Pour les références aux types tableau, le <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> propriété indique le type des éléments du tableau et le <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> propriété indique le nombre de dimensions dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="c38cf-110">For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c38cf-111">L’exemple suivant illustre l’utilisation d’un <xref:System.CodeDom.CodeTypeReference> pour représenter une référence à un type.</span><span class="sxs-lookup"><span data-stu-id="c38cf-111">The following example demonstrates use of a <xref:System.CodeDom.CodeTypeReference> to represent a reference to a type.</span></span>  
  
 [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]
 [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]
 [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-112">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-113">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-114">Ce constructeur crée un vide <xref:System.CodeDom.CodeTypeReference> objet.</span><span class="sxs-lookup"><span data-stu-id="c38cf-114">This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.</span></span>  <span data-ttu-id="c38cf-115">Si vous utilisez ce constructeur, définissez des propriétés pour établir la référence de type.</span><span class="sxs-lookup"><span data-stu-id="c38cf-115">If you use this constructor, set properties to establish the type reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeParameter As CodeTypeParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeParameter ^ typeParameter);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeParameter -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeParameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" />
      </Parameters>
      <Docs>
        <param name="typeParameter">
          <span data-ttu-id="c38cf-116">
            <see cref="T:System.CodeDom.CodeTypeParameter" /> qui représente le type du paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-116">A <see cref="T:System.CodeDom.CodeTypeParameter" /> that represents the type of the type parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-117">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du paramètre du type de code spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-117">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified code type parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="c38cf-118">Nom du type à référencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-118">The name of the type to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-119">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du nom du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-119">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-120">Si le `typeName` paramètre fait référence à un type générique, il doit respecter les conventions de syntaxe pour les types génériques.</span><span class="sxs-lookup"><span data-stu-id="c38cf-120">If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="c38cf-121">Par exemple, la signature de la réflexion pour un <xref:System.Collections.Generic.Dictionary%602> type, où `K` est une chaîne et `V` est un <xref:System.Collections.Generic.List%601> d’entiers, est représenté par réflexion comme suit (avec les informations d’assembly supprimées) : ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span><span class="sxs-lookup"><span data-stu-id="c38cf-121">For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c38cf-122">Vous devez utiliser des crochets ([]) et non le C# crochets pointus (<>) pour délimiter des paramètres génériques.</span><span class="sxs-lookup"><span data-stu-id="c38cf-122">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="c38cf-123">Pour éviter la possibilité de faire une erreur dans la spécification de la syntaxe, envisagez d’utiliser le constructeur qui prend un type en tant que paramètre au lieu d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c38cf-123">To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c38cf-124">
            <see cref="T:System.Type" /> à référencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-124">The <see cref="T:System.Type" /> to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-125">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-125">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c38cf-126">
            <paramref name="type" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-126">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arrayType As CodeTypeReference, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeReference ^ arrayType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeReference * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (arrayType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType">
          <span data-ttu-id="c38cf-127">
            <see cref="T:System.CodeDom.CodeTypeReference" /> qui indique le type de tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-127">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="c38cf-128">Nombre de dimensions dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-128">The number of dimensions in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-129">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> avec le rang et le type de tableau spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-129">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type and rank.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-130">Ce constructeur peut être utilisé pour construire des tableaux de tableaux en imbriquant <xref:System.CodeDom.CodeTypeReference> objets.</span><span class="sxs-lookup"><span data-stu-id="c38cf-130">This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, params System.CodeDom.CodeTypeReference[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ParamArray typeArguments As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReference[] -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="c38cf-131">Nom du type à référencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-131">The name of the type to reference.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="c38cf-132">Tableau de valeurs <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-132">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-133">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du nom de type et des arguments de type spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-133">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and type arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="c38cf-134">Nom du type à référencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-134">The name of the type to reference.</span>
          </span>
        </param>
        <param name="codeTypeReferenceOption">
          <span data-ttu-id="c38cf-135">Option de référence de type de code, une des valeurs <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-135">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-136">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du nom de type spécifié et de l'option de référence de type de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-136">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and code type reference option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string baseType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseType As String, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ baseType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (baseType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseType" Type="System.String" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="baseType">
          <span data-ttu-id="c38cf-137">Nom du type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-137">The name of the type of the elements of the array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="c38cf-138">Nombre de dimensions du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-138">The number of dimensions of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-139">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> avec le rang et le nom du type de tableau spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-139">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type name and rank.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (type, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c38cf-140">
            <see cref="T:System.Type" /> à référencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-140">The <see cref="T:System.Type" /> to reference.</span>
          </span>
        </param>
        <param name="codeTypeReferenceOption">
          <span data-ttu-id="c38cf-141">Option de référence de type de code, une des valeurs <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-141">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c38cf-142">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeTypeReference" /> à l'aide du type spécifié et de la référence de type de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-142">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type and code type reference.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ArrayElementType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayElementType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ArrayElementType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayElementType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-143">Obtient ou définit le type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-143">Gets or sets the type of the elements in the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c38cf-144">
            <see cref="T:System.CodeDom.CodeTypeReference" /> qui indique le type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-144">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-145">Cela est ignorée sauf si le <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> propriété est supérieure ou égale à 1.</span><span class="sxs-lookup"><span data-stu-id="c38cf-145">This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayRank">
      <MemberSignature Language="C#" Value="public int ArrayRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArrayRank" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayRank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArrayRank { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayRank : int with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-146">Obtient ou définit le rang du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-146">Gets or sets the array rank of the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c38cf-147">Nombre de dimensions du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-147">The number of dimensions of the array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public string BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : string with get, set" Usage="System.CodeDom.CodeTypeReference.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-148">Obtient ou définit le nom du type référencé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-148">Gets or sets the name of the type being referenced.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c38cf-149">Nom du type référencé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-149">The name of the type being referenced.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-150">Cette propriété contient le nom du type, sauf si elle est un type tableau, auquel cas il est le type d’élément de tableau.</span><span class="sxs-lookup"><span data-stu-id="c38cf-150">This property contains the name of the type unless it is an array type, in which case it is the array element type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c38cf-151">Le nom de la propriété peut être trompeur.</span><span class="sxs-lookup"><span data-stu-id="c38cf-151">The name of the property may be misleading.</span></span> <span data-ttu-id="c38cf-152">Cette propriété contient uniquement le nom de type avec aucun ornement de tableau ou les arguments de type générique supprimé, pas le type de base ou parent comme on pourrait attendre.</span><span class="sxs-lookup"><span data-stu-id="c38cf-152">This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</span></span> <span data-ttu-id="c38cf-153">Par exemple, le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> valeur ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` est ``System.Collections.Generic.Dictionary`2``.</span><span class="sxs-lookup"><span data-stu-id="c38cf-153">For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.</span></span>  
  
## <a name="representation-of-generic-types"></a><span data-ttu-id="c38cf-154">Représentation sous forme de Types génériques</span><span class="sxs-lookup"><span data-stu-id="c38cf-154">Representation of Generic Types</span></span>  
 <span data-ttu-id="c38cf-155">Les informations contenues dans cette section sont destinées aux développeurs de fournisseur CodeDom et s’applique uniquement aux langages conformes à CLS.</span><span class="sxs-lookup"><span data-stu-id="c38cf-155">The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</span></span> <span data-ttu-id="c38cf-156">La valeur de retour peut contenir des types génériques.</span><span class="sxs-lookup"><span data-stu-id="c38cf-156">The return value can contain generic types.</span></span> <span data-ttu-id="c38cf-157">Types génériques sont mis en forme avec le nom du type suivi par un accent grave (« ' ») suivi d’un nombre d’arguments de type générique.</span><span class="sxs-lookup"><span data-stu-id="c38cf-157">Generic types are formatted with the name of the type followed by a grave accent ("\`") followed by a count of the generic type arguments.</span></span> <span data-ttu-id="c38cf-158">Les arguments de type générique peuvent être trouvés dans le <xref:System.CodeDom.CodeTypeReferenceCollection> retourné par la <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c38cf-158">The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property.</span></span> <span data-ttu-id="c38cf-159">Les valeurs retournées par <xref:System.CodeDom.CodeTypeReference.BaseType%2A> et associé <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contiennent le même contenu que la valeur du type retourné par réflexion.</span><span class="sxs-lookup"><span data-stu-id="c38cf-159">The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.</span></span>  
  
 <span data-ttu-id="c38cf-160">Par exemple, construit <xref:System.Collections.Generic.Dictionary%602> où `K` est une chaîne et `V` est un élément construit <xref:System.Collections.Generic.List%601> d’entiers est représenté par réflexion comme suit (avec les informations d’assembly supprimées) :</span><span class="sxs-lookup"><span data-stu-id="c38cf-160">For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):</span></span>  
  
```  
System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  
```  
  
 <span data-ttu-id="c38cf-161">L’analyse de manière récursive le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriété à partir de la <xref:System.CodeDom.CodeTypeReference> pour <xref:System.Collections.Generic.Dictionary%602> génère les mêmes chaînes que la représentation de réflexion ci-dessus :</span><span class="sxs-lookup"><span data-stu-id="c38cf-161">Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:</span></span>  
  
-   <span data-ttu-id="c38cf-162">Le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriété parent <xref:System.CodeDom.CodeTypeReference> retourne les informations suivantes :</span><span class="sxs-lookup"><span data-stu-id="c38cf-162">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.Dictionary`2  
    ```  
  
-   <span data-ttu-id="c38cf-163">Le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriété pour la première <xref:System.CodeDom.CodeTypeReference> de l’objet dans le <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection retourne les informations suivantes :</span><span class="sxs-lookup"><span data-stu-id="c38cf-163">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.String  
    ```  
  
-   <span data-ttu-id="c38cf-164">Le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriété pour la deuxième <xref:System.CodeDom.CodeTypeReference> de l’objet dans le <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection retourne les informations suivantes :</span><span class="sxs-lookup"><span data-stu-id="c38cf-164">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.List`1  
    ```  
  
-   <span data-ttu-id="c38cf-165">Le <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> propriété dans le <xref:System.CodeDom.CodeTypeReference> pour l’objet ``System.Collections.Generic.List`1`` retourne les informations suivantes :</span><span class="sxs-lookup"><span data-stu-id="c38cf-165">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:</span></span>  
  
    ```  
    System.Int32  
    ```  
  
 <span data-ttu-id="c38cf-166">Le nombre d’arguments de type doit être utilisé lors de l’analyse associé <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> valeurs.</span><span class="sxs-lookup"><span data-stu-id="c38cf-166">The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values.</span></span> <span data-ttu-id="c38cf-167">La pratique courante consiste à supprimer le nombre d’arguments de type à partir du code généré, mais la pratique est spécifique au compilateur.</span><span class="sxs-lookup"><span data-stu-id="c38cf-167">The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</span></span>  <span data-ttu-id="c38cf-168">Il est important de noter que le nombre d’arguments de type peut se trouver dans un nom de type imbriqué, auquel cas il est suivi par un signe plus (« + »).</span><span class="sxs-lookup"><span data-stu-id="c38cf-168">It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c38cf-169">Lors de la création d’un générique <xref:System.CodeDom.CodeTypeReference>, la pratique recommandée consiste à spécifier les arguments de type en tant que <xref:System.CodeDom.CodeTypeReference> objets ou utiliser le constructeur qui prend un <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="c38cf-169">When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>.</span></span> <span data-ttu-id="c38cf-170">Utilisation du constructeur qui crée un <xref:System.CodeDom.CodeTypeReference> à partir d’une chaîne peut entraîner des erreurs de l’argument de type indétectables.</span><span class="sxs-lookup"><span data-stu-id="c38cf-170">Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As CodeTypeReferenceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceOptions Options { System::CodeDom::CodeTypeReferenceOptions get(); void set(System::CodeDom::CodeTypeReferenceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.CodeTypeReferenceOptions with get, set" Usage="System.CodeDom.CodeTypeReference.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-171">Obtient ou définit l'option de référence de type de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-171">Gets or sets the code type reference option.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c38cf-172">Combinaison d'opérations de bits des valeurs <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-172">A bitwise combination of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c38cf-173">Obtient les arguments de type pour la référence de type générique actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-173">Gets the type arguments for the current generic type reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c38cf-174">
            <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> qui contient les arguments de type pour l'objet <see cref="T:System.CodeDom.CodeTypeReference" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c38cf-174">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current <see cref="T:System.CodeDom.CodeTypeReference" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c38cf-175">Le <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> propriété est une collection de références de type à substituer aux références de paramètre de type du type générique actuel.</span><span class="sxs-lookup"><span data-stu-id="c38cf-175">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type.</span></span> <span data-ttu-id="c38cf-176">La collection contient tous les arguments de type pour tous les types imbriqués.</span><span class="sxs-lookup"><span data-stu-id="c38cf-176">The collection contains all the type arguments for all nested types.</span></span> <span data-ttu-id="c38cf-177">Pour obtenir un exemple, consultez le <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c38cf-177">For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>