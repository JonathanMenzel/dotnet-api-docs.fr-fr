<Type Name="CodeMemberProperty" FullName="System.CodeDom.CodeMemberProperty">
  <TypeSignature Language="C#" Value="public class CodeMemberProperty : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberProperty extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberProperty&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberProperty : System::CodeDom::CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13cd0-101">Représente une déclaration pour une propriété d'un type.</span><span class="sxs-lookup"><span data-stu-id="13cd0-101">Represents a declaration for a property of a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13cd0-102"><xref:System.CodeDom.CodeMemberProperty> peut être utilisé pour représenter la déclaration pour une propriété d’un type.</span><span class="sxs-lookup"><span data-stu-id="13cd0-102"><xref:System.CodeDom.CodeMemberProperty> can be used to represent the declaration for a property of a type.</span></span>  
  
 <span data-ttu-id="13cd0-103">Le <xref:System.CodeDom.CodeMemberProperty.Type%2A> propriété spécifie le type de données de la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-103">The <xref:System.CodeDom.CodeMemberProperty.Type%2A> property specifies the data type of the property.</span></span> <span data-ttu-id="13cd0-104">Le <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> propriété contient les méthodes d’instruction get pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-104">The <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> property contains any get statement methods for the property.</span></span> <span data-ttu-id="13cd0-105">Le <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> propriété contient les méthodes d’instruction set pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-105">The <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> property contains any set statement methods for the property.</span></span> <span data-ttu-id="13cd0-106">Le <xref:System.CodeDom.CodeMemberProperty.Parameters%2A> propriété spécifie les paramètres de la propriété, tel que requis pour une propriété d’indexeur.</span><span class="sxs-lookup"><span data-stu-id="13cd0-106">The <xref:System.CodeDom.CodeMemberProperty.Parameters%2A> property specifies any parameters for the property, such as are required for an indexer property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13cd0-107">L’exemple de code suivant illustre l’utilisation d’un <xref:System.CodeDom.CodeMemberProperty> pour définir un `string` propriété avec `get` et `set` accesseurs.</span><span class="sxs-lookup"><span data-stu-id="13cd0-107">The following example code demonstrates use of a <xref:System.CodeDom.CodeMemberProperty> to define a `string` property with `get` and `set` accessors.</span></span>  
  
 [!code-cpp[CodeMemberPropertyExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberPropertyExample/CPP/codememberpropertyexample.cpp#3)]
 [!code-csharp[CodeMemberPropertyExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberPropertyExample/CS/codememberpropertyexample.cs#3)]
 [!code-vb[CodeMemberPropertyExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberPropertyExample/VB/codememberpropertyexample.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberProperty.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberProperty();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13cd0-108">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.CodeMemberProperty" />.</span><span class="sxs-lookup"><span data-stu-id="13cd0-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberProperty" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection GetStatements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection GetStatements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.GetStatements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetStatements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ GetStatements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-109">Obtient la collection des instructions <see langword="get" /> pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-109">Gets the collection of <see langword="get" /> statements for the property.</span></span></summary>
        <value><span data-ttu-id="13cd0-110"><see cref="T:System.CodeDom.CodeStatementCollection" /> qui contient les instructions <see langword="get" /> pour la propriété de membre.</span><span class="sxs-lookup"><span data-stu-id="13cd0-110">A <see cref="T:System.CodeDom.CodeStatementCollection" /> that contains the <see langword="get" /> statements for the member property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13cd0-111">Une des instructions dans cette <xref:System.CodeDom.CodeStatementCollection> doit retourner la valeur de la propriété de membre.</span><span class="sxs-lookup"><span data-stu-id="13cd0-111">One of the statements in this <xref:System.CodeDom.CodeStatementCollection> should return the value for the member property.</span></span> <span data-ttu-id="13cd0-112">Utilisez un <xref:System.CodeDom.CodeMethodReturnStatement> pour retourner une valeur du type de données de la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-112">Use a <xref:System.CodeDom.CodeMethodReturnStatement> to return a value of the data type of the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeMethodReturnStatement" />
      </Docs>
    </Member>
    <Member MemberName="HasGet">
      <MemberSignature Language="C#" Value="public bool HasGet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasGet" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.HasGet" />
      <MemberSignature Language="VB.NET" Value="Public Property HasGet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasGet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-113">Obtient ou définit une valeur indiquant si la propriété dispose d'un accesseur de méthode <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="13cd0-113">Gets or sets a value indicating whether the property has a <see langword="get" /> method accessor.</span></span></summary>
        <value>
          <span data-ttu-id="13cd0-114"><see langword="true" /> si la propriété <see langword="Count" /> de la collection <see cref="P:System.CodeDom.CodeMemberProperty.GetStatements" /> n'est pas égale à zéro, ou si <see langword="true" /> a été affecté à la valeur de cette propriété ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13cd0-114"><see langword="true" /> if the <see langword="Count" /> property of the <see cref="P:System.CodeDom.CodeMemberProperty.GetStatements" /> collection is non-zero, or if the value of this property has been set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="13cd0-115">Si cette propriété `false` efface le <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="13cd0-115">Setting this property to `false` clears the <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.CodeDom.CodeMemberProperty.HasSet" />
      </Docs>
    </Member>
    <Member MemberName="HasSet">
      <MemberSignature Language="C#" Value="public bool HasSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSet" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.HasSet" />
      <MemberSignature Language="VB.NET" Value="Public Property HasSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-116">Obtient ou définit une valeur indiquant si la propriété dispose d'un accesseur de méthode <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="13cd0-116">Gets or sets a value indicating whether the property has a <see langword="set" /> method accessor.</span></span></summary>
        <value>
          <span data-ttu-id="13cd0-117"><see langword="true" /> si la propriété <see cref="P:System.Collections.CollectionBase.Count" /> de la collection <see cref="P:System.CodeDom.CodeMemberProperty.SetStatements" /> n'est pas égale à zéro ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13cd0-117"><see langword="true" /> if the <see cref="P:System.Collections.CollectionBase.Count" /> property of the <see cref="P:System.CodeDom.CodeMemberProperty.SetStatements" /> collection is non-zero; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13cd0-118"><xref:System.CodeDom.CodeMemberProperty.HasSet%2A> retournera `false` si la propriété est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="13cd0-118"><xref:System.CodeDom.CodeMemberProperty.HasSet%2A> will return `false` if the property is read-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13cd0-119">Si cette propriété `false` va effacer la <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="13cd0-119">Setting this property to `false` will clear the <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.CodeDom.CodeMemberProperty.HasGet" />
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection ImplementationTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.ImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationTypes As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ ImplementationTypes { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-120">Obtient les types de données des interfaces implémentées par la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-120">Gets the data types of any interfaces that the property implements.</span></span></summary>
        <value><span data-ttu-id="13cd0-121"><see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> indiquant les types de données implémentés par la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-121">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> that indicates the data types the property implements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13cd0-122">Les types référencés par cette collection doivent être des interfaces.</span><span class="sxs-lookup"><span data-stu-id="13cd0-122">The types referenced by this collection must consist of interfaces.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As CodeParameterDeclarationExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeParameterDeclarationExpressionCollection ^ Parameters { System::CodeDom::CodeParameterDeclarationExpressionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeParameterDeclarationExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-123">Obtient la collection des expressions de déclaration pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-123">Gets the collection of declaration expressions for the property.</span></span></summary>
        <value><span data-ttu-id="13cd0-124"><see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> indiquant les expressions de déclaration pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-124">A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> that indicates the declaration expressions for the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="13cd0-125">En règle générale, les propriétés n’ont pas de paramètres.</span><span class="sxs-lookup"><span data-stu-id="13cd0-125">In general, properties do not have parameters.</span></span> <span data-ttu-id="13cd0-126">CodeDom prend en charge une exception à cette règle.</span><span class="sxs-lookup"><span data-stu-id="13cd0-126">CodeDom supports an exception to this.</span></span> <span data-ttu-id="13cd0-127">Pour toute propriété qui a le nom « Item » et un ou plusieurs paramètres, il déclare une propriété d’indexeur pour la classe.</span><span class="sxs-lookup"><span data-stu-id="13cd0-127">For any property that has the special name "Item" and one or more parameters, it will declare an indexer property for the class.</span></span> <span data-ttu-id="13cd0-128">Toutefois, pas tous les langages prennent en charge la déclaration des indexeurs.</span><span class="sxs-lookup"><span data-stu-id="13cd0-128">However, not all languages support the declaration of indexers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="PrivateImplementationType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference PrivateImplementationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference PrivateImplementationType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.PrivateImplementationType" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateImplementationType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ PrivateImplementationType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-129">Obtient ou définit le type de données de l'interface que cette propriété (s'il s'agit d'une propriété privée) implémente, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="13cd0-129">Gets or sets the data type of the interface, if any, this property, if private, implements.</span></span></summary>
        <value><span data-ttu-id="13cd0-130"><see cref="T:System.CodeDom.CodeTypeReference" /> qui indique le type de données de l'interface que cette propriété (s'il s'agit d'une propriété privée) implémente, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="13cd0-130">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the interface, if any, the property, if private, implements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13cd0-131">Le type référencé par cette propriété doit être une interface.</span><span class="sxs-lookup"><span data-stu-id="13cd0-131">The type referenced by this property must be an interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStatements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection SetStatements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection SetStatements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.SetStatements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetStatements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ SetStatements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-132">Obtient la collection des instructions <see langword="set" /> pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-132">Gets the collection of <see langword="set" /> statements for the property.</span></span></summary>
        <value><span data-ttu-id="13cd0-133"><see cref="T:System.CodeDom.CodeStatementCollection" /> qui contient les instructions <see langword="set" /> pour la propriété de membre.</span><span class="sxs-lookup"><span data-stu-id="13cd0-133">A <see cref="T:System.CodeDom.CodeStatementCollection" /> that contains the <see langword="set" /> statements for the member property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13cd0-134">En règle générale, une des instructions dans cette collection définit une valeur pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-134">One of the statements in this collection typically sets a value for the property.</span></span> <span data-ttu-id="13cd0-135">Souvent, les instructions au sein d’un accesseur set de la méthode effectuent une vérification pour déterminer s’il faut définir ou traduire la valeur spécifiée pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-135">Often, the statements within a set method accessor perform checking to determine whether to set or translate the specified value for the property.</span></span> <span data-ttu-id="13cd0-136">A <xref:System.CodeDom.CodePropertySetValueReferenceExpression> représente une référence à l’objet passée à la méthode set.</span><span class="sxs-lookup"><span data-stu-id="13cd0-136">A <xref:System.CodeDom.CodePropertySetValueReferenceExpression> represents a reference to the object passed to the set method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodePropertySetValueReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13cd0-137">Obtient ou définit le type de données de la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-137">Gets or sets the data type of the property.</span></span></summary>
        <value><span data-ttu-id="13cd0-138"><see cref="T:System.CodeDom.CodeTypeReference" /> indiquant le type de données de la propriété.</span><span class="sxs-lookup"><span data-stu-id="13cd0-138">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>