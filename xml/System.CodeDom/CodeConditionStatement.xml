<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeConditionStatement.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5561cba61603cb240574a4cc8d98750308f99305b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">561cba61603cb240574a4cc8d98750308f99305b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeConditionStatement">
          <source>Represents a conditional branch statement, typically represented as an <ph id="ph1">&lt;see langword="if" /&gt;</ph> statement.</source>
          <target state="translated">Représente une instruction de branchement conditionnel, qui est généralement représentée par une instruction <ph id="ph1">&lt;see langword="if" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConditionStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to <ph id="ph2">`true`</ph>, and an optional collection of statements to execute if the conditional expression evaluates to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> peut être utilisé pour représenter le code qui se compose d’une expression conditionnelle, une collection d’instructions à exécuter si l’expression conditionnelle a la valeur <ph id="ph2">`true`</ph>et une collection facultative d’instructions à exécuter si l’expression conditionnelle pour <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConditionStatement">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> is generated in many languages as an <ph id="ph2">`if`</ph> statement.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> est généré dans de nombreux langages comme un <ph id="ph2">`if`</ph> instruction.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConditionStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement.Condition%2A&gt;</ph> property indicates the expression to test.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement.Condition%2A&gt;</ph> propriété indique l’expression à vérifier.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConditionStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A&gt;</ph> property contains the statements to execute if the expression to test evaluates to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A&gt;</ph> propriété contient les instructions à exécuter si l’expression de test a la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConditionStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> property contains the statements to execute if the expression to test evaluates to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> propriété contient les instructions à exécuter si l’expression de test a la valeur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConditionStatement">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> to represent an <ph id="ph2">`if`</ph> statement with an <ph id="ph3">`else`</ph> block.</source>
          <target state="translated">Cet exemple montre comment utiliser un <ph id="ph1">&lt;xref:System.CodeDom.CodeConditionStatement&gt;</ph> pour représenter un <ph id="ph2">`if`</ph> instruction avec un <ph id="ph3">`else`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeConditionStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the expression to evaluate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> indiquant l'expression à évaluer.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the statements to execute if the condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> contenant les instructions à exécuter si la condition a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph> class using the specified condition and statements.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph> avec la condition et les instructions spécifiées.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the condition to evaluate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> indiquant la condition à évaluer.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the statements to execute if the condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> contenant les instructions à exécuter si la condition a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the statements to execute if the condition is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> contenant les instructions à exécuter si la condition a la valeur <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph> class using the specified condition and statements.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConditionStatement" /&gt;</ph> avec la condition et les instructions spécifiées.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeConditionStatement.Condition">
          <source>Gets or sets the expression to evaluate <ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit l'expression correspondant à <ph id="ph1">&lt;see langword="true" /&gt;</ph> ou à <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConditionStatement.Condition">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> to evaluate <ph id="ph2">&lt;see langword="true" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> correspondant à <ph id="ph2">&lt;see langword="true" /&gt;</ph> ou à <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConditionStatement.Condition">
          <source>If this conditional expression evaluates to <ph id="ph1">`true`</ph>, the code contained in the <ph id="ph2">&lt;xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A&gt;</ph> collection will be executed.</source>
          <target state="translated">Si cette expression conditionnelle a la valeur <ph id="ph1">`true`</ph>, le code contenu dans le <ph id="ph2">&lt;xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A&gt;</ph> collection sera exécutée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConditionStatement.Condition">
          <source>If this conditional expression evaluates to <ph id="ph1">`false`</ph> and the <ph id="ph2">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> collection is not empty, the code contained in the <ph id="ph3">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> collection will be executed.</source>
          <target state="translated">Si cette expression conditionnelle a la valeur <ph id="ph1">`false`</ph> et <ph id="ph2">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> collection n’est pas vide, le code contenu dans le <ph id="ph3">&lt;xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A&gt;</ph> collection sera exécutée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeConditionStatement.FalseStatements">
          <source>Gets the collection of statements to execute if the conditional expression evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Obtient la collection d'instructions à exécuter si l'expression conditionnelle a la valeur <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConditionStatement.FalseStatements">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> containing the statements to execute if the conditional expression evaluates to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> contenant les instructions à exécuter si l'expression conditionnelle a la valeur <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeConditionStatement.TrueStatements">
          <source>Gets the collection of statements to execute if the conditional expression evaluates to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Obtient la collection d'instructions à exécuter si l'expression conditionnelle a la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConditionStatement.TrueStatements">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> containing the statements to execute if the conditional expression evaluates to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> contenant les instructions à exécuter si l'expression conditionnelle a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>