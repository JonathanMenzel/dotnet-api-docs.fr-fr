<Type Name="ExtensionElementCollection" FullName="System.ServiceModel.Configuration.ExtensionElementCollection">
  <TypeSignature Language="C#" Value="public class ExtensionElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExtensionElementCollection extends System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1&lt;class System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ExtensionElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ExtensionElementCollection&#xA;Inherits ServiceModelConfigurationElementCollection(Of ExtensionElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExtensionElementCollection : System::ServiceModel::Configuration::ServiceModelConfigurationElementCollection&lt;System::ServiceModel::Configuration::ExtensionElement ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="ConfigurationElementType">System.ServiceModel.Configuration.ExtensionElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Configuration.ExtensionElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="acdad-101">Représente une collection d'instances <see cref="T:System.ServiceModel.Configuration.ExtensionElement" />.</span><span class="sxs-lookup"><span data-stu-id="acdad-101">Represents a collection of <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> instances.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExtensionElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="acdad-102">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="acdad-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="acdad-103">Ajoute un élément de configuration à <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="acdad-103">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acdad-104">Lors d'un ajout, un élément est considéré comme un doublon uniquement si les clés sont identiques mais que les valeurs sont différentes.</span><span class="sxs-lookup"><span data-stu-id="acdad-104">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="acdad-105">Les éléments dont les clés et les valeurs sont identiques sont acceptés en mode silencieux car ils ne se concurrencent pas.</span><span class="sxs-lookup"><span data-stu-id="acdad-105">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="acdad-106">Toutefois, un élément ayant une clé identique mais une valeur différente ne peut pas être ajouté car aucune logique ne permet de déterminer les valeurs en concurrence qui doivent être honorées.</span><span class="sxs-lookup"><span data-stu-id="acdad-106">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="acdad-107"><see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</span><span class="sxs-lookup"><span data-stu-id="acdad-107">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <summary><span data-ttu-id="acdad-108">Ajoute un élément de configuration à <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="acdad-108">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acdad-109">Lors d'un ajout, un élément est considéré comme un doublon uniquement si les clés sont identiques mais que les valeurs sont différentes.</span><span class="sxs-lookup"><span data-stu-id="acdad-109">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="acdad-110">Les éléments dont les clés et les valeurs sont identiques sont acceptés en mode silencieux car ils ne se concurrencent pas.</span><span class="sxs-lookup"><span data-stu-id="acdad-110">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="acdad-111">Toutefois, un élément ayant une clé identique mais une valeur différente ne peut pas être ajouté car aucune logique ne permet de déterminer les valeurs en concurrence qui doivent être honorées.</span><span class="sxs-lookup"><span data-stu-id="acdad-111">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="acdad-112">Une extension avec le même nom ou type que <paramref name="element" /> existe déjà dans la collection.</span><span class="sxs-lookup"><span data-stu-id="acdad-112">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="acdad-113">Emplacement d’index au niveau duquel ajouter <c>element</c>.</span><span class="sxs-lookup"><span data-stu-id="acdad-113">The index location at which to add <c>element</c>.</span></span></param>
        <param name="element"><span data-ttu-id="acdad-114"><see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</span><span class="sxs-lookup"><span data-stu-id="acdad-114">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <summary><span data-ttu-id="acdad-115">Ajoute un élément de configuration à la <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, au niveau de l'emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="acdad-115">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acdad-116">Lors d'un ajout, un élément est considéré comme un doublon uniquement si les clés sont identiques mais que les valeurs sont différentes.</span><span class="sxs-lookup"><span data-stu-id="acdad-116">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="acdad-117">Les éléments dont les clés et les valeurs sont identiques sont acceptés en mode silencieux car ils ne se concurrencent pas.</span><span class="sxs-lookup"><span data-stu-id="acdad-117">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="acdad-118">Toutefois, un élément ayant une clé identique mais une valeur différente ne peut pas être ajouté car aucune logique ne permet de déterminer les valeurs en concurrence qui doivent être honorées.</span><span class="sxs-lookup"><span data-stu-id="acdad-118">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="acdad-119">Une extension avec le même nom ou type que <paramref name="element" /> existe déjà dans la collection.</span><span class="sxs-lookup"><span data-stu-id="acdad-119">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="acdad-120"><see cref="T:System.Configuration.ConfigurationElement" /> pour lequel retourner la clé.</span><span class="sxs-lookup"><span data-stu-id="acdad-120">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</span></span></param>
        <summary><span data-ttu-id="acdad-121">Obtient la clé d'élément de l'élément de configuration spécifié.</span><span class="sxs-lookup"><span data-stu-id="acdad-121">Gets the element key for the specified configuration element.</span></span></summary>
        <returns><span data-ttu-id="acdad-122"><see cref="T:System.Object" /> qui agit comme la clé de l'élément de configuration spécifié.</span><span class="sxs-lookup"><span data-stu-id="acdad-122">An <see cref="T:System.Object" /> that acts as the key for the specified configuration element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="acdad-123"><paramref name="element" /> a la valeur <see langword="null" /> ou est vide.</span><span class="sxs-lookup"><span data-stu-id="acdad-123"><paramref name="element" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected override bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acdad-124">Obtient une valeur indiquant si une tentative d'ajout d'un <see cref="T:System.Configuration.ConfigurationElement" /> dupliqué à <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> provoquera la levée d'une exception.</span><span class="sxs-lookup"><span data-stu-id="acdad-124">Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown.</span></span></summary>
        <value>
          <span data-ttu-id="acdad-125"><see langword="true" /> si une tentative d'ajout d'un <see cref="T:System.Configuration.ConfigurationElement" /> dupliqué au <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> provoquera la levée d'une exception ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="acdad-125"><see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd" />
      </Docs>
    </Member>
  </Members>
</Type>