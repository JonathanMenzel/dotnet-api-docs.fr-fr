<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="70b4efe2d402b27e3285b56bb7a50aff7def9e09" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461083" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="51cc2-101">Écoute des connexions de clients réseau TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51cc2-101">Listens for connections from TCP network clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-102">La <xref:System.Net.Sockets.TcpListener> classe fournit des méthodes simples qui écoutent et acceptent les demandes de connexion entrante en mode blocage synchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="51cc2-103">Vous pouvez utiliser un <xref:System.Net.Sockets.TcpClient> ou un <xref:System.Net.Sockets.Socket> pour vous connecter avec un <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="51cc2-104">Créer un <xref:System.Net.Sockets.TcpListener> à l’aide un <xref:System.Net.IPEndPoint>, une adresse IP locale et numéro de port ou seulement un numéro de port.</span><span class="sxs-lookup"><span data-stu-id="51cc2-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="51cc2-105">Spécifiez <xref:System.Net.IPAddress.Any> pour l’adresse IP locale et 0 pour le numéro de port local si vous souhaitez que le fournisseur de services sous-jacent assigne ces valeurs pour vous.</span><span class="sxs-lookup"><span data-stu-id="51cc2-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="51cc2-106">Si vous choisissez pour ce faire, vous pouvez utiliser le <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriété pour identifier les informations assignées une fois le socket connecté.</span><span class="sxs-lookup"><span data-stu-id="51cc2-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="51cc2-107">Utilisez la <xref:System.Net.Sockets.TcpListener.Start%2A> méthode commencer à écouter les demandes de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="51cc2-108"><xref:System.Net.Sockets.TcpListener.Start%2A> file d’attente les connexions entrantes jusqu'à ce que vous appeliez soit le <xref:System.Net.Sockets.TcpListener.Stop%2A> (méthode), ou il a mis en attente <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="51cc2-109">Utilisez <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> ou <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> pour extraire une connexion à partir de la file d’attente de demande connexion entrante.</span><span class="sxs-lookup"><span data-stu-id="51cc2-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="51cc2-110">Ces deux méthodes se bloquent.</span><span class="sxs-lookup"><span data-stu-id="51cc2-110">These two methods will block.</span></span> <span data-ttu-id="51cc2-111">Si vous souhaitez éviter le blocage, vous pouvez utiliser la <xref:System.Net.Sockets.TcpListener.Pending%2A> méthode afin de déterminer si les demandes de connexion sont disponibles dans la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="51cc2-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="51cc2-112">Appelez le <xref:System.Net.Sockets.TcpListener.Stop%2A> méthode pour fermer le <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-113">Le <xref:System.Net.Sockets.TcpListener.Stop%2A> méthode ne ferme pas les connexions acceptées.</span><span class="sxs-lookup"><span data-stu-id="51cc2-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="51cc2-114">Vous êtes chargé de fermer ces séparément.</span><span class="sxs-lookup"><span data-stu-id="51cc2-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-115">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="51cc2-116">Consultez <xref:System.Net.Sockets.TcpClient> pour obtenir un exemple de client.</span><span class="sxs-lookup"><span data-stu-id="51cc2-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="51cc2-117">Pour établir une connexion sortante ou accepter une demande entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51cc2-117">to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-118">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="51cc2-119">Port sur lequel écouter les tentatives de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-119">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-120">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" /> qui écoute sur le port spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-121">Ce constructeur est obsolète.</span><span class="sxs-lookup"><span data-stu-id="51cc2-121">This constructor is obsolete.</span></span> <span data-ttu-id="51cc2-122">Utilisez le <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> ou <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructeurs.</span><span class="sxs-lookup"><span data-stu-id="51cc2-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="51cc2-123">Ce constructeur vous permet de spécifier le numéro de port sur lequel écouter les tentatives de connexion entrante.</span><span class="sxs-lookup"><span data-stu-id="51cc2-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="51cc2-124">Avec ce constructeur, le fournisseur de services sous-jacent assigne l’adresse réseau la plus appropriée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="51cc2-125">Si vous ne souhaitez pas le port local est utilisé, vous pouvez spécifier 0 pour le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="51cc2-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="51cc2-126">Dans ce cas, le fournisseur de services affecte un nombre de ports éphémères disponibles.</span><span class="sxs-lookup"><span data-stu-id="51cc2-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="51cc2-127">Si vous utilisez cette approche, vous pouvez découvrir quel numéro d’adresse et le port de réseau local a été attribué à l’aide de la <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="51cc2-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="51cc2-128">Appelez le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode commencer à écouter les tentatives de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-129">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpListener> à l’aide d’un numéro de port local.</span><span class="sxs-lookup"><span data-stu-id="51cc2-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="51cc2-130">
            <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-130">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="51cc2-131">
            <see cref="T:System.Net.IPEndPoint" /> qui représente le point de terminaison local auquel lier l'écouteur <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-132">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" /> avec le point de terminaison local spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-133">Ce constructeur vous permet de spécifier l’adresse IP locale et tente de numéro de port sur lequel écouter les connexions entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="51cc2-134">Avant d’utiliser ce constructeur, vous devez créer un <xref:System.Net.IPEndPoint> à l’aide de l’IP locale adresse et le port numéro souhaités.</span><span class="sxs-lookup"><span data-stu-id="51cc2-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="51cc2-135">Passer ce <xref:System.Net.IPEndPoint> au constructeur en tant que le `localEP` paramètre.</span><span class="sxs-lookup"><span data-stu-id="51cc2-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="51cc2-136">Si vous ne souhaitez pas quelle adresse locale est affectée, vous pouvez créer un <xref:System.Net.IPEndPoint> à l’aide de <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> en tant que le paramètre d’adresse et le service sous-jacent fournisseur assigne l’adresse réseau la plus appropriée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="51cc2-137">Cela peut vous aider à simplifier votre application si vous avez plusieurs interfaces réseau.</span><span class="sxs-lookup"><span data-stu-id="51cc2-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="51cc2-138">Si vous ne souhaitez pas de port local est utilisé, vous pouvez créer un <xref:System.Net.IPEndPoint> à l’aide de 0 pour le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="51cc2-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="51cc2-139">Dans ce cas, le fournisseur de services affecte un nombre de ports éphémères disponibles.</span><span class="sxs-lookup"><span data-stu-id="51cc2-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="51cc2-140">Si vous utilisez cette approche, vous pouvez découvrir quel numéro d’adresse et le port de réseau local a été attribué à l’aide de la <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="51cc2-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="51cc2-141">Appelez le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode commencer à écouter les tentatives de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-142">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-143">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-144">L’exemple de code suivant crée une instance de la <xref:System.Net.Sockets.TcpListener> classe à l’aide du point de terminaison local.</span><span class="sxs-lookup"><span data-stu-id="51cc2-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51cc2-145">
            <paramref name="localEP" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-145">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr">
          <span data-ttu-id="51cc2-146">
            <see cref="T:System.Net.IPAddress" /> qui représente l'adresse IP locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="51cc2-147">Port sur lequel écouter les tentatives de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-147">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-148">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" /> qui écoute les tentatives de connexion entrante sur l'adresse IP locale et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-149">Ce constructeur vous permet de spécifier l’adresse IP locale et tente de numéro de port sur lequel écouter les connexions entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="51cc2-150">Avant d’appeler ce constructeur vous devez d’abord créer un <xref:System.Net.IPAddress> à l’aide de l’adresse locale souhaitée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="51cc2-151">Passer ce <xref:System.Net.IPAddress> au constructeur en tant que le `localaddr` paramètre.</span><span class="sxs-lookup"><span data-stu-id="51cc2-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="51cc2-152">Si vous ne souhaitez pas quelle adresse locale est affectée, spécifiez <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> pour la `localaddr` paramètre et le fournisseur de services sous-jacent assignera l’adresse réseau la plus appropriée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="51cc2-153">Cela peut vous aider à simplifier votre application si vous avez plusieurs interfaces réseau.</span><span class="sxs-lookup"><span data-stu-id="51cc2-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="51cc2-154">Si vous ne souhaitez pas le port local est utilisé, vous pouvez spécifier 0 pour le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="51cc2-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="51cc2-155">Dans ce cas, le fournisseur de services affecte un numéro de port disponible entre 1024 et 5000.</span><span class="sxs-lookup"><span data-stu-id="51cc2-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="51cc2-156">Si vous utilisez cette approche, vous pouvez découvrir quel numéro d’adresse et le port de réseau local a été attribué à l’aide de la <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="51cc2-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="51cc2-157">Appelez le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode commencer à écouter les tentatives de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-158">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-159">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-160">L’exemple de code suivant crée une instance de la <xref:System.Net.Sockets.TcpListener> classe à l’aide d’un numéro d’adresse et le port IP local.</span><span class="sxs-lookup"><span data-stu-id="51cc2-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51cc2-161">
            <paramref name="localaddr" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-161">
              <paramref name="localaddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="51cc2-162">
            <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-162">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-163">Accepte une demande de connexion en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-163">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-164">
            <see cref="T:System.Net.Sockets.Socket" /> utilisé pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> est une méthode bloquante qui retourne un <xref:System.Net.Sockets.Socket> que vous pouvez utiliser pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="51cc2-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="51cc2-166">Si vous souhaitez éviter le blocage, utilisez la <xref:System.Net.Sockets.TcpListener.Pending%2A> méthode pour déterminer si les demandes de connexion sont disponibles dans la file d’attente de connexion entrante.</span><span class="sxs-lookup"><span data-stu-id="51cc2-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="51cc2-167">Le <xref:System.Net.Sockets.Socket> retourné est initialisé avec l’adresse IP et port numéro de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="51cc2-168">Vous pouvez utiliser toutes les <xref:System.Net.Sockets.Socket.Send%2A> et <xref:System.Net.Sockets.Socket.Receive%2A> méthodes disponibles dans la <xref:System.Net.Sockets.Socket> classe pour communiquer avec l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="51cc2-169">Lorsque vous avez terminé à l’aide de la <xref:System.Net.Sockets.Socket>, veillez à appeler son <xref:System.Net.Sockets.Socket.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="51cc2-170">Si votre application est relativement simple, envisagez d’utiliser le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode plutôt que la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="51cc2-171"><xref:System.Net.Sockets.TcpClient> Fournit des méthodes simples pour envoyer et recevoir des données sur un réseau en mode blocage synchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-172">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-173">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-174">Dans l’exemple de code suivant, le <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> méthode est utilisée pour retourner un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="51cc2-175">Cela <xref:System.Net.Sockets.Socket> est utilisé pour communiquer avec le client qui vient d’être connecté.</span><span class="sxs-lookup"><span data-stu-id="51cc2-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-176">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-177">Accepte une demande de connexion en attente en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-177">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-178">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-178">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="51cc2-179">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-179">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="51cc2-180">La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un <see cref="T:System.Net.Sockets.Socket" /> utilisé pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-180">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-181">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="51cc2-181">This operation will not block.</span></span> <span data-ttu-id="51cc2-182">Retourné <xref:System.Threading.Tasks.Task%601> objet s’achève une fois la connexion de socket a été acceptée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-182">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="51cc2-183">Le <xref:System.Net.Sockets.Socket> retournée dans <xref:System.Threading.Tasks.Task%601> est initialisé avec l’adresse IP et port numéro de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-183">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="51cc2-184">Vous pouvez utiliser toutes les <xref:System.Net.Sockets.Socket.Send%2A> et <xref:System.Net.Sockets.Socket.Receive%2A> méthodes disponibles dans la <xref:System.Net.Sockets.Socket> classe pour communiquer avec l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-184">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="51cc2-185">Lorsque vous avez terminé à l’aide de la <xref:System.Net.Sockets.Socket>, veillez à appeler son <xref:System.Net.Sockets.Socket.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-185">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="51cc2-186">Si votre application est relativement simple, envisagez d’utiliser le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode plutôt que la <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-186">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="51cc2-187"><xref:System.Net.Sockets.TcpClient> Fournit des méthodes simples pour envoyer et recevoir des données sur un réseau en mode blocage synchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-187"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-188">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-188">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-189">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-189">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-190">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-190">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-191">Accepte une demande de connexion en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-191">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-192">
            <see cref="T:System.Net.Sockets.TcpClient" /> utilisé pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-192">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> est une méthode bloquante qui retourne un <xref:System.Net.Sockets.TcpClient> que vous pouvez utiliser pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="51cc2-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="51cc2-194">Utilisez la <xref:System.Net.Sockets.TcpListener.Pending%2A> méthode pour déterminer si les demandes de connexion sont disponibles dans la file d’attente de connexion entrant si vous souhaitez éviter le blocage.</span><span class="sxs-lookup"><span data-stu-id="51cc2-194">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="51cc2-195">Utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream> de retourné <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-195">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="51cc2-196">Le <xref:System.Net.Sockets.NetworkStream> vous fournira avec des méthodes pour l’envoi et de réception avec l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-196">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="51cc2-197">Lorsque vous avez fini avec la <xref:System.Net.Sockets.TcpClient>, veillez à appeler son <xref:System.Net.Sockets.TcpClient.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-197">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="51cc2-198">Si vous souhaitez que la plus grande souplesse qu’un <xref:System.Net.Sockets.TcpClient> offres, envisagez d’utiliser <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-198">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-199">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-199">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-200">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-201">Dans l’exemple de code suivant, le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode est utilisée pour retourner un <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-201">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="51cc2-202">Cela <xref:System.Net.Sockets.TcpClient> est utilisé pour communiquer avec le client qui vient d’être connecté.</span><span class="sxs-lookup"><span data-stu-id="51cc2-202">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-203">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-203">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-204">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-204">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="51cc2-205">Quand vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-205">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-206">Accepte une demande de connexion en attente en tant qu'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-206">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-207">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-207">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="51cc2-208">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-208">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="51cc2-209">La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un <see cref="T:System.Net.Sockets.TcpClient" /> utilisé pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-209">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-210">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="51cc2-210">This operation will not block.</span></span> <span data-ttu-id="51cc2-211">Retourné <xref:System.Threading.Tasks.Task%601> objet s’achève une fois la connexion TCP a été acceptée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-211">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="51cc2-212">Utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream> de retourné <xref:System.Net.Sockets.TcpClient> dans le <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-212">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="51cc2-213">Le <xref:System.Net.Sockets.NetworkStream> vous fournira avec des méthodes pour l’envoi et de réception avec l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-213">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="51cc2-214">Lorsque vous avez fini avec la <xref:System.Net.Sockets.TcpClient>, veillez à appeler son <xref:System.Net.Sockets.TcpClient.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-214">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="51cc2-215">Si vous souhaitez que la plus grande souplesse qu’un <xref:System.Net.Sockets.TcpClient> offres, envisagez d’utiliser <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> ou <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-215">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-216">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-216">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-217">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-218">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-218">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-219">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-219">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="51cc2-220">Quand vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-220">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-221">Obtient une valeur qui indique si <see cref="T:System.Net.Sockets.TcpListener" /> écoute activement des connexions clientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-221">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51cc2-222">
            <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> écoute activement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-222">
              <see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-223">Les classes dérivées de <xref:System.Net.Sockets.TcpListener> pouvez utiliser cette propriété pour déterminer si le <xref:System.Net.Sockets.Socket> est actuellement à l’écoute des tentatives de connexion entrante.</span><span class="sxs-lookup"><span data-stu-id="51cc2-223">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="51cc2-224">Le <xref:System.Net.Sockets.TcpClient.Active%2A> propriété peut être utilisée pour éviter la redondance <xref:System.Net.Sockets.TcpListener.Start%2A> tentatives.</span><span class="sxs-lookup"><span data-stu-id="51cc2-224">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="51cc2-225">Valeur booléenne qui spécifie s'il faut activer ou désactiver la traversée du NAT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-225">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-226">Active ou désactive la traversée du traducteur d'accès réseau (NAT) sur une instance de <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-226">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-227">Le <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> méthode est utilisée pour activer ou désactiver parcours NAT pour une <xref:System.Net.Sockets.TcpListener> instance.</span><span class="sxs-lookup"><span data-stu-id="51cc2-227">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="51cc2-228">Parcours NAT peut être fourni à l’aide d’un tunnel ISATAP, 6to4 ou Teredo.</span><span class="sxs-lookup"><span data-stu-id="51cc2-228">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="51cc2-229">Lorsque le `allowed` paramètre est false, le <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option du socket associé a la valeur <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-229">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="51cc2-230">Cela désactive explicitement la traversée NAT pour une <xref:System.Net.Sockets.TcpListener> instance.</span><span class="sxs-lookup"><span data-stu-id="51cc2-230">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="51cc2-231">Lorsque le `allowed` paramètre est true, le <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option du socket associé a la valeur <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-231">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="51cc2-232">Cela peut permettre de parcours NAT pour une <xref:System.Net.Sockets.TcpListener> selon les règles de pare-feu en place sur le système.</span><span class="sxs-lookup"><span data-stu-id="51cc2-232">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="51cc2-233">Le <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> méthode doit être appelée avant d’appeler le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode commencer à écouter les demandes de connexion entrantes (avant que le socket est lié).</span><span class="sxs-lookup"><span data-stu-id="51cc2-233">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="51cc2-234">Si <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> méthode est appelée après le <xref:System.Net.Sockets.TcpListener.Start%2A> (méthode), alors un <xref:System.InvalidOperationException> sera levée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-234">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="51cc2-235">Une adresse Teredo est une adresse IPv6 avec le préfixe de 2001 :: / 32.</span><span class="sxs-lookup"><span data-stu-id="51cc2-235">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="51cc2-236">Adresses Teredo peuvent être retournées par la résolution de nom DNS normale ou énumérées comme une adresse IPv6 affectée à une interface locale.</span><span class="sxs-lookup"><span data-stu-id="51cc2-236">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-237">La méthode <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> a été appelée après l'appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-237">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="51cc2-238">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-238">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="51cc2-239">Objet défini par l'utilisateur comportant des informations sur l'opération d'acceptation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-239">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="51cc2-240">Cet objet est passé au délégué <c>callback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-240">This object is passed to the <c>callback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-241">Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-241">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-242">
            <see cref="T:System.IAsyncResult" /> qui fait référence à la création asynchrone de <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-242">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-243">Asynchrone <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-243">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="51cc2-244">En règle générale, la méthode est appelée par le `callback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="51cc2-244">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="51cc2-245">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="51cc2-245">This method does not block until the operation completes.</span></span> <span data-ttu-id="51cc2-246">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-246">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="51cc2-247">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-247">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-248">Vous pouvez appeler la <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propriété retourné <xref:System.Net.Sockets.Socket> pour identifier le numéro d’adresse et le port réseau de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-248">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-249">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez le <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriété pour obtenir le code d’erreur spécifique et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) pour une liste détaillée Description de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="51cc2-249">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-250">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-251">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-252">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> méthode pour créer et connecter un socket.</span><span class="sxs-lookup"><span data-stu-id="51cc2-252">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="51cc2-253">Le délégué de rappel appelle la <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> méthode pour terminer la demande asynchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-253">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-254">Une erreur s'est produite lors de la tentative d'accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-254">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="51cc2-255">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-255">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="51cc2-256">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-256">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="51cc2-257">Objet défini par l'utilisateur comportant des informations sur l'opération d'acceptation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-257">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="51cc2-258">Cet objet est passé au délégué <c>callback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-258">This object is passed to the <c>callback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-259">Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-259">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-260">
            <see cref="T:System.IAsyncResult" /> qui fait référence à la création asynchrone de <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-260">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-261">Asynchrone <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-261">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="51cc2-262">En règle générale, la méthode est appelée par le `callback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="51cc2-262">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="51cc2-263">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="51cc2-263">This method does not block until the operation completes.</span></span> <span data-ttu-id="51cc2-264">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-264">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="51cc2-265">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-265">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-266">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez le <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriété pour obtenir le code d’erreur spécifique et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) pour une liste détaillée Description de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="51cc2-266">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-267">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-267">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-268">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-268">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-269">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> méthode pour créer et connecter un socket.</span><span class="sxs-lookup"><span data-stu-id="51cc2-269">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="51cc2-270">Le délégué de rappel appelle la <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> méthode pour terminer la demande asynchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-270">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-271">Une erreur s'est produite lors de la tentative d'accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-271">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="51cc2-272">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-272">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="51cc2-273">Port sur lequel écouter les tentatives de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-273">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-274">Crée une nouvelle instance <see cref="T:System.Net.Sockets.TcpListener" /> pour écouter sur le port spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-274">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-275">Retourne <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-275">Returns <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
          <span data-ttu-id="51cc2-276">Nouvelle instance <see cref="T:System.Net.Sockets.TcpListener" /> à écouter sur le port spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-276">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="51cc2-277">
            <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-277">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-278">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouveau <see cref="T:System.Net.Sockets.Socket" /> pour gérer les communications de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-278">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-279">
            <see cref="T:System.Net.Sockets.Socket" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-279">A <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
          <span data-ttu-id="51cc2-280">
            <see cref="T:System.Net.Sockets.Socket" /> utilisé pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-280">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-281">Cette méthode s’interrompt jusqu'à ce que l’opération de fin.</span><span class="sxs-lookup"><span data-stu-id="51cc2-281">This method blocks until the operation is complete.</span></span> <span data-ttu-id="51cc2-282">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-282">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-283">Vous pouvez appeler la <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propriété retourné <xref:System.Net.Sockets.Socket> pour identifier le numéro d’adresse et le port réseau de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-283">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-284">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez le <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriété pour obtenir le code d’erreur spécifique et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) pour une liste détaillée Description de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="51cc2-284">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-285">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-285">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-286">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-286">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-287">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> méthode pour créer et connecter un socket.</span><span class="sxs-lookup"><span data-stu-id="51cc2-287">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="51cc2-288">Le délégué de rappel appelle la <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> méthode pour terminer la demande asynchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-288">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="51cc2-289">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-289">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51cc2-290">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-290">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51cc2-291">Le paramètre <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-291">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-292">La méthode <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> a été appelée au préalable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-292">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-293">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-293">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="51cc2-294">
            <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-294">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-295">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouveau <see cref="T:System.Net.Sockets.TcpClient" /> pour gérer les communications de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-295">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-296">
            <see cref="T:System.Net.Sockets.TcpClient" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-296">A <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
          <span data-ttu-id="51cc2-297">
            <see cref="T:System.Net.Sockets.TcpClient" /> utilisé pour envoyer et recevoir des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-297">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-298">Cette méthode s’interrompt jusqu'à ce que l’opération de fin.</span><span class="sxs-lookup"><span data-stu-id="51cc2-298">This method blocks until the operation is complete.</span></span> <span data-ttu-id="51cc2-299">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-299">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-300">Vous pouvez appeler la <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propriété du socket sous-jacent (<xref:System.Net.Sockets.TcpClient.Client%2A>) pour identifier le numéro d’adresse et le port réseau de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="51cc2-300">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-301">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez le <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriété pour obtenir le code d’erreur spécifique et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) pour une liste détaillée Description de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="51cc2-301">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-302">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-302">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-303">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-303">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-304">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> méthode pour créer et connecter un socket.</span><span class="sxs-lookup"><span data-stu-id="51cc2-304">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="51cc2-305">Le délégué de rappel appelle la <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> méthode pour terminer la demande asynchrone.</span><span class="sxs-lookup"><span data-stu-id="51cc2-305">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-306">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.TcpListener" /> n'autorise qu'un seul socket sous-jacent à écouter un port spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-306">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51cc2-307">
            <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> n'autorise qu'un seul <see cref="T:System.Net.Sockets.TcpListener" /> à écouter un port spécifique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-307">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51cc2-308">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-308">.</span>
          </span>
          <span data-ttu-id="51cc2-309">La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-309">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-310">Par défaut, plusieurs écouteurs peuvent écouter un port spécifique.</span><span class="sxs-lookup"><span data-stu-id="51cc2-310">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="51cc2-311">Toutefois, seul le d'entre eux peut effectuer des opérations sur le trafic réseau envoyé au port.</span><span class="sxs-lookup"><span data-stu-id="51cc2-311">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="51cc2-312">Si plusieurs écouteurs tente de se lier à un port particulier, celui dont l’adresse IP plus spécifique gère le trafic réseau envoyé à ce port.</span><span class="sxs-lookup"><span data-stu-id="51cc2-312">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="51cc2-313">Vous pouvez utiliser le <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> propriété pour empêcher plusieurs écouteurs d’écouter un port spécifique.</span><span class="sxs-lookup"><span data-stu-id="51cc2-313">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="51cc2-314">Définissez cette propriété avant d’appeler <xref:System.Net.Sockets.TcpListener.Start%2A>, ou appelez le <xref:System.Net.Sockets.TcpListener.Stop%2A> (méthode), puis définissez cette propriété.</span><span class="sxs-lookup"><span data-stu-id="51cc2-314">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-315">L’exemple de code suivant obtient et définit le <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="51cc2-315">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-316">
            <see cref="T:System.Net.Sockets.TcpListener" /> a démarré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-316">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span>
          </span>
          <span data-ttu-id="51cc2-317">Appelez la méthode <see cref="M:System.Net.Sockets.TcpListener.Stop" />, puis définissez la propriété <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-317">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-318">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-318">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="51cc2-319">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-319">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-320">Obtient le <see cref="T:System.Net.EndPoint" /> sous-jacent du <see cref="T:System.Net.Sockets.TcpListener" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-320">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51cc2-321">
            <see cref="T:System.Net.EndPoint" /> auquel <see cref="T:System.Net.Sockets.Socket" /> est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-321">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-322">Vous pouvez utiliser le <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriété pour identifier le réseau local interface et numéro de port utilisé pour écouter les demandes entrantes des clients, une fois une connexion de socket a été établie.</span><span class="sxs-lookup"><span data-stu-id="51cc2-322">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="51cc2-323">Vous devez tout d’abord effectuer un cast <xref:System.Net.EndPoint> à un <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-323">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="51cc2-324">Vous pouvez ensuite appeler la <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> propriété à récupérer l’adresse IP locale et le <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> propriété à récupérer le numéro de port local.</span><span class="sxs-lookup"><span data-stu-id="51cc2-324">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-325">L’exemple de code suivant affiche le nombre d’adresse et le port IP local sur lequel le <xref:System.Net.Sockets.TcpListener> est à l’écoute des demandes de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-325">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-326">Détermine la présence éventuelle de demandes de connexion en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-326">Determines if there are pending connection requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51cc2-327">
            <see langword="true" /> si des connexions sont en attente ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-327">
              <see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-328">Cette méthode non bloquante détermine s’il existe des demandes de connexion en attente.</span><span class="sxs-lookup"><span data-stu-id="51cc2-328">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="51cc2-329">Étant donné que la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> et <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthodes bloquent l’exécution jusqu'à ce que le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode a en file d’attente une demande de connexion entrante, le <xref:System.Net.Sockets.TcpListener.Pending%2A> méthode peut être utilisée pour déterminer si les connexions sont disponibles avant de tenter de les accepter.</span><span class="sxs-lookup"><span data-stu-id="51cc2-329">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-330">Le code suivant exemple vérifie le <xref:System.Net.Sockets.TcpListener.Pending%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-330">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="51cc2-331">Si une demande de connexion est en attente d’être acceptés, puis un appel à la <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode est effectuée.</span><span class="sxs-lookup"><span data-stu-id="51cc2-331">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-332">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-332">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-333">Obtient le <see cref="T:System.Net.Sockets.Socket" /> réseau sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-333">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51cc2-334">L'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-334">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-335"><xref:System.Net.Sockets.TcpListener> Crée un <xref:System.Net.Sockets.Socket> pour écouter les demandes entrantes des clients.</span><span class="sxs-lookup"><span data-stu-id="51cc2-335"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="51cc2-336">Les classes dérivées de <xref:System.Net.Sockets.TcpListener> pouvez utiliser cette propriété pour obtenir <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-336">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="51cc2-337">Utilisez sous-jacent <xref:System.Net.Sockets.Socket> retournée par le <xref:System.Net.Sockets.TcpListener.Server%2A> propriété si vous avez besoin d’accéder aux au-delà de celles qui <xref:System.Net.Sockets.TcpListener> fournit.</span><span class="sxs-lookup"><span data-stu-id="51cc2-337">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-338">Le <xref:System.Net.Sockets.TcpListener.Server%2A> propriété renvoie uniquement les <xref:System.Net.Sockets.Socket> utilisé pour écouter les demandes entrantes des clients.</span><span class="sxs-lookup"><span data-stu-id="51cc2-338">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="51cc2-339">Utilisez le <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> méthode pour accepter une demande de connexion en attente et obtenir un <xref:System.Net.Sockets.Socket> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="51cc2-339">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="51cc2-340">Vous pouvez également utiliser le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode pour accepter une demande de connexion en attente et obtenir un <xref:System.Net.Sockets.TcpClient> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="51cc2-340">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-341">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpListener.Server%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="51cc2-341">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="51cc2-342">Sous-jacent <xref:System.Net.Sockets.Socket> est récupérée et le <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> option est configurée pour le délai d’expiration après 10 secondes si les données sont conservées dans la mémoire tampon réseau après la fermeture de la connexion.</span><span class="sxs-lookup"><span data-stu-id="51cc2-342">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-343">Démarre l'écoute de demandes de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-343">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-344">Démarre l'écoute de demandes de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-344">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-345">Le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode initialise sous-jacent <xref:System.Net.Sockets.Socket>lie à un point de terminaison local et écoute les tentatives de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-345">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="51cc2-346">Si une demande de connexion est reçue, le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode file d’attente de la demande et continue à écouter les demandes supplémentaires jusqu'à ce que vous appeliez la <xref:System.Net.Sockets.TcpListener.Stop%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-346">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="51cc2-347">Si <xref:System.Net.Sockets.TcpListener> reçoit une demande de connexion une fois qu’il a déjà en file d’attente le nombre maximal de connexions, il lève une <xref:System.Net.Sockets.SocketException> sur le client.</span><span class="sxs-lookup"><span data-stu-id="51cc2-347">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="51cc2-348">Pour supprimer une connexion à partir de la file d’attente de connexion entrante, utiliser le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode ou la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-348">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="51cc2-349">Le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode supprime une connexion à partir de la file d’attente et retourne un <xref:System.Net.Sockets.TcpClient> que vous pouvez utiliser pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="51cc2-349">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="51cc2-350">Le <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> méthode retournera un <xref:System.Net.Sockets.Socket> que vous pouvez utiliser pour faire de même.</span><span class="sxs-lookup"><span data-stu-id="51cc2-350">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="51cc2-351">Si votre application requiert uniquement les e/s synchrones, utilisez <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-351">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="51cc2-352">Pour plus de contrôle de comportement, utilisez <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-352">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="51cc2-353">Ces deux méthodes bloquent jusqu'à ce qu’une demande de connexion est disponible dans la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="51cc2-353">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="51cc2-354">Utilisez le <xref:System.Net.Sockets.TcpListener.Stop%2A> méthode pour fermer le <xref:System.Net.Sockets.TcpListener> et arrêtent l’écoute.</span><span class="sxs-lookup"><span data-stu-id="51cc2-354">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="51cc2-355">Vous êtes chargé de fermer vos connexions acceptées séparément.</span><span class="sxs-lookup"><span data-stu-id="51cc2-355">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-356">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-357">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-358">L’exemple de code suivant montre comment <xref:System.Net.Sockets.TcpListener.Start%2A> est utilisé pour écouter les tentatives de connexions clientes entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-358">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-359">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-359">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="51cc2-360">Quand vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-360">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog">
          <span data-ttu-id="51cc2-361">Longueur maximale de la file d'attente des connexions en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-361">The maximum length of the pending connections queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51cc2-362">Lance l'écoute des demandes de connexion entrantes avec un nombre maximal de connexions en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-362">Starts listening for incoming connection requests with a maximum number of pending connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-363">Le <xref:System.Net.Sockets.TcpListener.Start%2A> méthode initialise sous-jacent <xref:System.Net.Sockets.Socket>lie à un point de terminaison local et écoute les tentatives de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-363">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="51cc2-364">Si une demande de connexion est reçue, <xref:System.Net.Sockets.TcpListener.Start%2A> sera file d’attente de la demande et continue à écouter les demandes supplémentaires jusqu'à ce que vous appeliez la <xref:System.Net.Sockets.TcpListener.Stop%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-364">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="51cc2-365">Si <xref:System.Net.Sockets.TcpListener> reçoit une demande de connexion une fois qu’il a déjà en file d’attente le nombre maximal de connexions, il lève une <xref:System.Net.Sockets.SocketException> sur le client.</span><span class="sxs-lookup"><span data-stu-id="51cc2-365">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="51cc2-366">Pour supprimer une connexion à partir de la file d’attente de connexion entrante, utiliser le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode ou la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-366">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="51cc2-367">Le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> méthode supprime une connexion à partir de la file d’attente et retourne un <xref:System.Net.Sockets.TcpClient> que vous pouvez utiliser pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="51cc2-367">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="51cc2-368">Le <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> méthode retournera un <xref:System.Net.Sockets.Socket> que vous pouvez utiliser pour faire de même.</span><span class="sxs-lookup"><span data-stu-id="51cc2-368">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="51cc2-369">Si votre application requiert uniquement les e/s synchrones, utilisez le <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-369">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="51cc2-370">Pour plus de contrôle de comportement, utilisez <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51cc2-370">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="51cc2-371">Ces deux méthodes bloquent jusqu'à ce qu’une demande de connexion est disponible dans la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="51cc2-371">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="51cc2-372">Utilisez le <xref:System.Net.Sockets.TcpListener.Stop%2A> méthode pour fermer le <xref:System.Net.Sockets.TcpListener> et arrêtent l’écoute.</span><span class="sxs-lookup"><span data-stu-id="51cc2-372">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="51cc2-373">Vous êtes chargé de fermer vos connexions acceptées séparément.</span><span class="sxs-lookup"><span data-stu-id="51cc2-373">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-374">Utilisez le <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriété pour obtenir le code d’erreur spécifique et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="51cc2-374">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-375">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-375">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-376">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-376">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-377">L’exemple de code suivant montre comment <xref:System.Net.Sockets.TcpListener.Start%2A> est utilisé pour écouter les tentatives de connexions clientes entrantes.</span><span class="sxs-lookup"><span data-stu-id="51cc2-377">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-378">Une erreur s'est produite lors de l'accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-378">An error occurred while accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="51cc2-379">Le paramètre <paramref name="backlog" /> est inférieur à zéro ou dépasse le nombre maximal de connexions autorisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-379">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51cc2-380">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-380">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51cc2-381">Ferme l'écouteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-381">Closes the listener.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51cc2-382"><xref:System.Net.Sockets.TcpListener.Stop%2A> Ferme l’écouteur.</span><span class="sxs-lookup"><span data-stu-id="51cc2-382"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="51cc2-383">Toutes les demandes de connexion non acceptées dans la file d’attente seront perdues.</span><span class="sxs-lookup"><span data-stu-id="51cc2-383">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="51cc2-384">Hôtes distants en attente d’une connexion d’être acceptés lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-384">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="51cc2-385">Vous êtes chargé de fermer vos connexions acceptées séparément.</span><span class="sxs-lookup"><span data-stu-id="51cc2-385">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51cc2-386">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="51cc2-386">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="51cc2-387">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="51cc2-387">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51cc2-388">L’exemple de code suivant montre comment utiliser le <xref:System.Net.Sockets.TcpListener.Stop%2A> méthode sous-jacent <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="51cc2-388">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="51cc2-389">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-389">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="51cc2-390">Quand vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51cc2-390">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="51cc2-391">Le <see cref="M:System.Net.Sockets.TcpListener.Stop" /> méthode ferme également sous-jacent <see cref="T:System.Net.Sockets.Socket" />et crée un nouveau <see cref="T:System.Net.Sockets.Socket" /> pour le <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="51cc2-391">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            </span>
            <span data-ttu-id="51cc2-392">Si vous définissez des propriétés sur sous-jacent <see cref="T:System.Net.Sockets.Socket" /> avant d’appeler le <see cref="M:System.Net.Sockets.TcpListener.Stop" /> (méthode), ces propriétés ne seront pas reprises au nouveau <see cref="T:System.Net.Sockets.Socket" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="51cc2-392">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>