<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c027a4d4116c04f027be65aee90bb4584786c2ec" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55395910" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="de8dc-101">Récepteur client pour le trafic multicast d'une source unique, également appelé Source Specific Multicast (SSM).</span><span class="sxs-lookup"><span data-stu-id="de8dc-101">A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-102">L’adresse de groupe de multidiffusion et d’une adresse d’expéditeur source doivent être connus.</span><span class="sxs-lookup"><span data-stu-id="de8dc-102">The multicast group address and sender source address must be known.</span></span>  
  
 <span data-ttu-id="de8dc-103">En plus de recevoir des données de multidiffusion à partir d’un expéditeur spécifique, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client peut également envoyer des données de monodiffusion à l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="de8dc-103">In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.</span></span>  
  
 <span data-ttu-id="de8dc-104">À réception de multidiffusion provenant de plusieurs sources, ou lorsque les sources ne sont pas connus d’avance, utilisez la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> classe à la place.</span><span class="sxs-lookup"><span data-stu-id="de8dc-104">To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="de8dc-105">Adresse source de l’expéditeur à laquelle ce récepteur doit s’abonner.</span><span class="sxs-lookup"><span data-stu-id="de8dc-105">The sender source address for this receiver to subscribe to.</span></span></param>
        <param name="groupAddress"><span data-ttu-id="de8dc-106">Adresse du groupe de multidiffusion à laquelle ce récepteur doit s’abonner.</span><span class="sxs-lookup"><span data-stu-id="de8dc-106">The multicast group address for this receiver to subscribe to.</span></span></param>
        <param name="localPort"><span data-ttu-id="de8dc-107">Port local auquel ce récepteur doit se lier.</span><span class="sxs-lookup"><span data-stu-id="de8dc-107">The local port for this receiver to bind to.</span></span></param>
        <summary><span data-ttu-id="de8dc-108">Crée un client UDP <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> qui peut s’abonner à une adresse de groupe et recevoir les datagrammes d’une même source.</span><span class="sxs-lookup"><span data-stu-id="de8dc-108">Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-109">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructeur associe un socket de multidiffusion UDP avec une adresse de groupe et le port, mais ne pas lier ou sinon utiliser le socket.</span><span class="sxs-lookup"><span data-stu-id="de8dc-109">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="de8dc-110">Le `groupAddress` paramètre peut être une IPv6 ou IPv4 multicast adresse.</span><span class="sxs-lookup"><span data-stu-id="de8dc-110">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span> <span data-ttu-id="de8dc-111">Toutefois, la famille d’adresses de la `sourceAddress` et `groupAddress` paramètres doivent être identique.</span><span class="sxs-lookup"><span data-stu-id="de8dc-111">However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.</span></span>  
  
 <span data-ttu-id="de8dc-112">Le `localPort` paramètre ne doit pas spécifier un port inférieur à 1 024.</span><span class="sxs-lookup"><span data-stu-id="de8dc-112">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de8dc-113"><paramref name="sourceAddress" /> et <paramref name="groupAddress" /> doivent être la même famille d’adresses.</span><span class="sxs-lookup"><span data-stu-id="de8dc-113"><paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de8dc-114"><paramref name="sourceAddress" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-114"><paramref name="sourceAddress" /> is a null reference (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="de8dc-115">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-115">-or-</span></span> 
 <span data-ttu-id="de8dc-116"><paramref name="groupAddress" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-116"><paramref name="groupAddress" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de8dc-117"><paramref name="localPort" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-117"><paramref name="localPort" /> is less than 0</span></span> 
<span data-ttu-id="de8dc-118">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-118">-or-</span></span> 
 <span data-ttu-id="de8dc-119"><paramref name="localPort" /> est supérieur à 65 535.</span><span class="sxs-lookup"><span data-stu-id="de8dc-119"><paramref name="localPort" /> is greater than 65,535.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-120"><paramref name="localPort" /> est inférieur à 1024</span><span class="sxs-lookup"><span data-stu-id="de8dc-120"><paramref name="localPort" /> is less than 1024</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="de8dc-121">Méthode de rappel à appeler quand l’opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-121">A callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="de8dc-122">Informations d’état facultatives à passer à la méthode <paramref name="callback" /> pour cette opération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-122">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="de8dc-123">Lie le socket et commence une opération de jointure au groupe de multidiffusion pour permettre la réception de datagrammes à partir d’une adresse source unique.</span><span class="sxs-lookup"><span data-stu-id="de8dc-123">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</span></span></summary>
        <returns><span data-ttu-id="de8dc-124"><see cref="T:System.IAsyncResult" /> qui fait référence à cette opération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-124">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-125">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> méthode lie un socket de multidiffusion UDP à un port local et joint un groupe multicast pour autoriser la réception de datagrammes à partir d’une adresse source unique.</span><span class="sxs-lookup"><span data-stu-id="de8dc-125">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</span></span> <span data-ttu-id="de8dc-126">L’adresse de groupe de multidiffusion, adresse source unique et un port local à lier à sont spécifiés dans le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="de8dc-126">The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="de8dc-127">La méthode spécifiée dans le `callback` paramètre est appelé lorsque l’opération pour joindre le groupe de multidiffusion est terminée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-127">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="de8dc-128">Si requis par le runtime, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> méthode effectue également une vérification de stratégie pour vérifier que le client est autorisé à accéder au groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="de8dc-128">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="de8dc-129">Si le client n’est pas autorisé l’accès, un <xref:System.Net.Sockets.SocketException> est levée avec <xref:System.Net.Sockets.SocketError.AccessDenied>.</span><span class="sxs-lookup"><span data-stu-id="de8dc-129">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-130">Le groupe de multidiffusion a déjà été joint ou une opération de jointure est actuellement en cours.</span><span class="sxs-lookup"><span data-stu-id="de8dc-130">The multicast group has already been joined or a join operation is currently in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-131"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-131">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-132">Une erreur s’est produite pendant la tentative d’accès au socket.</span><span class="sxs-lookup"><span data-stu-id="de8dc-132">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="de8dc-133">Mémoire tampon destinée à stocker les données reçues.</span><span class="sxs-lookup"><span data-stu-id="de8dc-133">The buffer to store the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="de8dc-134">Décalage, en octets, en partant du début de <paramref name="buffer" /> où les données doivent être stockées.</span><span class="sxs-lookup"><span data-stu-id="de8dc-134">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</span></span></param>
        <param name="count"><span data-ttu-id="de8dc-135">Nombre maximal d’octets à recevoir et à stocker dans <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-135">The maximum number of bytes to receive and store in the <paramref name="buffer" />.</span></span></param>
        <param name="callback"><span data-ttu-id="de8dc-136">Méthode de rappel à appeler quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="de8dc-136">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="de8dc-137">Informations d’état facultatives à passer à la méthode <paramref name="callback" /> pour cette opération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-137">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="de8dc-138">Commence l’opération de réception d’un paquet en provenance d’un groupe de multidiffusion joint et appelle le rappel spécifié quand un paquet est arrivé dans le groupe en provenance d’un expéditeur spécifié.</span><span class="sxs-lookup"><span data-stu-id="de8dc-138">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</span></span></summary>
        <returns><span data-ttu-id="de8dc-139"><see cref="T:System.IAsyncResult" /> qui fait référence à cette opération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-139">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-140">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> méthode commence une opération de réception d’un paquet UDP à partir d’un groupe de multidiffusion joint à partir d’un expéditeur unique.</span><span class="sxs-lookup"><span data-stu-id="de8dc-140">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</span></span> <span data-ttu-id="de8dc-141">Le port local, le groupe multicast et l’adresse de source de l’expéditeur sont spécifiés dans le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="de8dc-141">The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="de8dc-142">Le client de multidiffusion doit également avoir effectué à une jointure au groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="de8dc-142">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="de8dc-143">La méthode spécifiée dans le `callback` paramètre est appelé lors de la réception d’un paquet.</span><span class="sxs-lookup"><span data-stu-id="de8dc-143">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="de8dc-144">Il est possible d’avoir une défaillance de socket si une opération de réception échoue de façon synchrone, bien que cela soit rare avec UDP.</span><span class="sxs-lookup"><span data-stu-id="de8dc-144">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="de8dc-145">Si une défaillance de socket se produit, un <xref:System.Net.Sockets.SocketException> est levée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-145">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="de8dc-146">L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-146">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de8dc-147"><paramref name="buffer" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-147"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de8dc-148"><paramref name="offset" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-148"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="de8dc-149">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-149">-or-</span></span> 
 <span data-ttu-id="de8dc-150"><paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-150"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="de8dc-151">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-151">-or-</span></span> 
 <span data-ttu-id="de8dc-152"><paramref name="count" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-152"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="de8dc-153">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-153">-or-</span></span> 
 <span data-ttu-id="de8dc-154"><paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-154"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-155">Le groupe de multidiffusion n’a pas encore été joint.</span><span class="sxs-lookup"><span data-stu-id="de8dc-155">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-156"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-156">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-157">Une erreur s’est produite pendant la tentative d’accès au socket pour la réception.</span><span class="sxs-lookup"><span data-stu-id="de8dc-157">An error occurred when attempting to access the socket for receiving.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="de8dc-158">Mémoire tampon qui contient les données à envoyer.</span><span class="sxs-lookup"><span data-stu-id="de8dc-158">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="de8dc-159">Décalage, en octets, en partant du début de <paramref name="buffer" /> pour lire les données à envoyer.</span><span class="sxs-lookup"><span data-stu-id="de8dc-159">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="de8dc-160">Nombre d’octets à envoyer à partir de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-160">The number of bytes to send from the <paramref name="buffer" />.</span></span></param>
        <param name="remotePort"><span data-ttu-id="de8dc-161">Port distant auquel le paquet doit être envoyé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-161">The remote port to which the packet is to be sent.</span></span> <span data-ttu-id="de8dc-162">L’adresse distante est spécifiée par le constructeur <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-162">The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</span></span></param>
        <param name="callback"><span data-ttu-id="de8dc-163">Méthode de rappel à appeler quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="de8dc-163">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="de8dc-164">Informations d’état facultatives à passer à la méthode <paramref name="callback" /> pour cette opération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-164">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="de8dc-165">Commence l’opération d’envoi d’un paquet de monodiffusion à la source précédemment spécifiée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-165">Begins the operation of sending a unicast packet to the source previously specified.</span></span></summary>
        <returns><span data-ttu-id="de8dc-166"><see cref="T:System.IAsyncResult" /> qui fait référence à cette opération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-166">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-167">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> méthode commence une opération d’envoi d’un paquet UDP à la source spécifiée précédemment.</span><span class="sxs-lookup"><span data-stu-id="de8dc-167">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.</span></span>  
  
 <span data-ttu-id="de8dc-168">Certains protocoles utilisent ces informations à transmettre au contrôle de flux, de qualité de statistiques du service ou les messages de récupération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-168">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="de8dc-169">La méthode spécifiée dans le `callback` paramètre est appelé lorsqu’un paquet a été envoyé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-169">The method specified in the `callback` parameter is invoked when a packet has been sent.</span></span>  
  
 <span data-ttu-id="de8dc-170">Le client doit avoir effectué une jointure au groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="de8dc-170">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="de8dc-171">Si le port de destination spécifié dans le `remotePort` paramètre est inférieure à 1 024, un <xref:System.Net.Sockets.SocketException> est levée avec <xref:System.Net.Sockets.SocketError.AccessDenied>.</span><span class="sxs-lookup"><span data-stu-id="de8dc-171">If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="de8dc-172">Il est possible d’avoir une défaillance de socket si une opération d’envoi échoue de façon synchrone, bien que cela soit rare avec UDP.</span><span class="sxs-lookup"><span data-stu-id="de8dc-172">It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="de8dc-173">Si une défaillance de socket se produit, un <xref:System.Net.Sockets.SocketException> est levée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-173">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="de8dc-174">L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-174">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de8dc-175"><paramref name="buffer" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-175"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de8dc-176"><paramref name="offset" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-176"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="de8dc-177">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-177">-or-</span></span> 
 <span data-ttu-id="de8dc-178"><paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-178"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="de8dc-179">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-179">-or-</span></span> 
 <span data-ttu-id="de8dc-180"><paramref name="count" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-180"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="de8dc-181">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-181">-or-</span></span> 
 <span data-ttu-id="de8dc-182"><paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-182"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="de8dc-183">ou</span><span class="sxs-lookup"><span data-stu-id="de8dc-183">-or-</span></span> 
 <span data-ttu-id="de8dc-184"><paramref name="remotePort" /> est inférieur à 0 ou supérieur à 65 535.</span><span class="sxs-lookup"><span data-stu-id="de8dc-184"><paramref name="remotePort" /> is less than 0 or greater than 65,535.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-185">Le groupe de multidiffusion n’a pas encore été joint.</span><span class="sxs-lookup"><span data-stu-id="de8dc-185">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-186"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-186">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-187">Une erreur s’est produite pendant la tentative d’accès au socket.</span><span class="sxs-lookup"><span data-stu-id="de8dc-187">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de8dc-188">Quitte le groupe de multidiffusion et libère toutes les ressources utilisées par l’instance actuelle de la classe <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> et le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="de8dc-188">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-189">Appelez la méthode <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span><span class="sxs-lookup"><span data-stu-id="de8dc-189">Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="de8dc-190">La méthode <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> rend le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="de8dc-190">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="de8dc-191">Après avoir appelé <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> occupée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-191">After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="de8dc-192">Appelez toujours <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span><span class="sxs-lookup"><span data-stu-id="de8dc-192">Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="de8dc-193">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> de l'objet <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="de8dc-193">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="de8dc-194">Résultat de l’opération de jointure asynchrone.</span><span class="sxs-lookup"><span data-stu-id="de8dc-194">The result of the asynchronous join operation.</span></span></param>
        <summary><span data-ttu-id="de8dc-195">Termine l’opération de jointure asynchrone vers un groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="de8dc-195">Completes the asynchronous join group operation to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-196">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> méthode effectue une liaison asynchrone à une opération de socket et de jointure à un groupe multicast.</span><span class="sxs-lookup"><span data-stu-id="de8dc-196">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="de8dc-197">Si requis par le runtime, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> méthode effectue également une vérification de stratégie pour vérifier que le client est autorisé à accéder au groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="de8dc-197">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="de8dc-198">Si le client n’est pas autorisé l’accès, un <xref:System.Net.Sockets.SocketException> est levée avec <xref:System.Net.Sockets.SocketError.AccessDenied>.</span><span class="sxs-lookup"><span data-stu-id="de8dc-198">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="de8dc-199">S’il existe une erreur de socket lors de l’exécution de l’opération de jointure, un <xref:System.Net.Sockets.SocketException> est levée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-199">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="de8dc-200">L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-200">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de8dc-201"><paramref name="result" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-201"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-202"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-202">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-203">Une erreur s’est produite pendant la tentative d’accès au socket.</span><span class="sxs-lookup"><span data-stu-id="de8dc-203">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult *  -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="de8dc-204">Résultat de l’opération de réception asynchrone.</span><span class="sxs-lookup"><span data-stu-id="de8dc-204">The result of the asynchronous receive operation.</span></span></param>
        <param name="sourcePort"><span data-ttu-id="de8dc-205">Point de terminaison source d’où le paquet a été reçu.</span><span class="sxs-lookup"><span data-stu-id="de8dc-205">The source endpoint where the packet was received from.</span></span></param>
        <summary><span data-ttu-id="de8dc-206">Termine l’opération asynchrone de réception d’un paquet du groupe de multidiffusion joint et fournit les informations reçues.</span><span class="sxs-lookup"><span data-stu-id="de8dc-206">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span></span></summary>
        <returns><span data-ttu-id="de8dc-207">Longueur en octets du message stocké dans le paramètre <paramref name="buffer" /> passé à la méthode <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-207">The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-208">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> méthode termine une opération asynchrone pour recevoir un paquet à partir d’une source unique dans un groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="de8dc-208">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</span></span>  
  
 <span data-ttu-id="de8dc-209">S’il existe une erreur de socket lors de l’exécution de l’opération de réception, un <xref:System.Net.Sockets.SocketException> est levée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-209">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="de8dc-210">L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-210">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de8dc-211"><paramref name="result" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-211"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-212">Le groupe de multidiffusion n’a pas encore été joint.</span><span class="sxs-lookup"><span data-stu-id="de8dc-212">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-213"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-213">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-214">Une erreur s’est produite pendant la tentative d’accès au socket.</span><span class="sxs-lookup"><span data-stu-id="de8dc-214">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="de8dc-215">Résultat de l’opération d’envoi asynchrone.</span><span class="sxs-lookup"><span data-stu-id="de8dc-215">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="de8dc-216">Termine l’opération d’envoi d’un paquet de monodiffusion à une source unique.</span><span class="sxs-lookup"><span data-stu-id="de8dc-216">Completes the operation of sending a unicast packet to a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-217">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> méthode termine une opération asynchrone pour envoyer un paquet à source unique spécifié précédemment.</span><span class="sxs-lookup"><span data-stu-id="de8dc-217">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.</span></span>  
  
 <span data-ttu-id="de8dc-218">S’il existe une erreur de socket lors de l’exécution de l’opération de réception, un <xref:System.Net.Sockets.SocketException> est levée.</span><span class="sxs-lookup"><span data-stu-id="de8dc-218">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="de8dc-219">L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.</span><span class="sxs-lookup"><span data-stu-id="de8dc-219">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de8dc-220"><paramref name="result" /> est une référence Null (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="de8dc-220"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-221">Le groupe de multidiffusion n’a pas encore été joint.</span><span class="sxs-lookup"><span data-stu-id="de8dc-221">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-222"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-222">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="de8dc-223">Une erreur s’est produite pendant la tentative d’accès au socket.</span><span class="sxs-lookup"><span data-stu-id="de8dc-223">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de8dc-224">Obtient ou définit la taille, en octets, de la mémoire tampon de réception du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations de réception de multidiffusion sur cette instance <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-224">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="de8dc-225">retourne <see cref="T:System.Int32" /> ;</span><span class="sxs-lookup"><span data-stu-id="de8dc-225">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="de8dc-226">Taille, en octets, de la mémoire tampon de réception.</span><span class="sxs-lookup"><span data-stu-id="de8dc-226">The size, in bytes, of the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-227">Le `ReceiveBufferSize` propriété obtient ou définit la taille, en octets, de la mémoire tampon de réception de l’objet sous-jacent <xref:System.Net.Sockets.Socket> utilisé pour les opérations de réception multicast sur cette <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span><span class="sxs-lookup"><span data-stu-id="de8dc-227">The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span> <span data-ttu-id="de8dc-228">Plus précisément, le `ReceiveBufferSize` propriété contrôle la taille de la mémoire tampon utilisée par la pile quand un paquet arrive, mais l’application n’a pas encore appelé la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="de8dc-228">Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span> <span data-ttu-id="de8dc-229">Si cette mémoire tampon est rempli, paquets continuent d’arriver avant l’application appelle le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> et <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> méthodes, les paquets anciennes sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="de8dc-229">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="de8dc-230">L’application ne sera jamais en mesure de recevoir les paquets ancien et ils recevront des paquets plus récente lorsqu’il appelle le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="de8dc-230">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span>  
  
 <span data-ttu-id="de8dc-231">La taille par défaut de la mémoire tampon de réception sur Windows est 8 192.</span><span class="sxs-lookup"><span data-stu-id="de8dc-231">The default size of the receive buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de8dc-232">La taille de mémoire tampon spécifiée est inférieure à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-232">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-233">Le groupe de multidiffusion n’a pas encore été joint.</span><span class="sxs-lookup"><span data-stu-id="de8dc-233">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-234"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-234">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de8dc-235">Obtient ou définit la taille, en octets, de la mémoire tampon d’envoi du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations d’envoi de multidiffusion sur cette instance <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</span><span class="sxs-lookup"><span data-stu-id="de8dc-235">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="de8dc-236">retourne <see cref="T:System.Int32" /> ;</span><span class="sxs-lookup"><span data-stu-id="de8dc-236">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="de8dc-237">Taille, en octets, de la mémoire tampon d’envoi</span><span class="sxs-lookup"><span data-stu-id="de8dc-237">The size, in bytes, of the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de8dc-238">La propriété SendBufferSize Obtient ou définit la taille, en octets, de la mémoire tampon d’envoi de l’objet sous-jacent <xref:System.Net.Sockets.Socket> utilisé pour les opérations d’envoi de multidiffusion sur cette <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span><span class="sxs-lookup"><span data-stu-id="de8dc-238">The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="de8dc-239">Sur Mac OS X, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propriété détermine le nombre d’octets peut être dans en attente pour envoi mémoire tampon de la pile réseau avant les appels supplémentaires à la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> méthode échouent.</span><span class="sxs-lookup"><span data-stu-id="de8dc-239">On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing.</span></span> <span data-ttu-id="de8dc-240">Les applications sur Mac OS X peut-être être concernés par cette propriété s’ils envoient un grand nombre de paquets UDP dans un court laps de temps.</span><span class="sxs-lookup"><span data-stu-id="de8dc-240">Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</span></span>  
  
 <span data-ttu-id="de8dc-241">Sur Windows, les appels à la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> méthode prendra plus de temps pour appeler le rappel selon la valeur de la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propriété si la mémoire tampon d’envoi est plein.</span><span class="sxs-lookup"><span data-stu-id="de8dc-241">On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="de8dc-242">Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propriété détermine uniquement si la mémoire tampon de l’utilisateur reste verrouillé dans la mémoire physique jusqu'à ce que la fin de l’envoi.</span><span class="sxs-lookup"><span data-stu-id="de8dc-242">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="de8dc-243">La taille de la mémoire tampon d’envoi sur Windows par défaut est 8 192.</span><span class="sxs-lookup"><span data-stu-id="de8dc-243">The default size of the send buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de8dc-244">La taille de mémoire tampon spécifiée est inférieure à 0.</span><span class="sxs-lookup"><span data-stu-id="de8dc-244">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de8dc-245">Le groupe de multidiffusion n’a pas encore été joint.</span><span class="sxs-lookup"><span data-stu-id="de8dc-245">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de8dc-246"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="de8dc-246">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>