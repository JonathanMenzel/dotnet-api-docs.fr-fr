<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a553abd55c19fb7eb8aa7d1d2a17e152cd4d47d5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39753514" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Récepteur client pour le trafic multicast d'une source unique, également appelé Source Specific Multicast (SSM).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’adresse de groupe de multidiffusion et d’une adresse d’expéditeur source doivent être connus.  
  
 En plus de recevoir des données de multidiffusion à partir d’un expéditeur spécifique, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client peut également envoyer des données de monodiffusion à l’expéditeur.  
  
 À réception de multidiffusion provenant de plusieurs sources, ou lorsque les sources ne sont pas connus d’avance, utilisez la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> classe à la place.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Adresse source de l’expéditeur à laquelle ce récepteur doit s’abonner.</param>
        <param name="groupAddress">Adresse du groupe de multidiffusion à laquelle ce récepteur doit s’abonner.</param>
        <param name="localPort">Port local auquel ce récepteur doit se lier.</param>
        <summary>Crée un client UDP (User Datagram Protocol) <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> qui peut s'abonner à une adresse de groupe et recevoir des datagrammes d'une source unique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructeur associe un socket de multidiffusion UDP avec une adresse de groupe et le port, mais ne pas lier ou sinon utiliser le socket.  
  
 Le `groupAddress` paramètre peut être une IPv6 ou IPv4 multicast adresse. Toutefois, la famille d’adresses de la `sourceAddress` et `groupAddress` paramètres doivent être identique.  
  
 Le `localPort` paramètre ne doit pas spécifier un port inférieur à 1 024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceAddress" /> et <paramref name="groupAddress" /> doivent être de la même famille d'adresses.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceAddress" /> est une référence Null (Nothing en Visual Basic).  
  
- ou - 
 <paramref name="groupAddress" /> est une référence Null (Nothing en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> est inférieur à 0. 
- ou - 
 <paramref name="localPort" /> est supérieur à 65 535.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="localPort" /> est inférieur à 1024</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Méthode de rappel à appeler quand l’opération est terminée.</param>
        <param name="state">Informations d’état facultatives à passer à la méthode <c>callback</c> pour cette opération.</param>
        <summary>Lie le socket et commence une opération de jointure au groupe de multidiffusion pour permettre la réception de datagrammes à partir d’une adresse source unique.</summary>
        <returns>Retourne <see cref="T:System.IAsyncResult" />.  
  
<see cref="T:System.IAsyncResult" /> qui fait référence à cette opération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> méthode lie un socket de multidiffusion UDP à un port local et joint un groupe multicast pour autoriser la réception de datagrammes à partir d’une adresse source unique. L’adresse de groupe de multidiffusion, adresse source unique et un port local à lier à sont spécifiés dans le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructeur.  
  
 La méthode spécifiée dans le `callback` paramètre est appelé lorsque l’opération pour joindre le groupe de multidiffusion est terminée.  
  
 Si requis par le runtime, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> méthode effectue également une vérification de stratégie pour vérifier que le client est autorisé à accéder au groupe de multidiffusion. Si le client n’est pas autorisé l’accès, un <xref:System.Net.Sockets.SocketException> est levée avec <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion a déjà été joint ou une opération de jointure est actuellement en cours.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Mémoire tampon destinée à stocker les données reçues.</param>
        <param name="offset">Offset, en octets, en partant du début de <c>buffer</c> où les données doivent être stockées.</param>
        <param name="count">Nombre maximal d’octets à recevoir et à stocker dans <c>buffer</c>.</param>
        <param name="callback">Méthode de rappel à appeler quand l’opération se termine.</param>
        <param name="state">Informations d’état facultatives à passer à la méthode <c>callback</c> pour cette opération.</param>
        <summary>Commence l’opération de réception d’un paquet en provenance d’un groupe de multidiffusion joint et appelle le rappel spécifié quand un paquet est arrivé dans le groupe en provenance d’un expéditeur spécifié.</summary>
        <returns>Retourne <see cref="T:System.IAsyncResult" />.  
  
<see cref="T:System.IAsyncResult" /> qui fait référence à cette opération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> méthode commence une opération de réception d’un paquet UDP à partir d’un groupe de multidiffusion joint à partir d’un expéditeur unique. Le port local, le groupe multicast et l’adresse de source de l’expéditeur sont spécifiés dans le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructeur. Le client de multidiffusion doit également avoir effectué à une jointure au groupe de multidiffusion.  
  
 La méthode spécifiée dans le `callback` paramètre est appelé lors de la réception d’un paquet.  
  
 Il est possible d’avoir une défaillance de socket si une opération de réception échoue de façon synchrone, bien que cela soit rare avec UDP. Si une défaillance de socket se produit, un <xref:System.Net.Sockets.SocketException> est levée. L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> est une référence Null (Nothing en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> est inférieur à 0. 
- ou - 
 <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.  
  
- ou - 
 <paramref name="count" /> est inférieur à 0. 
- ou - 
 <paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion n’a pas encore été joint.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Une erreur s’est produite pendant la tentative d’accès au socket pour la réception.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Mémoire tampon qui contient les données à envoyer.</param>
        <param name="offset">Offset, en octets, en partant du début de <c>buffer</c> pour lire les données à envoyer.</param>
        <param name="count">Nombre d’octets à envoyer à partir de <c>buffer</c>.</param>
        <param name="remotePort">Port distant auquel le paquet doit être envoyé. L'adresse distante est spécifiée par le constructeur <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />.</param>
        <param name="callback">Méthode de rappel à appeler quand l’opération se termine.</param>
        <param name="state">Informations d’état facultatives à passer à la méthode <c>callback</c> pour cette opération.</param>
        <summary>Commence l’opération d’envoi d’un paquet de monodiffusion à la source précédemment spécifiée.</summary>
        <returns>Retourne <see cref="T:System.IAsyncResult" />.  
  
<see cref="T:System.IAsyncResult" /> qui fait référence à cette opération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> méthode commence une opération d’envoi d’un paquet UDP à la source spécifiée précédemment.  
  
 Certains protocoles utilisent ces informations à transmettre au contrôle de flux, de qualité de statistiques du service ou les messages de récupération.  
  
 La méthode spécifiée dans le `callback` paramètre est appelé lorsqu’un paquet a été envoyé.  
  
 Le client doit avoir effectué une jointure au groupe de multidiffusion.  
  
 Si le port de destination spécifié dans le `remotePort` paramètre est inférieure à 1 024, un <xref:System.Net.Sockets.SocketException> est levée avec <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Il est possible d’avoir une défaillance de socket si une opération d’envoi échoue de façon synchrone, bien que cela soit rare avec UDP. Si une défaillance de socket se produit, un <xref:System.Net.Sockets.SocketException> est levée. L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> est une référence Null (Nothing en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> est inférieur à 0. 
- ou - 
 <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.  
  
- ou - 
 <paramref name="count" /> est inférieur à 0. 
- ou - 
 <paramref name="offset" /> plus count est supérieur à la longueur de <paramref name="buffer" />.  
  
- ou - 
 <paramref name="remotePort" /> est inférieur à 0 ou supérieur à 65 535.</exception>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion n’a pas encore été joint.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quitte le groupe de multidiffusion et libère toutes les ressources utilisées par l’instance actuelle de la classe <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> et le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez la méthode <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. La méthode <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> rend le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> inutilisable. Après avoir appelé <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> occupée.  
  
 Appelez toujours <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> de l'objet <xref:System.Object.Finalize%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Résultat de l’opération de jointure asynchrone.</param>
        <summary>Termine l’opération de jointure asynchrone vers un groupe de multidiffusion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> méthode effectue une liaison asynchrone à une opération de socket et de jointure à un groupe multicast.  
  
 Si requis par le runtime, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> méthode effectue également une vérification de stratégie pour vérifier que le client est autorisé à accéder au groupe de multidiffusion. Si le client n’est pas autorisé l’accès, un <xref:System.Net.Sockets.SocketException> est levée avec <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 S’il existe une erreur de socket lors de l’exécution de l’opération de jointure, un <xref:System.Net.Sockets.SocketException> est levée. L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> est une référence Null (Nothing en Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult *  -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Résultat de l’opération de réception asynchrone.</param>
        <param name="sourcePort">Point de terminaison source d’où le paquet a été reçu.</param>
        <summary>Termine l’opération asynchrone de réception d’un paquet du groupe de multidiffusion joint et fournit les informations reçues.</summary>
        <returns>Retourne <see cref="T:System.Int32" />.  
  
Longueur en octets du message stocké dans le paramètre <paramref name="buffer" /> passé à la méthode <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> méthode termine une opération asynchrone pour recevoir un paquet à partir d’une source unique dans un groupe de multidiffusion.  
  
 S’il existe une erreur de socket lors de l’exécution de l’opération de réception, un <xref:System.Net.Sockets.SocketException> est levée. L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> est une référence Null (Nothing en Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion n’a pas encore été joint.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Résultat de l’opération d’envoi asynchrone.</param>
        <summary>Termine l’opération d’envoi d’un paquet de monodiffusion à une source unique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> méthode termine une opération asynchrone pour envoyer un paquet à source unique spécifié précédemment.  
  
 S’il existe une erreur de socket lors de l’exécution de l’opération de réception, un <xref:System.Net.Sockets.SocketException> est levée. L’erreur renvoyée est spécifié en tant que membre de la <xref:System.Net.Sockets.SocketError> énumération.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> est une référence Null (Nothing en Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion n’a pas encore été joint.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille, en octets, de la mémoire tampon de réception du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations de réception de multidiffusion sur cette instance <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Retourne <see cref="T:System.Int32" />.  
  
Taille, en octets, de la mémoire tampon de réception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `ReceiveBufferSize` propriété obtient ou définit la taille, en octets, de la mémoire tampon de réception de l’objet sous-jacent <xref:System.Net.Sockets.Socket> utilisé pour les opérations de réception multicast sur cette <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance. Plus précisément, le `ReceiveBufferSize` propriété contrôle la taille de la mémoire tampon utilisée par la pile quand un paquet arrive, mais l’application n’a pas encore appelé la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> (méthode). Si cette mémoire tampon est rempli, paquets continuent d’arriver avant l’application appelle le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> et <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> méthodes, les paquets anciennes sont supprimées. L’application ne sera jamais en mesure de recevoir les paquets ancien et ils recevront des paquets plus récente lorsqu’il appelle le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> (méthode).  
  
 La taille par défaut de la mémoire tampon de réception sur Windows est 8 192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La taille de mémoire tampon spécifiée est inférieure à 0.</exception>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion n’a pas encore été joint.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille, en octets, de la mémoire tampon d’envoi du <see cref="T:System.Net.Sockets.Socket" /> utilisé pour les opérations d’envoi de multidiffusion sur cette instance <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Retourne <see cref="T:System.Int32" />.  
  
Taille, en octets, de la mémoire tampon d’envoi</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété SendBufferSize Obtient ou définit la taille, en octets, de la mémoire tampon d’envoi de l’objet sous-jacent <xref:System.Net.Sockets.Socket> utilisé pour les opérations d’envoi de multidiffusion sur cette <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.  
  
 Sur Mac OS X, le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propriété détermine le nombre d’octets peut être dans en attente pour envoi mémoire tampon de la pile réseau avant les appels supplémentaires à la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> méthode échouent. Les applications sur Mac OS X peut-être être concernés par cette propriété s’ils envoient un grand nombre de paquets UDP dans un court laps de temps.  
  
 Sur Windows, les appels à la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> méthode prendra plus de temps pour appeler le rappel selon la valeur de la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propriété si la mémoire tampon d’envoi est plein. Le <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propriété détermine uniquement si la mémoire tampon de l’utilisateur reste verrouillé dans la mémoire physique jusqu'à ce que la fin de l’envoi.  
  
 La taille de la mémoire tampon d’envoi sur Windows par défaut est 8 192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La taille de mémoire tampon spécifiée est inférieure à 0.</exception>
        <exception cref="T:System.InvalidOperationException">Le groupe de multidiffusion n’a pas encore été joint.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> a été supprimé.</exception>
      </Docs>
    </Member>
  </Members>
</Type>