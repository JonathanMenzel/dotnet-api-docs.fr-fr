<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="77123-101">Fournit des connexions clientes pour les services réseau TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77123-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-102">La <xref:System.Net.Sockets.TcpClient> classe fournit des méthodes simples pour vous connecter, envoi, et la réception de flux de données sur un réseau en mode blocage synchrone.</span><span class="sxs-lookup"><span data-stu-id="77123-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="77123-103">Dans l’ordre pour <xref:System.Net.Sockets.TcpClient> pour vous connecter et d’échanger des données, un <xref:System.Net.Sockets.TcpListener> ou <xref:System.Net.Sockets.Socket> créé avec le protocole TCP <xref:System.Net.Sockets.ProtocolType> doit être à l’écoute des demandes de connexion entrantes.</span><span class="sxs-lookup"><span data-stu-id="77123-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="77123-104">Vous pouvez vous connecter à cet écouteur de l’une des deux manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="77123-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="77123-105">Créer un <xref:System.Net.Sockets.TcpClient> et appelez l’une des trois disponibles <xref:System.Net.Sockets.TcpClient.Connect%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="77123-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="77123-106">Créer un <xref:System.Net.Sockets.TcpClient> à l’aide du nom d’hôte et le numéro de port de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="77123-107">Ce constructeur tentera automatiquement une connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-108">Si vous souhaitez envoyer des datagrammes sans connexion en mode blocage synchrone, utilisez la <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="77123-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-109">L’exemple de code suivant établit une <xref:System.Net.Sockets.TcpClient> connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="77123-110">Autorisation d’établir une connexion sortante ou accepter une demande entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77123-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="77123-111">Pour envoyer et recevoir des données, utilisez la <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> méthode pour obtenir un <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="77123-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        </span>
        <span data-ttu-id="77123-112">Appelez le <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> et <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> méthodes de la <see cref="T:System.Net.Sockets.NetworkStream" /> pour envoyer et recevoir des données avec l’hôte distant.</span>
        <span class="sxs-lookup">
          <span data-stu-id="77123-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span>
        </span>
        <span data-ttu-id="77123-113">Utilisez le <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> méthode pour libérer toutes les ressources associées à la <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="77123-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77123-114">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-114">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77123-115">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-116">Ce constructeur crée un nouveau <xref:System.Net.Sockets.TcpClient> et permet au fournisseur de service sous-jacent affecter le plus approprié local IP adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-116">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="77123-117">Vous devez d’abord appeler la <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode avant d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-117">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-118">Ce constructeur ne fonctionne qu’avec les types d’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="77123-118">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-119">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-119">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-120">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-120">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-121">L’exemple de code suivant montre comment utiliser le constructeur par défaut pour créer un nouveau <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="77123-121">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="77123-122">L'élément <see cref="T:System.Net.IPEndPoint" /> auquel vous liez l'élément <see cref="T:System.Net.Sockets.Socket" /> TCP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-122">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-123">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> et la lie au point de terminaison local spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-123">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-124">Ce constructeur crée un nouveau <xref:System.Net.Sockets.TcpClient> et le lie à la <xref:System.Net.IPEndPoint> spécifié par le `localEP` paramètre.</span><span class="sxs-lookup"><span data-stu-id="77123-124">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="77123-125">Avant d’appeler ce constructeur, vous devez créer un <xref:System.Net.IPEndPoint> à l’aide de l’adresse IP et port numéro à partir de laquelle vous souhaitez envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-125">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="77123-126">Vous n’avez pas besoin de spécifier un numéro d’adresse et le port IP local avant de se connecter et communiquer.</span><span class="sxs-lookup"><span data-stu-id="77123-126">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="77123-127">Si vous créez un <xref:System.Net.Sockets.TcpClient> à l’aide de n’importe quel autre constructeur, le fournisseur de services sous-jacent assigne le plus approprié local adresse IP et port numéro.</span><span class="sxs-lookup"><span data-stu-id="77123-127">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="77123-128">Vous devez appeler la <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode avant d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-128">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-129">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-129">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-130">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-130">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-131">L’exemple de code suivant montre comment créer une instance de la <xref:System.Net.Sockets.TcpClient> classe à l’aide d’un point de terminaison local.</span><span class="sxs-lookup"><span data-stu-id="77123-131">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-132">Le paramètre <paramref name="localEP" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-132">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="77123-133">L'élément <see cref="P:System.Net.IPAddress.AddressFamily" /> du protocole IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-133">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-134">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> avec la famille spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-134">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="77123-135">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-135">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-136">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-136">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-137">L’exemple de code suivant montre comment créer une instance de la <xref:System.Net.Sockets.TcpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="77123-137">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77123-138">Le paramètre <paramref name="family" /> n'est pas égal à AddressFamily.InterNetwork.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-138">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span>
          </span>
          <span data-ttu-id="77123-139">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-139">-or-</span>
          </span>
          <span data-ttu-id="77123-140">Le paramètre <paramref name="family" /> n'est pas égal à AddressFamily.InterNetworkV6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-140">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="77123-141">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-141">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-142">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-142">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-143">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> et établit une connexion au port spécifié sur l'hôte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-144">Ce constructeur crée un nouveau <xref:System.Net.Sockets.TcpClient> et effectue une connexion synchrone tentative pour le nom d’hôte fourni et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-144">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="77123-145">Le fournisseur de service sous-jacent affecte le plus approprié local IP adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-145">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="77123-146"><xref:System.Net.Sockets.TcpClient> se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="77123-146"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="77123-147">Ce constructeur permet d’initialiser, de résoudre le nom d’hôte DNS et de se connecter en une seule étape pratique.</span><span class="sxs-lookup"><span data-stu-id="77123-147">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="77123-148">Si le protocole IPv6 est activé et le <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="77123-148">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="77123-149">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</span><span class="sxs-lookup"><span data-stu-id="77123-149">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-150">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-151">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-151">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-152">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-152">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-153">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-153">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-154">L’exemple de code suivant montre comment créer une instance de la <xref:System.Net.Sockets.TcpClient> classe à l’aide d’un nom d’hôte et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-154">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-155">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-155">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-156">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-156">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-157">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-157">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-158">Obtient ou définit une valeur indiquant si une connexion a été établie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-158">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-159">
            <see langword="true" /> si la connexion a été établie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-159">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-160">Les classes dérivées de <xref:System.Net.Sockets.TcpClient> pouvez utiliser cette propriété pour déterminer si une tentative de connexion a réussi.</span><span class="sxs-lookup"><span data-stu-id="77123-160">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="77123-161">Il ne surveille pas l’état de connexion en cours de <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="77123-161">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="77123-162">Si l’hôte distant ferme la connexion, <xref:System.Net.Sockets.TcpClient.Active%2A> ne sera pas mis à jour.</span><span class="sxs-lookup"><span data-stu-id="77123-162">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="77123-163">Si vous dérivez de <xref:System.Net.Sockets.TcpClient> et requièrent la plus grande attention à l’état de connexion, utilisez la <xref:System.Net.Sockets.Socket.Connected%2A> propriété de la <xref:System.Net.Sockets.Socket> retournée par le <xref:System.Net.Sockets.TcpClient.Client%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-163">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-164">Obtient la quantité de données reçues du réseau et disponibles pour la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-164">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-165">Nombre d'octets de données reçus du réseau et disponibles pour la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-165">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-166"><xref:System.Net.Sockets.TcpClient.Available%2A> est un moyen de déterminer si les données sont en file d’attente pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="77123-166"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="77123-167">Si les données sont disponibles, appelez <xref:System.Net.Sockets.NetworkStream.Read%2A> pour obtenir les données.</span><span class="sxs-lookup"><span data-stu-id="77123-167">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="77123-168">Les données disponibles seront que la quantité totale de données en file d’attente dans le tampon réseau pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="77123-168">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="77123-169">Si aucune donnée n’est en attente dans la mémoire tampon réseau, <xref:System.Net.Sockets.TcpClient.Available%2A> retourne 0.</span><span class="sxs-lookup"><span data-stu-id="77123-169">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="77123-170">Si l’hôte distant arrête ou ferme la connexion, <xref:System.Net.Sockets.TcpClient.Available%2A> peut lever un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="77123-170">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="77123-171">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-171">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-172">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-172">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-173">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpClient.Available%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77123-173">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-174">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-174">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-175">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-175">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77123-176">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-176">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="77123-177">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-177">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-178">Numéro de port de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-178">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="77123-179">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-179">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="77123-180">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-180">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="77123-181">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-181">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-182">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-182">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="77123-183">L'hôte distant est spécifié par un élément <see cref="T:System.Net.IPAddress" /> et un numéro de port (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-183">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-184">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-184">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-185">Asynchrone <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpClient.EndConnect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-185">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="77123-186">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="77123-186">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="77123-187">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="77123-187">This method does not block until the operation completes.</span></span> <span data-ttu-id="77123-188">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.TcpClient.Connect%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="77123-188">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="77123-189">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="77123-189">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-190">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et se connecte à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-190">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-191">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-191">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-192">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-192">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-193">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-193">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="77123-194">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-194">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-195">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-195">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="77123-196">Au moins un élément <see cref="T:System.Net.IPAddress" /> qui désigne les hôtes distants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-196">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-197">Numéro de port des hôtes distants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-197">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="77123-198">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-198">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="77123-199">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-199">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="77123-200">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-200">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-201">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-201">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="77123-202">L'hôte distant est spécifié par un tableau <see cref="T:System.Net.IPAddress" /> et un numéro de port (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-202">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-203">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-203">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-204">Asynchrone <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpClient.EndConnect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-204">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="77123-205">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="77123-205">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="77123-206">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="77123-206">This method does not block until the operation completes.</span></span> <span data-ttu-id="77123-207">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.TcpClient.Connect%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="77123-207">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="77123-208">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="77123-208">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="77123-209">Cette méthode est généralement utilisée immédiatement après un appel à la <xref:System.Net.Dns.BeginGetHostAddresses%2A> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</span><span class="sxs-lookup"><span data-stu-id="77123-209">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-210">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et se connecte à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-210">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-211">Le paramètre <paramref name="addresses" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-211">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-212">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-212">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-213">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-213">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="77123-214">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-214">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-215">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-215">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="77123-216">Nom de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-216">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-217">Numéro de port de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-217">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="77123-218">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-218">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="77123-219">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-219">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="77123-220">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-220">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-221">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-221">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="77123-222">L'hôte distant est spécifié par un nom d'hôte (<see cref="T:System.String" />) et un numéro de port (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-222">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-223">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-223">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-224">Asynchrone <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpClient.EndConnect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-224">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="77123-225">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="77123-225">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="77123-226">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="77123-226">This method does not block until the operation completes.</span></span> <span data-ttu-id="77123-227">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.TcpClient.Connect%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="77123-227">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="77123-228">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="77123-228">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-229">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et se connecte à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-229">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-230">Le paramètre <paramref name="host" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-230">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-231">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-231">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-232">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-232">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="77123-233">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-233">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-234">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-234">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-235">Obtient ou définit l'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-235">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-236">L'élément <see cref="T:System.Net.Sockets.Socket" /> du réseau sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-236">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-237"><xref:System.Net.Sockets.TcpClient> Crée un <xref:System.Net.Sockets.Socket> pour envoyer et recevoir des données sur un réseau.</span><span class="sxs-lookup"><span data-stu-id="77123-237"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="77123-238">Les classes dérivées de <xref:System.Net.Sockets.TcpClient> cette propriété permet d’obtenir ou définir ce <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="77123-238">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="77123-239">Utilisez sous-jacent <xref:System.Net.Sockets.Socket> retourné à partir de <xref:System.Net.Sockets.TcpClient.Client%2A> si vous avez besoin d’accéder aux au-delà de celles qui <xref:System.Net.Sockets.TcpClient> fournit.</span><span class="sxs-lookup"><span data-stu-id="77123-239">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="77123-240">Vous pouvez également utiliser <xref:System.Net.Sockets.TcpClient.Client%2A> définir sous-jacent <xref:System.Net.Sockets.Socket> à un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="77123-240">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="77123-241">Cela peut être utile si vous souhaitez tirer parti de la simplicité de <xref:System.Net.Sockets.TcpClient> à l’aide d’un fichier préexistant <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="77123-241">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-242">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.TcpClient.Client%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77123-242">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="77123-243">Dans cet exemple, la taille de mémoire tampon de réception de l’objet sous-jacent <xref:System.Net.Sockets.Socket> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="77123-243">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77123-244">Supprime cette instance de <see cref="T:System.Net.Sockets.TcpClient" /> et demande que la connexion TCP sous-jacente soit fermée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-244">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-245">Le <xref:System.Net.Sockets.TcpClient.Close%2A> méthode marque l’instance comme disposé et demande qu’associé <xref:System.Net.Sockets.Socket> fermer la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="77123-245">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="77123-246">Selon le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété, la connexion TCP peut rester ouverte pendant un certain temps après la <xref:System.Net.Sockets.TcpClient.Close%2A> méthode est appelée lorsque des données restent à envoyer.</span><span class="sxs-lookup"><span data-stu-id="77123-246">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="77123-247">Aucune notification n’est fournie lors de la connexion sous-jacente est terminée.</span><span class="sxs-lookup"><span data-stu-id="77123-247">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="77123-248">Appel de cette méthode entraîne la fermeture de la <xref:System.Net.Sockets.Socket> et associé <xref:System.Net.Sockets.NetworkStream> qui est utilisé pour envoyer et recevoir des données s’il a été créé.</span><span class="sxs-lookup"><span data-stu-id="77123-248">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-249">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-249">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-250">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-250">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-251">L’exemple de code suivant illustre la fermeture un <xref:System.Net.Sockets.TcpClient> en appelant le <xref:System.Net.Sockets.TcpClient.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-251">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77123-252">Connecte le client à un hôte TCP distant en utilisant le nom d'hôte et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-252">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="77123-253">L'élément <see cref="T:System.Net.IPEndPoint" /> auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-253">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-254">Connecte le client à un hôte TCP distant en utilisant le point de terminaison réseau distant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-254">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-255">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="77123-255">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="77123-256">Avant d’appeler <xref:System.Net.Sockets.TcpClient.Connect%2A> vous devez créer une instance de la <xref:System.Net.IPEndPoint> classe à l’aide d’une adresse IP et un numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-256">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="77123-257">Utilisez cette <xref:System.Net.IPEndPoint> comme le `remoteEP` paramètre.</span><span class="sxs-lookup"><span data-stu-id="77123-257">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="77123-258">Le <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="77123-258">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="77123-259">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-259">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-260">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-260">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-261">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-261">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-262">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-262">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-263">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-263">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-264">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="77123-264">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-265">Le code suivant exemple utilise un <xref:System.Net.IPEndPoint> pour se connecter à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-265">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-266">Le paramètre <paramref name="remoteEp" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-266">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-267">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-267">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-268">Le <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-268">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="77123-269">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-269">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-270">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-270">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-271">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-271">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-272">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <xref:System.Net.IPAddress> et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-272">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="77123-273">Le <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="77123-273">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="77123-274">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-274">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-275">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-275">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-276">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-276">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-277">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-277">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-278">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-278">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-279">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-279">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-280">L’exemple de code suivant utilise une adresse IP et le numéro de port pour se connecter à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-280">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-281">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-281">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-282">Le paramètre <paramref name="port" /> n'est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-282">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-283">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-283">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-284">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-284">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="77123-285">Tableau <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-285">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-286">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-286">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-287">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-287">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-288">Cette méthode est généralement utilisée immédiatement après un appel à la <xref:System.Net.Dns.BeginGetHostAddresses%2A> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</span><span class="sxs-lookup"><span data-stu-id="77123-288">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="77123-289">Appelez le <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode pour établir une connexion d’hôte distant synchrone à l’hôte spécifié par le tableau de <xref:System.Net.IPAddress> éléments et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-289">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="77123-290">Le <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="77123-290">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="77123-291">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-291">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-292">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-292">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-293">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-293">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-294">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-294">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-295">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-295">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-296">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-296">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-297">L’exemple de code suivant utilise une adresse IP et le numéro de port pour se connecter à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-297">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-298">Le paramètre <paramref name="ipAddresses" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-298">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-299">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-299">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-300">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-300">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-301">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-301">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="77123-302">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-302">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="77123-303">Cette méthode est valide pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-303">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="77123-304">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-304">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-305">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-305">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-306">Connecte le client au port spécifié sur l'hôte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-306">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-307">Appelez cette méthode pour établir une connexion d’hôte distant synchrone au nom d’hôte spécifié et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="77123-307">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="77123-308">Le <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="77123-308">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="77123-309">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-309">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-310">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-310">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="77123-311">Si le protocole IPv6 est activé et le <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="77123-311">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="77123-312">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</span><span class="sxs-lookup"><span data-stu-id="77123-312">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-313">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-313">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-314">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-314">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-315">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-315">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-316">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-316">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-317">L’exemple de code suivant utilise le nom d’hôte et le port numéro pour vous connecter à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-317">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-318">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-318">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-319">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-319">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-320">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-320">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-321">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-321">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77123-322">Connecte le client à un hôte TCP distant en utilisant le nom d'hôte et le numéro de port spécifiés sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-322">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="77123-323">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-323">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-324">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-324">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-325">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-325">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-326">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-326">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="77123-327">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-327">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-328">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="77123-328">This operation will not block.</span></span> <span data-ttu-id="77123-329">Les retours retournés <xref:System.Threading.Tasks.Task> objet se termine après avoir établi la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="77123-329">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="77123-330">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="77123-330">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="77123-331">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <xref:System.Net.IPAddress> et numéro de port en tant qu’une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="77123-331">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="77123-332">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-332">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-333">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-333">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-334">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-334">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-335">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-335">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-336">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-336">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-337">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-337">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-338">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-338">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-339">Le paramètre <paramref name="port" /> n'est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-339">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-340">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-340">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-341">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-341">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="77123-342">Tableau <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-342">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-343">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-343">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-344">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-344">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-345">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-345">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="77123-346">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-346">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-347">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="77123-347">This operation will not block.</span></span> <span data-ttu-id="77123-348">Les retours retournés <xref:System.Threading.Tasks.Task> objet se termine après avoir établi la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="77123-348">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="77123-349">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="77123-349">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="77123-350">Cette méthode est généralement utilisée immédiatement après un appel à la <xref:System.Net.Dns.BeginGetHostAddresses%2A> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</span><span class="sxs-lookup"><span data-stu-id="77123-350">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="77123-351">Appelez cette méthode pour établir une connexion d’hôte distant synchrone à l’hôte spécifié par le tableau de <xref:System.Net.IPAddress> éléments et le numéro de port en tant qu’une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="77123-351">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="77123-352">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-352">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-353">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-353">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-354">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-354">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-355">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-355">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-356">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-357">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-358">Le paramètre <paramref name="ipAddresses" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-358">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-359">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-359">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-360">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-360">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-361">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-361">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="77123-362">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-362">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="77123-363">Cette méthode est valide pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-363">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="77123-364">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-364">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77123-365">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-365">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-366">Connecte le client au port TCP spécifié sur l'hôte spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-366">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-367">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-367">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="77123-368">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-368">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-369">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="77123-369">This operation will not block.</span></span> <span data-ttu-id="77123-370">Les retours retournés <xref:System.Threading.Tasks.Task> objet se termine après avoir établi la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="77123-370">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="77123-371">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="77123-371">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="77123-372">Appelez cette méthode pour établir une connexion d’hôte distant synchrone au nom d’hôte spécifié et le nombre sous la forme d’une opération asynchrone de port.</span><span class="sxs-lookup"><span data-stu-id="77123-372">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="77123-373">Après une connexion avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir l’objet sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-373">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-374">Utilisez cette <xref:System.Net.Sockets.NetworkStream> pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-374">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="77123-375">Si le protocole IPv6 est activé et le <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="77123-375">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="77123-376">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</span><span class="sxs-lookup"><span data-stu-id="77123-376">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-377">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-377">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-378">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-378">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-379">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-379">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-380">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-380">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-381">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-381">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77123-382">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-382">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-383">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-383">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-384">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-384">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-385">Obtient une valeur indiquant si l'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent d'un élément <see cref="T:System.Net.Sockets.TcpClient" /> est connecté à un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-385">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-386">
            <see langword="true" /> si le socket <see cref="P:System.Net.Sockets.TcpClient.Client" /> était connecté à une ressource distante lors de l'opération la plus récente ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-386">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-387">Le <xref:System.Net.Sockets.TcpClient.Connected%2A> propriété obtient l’état de connexion de la <xref:System.Net.Sockets.TcpClient.Client%2A> socket depuis la dernière opération d’e/s.</span><span class="sxs-lookup"><span data-stu-id="77123-387">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="77123-388">Lorsqu’elle retourne `false`, le <xref:System.Net.Sockets.TcpClient.Client%2A> socket n’a jamais été connecté ou n’est plus connecté.</span><span class="sxs-lookup"><span data-stu-id="77123-388">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="77123-389">Étant donné que le <xref:System.Net.Sockets.TcpClient.Connected%2A> propriété reflète uniquement l’état de la connexion depuis la dernière opération, vous devez tenter d’envoyer ou recevoir un message pour déterminer l’état actuel.</span><span class="sxs-lookup"><span data-stu-id="77123-389">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="77123-390">Après l’envoi du message échoue, cette propriété ne retourne plus `true`.</span><span class="sxs-lookup"><span data-stu-id="77123-390">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="77123-391">Notez que ce comportement est normal.</span><span class="sxs-lookup"><span data-stu-id="77123-391">Note that this behavior is by design.</span></span> <span data-ttu-id="77123-392">Vous ne pouvez pas tester de manière fiable l’état de la connexion car, dans le délai entre le test et l’envoi/réception, la connexion a ont été perdue.</span><span class="sxs-lookup"><span data-stu-id="77123-392">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="77123-393">Votre code doit supposer le socket est connecté et en douceur handle échecs de transmission.</span><span class="sxs-lookup"><span data-stu-id="77123-393">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-394">L’exemple de code suivant se connecte à un point de terminaison distant, puis vérifie la connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-394">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77123-395">Libère toutes les ressources managées et non managées utilisées par <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-395">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="77123-396">Défini à <see langword="true" /> pour libérer à la fois les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-396">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-397">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.TcpClient" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-397">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-398">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-398">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="77123-399">`Dispose()` appelle cette méthode avec le `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="77123-399">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="77123-400"><xref:System.Object.Finalize%2A> appelle cette méthode avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="77123-400"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="77123-401">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="77123-401">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="77123-402">Cela en appelant le `Dispose()` (méthode) de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="77123-402">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-403">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-403">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-404">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-404">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="77123-405">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="77123-405">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="77123-406">Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="77123-406">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="77123-407">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="77123-407">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="77123-408">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="77123-408">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="77123-409">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-409">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77123-410">Met fin à une tentative de connexion asynchrone en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-410">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-411">Cette méthode s’interrompt jusqu'à ce que l’opération de fin.</span><span class="sxs-lookup"><span data-stu-id="77123-411">This method blocks until the operation is complete.</span></span> <span data-ttu-id="77123-412">Pour effectuer cette opération de manière synchrone, utilisez un <xref:System.Net.Sockets.TcpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-412">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-413">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-413">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-414">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-414">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-415">L’exemple de code suivant met fin à la tentative de connexion asynchrone.</span><span class="sxs-lookup"><span data-stu-id="77123-415">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77123-416">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-416">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77123-417">Le paramètre <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-417">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="77123-418">La méthode <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> a été précédemment appelée pour la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-418">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-419">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-419">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-420">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-421">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si l'élément <see cref="T:System.Net.Sockets.TcpClient" /> n'autorise qu'un seul client à utiliser un port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-421">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-422">
            <see langword="true" /> si l'élément <see cref="T:System.Net.Sockets.TcpClient" /> n'autorise qu'un seul client à utiliser un port spécifique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-422">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="77123-423">La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-423">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-424">Par défaut, plusieurs clients peuvent utiliser un port spécifique ; Toutefois, seul l’un des clients peut effectuer des opérations sur le trafic réseau envoyé au port.</span><span class="sxs-lookup"><span data-stu-id="77123-424">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="77123-425">Vous pouvez utiliser le <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propriété pour empêcher plusieurs clients à l’aide d’un port spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-425">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="77123-426">Cette propriété doit être définie avant que le socket sous-jacent est lié à un port client.</span><span class="sxs-lookup"><span data-stu-id="77123-426">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="77123-427">Si vous appelez <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, ou <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, le client est lié en tant qu’un effet secondaire de la méthode, et vous ne pouvez pas définir par la suite le <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propriété</span><span class="sxs-lookup"><span data-stu-id="77123-427">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-428">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et obtient et définit la valeur de la <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77123-428">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-429">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-429">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-430">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-430">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77123-431">Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-431">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-432">Cette méthode se substitue à <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77123-432">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77123-433">Code d’application ne doit pas appeler cette méthode ; d’un objet <xref:System.Object.Finalize%2A> méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-433">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="77123-434">Le <xref:System.Net.Sockets.TcpClient> finaliseur de leur classe ferme la connexion TCP et libère toutes les ressources managées associées le <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="77123-434">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="77123-435">Ces ressources incluent sous-jacent <xref:System.Net.Sockets.Socket> utilisés pour la connexion avec l’hôte distant et le <xref:System.Net.Sockets.NetworkStream> utilisé pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-435">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="77123-436">Le finaliseur ne libère pas les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="77123-436">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="77123-437">Pour plus d’informations, consultez [destructeurs et méthodes Finalize](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md), et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="77123-437">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77123-438">Retourne l'élément <see cref="T:System.Net.Sockets.NetworkStream" /> utilisé pour l'envoi et la réception de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-438">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77123-439">L'élément <see cref="T:System.Net.Sockets.NetworkStream" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-439">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-440"><xref:System.Net.Sockets.TcpClient.GetStream%2A> Retourne un <xref:System.Net.Sockets.NetworkStream> que vous pouvez utiliser pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-440"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="77123-441">Le <xref:System.Net.Sockets.NetworkStream> classe hérite de la <xref:System.IO.Stream> classe, qui fournit une riche collection de méthodes et propriétés utilisées pour faciliter les communications réseau.</span><span class="sxs-lookup"><span data-stu-id="77123-441">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="77123-442">Vous devez appeler la <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode tout d’abord, ou le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode lève un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="77123-442">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="77123-443">Après avoir obtenu le <xref:System.Net.Sockets.NetworkStream>, appelez le <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode pour envoyer des données à l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-443">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="77123-444">Appelez le <xref:System.Net.Sockets.NetworkStream.Read%2A> méthode pour recevoir des données en provenance de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="77123-444">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="77123-445">Ces deux méthodes bloquent jusqu'à ce que l’opération spécifiée est effectuée.</span><span class="sxs-lookup"><span data-stu-id="77123-445">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="77123-446">Vous pouvez éviter le blocage sur une opération de lecture en vérifiant la <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77123-446">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="77123-447">A `true` valeur signifie que les données sont arrivé à partir de l’hôte distant et est disponibles pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="77123-447">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="77123-448">Dans ce cas, <xref:System.Net.Sockets.NetworkStream.Read%2A> est assurée de se terminer immédiatement.</span><span class="sxs-lookup"><span data-stu-id="77123-448">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="77123-449">Si l’hôte distant a arrêté sa connexion, <xref:System.Net.Sockets.NetworkStream.Read%2A> est retournée immédiatement avec zéro octet.</span><span class="sxs-lookup"><span data-stu-id="77123-449">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-450">Vous devez fermer le <xref:System.Net.Sockets.NetworkStream> lorsque vous avez fini d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-450">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="77123-451">Fermeture de <xref:System.Net.Sockets.TcpClient> ne libère pas le <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-451">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-452">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="77123-452">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="77123-453">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="77123-453">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77123-454">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-454">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="77123-455">Pour plus d’informations, consultez [traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="77123-455">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-456">Le code suivant utilise des exemple <xref:System.Net.Sockets.TcpClient.GetStream%2A> obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="77123-456">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="77123-457">Après avoir obtenu le <xref:System.Net.Sockets.NetworkStream>, il envoie et reçoit en utilisant ses <xref:System.Net.Sockets.NetworkStream.Write%2A> et <xref:System.Net.Sockets.NetworkStream.Read%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="77123-457">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="77123-458">
            <see cref="T:System.Net.Sockets.TcpClient" /> n'est pas connecté à un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-458">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77123-459">
            <see cref="T:System.Net.Sockets.TcpClient" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-459">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-460">Obtient ou définit des informations relatives à l'état de persistance du socket associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-460">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-461">
            <see cref="T:System.Net.Sockets.LingerOption" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-461">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="77123-462">Par défaut, la persistance est désactivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-462">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-463">Le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété modifie la façon dont <xref:System.Net.Sockets.Socket.Close%2A> se comporte de la méthode.</span><span class="sxs-lookup"><span data-stu-id="77123-463">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="77123-464">Cette propriété lorsque le jeu modifie les conditions sous lesquelles la connexion peut être réinitialisée par Winsock.</span><span class="sxs-lookup"><span data-stu-id="77123-464">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="77123-465">Les réinitialisations de connexion peuvent encore se produire en fonction du comportement du protocole IP.</span><span class="sxs-lookup"><span data-stu-id="77123-465">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="77123-466">Cette propriété contrôle la durée pendant laquelle la connexion TCP restera ouverte après un appel à <xref:System.Net.Sockets.TcpClient.Close%2A> lorsqu’il reste des données à envoyer.</span><span class="sxs-lookup"><span data-stu-id="77123-466">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="77123-467">Lorsque vous appelez le <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode, les données est placé dans le tampon réseau sortant.</span><span class="sxs-lookup"><span data-stu-id="77123-467">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="77123-468">Cette propriété peut être utilisée pour vous assurer que ces données sont envoyées à l’hôte distant avant du <xref:System.Net.Sockets.TcpClient.Close%2A> méthode supprime la connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-468">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="77123-469">Pour activer le maintien, créez un <xref:System.Net.Sockets.LingerOption> d’instance qui contient les valeurs souhaitées et définir le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété à cette instance.</span><span class="sxs-lookup"><span data-stu-id="77123-469">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="77123-470">Le tableau suivant décrit le comportement de la <xref:System.Net.Sockets.TcpClient.Close%2A> méthode pour les valeurs possibles de la <xref:System.Net.Sockets.LingerOption.Enabled%2A> propriété et la <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propriété stockée dans le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77123-470">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="77123-471">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="77123-471">LingerState.Enabled</span></span>|<span data-ttu-id="77123-472">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="77123-472">LingerState.LingerTime</span></span>|<span data-ttu-id="77123-473">Comportement</span><span class="sxs-lookup"><span data-stu-id="77123-473">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="77123-474">`false` (désactivé), la valeur par défaut</span><span class="sxs-lookup"><span data-stu-id="77123-474">`false` (disabled), the default value</span></span>|<span data-ttu-id="77123-475">Le délai d’attente n’est pas applicable, (par défaut).</span><span class="sxs-lookup"><span data-stu-id="77123-475">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="77123-476">Essaie d’envoyer les données en attente jusqu'à ce que le délai expire.</span><span class="sxs-lookup"><span data-stu-id="77123-476">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="77123-477">`true` (activé)</span><span class="sxs-lookup"><span data-stu-id="77123-477">`true` (enabled)</span></span>|<span data-ttu-id="77123-478">Un délai d’attente différente de zéro</span><span class="sxs-lookup"><span data-stu-id="77123-478">A nonzero time-out</span></span>|<span data-ttu-id="77123-479">Essaie d’envoyer les données en attente jusqu'à ce que le délai spécifié expire, et si la tentative échoue, Winsock réinitialise la connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-479">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="77123-480">`true` (activé)</span><span class="sxs-lookup"><span data-stu-id="77123-480">`true` (enabled)</span></span>|<span data-ttu-id="77123-481">Un délai d’attente nulle.</span><span class="sxs-lookup"><span data-stu-id="77123-481">A zero timeout.</span></span>|<span data-ttu-id="77123-482">Ignore toutes les données et les réinitialisations de Winsock en attente de la connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-482">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="77123-483">La pile IP calcule le délai par défaut protocole IP à utiliser en fonction du temps d’aller-retour de la connexion.</span><span class="sxs-lookup"><span data-stu-id="77123-483">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="77123-484">Dans la plupart des cas, le délai d’attente calculé par la pile est plus pertinent que celui défini par une application.</span><span class="sxs-lookup"><span data-stu-id="77123-484">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="77123-485">Il s’agit du comportement par défaut pour un socket lorsque le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="77123-485">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="77123-486">Lorsque le <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propriété stockée dans le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété est supérieure au délai par défaut, le délai par défaut sera toujours appliquer et remplacer.</span><span class="sxs-lookup"><span data-stu-id="77123-486">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-487">Le code suivant exemple définit et obtient les sockets attendre temps.</span><span class="sxs-lookup"><span data-stu-id="77123-487">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-488">Obtient ou définit une valeur qui désactive un délai de temporisation quand les mémoires tampons d'envoi ou de réception ne sont pas saturées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-488">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-489">
            <see langword="true" /> si le délai de temporisation est désactivé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-489">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="77123-490">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-490">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-491">Lorsque <xref:System.Net.Sockets.TcpClient.NoDelay%2A> est `false`, un <xref:System.Net.Sockets.TcpClient> n’envoie pas de paquet sur le réseau jusqu'à ce qu’il a recueilli un volume important de données sortantes.</span><span class="sxs-lookup"><span data-stu-id="77123-491">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="77123-492">En raison du volume de surcharge d’un segment TCP, l’envoi de petites quantités de données est inefficace.</span><span class="sxs-lookup"><span data-stu-id="77123-492">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="77123-493">Toutefois, les situations existent où vous devez envoyer de très petites quantités de données ou attendre des réponses immédiates de chaque paquet envoyé.</span><span class="sxs-lookup"><span data-stu-id="77123-493">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="77123-494">Votre décision doit pondérer l’importance relative de l’efficacité du réseau par rapport aux exigences de l’application.</span><span class="sxs-lookup"><span data-stu-id="77123-494">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-495">L’exemple de code suivant désactive le délai d’attente.</span><span class="sxs-lookup"><span data-stu-id="77123-495">The following code example disables the delay.</span></span> <span data-ttu-id="77123-496">Il vérifie ensuite la valeur de <xref:System.Net.Sockets.TcpClient.NoDelay%2A> pour vérifier que la propriété a été correctement définie.</span><span class="sxs-lookup"><span data-stu-id="77123-496">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-497">Obtient ou définit la taille de la mémoire tampon de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-497">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-498">Taille en octets de la mémoire tampon de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-498">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="77123-499">La valeur par défaut est de 8 192 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-499">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-500">Le <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propriété obtient ou définit le nombre d’octets que vous prévoyez de stocker dans la mémoire tampon de réception pour chaque opération de lecture.</span><span class="sxs-lookup"><span data-stu-id="77123-500">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="77123-501">Cette propriété manipule en fait l’espace de mémoire tampon réseau alloué pour la réception des données entrantes.</span><span class="sxs-lookup"><span data-stu-id="77123-501">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="77123-502">Votre mémoire tampon réseau doit être au moins aussi grande mémoire tampon de votre application pour vous assurer que les données souhaitées seront disponibles lorsque vous appelez le <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-502">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="77123-503">Utilisez le <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propriété pour définir cette taille.</span><span class="sxs-lookup"><span data-stu-id="77123-503">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="77123-504">Si votre application recevra des données en bloc, vous devez passer le <xref:System.Net.Sockets.NetworkStream.Read%2A> méthode une mémoire tampon d’application de très grande taille.</span><span class="sxs-lookup"><span data-stu-id="77123-504">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="77123-505">Si la mémoire tampon réseau est inférieur à la quantité de données que vous demandez dans la <xref:System.Net.Sockets.NetworkStream.Read%2A> (méthode), vous ne pourrez récupérer la quantité de données dans une opération de lecture souhaitée.</span><span class="sxs-lookup"><span data-stu-id="77123-505">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="77123-506">Cela entraîne la surcharge d’appels supplémentaires à la <xref:System.Net.Sockets.NetworkStream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-506">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-507">L’exemple de code suivant définit et obtient la taille de mémoire tampon de réception.</span><span class="sxs-lookup"><span data-stu-id="77123-507">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="77123-508">Une erreur s'est produite lors de la définition de la taille de la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-508">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="77123-509">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-509">-or-</span>
          </span>
          <span data-ttu-id="77123-510">Dans les applications .NET Compact Framework, vous ne pouvez pas définir cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-510">In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="77123-511">Pour obtenir une solution de contournement, consultez la partie Remarque sur la plateforme de la section Notes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-511">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-512">Obtient ou définit la durée pendant laquelle un élément <see cref="T:System.Net.Sockets.TcpClient" /> attendra de recevoir des données une fois qu'une opération de lecture est initialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-512">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-513">Valeur du délai d'attente de la connexion en millisecondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-513">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="77123-514">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-514">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-515">Le <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> propriété détermine la quantité de temps que la <xref:System.Net.Sockets.NetworkStream.Read%2A> méthode se bloque jusqu'à ce qu’il puisse recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="77123-515">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="77123-516">Cette durée est mesurée en millisecondes.</span><span class="sxs-lookup"><span data-stu-id="77123-516">This time is measured in milliseconds.</span></span> <span data-ttu-id="77123-517">Si le délai d’attente expire avant <xref:System.Net.Sockets.NetworkStream.Read%2A> terminée avec succès, <xref:System.Net.Sockets.TcpClient> lève une <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="77123-517">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="77123-518">Il n’existe aucun délai d’attente par défaut.</span><span class="sxs-lookup"><span data-stu-id="77123-518">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-519">L’exemple de code suivant définit et obtient le délai d’attente de réception.</span><span class="sxs-lookup"><span data-stu-id="77123-519">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-520">Obtient ou définit la taille de la mémoire tampon d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-520">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-521">Taille en octets de la mémoire tampon d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-521">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="77123-522">La valeur par défaut est de 8 192 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-522">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-523">Le <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propriété obtient ou définit le nombre d’octets que vous prévoyez d’envoyer dans chaque appel à la <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-523">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="77123-524">Cette propriété manipule en fait l’espace de mémoire tampon réseau alloué pour l’opération d’envoi.</span><span class="sxs-lookup"><span data-stu-id="77123-524">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="77123-525">Votre mémoire tampon réseau doit être au moins aussi grande mémoire tampon de votre application pour vous assurer que les données souhaitées seront stockées et envoyées en une seule opération.</span><span class="sxs-lookup"><span data-stu-id="77123-525">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="77123-526">Utilisez le <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propriété pour définir cette taille.</span><span class="sxs-lookup"><span data-stu-id="77123-526">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="77123-527">Si votre application envoie des données en bloc, vous devez passer le <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode une mémoire tampon d’application de très grande taille.</span><span class="sxs-lookup"><span data-stu-id="77123-527">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="77123-528">Si la mémoire tampon réseau est inférieur à la quantité de données que vous fournissez la <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode, plusieurs réseau envoi opérations seront effectuées pour chaque appel à la <xref:System.Net.Sockets.NetworkStream.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="77123-528">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="77123-529">Vous pouvez obtenir le meilleur débit de données en vous assurant que votre mémoire tampon réseau est au moins aussi grande mémoire tampon de votre application.</span><span class="sxs-lookup"><span data-stu-id="77123-529">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-530">L’exemple de code suivant définit et obtient la taille de mémoire tampon d’envoi.</span><span class="sxs-lookup"><span data-stu-id="77123-530">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77123-531">Obtient ou définit la durée pendant laquelle un élément <see cref="T:System.Net.Sockets.TcpClient" /> attendra qu'une opération d'envoi se termine correctement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-531">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77123-532">Valeur du délai d'attente d'envoi, en millisecondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-532">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="77123-533">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77123-533">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77123-534">Le <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> propriété détermine la quantité de temps qui le <xref:System.Net.Sockets.Socket.Send%2A> méthode se bloque jusqu'à ce qu’il puisse correctement retournée.</span><span class="sxs-lookup"><span data-stu-id="77123-534">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="77123-535">Cette durée est mesurée en millisecondes.</span><span class="sxs-lookup"><span data-stu-id="77123-535">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="77123-536">Après avoir appelé la <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode sous-jacent <xref:System.Net.Sockets.Socket> retourne le nombre d’octets réellement envoyés à l’ordinateur hôte.</span><span class="sxs-lookup"><span data-stu-id="77123-536">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="77123-537">Le <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> propriété détermine la durée pendant laquelle un <xref:System.Net.Sockets.TcpClient> attend avant de recevoir le nombre d’octets retourné.</span><span class="sxs-lookup"><span data-stu-id="77123-537">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="77123-538">Si le délai d’attente expire avant le <xref:System.Net.Sockets.Socket.Send%2A> terminée, <xref:System.Net.Sockets.TcpClient> lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="77123-538">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="77123-539">Il n’existe aucun délai d’attente par défaut.</span><span class="sxs-lookup"><span data-stu-id="77123-539">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77123-540">L’exemple de code suivant définit et obtient la <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> valeur.</span><span class="sxs-lookup"><span data-stu-id="77123-540">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>