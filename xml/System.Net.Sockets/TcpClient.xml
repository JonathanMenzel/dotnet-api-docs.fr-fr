<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34e0c3dad6d39b9e4fad00665660465e7b94d977" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52609931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9783c-101">Fournit des connexions clientes pour les services réseau TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9783c-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-102">Le `TcpClient` classe fournit des méthodes simples pour la connexion, envoi, et la réception de flux de données sur un réseau en mode blocage synchrone.</span><span class="sxs-lookup"><span data-stu-id="9783c-102">The `TcpClient` class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="9783c-103">Dans l’ordre pour `TcpClient` pour vous connecter et d’échanger des données, un <xref:System.Net.Sockets.TcpListener> ou <xref:System.Net.Sockets.Socket> créé avec le protocole TCP <xref:System.Net.Sockets.ProtocolType> doit être à l’écoute des demandes de connexion entrante.</span><span class="sxs-lookup"><span data-stu-id="9783c-103">In order for `TcpClient` to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="9783c-104">Vous pouvez vous connecter à cet écouteur dans un des deux manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="9783c-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="9783c-105">Créer un `TcpClient` et appelez une des trois disponibles <xref:System.Net.Sockets.TcpClient.Connect%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="9783c-105">Create a `TcpClient` and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="9783c-106">Créer un `TcpClient` en utilisant le nom d’hôte et le numéro de port de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-106">Create a `TcpClient` using the host name and port number of the remote host.</span></span> <span data-ttu-id="9783c-107">Ce constructeur tentera automatiquement une connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-108">Si vous souhaitez envoyer des datagrammes sans connexion en mode blocage synchrone, utilisez la <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="9783c-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-109">L’exemple de code suivant établit une `TcpClient` connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-109">The following code example establishes a `TcpClient` connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="9783c-110">Autorisation d’établir une connexion sortante ou accepter une demande entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9783c-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="9783c-111">Pour envoyer et recevoir des données, utilisez le <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> méthode pour obtenir un <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9783c-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        </span>
        <span data-ttu-id="9783c-112">Appelez le <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> et <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> méthodes de la <see cref="T:System.Net.Sockets.NetworkStream" /> pour envoyer et recevoir des données avec l’hôte distant.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9783c-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span>
        </span>
        <span data-ttu-id="9783c-113">Utilisez le <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> méthode pour libérer toutes les ressources associées à la <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9783c-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md">
      <span data-ttu-id="9783c-114">TCP-UDP</span>
      <span class="sxs-lookup">
        <span data-stu-id="9783c-114">TCP-UDP</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-115">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9783c-116">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-116">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-117">Ce constructeur crée un nouveau <xref:System.Net.Sockets.TcpClient> et permet au fournisseur de service sous-jacent affecter le plus approprié local IP adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-117">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="9783c-118">Vous devez d’abord appeler la <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode avant d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-118">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-119">Ce constructeur fonctionne uniquement avec les types d’adresses IPv4.</span><span class="sxs-lookup"><span data-stu-id="9783c-119">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-120">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-120">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-121">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-121">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-122">L’exemple de code suivant montre comment utiliser le constructeur par défaut pour créer un nouveau <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="9783c-122">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="9783c-123">L'élément <see cref="T:System.Net.IPEndPoint" /> auquel vous liez l'élément <see cref="T:System.Net.Sockets.Socket" /> TCP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-123">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-124">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> et la lie au point de terminaison local spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-124">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-125">Ce constructeur crée un nouveau <xref:System.Net.Sockets.TcpClient> et le lie à la <xref:System.Net.IPEndPoint> spécifié par le `localEP` paramètre.</span><span class="sxs-lookup"><span data-stu-id="9783c-125">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="9783c-126">Avant d’appeler ce constructeur, vous devez créer un `IPEndPoint` à l’aide de l’adresse IP et port numéro à partir de laquelle vous souhaitez envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-126">Before you call this constructor, you must create an `IPEndPoint` using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="9783c-127">Vous n’avez pas besoin de spécifier un numéro d’adresse et le port IP local avant de se connecter et communiquer.</span><span class="sxs-lookup"><span data-stu-id="9783c-127">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="9783c-128">Si vous créez un `TcpClient` à l’aide de n’importe quel autre constructeur, le fournisseur de services sous-jacent affectera le plus approprié local IP adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-128">If you create a `TcpClient` using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="9783c-129">Vous devez appeler la <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode avant d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-129">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-130">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-130">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-131">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-131">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-132">L’exemple de code suivant montre comment créer une instance de la <xref:System.Net.Sockets.TcpClient> classe à l’aide d’un point de terminaison local.</span><span class="sxs-lookup"><span data-stu-id="9783c-132">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-133">Le paramètre <paramref name="localEP" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-133">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="9783c-134">L'élément <see cref="P:System.Net.IPAddress.AddressFamily" /> du protocole IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-134">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-135">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> avec la famille spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-135">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9783c-136">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-136">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-137">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-137">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-138">L’exemple de code suivant montre comment créer une instance de la <xref:System.Net.Sockets.TcpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="9783c-138">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9783c-139">Le paramètre <paramref name="family" /> n'est pas égal à AddressFamily.InterNetwork.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-139">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span>
          </span>
          <span data-ttu-id="9783c-140">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-140">-or-</span>
          </span>
          <span data-ttu-id="9783c-141">Le paramètre <paramref name="family" /> n'est pas égal à AddressFamily.InterNetworkV6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-141">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="9783c-142">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-142">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-143">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-143">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-144">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> et établit une connexion au port spécifié sur l'hôte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-145">Ce constructeur crée un nouveau <xref:System.Net.Sockets.TcpClient> et effectue une connexion synchrone tentative au nom d’hôte fourni et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-145">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="9783c-146">Le fournisseur de services sous-jacent affectera le plus approprié local IP adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-146">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="9783c-147">`TcpClient` bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="9783c-147">`TcpClient` will block until it either connects or fails.</span></span> <span data-ttu-id="9783c-148">Ce constructeur vous permet d’initialiser, résoudre le nom d’hôte DNS et vous connecter en une seule étape pratique.</span><span class="sxs-lookup"><span data-stu-id="9783c-148">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="9783c-149">Si IPv6 est activé et le <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="9783c-149">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="9783c-150">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</span><span class="sxs-lookup"><span data-stu-id="9783c-150">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-151">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-151">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-152">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-152">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-153">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-153">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-154">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-154">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-155">L’exemple de code suivant montre comment créer une instance de la <xref:System.Net.Sockets.TcpClient> classe à l’aide d’un nom d’hôte et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-155">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-156">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-156">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-157">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-157">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-158">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-158">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-159">Obtient ou définit une valeur indiquant si une connexion a été établie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-159">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-160">
            <see langword="true" /> si la connexion a été établie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-160">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-161">Les classes dérivées de <xref:System.Net.Sockets.TcpClient> pouvez utiliser cette propriété pour déterminer si une tentative de connexion a réussi.</span><span class="sxs-lookup"><span data-stu-id="9783c-161">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="9783c-162">Il ne surveille pas l’état de connexion en cours de `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="9783c-162">It does not monitor the ongoing connection state of `TcpClient`.</span></span> <span data-ttu-id="9783c-163">Si l’hôte distant ferme la connexion, `Active` ne sera pas mis à jour.</span><span class="sxs-lookup"><span data-stu-id="9783c-163">If the remote host closes the connection, `Active` will not be updated.</span></span> <span data-ttu-id="9783c-164">Si vous dérivez de `TcpClient` et nécessitent une attention plus en détail à l’état de connexion, utilisez le <xref:System.Net.Sockets.Socket.Connected%2A> propriété de la <xref:System.Net.Sockets.Socket> retourné par la <xref:System.Net.Sockets.TcpClient.Client%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-164">If you are deriving from `TcpClient` and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-165">Obtient la quantité de données reçues du réseau et disponibles pour la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-165">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-166">Nombre d'octets de données reçus du réseau et disponibles pour la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-166">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9783c-167">Le `Available` propriété consiste à déterminer si les données sont en file d’attente pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="9783c-167">The `Available` property is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="9783c-168">Si les données sont disponibles, appelez <xref:System.Net.Sockets.NetworkStream.Read%2A> pour obtenir les données.</span><span class="sxs-lookup"><span data-stu-id="9783c-168">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="9783c-169">Les données disponibles sont que la quantité totale de données en file d’attente dans la mémoire tampon réseau pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="9783c-169">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="9783c-170">Si aucune donnée n’est en file d’attente dans la mémoire tampon réseau, `Available` retourne 0.</span><span class="sxs-lookup"><span data-stu-id="9783c-170">If no data is queued in the network buffer, `Available` returns 0.</span></span>  
  
 <span data-ttu-id="9783c-171">Si l’hôte distant arrête ou ferme la connexion, `Available` peut lever une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="9783c-171">If the remote host shuts down or closes the connection, `Available` may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="9783c-172">Si vous recevez un `SocketException`, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-172">If you receive a `SocketException`, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-173">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à le [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) pour une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-173">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-174">L’exemple de code suivant illustre l’utilisation de la `Available` propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-174">The following code example shows the use of the `Available` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-175">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-175">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-176">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-176">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-177">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-177">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="9783c-178">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-178">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-179">Numéro de port de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-179">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="9783c-180">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-180">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9783c-181">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-181">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="9783c-182">Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-182">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-183">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-183">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="9783c-184">L'hôte distant est spécifié par un élément <see cref="T:System.Net.IPAddress" /> et un numéro de port (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-184">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-185">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-185">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-186">Asynchrone `BeginConnect` opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpClient.EndConnect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-186">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="9783c-187">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="9783c-187">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="9783c-188">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="9783c-188">This method does not block until the operation completes.</span></span> <span data-ttu-id="9783c-189">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.TcpClient.Connect%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="9783c-189">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9783c-190">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-190">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-191">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et se connecte à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-191">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-192">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-192">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-193">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-193">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-194">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-194">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9783c-195">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-195">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-196">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-196">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="9783c-197">Au moins un élément <see cref="T:System.Net.IPAddress" /> qui désigne les hôtes distants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-197">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-198">Numéro de port des hôtes distants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-198">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="9783c-199">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-199">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9783c-200">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-200">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="9783c-201">Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-201">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-202">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-202">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="9783c-203">L'hôte distant est spécifié par un tableau <see cref="T:System.Net.IPAddress" /> et un numéro de port (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-203">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-204">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-204">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-205">Asynchrone `BeginConnect` opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpClient.EndConnect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-205">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="9783c-206">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="9783c-206">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="9783c-207">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="9783c-207">This method does not block until the operation completes.</span></span> <span data-ttu-id="9783c-208">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.TcpClient.Connect%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="9783c-208">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9783c-209">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-209">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="9783c-210">Cette méthode est généralement utilisée immédiatement après un appel à la <xref:System.Net.Dns.BeginGetHostAddresses%2A> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</span><span class="sxs-lookup"><span data-stu-id="9783c-210">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-211">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et se connecte à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-211">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-212">Le paramètre <paramref name="addresses" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-212">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-213">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-213">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-214">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-214">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9783c-215">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-215">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-216">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-216">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="9783c-217">Nom de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-217">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-218">Numéro de port de l'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-218">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="9783c-219">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-219">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9783c-220">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-220">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="9783c-221">Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-221">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-222">Démarre une demande asynchrone pour une connexion d'hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-222">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="9783c-223">L'hôte distant est spécifié par un nom d'hôte (<see cref="T:System.String" />) et un numéro de port (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-223">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-224">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-224">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-225">Asynchrone `BeginConnect` opération doit être effectuée en appelant le <xref:System.Net.Sockets.TcpClient.EndConnect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-225">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="9783c-226">En règle générale, la méthode est appelée par le `asyncCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="9783c-226">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="9783c-227">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="9783c-227">This method does not block until the operation completes.</span></span> <span data-ttu-id="9783c-228">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.TcpClient.Connect%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="9783c-228">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="9783c-229">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-229">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-230">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et se connecte à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-230">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-231">Le paramètre <paramref name="host" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-231">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-232">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-232">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-233">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-233">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9783c-234">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-234">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-235">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-235">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-236">Obtient ou définit l'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-236">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-237">L'élément <see cref="T:System.Net.Sockets.Socket" /> du réseau sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-237">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-238"><xref:System.Net.Sockets.TcpClient> Crée un <xref:System.Net.Sockets.Socket> pour envoyer et recevoir des données sur un réseau.</span><span class="sxs-lookup"><span data-stu-id="9783c-238"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="9783c-239">Les classes dérivées de `TcpClient` cette propriété permet d’obtenir ou définir ce `Socket`.</span><span class="sxs-lookup"><span data-stu-id="9783c-239">Classes deriving from `TcpClient` can use this property to get or set this `Socket`.</span></span> <span data-ttu-id="9783c-240">Utilisez sous-jacent `Socket` retourné à partir de `Client` si vous avez besoin d’accéder aux au-delà de celles qui `TcpClient` fournit.</span><span class="sxs-lookup"><span data-stu-id="9783c-240">Use the underlying `Socket` returned from `Client` if you require access beyond that which `TcpClient` provides.</span></span> <span data-ttu-id="9783c-241">Vous pouvez également utiliser `Client` définir sous-jacent `Socket` à un existant `Socket`.</span><span class="sxs-lookup"><span data-stu-id="9783c-241">You can also use `Client` to set the underlying `Socket` to an existing `Socket`.</span></span> <span data-ttu-id="9783c-242">Cela peut être utile si vous souhaitez tirer parti de la simplicité de `TcpClient` à l’aide d’un préexistants `Socket`.</span><span class="sxs-lookup"><span data-stu-id="9783c-242">This might be useful if you want to take advantage of the simplicity of `TcpClient` using a pre-existing `Socket`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-243">L’exemple de code suivant illustre l’utilisation de la `Client` propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-243">The following code example demonstrates the use of the `Client` property.</span></span> <span data-ttu-id="9783c-244">Dans cet exemple, la taille de mémoire tampon de réception de sous-jacent <xref:System.Net.Sockets.Socket> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="9783c-244">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9783c-245">Supprime cette instance de <see cref="T:System.Net.Sockets.TcpClient" /> et demande que la connexion TCP sous-jacente soit fermée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-245">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-246">Le `Close` méthode marque l’instance comme étant supprimé et demande qu’associé <xref:System.Net.Sockets.Socket> fermer la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="9783c-246">The `Close` method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="9783c-247">Selon le <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriété, la connexion TCP peut rester ouverte pendant un certain temps après la `Close` méthode est appelée lorsque le restent des données à envoyer.</span><span class="sxs-lookup"><span data-stu-id="9783c-247">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the `Close` method is called when data remains to be sent.</span></span> <span data-ttu-id="9783c-248">Aucune notification n’est fournie lors de la connexion sous-jacente est terminée.</span><span class="sxs-lookup"><span data-stu-id="9783c-248">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="9783c-249">Appel de cette méthode entraîne la fermeture d’associé `Socket` et ferme également associé <xref:System.Net.Sockets.NetworkStream> qui est utilisé pour envoyer et recevoir des données s’il a été créé.</span><span class="sxs-lookup"><span data-stu-id="9783c-249">Calling this method will eventually result in the close of the associated `Socket` and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-250">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-251">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-252">L’exemple de code suivant illustre la fermeture un <xref:System.Net.Sockets.TcpClient> en appelant le `Close` (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-252">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the `Close` method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-253">Connecte le client à un hôte TCP distant en utilisant le nom d'hôte et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-253">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="9783c-254">L'élément <see cref="T:System.Net.IPEndPoint" /> auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-254">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-255">Connecte le client à un hôte TCP distant en utilisant le point de terminaison réseau distant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-255">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-256">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="9783c-256">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="9783c-257">Avant d’appeler `Connect`, vous devez créer une instance de la `IPEndPoint` classe à l’aide d’une adresse IP et un numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-257">Before you call `Connect`, you must create an instance of the `IPEndPoint` class using an IP address and a port number.</span></span> <span data-ttu-id="9783c-258">Utilisez cette `IPEndPoint` comme le `remoteEP` paramètre.</span><span class="sxs-lookup"><span data-stu-id="9783c-258">Use this `IPEndPoint` as the `remoteEP` parameter.</span></span> <span data-ttu-id="9783c-259">Le `Connect` méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="9783c-259">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="9783c-260">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-260">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-261">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-261">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-262">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-262">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-263">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-263">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-264">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-264">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-265">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="9783c-265">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-266">Le code suivant exemple utilise un <xref:System.Net.IPEndPoint> pour vous connecter avec un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-266">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-267">Le paramètre <paramref name="remoteEp" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-267">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-268">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-268">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-269">Le <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-269">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="9783c-270">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-270">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-271">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-271">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-272">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-272">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-273">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <xref:System.Net.IPAddress> et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-273">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="9783c-274">Le <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="9783c-274">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="9783c-275">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-275">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-276">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-276">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-277">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-277">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-278">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-278">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-279">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-279">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-280">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-281">L’exemple de code suivant utilise une adresse IP et le numéro de port pour se connecter avec un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-281">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-282">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-282">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-283">Le paramètre <paramref name="port" /> n'est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-283">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-284">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-284">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-285">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-285">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="9783c-286">Tableau <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-286">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-287">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-287">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-288">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-288">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-289">Cette méthode est généralement utilisée immédiatement après un appel à la <xref:System.Net.Dns.BeginGetHostAddresses%2A> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</span><span class="sxs-lookup"><span data-stu-id="9783c-289">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="9783c-290">Appelez le `Connect` méthode pour établir une connexion d’hôte distant synchrone à l’hôte spécifié par le tableau de <xref:System.Net.IPAddress> éléments et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-290">Call the `Connect` method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="9783c-291">Le `Connect` méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="9783c-291">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="9783c-292">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-292">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-293">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-293">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-294">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-294">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-295">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à le [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) pour une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-295">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-296">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-297">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-298">L’exemple de code suivant utilise une adresse IP et le numéro de port pour se connecter avec un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-298">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-299">Le paramètre <paramref name="ipAddresses" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-299">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-300">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-300">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-301">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-301">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-302">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-302">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9783c-303">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-303">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9783c-304">Cette méthode est valide pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-304">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="9783c-305">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-305">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-306">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-306">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-307">Connecte le client au port spécifié sur l'hôte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-307">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-308">Appelez cette méthode pour établir une connexion d’hôte distant synchrone au nom d’hôte spécifié et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="9783c-308">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="9783c-309">Le `Connect` méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</span><span class="sxs-lookup"><span data-stu-id="9783c-309">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="9783c-310">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-310">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-311">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-311">Use this  `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="9783c-312">Si IPv6 est activé et le `Connect(String, Int32)` est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="9783c-312">If IPv6 is enabled and the `Connect(String, Int32)` method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="9783c-313">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</span><span class="sxs-lookup"><span data-stu-id="9783c-313">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-314">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-314">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-315">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-315">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-316">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-316">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-317">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-317">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-318">L’exemple de code suivant utilise le nom d’hôte et le port numéro pour vous connecter avec un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-318">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-319">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-319">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-320">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-320">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-321">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-321">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-322">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-322">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-323">Connecte le client à un hôte TCP distant en utilisant le nom d'hôte et le numéro de port spécifiés sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-323">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="9783c-324">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-324">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-325">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-325">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-326">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-326">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-327">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-327">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="9783c-328">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-328">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-329">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="9783c-329">This operation will not block.</span></span> <span data-ttu-id="9783c-330">Les retours retournés <xref:System.Threading.Tasks.Task> objet se termine après avoir établi la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="9783c-330">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="9783c-331">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="9783c-331">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="9783c-332">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <xref:System.Net.IPAddress> et numéro de port en tant qu’une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="9783c-332">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="9783c-333">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-333">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-334">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-334">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-335">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-335">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-336">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-336">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-337">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-337">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-338">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-338">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-339">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-339">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-340">Le paramètre <paramref name="port" /> n'est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-340">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-341">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-341">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-342">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-342">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="9783c-343">Tableau <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-343">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-344">Numéro de port auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-344">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-345">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-345">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-346">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-346">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="9783c-347">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-347">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-348">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="9783c-348">This operation will not block.</span></span> <span data-ttu-id="9783c-349">Les retours retournés <xref:System.Threading.Tasks.Task> objet se termine après avoir établi la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="9783c-349">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="9783c-350">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="9783c-350">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="9783c-351">Cette méthode est généralement utilisée immédiatement après un appel à la <xref:System.Net.Dns.BeginGetHostAddresses%2A> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</span><span class="sxs-lookup"><span data-stu-id="9783c-351">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="9783c-352">Appelez cette méthode pour établir une connexion d’hôte distant synchrone à l’hôte spécifié par le tableau de <xref:System.Net.IPAddress> éléments et le numéro de port en tant qu’une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="9783c-352">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="9783c-353">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-353">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-354">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-354">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-355">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-355">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-356">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à le [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) pour une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-356">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-357">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-357">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-358">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-359">Le paramètre <paramref name="ipAddresses" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-359">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-360">Le numéro de port n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-360">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-361">Une erreur s’est produite pendant la tentative d’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-361">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-362">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-362">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9783c-363">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-363">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9783c-364">Cette méthode est valide pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-364">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="9783c-365">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-365">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="9783c-366">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-366">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-367">Connecte le client au port TCP spécifié sur l'hôte spécifié sous forme d'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-367">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-368">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-368">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="9783c-369">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-369">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-370">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="9783c-370">This operation will not block.</span></span> <span data-ttu-id="9783c-371">Les retours retournés <xref:System.Threading.Tasks.Task> objet se termine après avoir établi la connexion TCP.</span><span class="sxs-lookup"><span data-stu-id="9783c-371">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="9783c-372">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="9783c-372">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="9783c-373">Appelez cette méthode pour établir une connexion d’hôte distant synchrone au nom d’hôte spécifié et son numéro en tant qu’une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="9783c-373">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="9783c-374">Après vous être connecté avec l’hôte distant, utilisez le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-374">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-375">Utilisez cette `NetworkStream` pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-375">Use this `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="9783c-376">Si IPv6 est activé et le <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="9783c-376">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="9783c-377">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</span><span class="sxs-lookup"><span data-stu-id="9783c-377">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-378">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-378">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-379">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-379">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-380">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-380">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-381">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-381">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-382">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-382">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9783c-383">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-383">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-384">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-384">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-385">
            <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-385">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-386">Obtient une valeur indiquant si l'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent d'un élément <see cref="T:System.Net.Sockets.TcpClient" /> est connecté à un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-386">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-387">
            <see langword="true" /> si le socket <see cref="P:System.Net.Sockets.TcpClient.Client" /> était connecté à une ressource distante lors de l'opération la plus récente ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-387">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-388">Le `Connected` propriété obtient l’état de connexion de le <xref:System.Net.Sockets.TcpClient.Client%2A> socket à compter de la dernière opération d’e/s.</span><span class="sxs-lookup"><span data-stu-id="9783c-388">The `Connected` property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="9783c-389">Quand il renvoie `false`, le `Client` socket n’a jamais été connecté ou n’est plus connecté.</span><span class="sxs-lookup"><span data-stu-id="9783c-389">When it returns `false`, the `Client` socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="9783c-390">Étant donné que le `Connected` propriété reflète uniquement l’état de la connexion depuis la dernière opération effectuée, vous devez tenter d’envoyer ou recevoir un message pour déterminer l’état actuel.</span><span class="sxs-lookup"><span data-stu-id="9783c-390">Because the `Connected` property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="9783c-391">Une fois que l’envoi du message échoue, cette propriété ne retourne plus `true`.</span><span class="sxs-lookup"><span data-stu-id="9783c-391">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="9783c-392">Notez que ce comportement est normal.</span><span class="sxs-lookup"><span data-stu-id="9783c-392">Note that this behavior is by design.</span></span> <span data-ttu-id="9783c-393">Vous ne pouvez pas tester de manière fiable l’état de la connexion car, dans le délai entre le test et l’envoi/réception, la connexion pourrait ont été perdue.</span><span class="sxs-lookup"><span data-stu-id="9783c-393">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="9783c-394">Votre code doit supposer que le socket est connecté, et normalement handle échecs de transmission.</span><span class="sxs-lookup"><span data-stu-id="9783c-394">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-395">L’exemple de code suivant se connecte à un point de terminaison distant, puis vérifie la connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-395">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9783c-396">Libère toutes les ressources managées et non managées utilisées par <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-396">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9783c-397">Défini à <see langword="true" /> pour libérer à la fois les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-397">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-398">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.TcpClient" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-398">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-399">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-399">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9783c-400">`Dispose()` appelle cette méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="9783c-400">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9783c-401">`Finalize` appelle cette méthode avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="9783c-401">`Finalize` invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9783c-402">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="9783c-402">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="9783c-403">Pour ce faire appeler le `Dispose()` (méthode) de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="9783c-403">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-404">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-404">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-405">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-405">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9783c-406">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9783c-406">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="9783c-407">Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9783c-407">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="9783c-408">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="9783c-408">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="9783c-409">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="9783c-409">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="9783c-410">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9783c-411">Met fin à une tentative de connexion asynchrone en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-411">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-412">Cette méthode se bloque jusqu'à ce que l’opération soit terminer.</span><span class="sxs-lookup"><span data-stu-id="9783c-412">This method blocks until the operation is complete.</span></span> <span data-ttu-id="9783c-413">Pour effectuer cette opération de façon synchrone, utilisez un <xref:System.Net.Sockets.TcpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-413">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-414">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-414">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-415">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à le [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) pour une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-415">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-416">L’exemple de code suivant met fin à la tentative de connexion asynchrone.</span><span class="sxs-lookup"><span data-stu-id="9783c-416">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9783c-417">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-417">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9783c-418">Le paramètre <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-418">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9783c-419">La méthode <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> a été précédemment appelée pour la connexion asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-419">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-420">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-420">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-421">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-422">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si l'élément <see cref="T:System.Net.Sockets.TcpClient" /> n'autorise qu'un seul client à utiliser un port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-422">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-423">
            <see langword="true" /> si l'élément <see cref="T:System.Net.Sockets.TcpClient" /> n'autorise qu'un seul client à utiliser un port spécifique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-423">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9783c-424">La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-424">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-425">Par défaut, plusieurs clients peuvent utiliser un port spécifique ; Toutefois, seul l’un des clients peut effectuer des opérations sur le trafic réseau envoyé au port.</span><span class="sxs-lookup"><span data-stu-id="9783c-425">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="9783c-426">Vous pouvez utiliser le `ExclusiveAddressUse` propriété pour empêcher plusieurs clients à l’aide d’un port spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-426">You can use the `ExclusiveAddressUse` property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="9783c-427">Cette propriété doit être définie avant que le socket sous-jacent est lié à un port du client.</span><span class="sxs-lookup"><span data-stu-id="9783c-427">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="9783c-428">Si vous appelez <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, ou <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, le port client est lié en tant qu’un effet secondaire de la méthode, et vous ne pouvez pas définir par la suite le `ExclusiveAddressUse` propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-428">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the `ExclusiveAddressUse` property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="9783c-429">L’exemple de code suivant crée un <xref:System.Net.Sockets.TcpClient> et obtient et définit la valeur de la `ExclusiveAddressUse` propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-429">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the `ExclusiveAddressUse` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-430">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-430">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-431">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-431">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9783c-432">Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-432">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-433">Cette méthode se substitue à <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9783c-433">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9783c-434">Code d’application ne doit pas appeler cette méthode ; d’un objet `Finalize` méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-434">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9783c-435">Le <xref:System.Net.Sockets.TcpClient> finaliseur de leur classe ferme la connexion TCP et libère toutes les ressources managées associées le `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="9783c-435">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the `TcpClient`.</span></span> <span data-ttu-id="9783c-436">Ces ressources incluent sous-jacent <xref:System.Net.Sockets.Socket> utilisés pour la connexion avec l’hôte distant et le <xref:System.Net.Sockets.NetworkStream> utilisé pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-436">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="9783c-437">Le finaliseur ne libère pas les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="9783c-437">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="9783c-438">Pour plus d’informations, consultez [destructeurs et méthodes Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md), et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="9783c-438">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <related type="Article" href="~/docs/standard/garbage-collection/index.md">
          <span data-ttu-id="9783c-439">Garbage Collection</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-439">Garbage Collection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9783c-440">Retourne l'élément <see cref="T:System.Net.Sockets.NetworkStream" /> utilisé pour l'envoi et la réception de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-440">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9783c-441">L'élément <see cref="T:System.Net.Sockets.NetworkStream" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-441">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9783c-442">Le `GetStream` méthode retourne un <xref:System.Net.Sockets.NetworkStream> que vous pouvez utiliser pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-442">The `GetStream` method returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="9783c-443">Le `NetworkStream` classe hérite de la <xref:System.IO.Stream> classe, qui fournit une vaste collection de méthodes et propriétés utilisées pour faciliter les communications réseau.</span><span class="sxs-lookup"><span data-stu-id="9783c-443">The `NetworkStream` class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="9783c-444">Vous devez appeler la <xref:System.Net.Sockets.TcpClient.Connect%2A> méthode tout d’abord, ou le <xref:System.Net.Sockets.TcpClient.GetStream%2A> méthode lèvera une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="9783c-444">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="9783c-445">Une fois que vous avez obtenu le `NetworkStream`, appelez le <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode pour envoyer des données à l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-445">After you have obtained the `NetworkStream`, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="9783c-446">Appelez le <xref:System.Net.Sockets.NetworkStream.Read%2A> méthode pour recevoir des données en provenance de l’hôte distant.</span><span class="sxs-lookup"><span data-stu-id="9783c-446">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="9783c-447">Ces deux méthodes bloquent jusqu'à ce que l’opération spécifiée est effectuée.</span><span class="sxs-lookup"><span data-stu-id="9783c-447">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="9783c-448">Vous pouvez éviter le blocage sur une opération de lecture en vérifiant la <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-448">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="9783c-449">Un `true` valeur signifie que les données sont arrivé à partir de l’hôte distant et est disponibles pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="9783c-449">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="9783c-450">Dans ce cas, <xref:System.Net.Sockets.NetworkStream.Read%2A> est assurée de se terminer immédiatement.</span><span class="sxs-lookup"><span data-stu-id="9783c-450">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="9783c-451">Si l’hôte distant a arrêté sa connexion, <xref:System.Net.Sockets.NetworkStream.Read%2A> est retournée immédiatement avec zéro octet.</span><span class="sxs-lookup"><span data-stu-id="9783c-451">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-452">Vous devez fermer le `NetworkStream` lorsque vous avez terminé d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-452">You must close the `NetworkStream` when you are through sending and receiving data.</span></span> <span data-ttu-id="9783c-453">Fermeture <xref:System.Net.Sockets.TcpClient> ne libère pas le `NetworkStream`.</span><span class="sxs-lookup"><span data-stu-id="9783c-453">Closing <xref:System.Net.Sockets.TcpClient> does not release the `NetworkStream`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-454">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="9783c-454">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="9783c-455">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la [code d’erreur API Windows Sockets version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="9783c-455">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9783c-456">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-456">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9783c-457">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-457">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-458">Le code suivant exemple utilise `GetStream` obtenir sous-jacent <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="9783c-458">The following code example uses `GetStream` to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="9783c-459">Après avoir obtenu le <xref:System.Net.Sockets.NetworkStream>, il envoie et reçoit en utilisant ses <xref:System.Net.Sockets.NetworkStream.Write%2A> et <xref:System.Net.Sockets.NetworkStream.Read%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="9783c-459">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9783c-460">
            <see cref="T:System.Net.Sockets.TcpClient" /> n'est pas connecté à un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-460">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9783c-461">
            <see cref="T:System.Net.Sockets.TcpClient" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-461">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-462">Obtient ou définit des informations relatives à l'état de persistance du socket associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-462">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-463">
            <see cref="T:System.Net.Sockets.LingerOption" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-463">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="9783c-464">Par défaut, la persistance est désactivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-464">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-465">Le `LingerState` propriété modifie la façon dont <xref:System.Net.Sockets.Socket.Close%2A> méthode se comporte.</span><span class="sxs-lookup"><span data-stu-id="9783c-465">The `LingerState` property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="9783c-466">Cette propriété lors de l’ensemble modifie les conditions sous lesquelles la connexion peut être réinitialisée à Winsock.</span><span class="sxs-lookup"><span data-stu-id="9783c-466">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="9783c-467">Réinitialisations de connexion peuvent encore se produire en fonction du comportement de protocole IP.</span><span class="sxs-lookup"><span data-stu-id="9783c-467">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="9783c-468">Cette propriété contrôle la durée pendant laquelle la connexion TCP reste ouverte après un appel à <xref:System.Net.Sockets.TcpClient.Close%2A> lorsqu’il reste des données à envoyer.</span><span class="sxs-lookup"><span data-stu-id="9783c-468">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="9783c-469">Lorsque vous appelez le <xref:System.Net.Sockets.NetworkStream.Write%2A> (méthode), données est placé dans le tampon réseau sortant.</span><span class="sxs-lookup"><span data-stu-id="9783c-469">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="9783c-470">Cette propriété peut être utilisée pour vous assurer que ces données sont envoyées à l’hôte distant avant le <xref:System.Net.Sockets.TcpClient.Close%2A> méthode annule la connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-470">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="9783c-471">Pour activer le maintien, créez un <xref:System.Net.Sockets.LingerOption> de l’instance qui contient les valeurs souhaitées, puis définissez le `LingerState` propriété à cette instance.</span><span class="sxs-lookup"><span data-stu-id="9783c-471">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the `LingerState` property to this instance.</span></span>  
  
 <span data-ttu-id="9783c-472">Le tableau suivant décrit le comportement de la <xref:System.Net.Sockets.TcpClient.Close%2A> méthode pour les valeurs possibles de la <xref:System.Net.Sockets.LingerOption.Enabled%2A> propriété et la <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propriété stockée dans le `LingerState` propriété.</span><span class="sxs-lookup"><span data-stu-id="9783c-472">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property.</span></span>  
  
|<span data-ttu-id="9783c-473">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="9783c-473">LingerState.Enabled</span></span>|<span data-ttu-id="9783c-474">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="9783c-474">LingerState.LingerTime</span></span>|<span data-ttu-id="9783c-475">Comportement</span><span class="sxs-lookup"><span data-stu-id="9783c-475">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="9783c-476">`false` (désactivé), la valeur par défaut</span><span class="sxs-lookup"><span data-stu-id="9783c-476">`false` (disabled), the default value</span></span>|<span data-ttu-id="9783c-477">Le délai d’attente n’est pas applicable, (par défaut).</span><span class="sxs-lookup"><span data-stu-id="9783c-477">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="9783c-478">Essaie d’envoyer les données en attente jusqu'à ce que le délai expire.</span><span class="sxs-lookup"><span data-stu-id="9783c-478">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="9783c-479">`true` (activé)</span><span class="sxs-lookup"><span data-stu-id="9783c-479">`true` (enabled)</span></span>|<span data-ttu-id="9783c-480">Un délai d’expiration différent de zéro</span><span class="sxs-lookup"><span data-stu-id="9783c-480">A nonzero time-out</span></span>|<span data-ttu-id="9783c-481">Essaie d’envoyer les données en attente jusqu'à ce que le délai spécifié expire et si la tentative échoue, Winsock réinitialise la connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-481">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="9783c-482">`true` (activé)</span><span class="sxs-lookup"><span data-stu-id="9783c-482">`true` (enabled)</span></span>|<span data-ttu-id="9783c-483">Un délai d’attente nulle.</span><span class="sxs-lookup"><span data-stu-id="9783c-483">A zero timeout.</span></span>|<span data-ttu-id="9783c-484">Ignore toute donnée en attente et Winsock réinitialise la connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-484">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="9783c-485">La pile IP calcule le délai par défaut protocole IP à utiliser en fonction du temps d’aller-retour de la connexion.</span><span class="sxs-lookup"><span data-stu-id="9783c-485">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="9783c-486">Dans la plupart des cas, le délai d’attente calculé par la pile est plus pertinent que celui défini par une application.</span><span class="sxs-lookup"><span data-stu-id="9783c-486">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="9783c-487">Il s’agit du comportement par défaut pour un socket lors de la `LingerState` propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="9783c-487">This is the default behavior for a socket when the `LingerState` property is not set.</span></span>  
  
 <span data-ttu-id="9783c-488">Lorsque le <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propriété stockée dans le `LingerState` propriété est supérieure au délai de protocole IP par défaut, le délai de protocole IP par défaut sera toujours s’appliquent et remplacent.</span><span class="sxs-lookup"><span data-stu-id="9783c-488">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-489">Le code suivant exemple définit et obtient les sockets maintenir sa durée.</span><span class="sxs-lookup"><span data-stu-id="9783c-489">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-490">Obtient ou définit une valeur qui désactive un délai de temporisation quand les mémoires tampons d'envoi ou de réception ne sont pas saturées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-490">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-491">
            <see langword="true" /> si le délai de temporisation est désactivé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-491">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9783c-492">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-492">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-493">Lorsque `NoDelay` est `false`, un <xref:System.Net.Sockets.TcpClient> n’envoie pas de paquet sur le réseau jusqu'à ce qu’il a recueillies une quantité significative de données sortantes.</span><span class="sxs-lookup"><span data-stu-id="9783c-493">When `NoDelay` is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="9783c-494">En raison de la quantité de surcharge dans un segment TCP, l’envoi de petites quantités de données est inefficace.</span><span class="sxs-lookup"><span data-stu-id="9783c-494">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="9783c-495">Toutefois, les situations existent où vous devez envoyer de très petites quantités de données ou attendre des réponses immédiates à partir de chaque paquet envoyé.</span><span class="sxs-lookup"><span data-stu-id="9783c-495">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="9783c-496">Votre décision doit pondérer l’importance relative de l’efficacité du réseau par rapport aux exigences de l’application.</span><span class="sxs-lookup"><span data-stu-id="9783c-496">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-497">L’exemple de code suivant désactive le délai.</span><span class="sxs-lookup"><span data-stu-id="9783c-497">The following code example disables the delay.</span></span> <span data-ttu-id="9783c-498">Elle vérifie ensuite la valeur de `NoDelay` pour vérifier que la propriété a été correctement définie.</span><span class="sxs-lookup"><span data-stu-id="9783c-498">It then checks the value of `NoDelay` to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-499">Obtient ou définit la taille de la mémoire tampon de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-499">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-500">Taille en octets de la mémoire tampon de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-500">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="9783c-501">La valeur par défaut est de 8 192 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-501">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-502">Le `ReceiveBufferSize` propriété obtient ou définit le nombre d’octets que vous prévoyez de stocker dans la mémoire tampon de réception pour chaque opération de lecture.</span><span class="sxs-lookup"><span data-stu-id="9783c-502">The `ReceiveBufferSize` property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="9783c-503">Cette propriété manipule en fait l’espace de mémoire tampon réseau alloué pour la réception des données entrantes.</span><span class="sxs-lookup"><span data-stu-id="9783c-503">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="9783c-504">Votre mémoire tampon réseau doit être au moins aussi grande mémoire tampon de votre application pour vous assurer que les données souhaitées seront disponibles lorsque vous appelez le <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-504">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9783c-505">Utilisez le <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propriété à définir cette taille.</span><span class="sxs-lookup"><span data-stu-id="9783c-505">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="9783c-506">Si votre application recevra des données en bloc, vous devez passer le `Read` méthode une mémoire tampon d’application de très grande taille.</span><span class="sxs-lookup"><span data-stu-id="9783c-506">If your application will be receiving bulk data, you should pass the `Read` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="9783c-507">Si la mémoire tampon réseau est inférieure à la quantité de données que vous demandez dans le `Read` (méthode), vous ne pourrez récupérer la quantité de données dans une opération de lecture souhaitée.</span><span class="sxs-lookup"><span data-stu-id="9783c-507">If the network buffer is smaller than the amount of data you request in the `Read` method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="9783c-508">Cela entraîne la surcharge d’appels supplémentaires à la `Read` (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-508">This incurs the overhead of additional calls to the `Read` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-509">L’exemple de code suivant définit et obtient la taille de mémoire tampon de réception.</span><span class="sxs-lookup"><span data-stu-id="9783c-509">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="9783c-510">Une erreur s'est produite lors de la définition de la taille de la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-510">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="9783c-511">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-511">-or-</span>
          </span>
          <span data-ttu-id="9783c-512">Dans les applications .NET Compact Framework, vous ne pouvez pas définir cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-512">In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="9783c-513">Pour obtenir une solution de contournement, consultez la partie Remarque sur la plateforme de la section Notes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-513">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-514">Obtient ou définit la durée pendant laquelle un élément <see cref="T:System.Net.Sockets.TcpClient" /> attendra de recevoir des données une fois qu'une opération de lecture est initialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-514">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-515">Valeur du délai d'attente de la connexion en millisecondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-515">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="9783c-516">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-516">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-517">Le `ReceiveTimeout` propriété détermine la quantité de temps que le <xref:System.Net.Sockets.NetworkStream.Read%2A> méthode se bloque jusqu'à ce qu’il soit en mesure de recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="9783c-517">The `ReceiveTimeout` property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="9783c-518">Ce temps est mesuré en millisecondes.</span><span class="sxs-lookup"><span data-stu-id="9783c-518">This time is measured in milliseconds.</span></span> <span data-ttu-id="9783c-519">Si le délai expire avant `Read` se termine correctement, <xref:System.Net.Sockets.TcpClient> lève un <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="9783c-519">If the time-out expires before `Read` successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="9783c-520">Il n’existe aucun délai d’attente par défaut.</span><span class="sxs-lookup"><span data-stu-id="9783c-520">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-521">L’exemple de code suivant définit et obtient le délai d’attente de réception.</span><span class="sxs-lookup"><span data-stu-id="9783c-521">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-522">Obtient ou définit la taille de la mémoire tampon d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-522">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-523">Taille en octets de la mémoire tampon d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-523">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="9783c-524">La valeur par défaut est de 8 192 octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-524">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-525">Le `SendBufferSize` propriété obtient ou définit le nombre d’octets que vous prévoyez d’envoyer dans chaque appel à la <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-525">The `SendBufferSize` property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9783c-526">Cette propriété manipule en fait l’espace de mémoire tampon réseau alloué pour l’opération d’envoi.</span><span class="sxs-lookup"><span data-stu-id="9783c-526">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="9783c-527">Votre mémoire tampon réseau doit être au moins aussi grande mémoire tampon de votre application pour vous assurer que les données souhaitées seront stockées et envoyées en une seule opération.</span><span class="sxs-lookup"><span data-stu-id="9783c-527">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="9783c-528">Utilisez le <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propriété à définir cette taille.</span><span class="sxs-lookup"><span data-stu-id="9783c-528">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="9783c-529">Si votre application enverront des données en bloc, vous devez passer le `Write` méthode une mémoire tampon d’application de très grande taille.</span><span class="sxs-lookup"><span data-stu-id="9783c-529">If your application will be sending bulk data, you should pass the `Write` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="9783c-530">Si la mémoire tampon réseau est inférieure à la quantité de données que vous fournissez la `Write` (méthode), plusieurs réseau envoi opérations seront effectuées pour chaque appel que vous apportez à la `Write` (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-530">If the network buffer is smaller than the amount of data you provide the `Write` method, several network send operations will be performed for every call you make to the `Write` method.</span></span> <span data-ttu-id="9783c-531">Vous pouvez obtenir le meilleur débit de données en veillant à ce que votre mémoire tampon réseau est au moins aussi grand que la mémoire tampon de votre application.</span><span class="sxs-lookup"><span data-stu-id="9783c-531">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-532">L’exemple de code suivant définit et obtient la taille de mémoire tampon d’envoi.</span><span class="sxs-lookup"><span data-stu-id="9783c-532">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9783c-533">Obtient ou définit la durée pendant laquelle un élément <see cref="T:System.Net.Sockets.TcpClient" /> attendra qu'une opération d'envoi se termine correctement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-533">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9783c-534">Valeur du délai d'attente d'envoi, en millisecondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-534">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="9783c-535">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-535">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9783c-536">Le `SendTimeout` propriété détermine la quantité de temps que le <xref:System.Net.Sockets.Socket.Send%2A> méthode se bloque jusqu'à ce qu’il soit en mesure de retourner correctement.</span><span class="sxs-lookup"><span data-stu-id="9783c-536">The `SendTimeout` property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="9783c-537">Ce temps est mesuré en millisecondes.</span><span class="sxs-lookup"><span data-stu-id="9783c-537">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="9783c-538">Après avoir appelé la <xref:System.Net.Sockets.NetworkStream.Write%2A> méthode, sous-jacent <xref:System.Net.Sockets.Socket> retourne le nombre d’octets réellement envoyés à l’hôte.</span><span class="sxs-lookup"><span data-stu-id="9783c-538">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="9783c-539">Le `SendTimeout` propriété détermine la durée pendant laquelle un <xref:System.Net.Sockets.TcpClient> attendra avant de recevoir le nombre d’octets retourné.</span><span class="sxs-lookup"><span data-stu-id="9783c-539">The `SendTimeout` property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="9783c-540">Si le délai expire avant le `Send` méthode se termine correctement, `TcpClient` lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="9783c-540">If the time-out expires before the `Send` method successfully completes, `TcpClient` will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="9783c-541">Il n’existe aucun délai d’attente par défaut.</span><span class="sxs-lookup"><span data-stu-id="9783c-541">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9783c-542">L’exemple de code suivant définit et obtient le `SendTimeout` valeur.</span><span class="sxs-lookup"><span data-stu-id="9783c-542">The following code example sets and gets the `SendTimeout` value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9783c-543">Libère toutes les ressources utilisées par <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9783c-543">Releases all resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="9783c-544">Appelez IDisposable.Dispose lorsque vous avez terminé à l’aide de la <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="9783c-544">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="9783c-545">La méthode IDisposable.Dispose quitte le <xref:System.Net.Sockets.TcpClient> dans un état inutilisable.</span><span class="sxs-lookup"><span data-stu-id="9783c-545">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.TcpClient> in an unusable state.</span></span> <span data-ttu-id="9783c-546">Après l’appel à IDisposable.Dispose, vous devez libérer toutes les références à la <xref:System.Net.Sockets.TcpClient> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Sockets.TcpClient> occupée.</span><span class="sxs-lookup"><span data-stu-id="9783c-546">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.TcpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.TcpClient> was occupying.</span></span> <span data-ttu-id="9783c-547">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="9783c-547">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="9783c-548">Appelez toujours IDisposable.Dispose avant de libérer votre dernière référence à la <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="9783c-548">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="9783c-549">Sinon, les ressources qu’il utilise ne seront pas libérées jusqu'à ce que le garbage collector appelle la <xref:System.Net.Sockets.TcpClient> l’objet **Finalize** (méthode).</span><span class="sxs-lookup"><span data-stu-id="9783c-549">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.TcpClient> object's **Finalize** method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>