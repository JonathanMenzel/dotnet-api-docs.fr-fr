<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TcpClient.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Provides client connections for TCP network services.</source>
          <target state="translated">Fournit des connexions clientes pour les services réseau TCP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe fournit des méthodes simples pour vous connecter, envoi, et la réception de flux de données sur un réseau en mode blocage synchrone.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>In order for <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> to connect and exchange data, a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> created with the TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> must be listening for incoming connection requests.</source>
          <target state="translated">Dans l’ordre pour <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> pour vous connecter et d’échanger des données, un <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> ou <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> créé avec le protocole TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> doit être à l’écoute des demandes de connexion entrantes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>You can connect to this listener in one of the following two ways:</source>
          <target state="translated">Vous pouvez vous connecter à cet écouteur de l’une des deux manières suivantes :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and call one of the three available <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> methods.</source>
          <target state="translated">Créer un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et appelez l’une des trois disponibles <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using the host name and port number of the remote host.</source>
          <target state="translated">Créer un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> à l’aide du nom d’hôte et le numéro de port de l’hôte distant.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>This constructor will automatically attempt a connection.</source>
          <target state="translated">Ce constructeur tentera automatiquement une connexion.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>If you want to send connectionless datagrams in synchronous blocking mode, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Si vous souhaitez envoyer des datagrammes sans connexion en mode blocage synchrone, utilisez la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The following code example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connection.</source>
          <target state="translated">L’exemple de code suivant établit une <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connexion.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Permission to establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">Autorisation d’établir une connexion sortante ou accepter une demande entrante.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>To send and receive data, use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> method to obtain a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">Pour envoyer et recevoir des données, utilisez la <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> méthode pour obtenir un <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Call the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> to send and receive data with the remote host.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> méthodes de la <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> pour envoyer et recevoir des données avec l’hôte distant.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> method to release all resources associated with the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> méthode pour libérer toutes les ressources associées à la <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IP address and port number.</source>
          <target state="translated">Ce constructeur crée un nouveau <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et permet au fournisseur de service sous-jacent affecter le plus approprié local IP adresse et numéro de port.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">Vous devez d’abord appeler la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode avant d’envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">Ce constructeur ne fonctionne qu’avec les types d’adresse IPv4.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>The following code example demonstrates how to use the default constructor to create a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le constructeur par défaut pour créer un nouveau <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you bind the TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">L'élément <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> auquel vous liez l'élément <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> TCP.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> et la lie au point de terminaison local spécifié.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">Ce constructeur crée un nouveau <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et le lie à la <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> spécifié par le <ph id="ph3">`localEP`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">Avant d’appeler ce constructeur, vous devez créer un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> à l’aide de l’adresse IP et port numéro à partir de laquelle vous souhaitez envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number before connecting and communicating.</source>
          <target state="translated">Vous n’avez pas besoin de spécifier un numéro d’adresse et le port IP local avant de se connecter et communiquer.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Si vous créez un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> à l’aide de n’importe quel autre constructeur, le fournisseur de services sous-jacent assigne le plus approprié local adresse IP et port numéro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">Vous devez appeler la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode avant d’envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">L’exemple de code suivant montre comment créer une instance de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe à l’aide d’un point de terminaison local.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The  <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> of the IP protocol.</source>
          <target state="translated">L'élément <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> du protocole IP.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class with the specified family.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> avec la famille spécifiée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment créer une instance de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetwork</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="family" /&gt;</ph> n'est pas égal à AddressFamily.InterNetwork.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetworkV6</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="family" /&gt;</ph> n'est pas égal à AddressFamily.InterNetworkV6.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and connects to the specified port on the specified host.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> et établit une connexion au port spécifié sur l'hôte spécifié.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and makes a synchronous connection attempt to the provided host name and port number.</source>
          <target state="translated">Ce constructeur crée un nouveau <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et effectue une connexion synchrone tentative pour le nom d’hôte fourni et numéro de port.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Le fournisseur de service sous-jacent affecte le plus approprié local IP adresse et numéro de port.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> se bloque jusqu'à ce qu’il se connecte ou échoue.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</source>
          <target state="translated">Ce constructeur permet d’initialiser, de résoudre le nom d’hôte DNS et de se connecter en une seule étape pratique.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Si le protocole IPv6 est activé et le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">L’exemple de code suivant montre comment créer une instance de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe à l’aide d’un nom d’hôte et le numéro de port.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="port" /&gt;</ph> n’est pas compris entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> et <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Une erreur s’est produite pendant l’accès au socket.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Gets or set a value that indicates whether a connection has been made.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si une connexion a été établie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection has been made; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la connexion a été établie ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to determine if a connection attempt has succeeded.</source>
          <target state="translated">Les classes dérivées de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> pouvez utiliser cette propriété pour déterminer si une tentative de connexion a réussi.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>It does not monitor the ongoing connection state of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">Il ne surveille pas l’état de connexion en cours de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If the remote host closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> will not be updated.</source>
          <target state="translated">Si l’hôte distant ferme la connexion, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> ne sera pas mis à jour.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If you are deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and require closer attention to the connection state, use the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> method.</source>
          <target state="translated">Si vous dérivez de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et requièrent la plus grande attention à l’état de connexion, utilisez la <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> propriété de la <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> retournée par le <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>Gets the amount of data that has been received from the network and is available to be read.</source>
          <target state="translated">Obtient la quantité de données reçues du réseau et disponibles pour la lecture.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The number of bytes of data received from the network and available to be read.</source>
          <target state="translated">Nombre d'octets de données reçus du réseau et disponibles pour la lecture.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> is a way to determine whether data is queued for reading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> est un moyen de déterminer si les données sont en file d’attente pour la lecture.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">Si les données sont disponibles, appelez <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> pour obtenir les données.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The available data is the total amount of data queued in the network buffer for reading.</source>
          <target state="translated">Les données disponibles seront que la quantité totale de données en file d’attente dans le tampon réseau pour la lecture.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If no data is queued in the network buffer, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> returns 0.</source>
          <target state="translated">Si aucune donnée n’est en attente dans la mémoire tampon réseau, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> retourne 0.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If the remote host shuts down or closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> may throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si l’hôte distant arrête ou ferme la connexion, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> peut lever un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Une erreur s’est produite pendant la tentative d’accès au socket.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Démarre une demande asynchrone pour une connexion d'hôte distant.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de l'hôte distant.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">Numéro de port de l'hôte distant.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération est terminée.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Démarre une demande asynchrone pour une connexion d'hôte distant.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">L'hôte distant est spécifié par un élément <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> et un numéro de port (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à la connexion asynchrone.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> opération doit être effectuée en appelant le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et se connecte à un hôte distant.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="address" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Une erreur s’est produite pendant la tentative d’accès au socket.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">Le numéro de port n’est pas valide.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>At least one <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that designates the remote hosts.</source>
          <target state="translated">Au moins un élément <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> qui désigne les hôtes distants.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote hosts.</source>
          <target state="translated">Numéro de port des hôtes distants.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération est terminée.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Démarre une demande asynchrone pour une connexion d'hôte distant.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">L'hôte distant est spécifié par un tableau <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> et un numéro de port (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à la connexion asynchrone.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> opération doit être effectuée en appelant le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Cette méthode est généralement utilisée immédiatement après un appel à la <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et se connecte à un hôte distant.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Une erreur s’est produite pendant la tentative d’accès au socket.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">Le numéro de port n’est pas valide.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The name of the remote host.</source>
          <target state="translated">Nom de l'hôte distant.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">Numéro de port de l'hôte distant.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui fait référence à la méthode à appeler quand l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Cet objet est passé au délégué <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> quand l’opération est terminée.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Démarre une demande asynchrone pour une connexion d'hôte distant.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by a host name (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">L'hôte distant est spécifié par un nom d'hôte (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) et un numéro de port (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à la connexion asynchrone.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> opération doit être effectuée en appelant le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">En règle générale, la méthode est appelée par le <ph id="ph1">`asyncCallback`</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez <bpt id="p1">[</bpt>appel asynchrone des méthodes synchrones<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et se connecte à un hôte distant.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="host" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="host" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Une erreur s’est produite pendant la tentative d’accès au socket.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">Le numéro de port n’est pas valide.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Gets or sets the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit l'élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sous-jacent.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">L'élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> du réseau sous-jacent.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> Crée un <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> pour envoyer et recevoir des données sur un réseau.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Les classes dérivées de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> cette propriété permet d’obtenir ou définir ce <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides.</source>
          <target state="translated">Utilisez sous-jacent <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> retourné à partir de <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> si vous avez besoin d’accéder aux au-delà de celles qui <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> fournit.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Vous pouvez également utiliser <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> définir sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> à un <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>This might be useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Cela peut être utile si vous souhaitez tirer parti de la simplicité de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> à l’aide d’un fichier préexistant <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>In this example, the receive buffer size of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is changed.</source>
          <target state="translated">Dans cet exemple, la taille de mémoire tampon de réception de l’objet sous-jacent <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> est modifiée.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Disposes this <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> instance and requests that the underlying TCP connection be closed.</source>
          <target state="translated">Supprime cette instance de <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> et demande que la connexion TCP sous-jacente soit fermée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method marks the instance as disposed and requests that the associated <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> close the TCP connection.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> méthode marque l’instance comme disposé et demande qu’associé <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> fermer la connexion TCP.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Based on the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property, the TCP connection may stay open for some time after the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method is called when data remains to be sent.</source>
          <target state="translated">Selon le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propriété, la connexion TCP peut rester ouverte pendant un certain temps après la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> méthode est appelée lorsque des données restent à envoyer.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>There is no notification provided when the underlying connection has completed closing.</source>
          <target state="translated">Aucune notification n’est fournie lors de la connexion sous-jacente est terminée.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Calling this method will eventually result in the close of the associated <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and will also close the associated <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is used to send and receive data if one was created.</source>
          <target state="translated">Appel de cette méthode entraîne la fermeture de la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> et associé <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> qui est utilisé pour envoyer et recevoir des données s’il a été créé.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The following code example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre la fermeture un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant le nom d'hôte et le numéro de port spécifiés.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you intend to connect.</source>
          <target state="translated">L'élément <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Connects the client to a remote TCP host using the specified remote network endpoint.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant le point de terminaison réseau distant spécifié.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Before you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> you must create an instance of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> class using an IP address and a port number.</source>
          <target state="translated">Avant d’appeler <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> vous devez créer une instance de la <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> classe à l’aide d’une adresse IP et un numéro de port.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> as the <ph id="ph2">`remoteEP`</ph> parameter.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> comme le <ph id="ph2">`remoteEP`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The following code example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to connect with a remote host.</source>
          <target state="translated">Le code suivant exemple utilise un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> pour se connecter à un hôte distant.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Une erreur s’est produite pendant l’accès au socket.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de l'hôte auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numéro de port auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number.</source>
          <target state="translated">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> et numéro de port.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">L’exemple de code suivant utilise une adresse IP et le numéro de port pour se connecter à un hôte distant.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="address" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="port" /&gt;</ph> n'est pas compris entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> et <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Une erreur s’est produite pendant l’accès au socket.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">Tableau <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de l'hôte auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numéro de port auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Cette méthode est généralement utilisée immédiatement après un appel à la <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode pour établir une connexion d’hôte distant synchrone à l’hôte spécifié par le tableau de <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> éléments et le numéro de port.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">L’exemple de code suivant utilise une adresse IP et le numéro de port pour se connecter à un hôte distant.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">Le numéro de port n’est pas valide.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Une erreur s’est produite pendant la tentative d’accès au socket.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Cette méthode est valide pour les sockets qui utilisent l'indicateur <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> ou l'indicateur <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Connects the client to the specified port on the specified host.</source>
          <target state="translated">Connecte le client au port spécifié sur l'hôte spécifié.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number.</source>
          <target state="translated">Appelez cette méthode pour établir une connexion d’hôte distant synchrone au nom d’hôte spécifié et le numéro de port.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode se bloque jusqu'à ce qu’il se connecte ou échoue.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Si le protocole IPv6 est activé et le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The following code example uses the host name and port number to connect with a remote host.</source>
          <target state="translated">L’exemple de code suivant utilise le nom d’hôte et le port numéro pour vous connecter à un hôte distant.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="port" /&gt;</ph> n’est pas compris entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> et <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Une erreur s’est produite pendant l’accès au socket.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant le nom d'hôte et le numéro de port spécifiés sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de l'hôte auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numéro de port auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Cette opération ne bloque pas.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Les retours retournés <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objet se termine après avoir établi la connexion TCP.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number as an asynchronous operation.</source>
          <target state="translated">Appelez cette méthode pour établir une connexion d’hôte distant synchrone spécifié <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> et numéro de port en tant qu’une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="address" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="port" /&gt;</ph> n'est pas compris entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> et <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Une erreur s’est produite pendant l’accès au socket.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">Tableau <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de l'hôte auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numéro de port auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</source>
          <target state="translated">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Cette opération ne bloque pas.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Les retours retournés <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objet se termine après avoir établi la connexion TCP.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Cette méthode est généralement utilisée immédiatement après un appel à la <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> (méthode), qui peut retourner plusieurs adresses IP pour un seul hôte.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number as an asynchronous operation.</source>
          <target state="translated">Appelez cette méthode pour établir une connexion d’hôte distant synchrone à l’hôte spécifié par le tableau de <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> éléments et le numéro de port en tant qu’une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">Le numéro de port n’est pas valide.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Une erreur s’est produite pendant la tentative d’accès au socket.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Cette méthode est valide pour les sockets qui utilisent l'indicateur <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> ou l'indicateur <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</source>
          <target state="translated">Connecte le client au port TCP spécifié sur l'hôte spécifié sous forme d'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objet de tâche représentant l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Cette opération ne bloque pas.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Les retours retournés <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objet se termine après avoir établi la connexion TCP.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Cette méthode ne bloque pas le thread appelant pendant que la demande de connexion est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">Appelez cette méthode pour établir une connexion d’hôte distant synchrone au nom d’hôte spécifié et le nombre sous la forme d’une opération asynchrone de port.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Après une connexion avec l’hôte distant, utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode pour obtenir l’objet sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilisez cette <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Si le protocole IPv6 est activé et le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> est appelée pour vous connecter à un hôte qui résout les deux IPv6 et des adresses IPv4, la connexion à l’adresse IPv6 sera tentée en premier avant l’adresse IPv4.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Cela peut avoir pour effet de retarder l’heure pour établir la connexion si l’hôte n’écoute pas sur l’adresse IPv6.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="port" /&gt;</ph> n’est pas compris entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> et <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Une erreur s’est produite pendant l’accès au socket.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Gets a value indicating whether the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is connected to a remote host.</source>
          <target state="translated">Obtient une valeur indiquant si l'élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sous-jacent d'un élément <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> est connecté à un hôte distant.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> socket was connected to a remote resource as of the most recent operation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le socket <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> était connecté à une ressource distante lors de l'opération la plus récente ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property gets the connection state of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket as of the last I/O operation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> propriété obtient l’état de connexion de la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket depuis la dernière opération d’e/s.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>When it returns <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket was either never connected, or is no longer connected.</source>
          <target state="translated">Lorsqu’elle retourne <ph id="ph1">`false`</ph>, le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket n’a jamais été connecté ou n’est plus connecté.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</source>
          <target state="translated">Étant donné que le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> propriété reflète uniquement l’état de la connexion depuis la dernière opération, vous devez tenter d’envoyer ou recevoir un message pour déterminer l’état actuel.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>After the message send fails, this property no longer returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Après l’envoi du message échoue, cette propriété ne retourne plus <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Note that this behavior is by design.</source>
          <target state="translated">Notez que ce comportement est normal.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</source>
          <target state="translated">Vous ne pouvez pas tester de manière fiable l’état de la connexion car, dans le délai entre le test et l’envoi/réception, la connexion a ont été perdue.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Your code should assume the socket is connected, and gracefully handle failed transmissions.</source>
          <target state="translated">Votre code doit supposer le socket est connecté et en douceur handle échecs de transmission.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The following code example connects to a remote endpoint and then verifies the connection.</source>
          <target state="translated">L’exemple de code suivant se connecte à un point de terminaison distant, puis vérifie la connexion.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources managées et non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Défini à <ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer à la fois les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">`Dispose()`</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> appelle cette méthode avec le <ph id="ph2">`disposing`</ph> paramètre la valeur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle cette méthode avec <ph id="ph2">`disposing`</ph> la valeur <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> references.</source>
          <target state="translated">Si le paramètre <ph id="ph1">`disposing`</ph> a la valeur <ph id="ph2">`true`</ph>, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>It does this by invoking the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Cela en appelant le <ph id="ph1">`Dispose()`</ph> (méthode) de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>substitution de la méthode Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retourné par un appel à <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>Ends a pending asynchronous connection attempt.</source>
          <target state="translated">Met fin à une tentative de connexion asynchrone en attente.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Cette méthode s’interrompt jusqu'à ce que l’opération de fin.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>To perform this operation synchronously, use a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Pour effectuer cette opération de manière synchrone, utilisez un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The following code example ends the asynchronous connection attempt.</source>
          <target state="translated">L’exemple de code suivant met fin à la tentative de connexion asynchrone.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter was not returned by a call to a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> method.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> n'a pas été retourné par un appel à la méthode <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> method was previously called for the asynchronous connection.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> a été précédemment appelée pour la connexion asynchrone.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An error occurred when attempting to access the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Une erreur s'est produite lors de la tentative d'accès à <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sous-jacent a été fermé.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">Obtient ou définit une valeur <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui spécifie si l'élément <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> n'autorise qu'un seul client à utiliser un port.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'élément <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> n'autorise qu'un seul client à utiliser un port spécifique ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour toutes les autres versions.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">Par défaut, plusieurs clients peuvent utiliser un port spécifique ; Toutefois, seul l’un des clients peut effectuer des opérations sur le trafic réseau envoyé au port.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">Vous pouvez utiliser le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> propriété pour empêcher plusieurs clients à l’aide d’un port spécifique.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">Cette propriété doit être définie avant que le socket sous-jacent est lié à un port client.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, the client port is bound as a side effect of the method, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">Si vous appelez <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, ou <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, le client est lié en tant qu’un effet secondaire de la méthode, et vous ne pouvez pas définir par la suite le <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> propriété</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and gets and sets the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> et obtient et définit la valeur de la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sous-jacent a été fermé.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Frees resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Libère les ressources utilisées par la classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode se substitue à <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Code d’application ne doit pas appeler cette méthode ; d’un objet <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class finalizer closes the TCP connection and releases all managed resources associated with the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> finaliseur de leur classe ferme la connexion TCP et libère toutes les ressources managées associées le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>These resources include the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for connecting with the remote host, and the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> used to send and receive data.</source>
          <target state="translated">Ces ressources incluent sous-jacent <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> utilisés pour la connexion avec l’hôte distant et le <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> utilisé pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The finalizer does not release any unmanaged resources.</source>
          <target state="translated">Le finaliseur ne libère pas les ressources non managées.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>destructeurs et méthodes Finalize<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>de nettoyage des ressources non managées<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, et <bpt id="p3">[</bpt>substitution de la méthode Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">Retourne l'élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> utilisé pour l'envoi et la réception de données.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">L'élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> sous-jacent.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> Retourne un <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> que vous pouvez utiliser pour envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which provides a rich collection of methods and properties used to facilitate network communications.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> classe hérite de la <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> classe, qui fournit une riche collection de méthodes et propriétés utilisées pour faciliter les communications réseau.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method first, or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method will throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Vous devez appeler la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> méthode tout d’abord, ou le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> méthode lève un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method to send data to the remote host.</source>
          <target state="translated">Après avoir obtenu le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, appelez le <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> méthode pour envoyer des données à l’hôte distant.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method to receive data arriving from the remote host.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> méthode pour recevoir des données en provenance de l’hôte distant.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Both of these methods block until the specified operation is performed.</source>
          <target state="translated">Ces deux méthodes bloquent jusqu'à ce que l’opération spécifiée est effectuée.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You can avoid blocking on a read operation by checking the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> property.</source>
          <target state="translated">Vous pouvez éviter le blocage sur une opération de lecture en vérifiant la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>A <ph id="ph1">`true`</ph> value means that data has arrived from the remote host and is available for reading.</source>
          <target state="translated">A <ph id="ph1">`true`</ph> valeur signifie que les données sont arrivé à partir de l’hôte distant et est disponibles pour la lecture.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>In this case, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> is guaranteed to complete immediately.</source>
          <target state="translated">Dans ce cas, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> est assurée de se terminer immédiatement.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If the remote host has shutdown its connection, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> will immediately return with zero bytes.</source>
          <target state="translated">Si l’hôte distant a arrêté sa connexion, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> est retournée immédiatement avec zéro octet.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must close the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> when you are through sending and receiving data.</source>
          <target state="translated">Vous devez fermer le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> lorsque vous avez fini d’envoyer et recevoir des données.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Closing <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not release the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Fermeture de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> ne libère pas le <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si vous recevez un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> pour obtenir le code d’erreur spécifique.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>traçage réseau dans le .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> obtenir sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After obtaining the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, it sends and receives using its <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> methods.</source>
          <target state="translated">Après avoir obtenu le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, il envoie et reçoit en utilisant ses <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is not connected to a remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> n'est pas connecté à un hôte distant.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Gets or sets information about the linger state of the associated socket.</source>
          <target state="translated">Obtient ou définit des informations relatives à l'état de persistance du socket associé.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>By default, lingering is disabled.</source>
          <target state="translated">Par défaut, la persistance est désactivée.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property changes the way <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method behaves.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propriété modifie la façon dont <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> se comporte de la méthode.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property when set modifies the conditions under which the connection can be reset by Winsock.</source>
          <target state="translated">Cette propriété lorsque le jeu modifie les conditions sous lesquelles la connexion peut être réinitialisée par Winsock.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Connection resets can still occur based on the IP protocol behavior.</source>
          <target state="translated">Les réinitialisations de connexion peuvent encore se produire en fonction du comportement du protocole IP.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property controls the length of time that the TCP connection will remain open after a call to <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> when data remains to be sent.</source>
          <target state="translated">Cette propriété contrôle la durée pendant laquelle la connexion TCP restera ouverte après un appel à <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> lorsqu’il reste des données à envoyer.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, data is placed in the outgoing network buffer.</source>
          <target state="translated">Lorsque vous appelez le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> méthode, les données est placé dans le tampon réseau sortant.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property can be used to ensure that this data is sent to the remote host before the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method drops the connection.</source>
          <target state="translated">Cette propriété peut être utilisée pour vous assurer que ces données sont envoyées à l’hôte distant avant du <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> méthode supprime la connexion.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>To enable lingering, create a <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> instance containing the desired values, and set the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property to this instance.</source>
          <target state="translated">Pour activer le maintien, créez un <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> d’instance qui contient les valeurs souhaitées et définir le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propriété à cette instance.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following table describes the behavior of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method for the possible values of the <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property.</source>
          <target state="translated">Le tableau suivant décrit le comportement de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> méthode pour les valeurs possibles de la <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> propriété et la <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> propriété stockée dans le <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.Enabled</source>
          <target state="translated">LingerState.Enabled</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.LingerTime</source>
          <target state="translated">LingerState.LingerTime</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Behavior</source>
          <target state="translated">Comportement</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`false`</ph> (disabled), the default value</source>
          <target state="translated"><ph id="ph1">`false`</ph> (désactivé), la valeur par défaut</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The time-out is not applicable, (default).</source>
          <target state="translated">Le délai d’attente n’est pas applicable, (par défaut).</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the default IP protocol time-out expires.</source>
          <target state="translated">Essaie d’envoyer les données en attente jusqu'à ce que le délai expire.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (activé)</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A nonzero time-out</source>
          <target state="translated">Un délai d’attente différente de zéro</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</source>
          <target state="translated">Essaie d’envoyer les données en attente jusqu'à ce que le délai spécifié expire, et si la tentative échoue, Winsock réinitialise la connexion.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (activé)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A zero timeout.</source>
          <target state="translated">Un délai d’attente nulle.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Discards any pending data and Winsock resets the connection.</source>
          <target state="translated">Ignore toutes les données et les réinitialisations de Winsock en attente de la connexion.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</source>
          <target state="translated">La pile IP calcule le délai par défaut protocole IP à utiliser en fonction du temps d’aller-retour de la connexion.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>In most cases, the time-out computed by the stack is more relevant than one defined by an application.</source>
          <target state="translated">Dans la plupart des cas, le délai d’attente calculé par la pile est plus pertinent que celui défini par une application.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This is the default behavior for a socket when the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is not set.</source>
          <target state="translated">Il s’agit du comportement par défaut pour un socket lorsque le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propriété n’est pas définie.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When the <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> propriété stockée dans le <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propriété est supérieure au délai par défaut, le délai par défaut sera toujours appliquer et remplacer.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following code example sets and gets the sockets linger time.</source>
          <target state="translated">Le code suivant exemple définit et obtient les sockets attendre temps.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Gets or sets a value that disables a delay when send or receive buffers are not full.</source>
          <target state="translated">Obtient ou définit une valeur qui désactive un délai de temporisation quand les mémoires tampons d'envoi ou de réception ne sont pas saturées.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the delay is disabled, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le délai de temporisation est désactivé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>When <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not send a packet over the network until it has collected a significant amount of outgoing data.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> est <ph id="ph2">`false`</ph>, un <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> n’envoie pas de paquet sur le réseau jusqu'à ce qu’il a recueilli un volume important de données sortantes.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</source>
          <target state="translated">En raison du volume de surcharge d’un segment TCP, l’envoi de petites quantités de données est inefficace.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</source>
          <target state="translated">Toutefois, les situations existent où vous devez envoyer de très petites quantités de données ou attendre des réponses immédiates de chaque paquet envoyé.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Your decision should weigh the relative importance of network efficiency versus application requirements.</source>
          <target state="translated">Votre décision doit pondérer l’importance relative de l’efficacité du réseau par rapport aux exigences de l’application.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The following code example disables the delay.</source>
          <target state="translated">L’exemple de code suivant désactive le délai d’attente.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>It then checks the value of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> to verify that the property was successfully set.</source>
          <target state="translated">Il vérifie ensuite la valeur de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> pour vérifier que la propriété a été correctement définie.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Gets or sets the size of the receive buffer.</source>
          <target state="translated">Obtient ou définit la taille de la mémoire tampon de réception.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The size of the receive buffer, in bytes.</source>
          <target state="translated">Taille en octets de la mémoire tampon de réception.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">La valeur par défaut est de 8 192 octets.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> propriété obtient ou définit le nombre d’octets que vous prévoyez de stocker dans la mémoire tampon de réception pour chaque opération de lecture.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This property actually manipulates the network buffer space allocated for receiving incoming data.</source>
          <target state="translated">Cette propriété manipule en fait l’espace de mémoire tampon réseau alloué pour la réception des données entrantes.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Votre mémoire tampon réseau doit être au moins aussi grande mémoire tampon de votre application pour vous assurer que les données souhaitées seront disponibles lorsque vous appelez le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> propriété pour définir cette taille.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If your application will be receiving bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">Si votre application recevra des données en bloc, vous devez passer le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> méthode une mémoire tampon d’application de très grande taille.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If the network buffer is smaller than the amount of data you request in the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method, you will not be able to retrieve the desired amount of data in one read operation.</source>
          <target state="translated">Si la mémoire tampon réseau est inférieur à la quantité de données que vous demandez dans la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> (méthode), vous ne pourrez récupérer la quantité de données dans une opération de lecture souhaitée.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This incurs the overhead of additional calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">Cela entraîne la surcharge d’appels supplémentaires à la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The following code example sets and gets the receive buffer size.</source>
          <target state="translated">L’exemple de code suivant définit et obtient la taille de mémoire tampon de réception.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>An error occurred when setting the buffer size.</source>
          <target state="translated">Une erreur s'est produite lors de la définition de la taille de la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>In .NET Compact Framework applications, you cannot set this property.</source>
          <target state="translated">Dans les applications .NET Compact Framework, vous ne pouvez pas définir cette propriété.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>For a workaround, see the Platform Note in Remarks.</source>
          <target state="translated">Pour obtenir une solution de contournement, consultez la partie Remarque sur la plateforme de la section Notes.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait to receive data once a read operation is initiated.</source>
          <target state="translated">Obtient ou définit la durée pendant laquelle un élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> attendra de recevoir des données une fois qu'une opération de lecture est initialisée.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The time-out value of the connection in milliseconds.</source>
          <target state="translated">Valeur du délai d'attente de la connexion en millisecondes.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The default value is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method will block until it is able to receive data.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> propriété détermine la quantité de temps que la <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> méthode se bloque jusqu'à ce qu’il puisse recevoir des données.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">Cette durée est mesurée en millisecondes.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>If the time-out expires before <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throws a <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">Si le délai d’attente expire avant <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> terminée avec succès, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> lève une <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">Il n’existe aucun délai d’attente par défaut.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The following code example sets and gets the receive time out.</source>
          <target state="translated">L’exemple de code suivant définit et obtient le délai d’attente de réception.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Gets or sets the size of the send buffer.</source>
          <target state="translated">Obtient ou définit la taille de la mémoire tampon d'envoi.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The size of the send buffer, in bytes.</source>
          <target state="translated">Taille en octets de la mémoire tampon d'envoi.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">La valeur par défaut est de 8 192 octets.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to send in each call to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> propriété obtient ou définit le nombre d’octets que vous prévoyez d’envoyer dans chaque appel à la <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>This property actually manipulates the network buffer space allocated for send operation.</source>
          <target state="translated">Cette propriété manipule en fait l’espace de mémoire tampon réseau alloué pour l’opération d’envoi.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</source>
          <target state="translated">Votre mémoire tampon réseau doit être au moins aussi grande mémoire tampon de votre application pour vous assurer que les données souhaitées seront stockées et envoyées en une seule opération.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> propriété pour définir cette taille.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If your application will be sending bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">Si votre application envoie des données en bloc, vous devez passer le <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> méthode une mémoire tampon d’application de très grande taille.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If the network buffer is smaller than the amount of data you provide the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, several network send operations will be performed for every call you make to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">Si la mémoire tampon réseau est inférieur à la quantité de données que vous fournissez la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> méthode, plusieurs réseau envoi opérations seront effectuées pour chaque appel à la <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</source>
          <target state="translated">Vous pouvez obtenir le meilleur débit de données en vous assurant que votre mémoire tampon réseau est au moins aussi grande mémoire tampon de votre application.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The following code example sets and gets the send buffer size.</source>
          <target state="translated">L’exemple de code suivant définit et obtient la taille de mémoire tampon d’envoi.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait for a send operation to complete successfully.</source>
          <target state="translated">Obtient ou définit la durée pendant laquelle un élément <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> attendra qu'une opération d'envoi se termine correctement.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The send time-out value, in milliseconds.</source>
          <target state="translated">Valeur du délai d'attente d'envoi, en millisecondes.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The default is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method will block until it is able to return successfully.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> propriété détermine la quantité de temps qui le <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> méthode se bloque jusqu'à ce qu’il puisse correctement retournée.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">Cette durée est mesurée en millisecondes.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>After you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returns the number of bytes actually sent to the host.</source>
          <target state="translated">Après avoir appelé la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> méthode sous-jacent <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> retourne le nombre d’octets réellement envoyés à l’ordinateur hôte.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will wait before receiving the number of bytes returned.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> propriété détermine la durée pendant laquelle un <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> attend avant de recevoir le nombre d’octets retourné.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>If the time-out expires before the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si le délai d’attente expire avant le <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> terminée, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> lèvera une <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">Il n’existe aucun délai d’attente par défaut.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The following code example sets and gets the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant définit et obtient la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> valeur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>