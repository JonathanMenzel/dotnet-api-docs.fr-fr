<Type Name="SocketType" FullName="System.Net.Sockets.SocketType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="446cb84ec63e3ca074d05efa32dc0150c5e2c2de" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46674815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SocketType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SocketType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SocketType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SocketType" />
  <TypeSignature Language="F#" Value="type SocketType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Spécifie le type de socket que représente une instance de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Avant une <xref:System.Net.Sockets.Socket> peut envoyer et recevoir des données, il doit d’abord être créé à l’aide un <xref:System.Net.Sockets.AddressFamily>, un <xref:System.Net.Sockets.SocketType>et un <xref:System.Net.Sockets.ProtocolType>. Le <xref:System.Net.Sockets.SocketType> énumération fournit plusieurs options pour définir le type de <xref:System.Net.Sockets.Socket> que vous souhaitez ouvrir.  
  
> [!NOTE]
>  <xref:System.Net.Sockets.SocketType> parfois implicitement indique quelle <xref:System.Net.Sockets.ProtocolType> est utilisé dans un <xref:System.Net.Sockets.AddressFamily>. Par exemple, lorsque le <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> est <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, le <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> est toujours <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>. Lorsque le <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> est <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, le <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> est toujours <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>. Si vous essayez de créer un <xref:System.Net.Sockets.Socket> avec une combinaison incompatible, <xref:System.Net.Sockets.Socket> lève un <xref:System.Net.Sockets.SocketException>.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> en tant que paramètre à la <xref:System.Net.Sockets.Socket> constructeur.  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.AddressFamily" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.Sockets.Socket" />
  </Docs>
  <Members>
    <Member MemberName="Dgram">
      <MemberSignature Language="C#" Value="Dgram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Dgram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Dgram" />
      <MemberSignature Language="VB.NET" Value="Dgram" />
      <MemberSignature Language="C++ CLI" Value="Dgram" />
      <MemberSignature Language="F#" Value="Dgram = 2" Usage="System.Net.Sockets.SocketType.Dgram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Prend en charge des datagrammes, qui sont des messages peu fiables, sans connexion, d'une longueur maximale fixe (généralement réduite). Des messages pourraient être perdus ou dupliqués et arriver dans le désordre. Un <see cref="T:System.Net.Sockets.Socket" /> de type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> ne requiert aucune connexion avant d'envoyer et de recevoir des données, et peut communiquer avec plusieurs homologues. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> utilise le protocole UDP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) et la famille d’adresses <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> .</summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Raw = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Raw" />
      <MemberSignature Language="VB.NET" Value="Raw" />
      <MemberSignature Language="C++ CLI" Value="Raw" />
      <MemberSignature Language="F#" Value="Raw = 3" Usage="System.Net.Sockets.SocketType.Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Prend en charge l'accès au protocole de transport sous-jacent. En utilisant <see cref="F:System.Net.Sockets.SocketType.Raw" />, vous pouvez communiquer au moyen de protocoles comme Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) et Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). Votre application doit fournir un en-tête IP complet lors de l'envoi. Les datagrammes reçus retournent avec l'en-tête IP et les options intacts.</summary>
      </Docs>
    </Member>
    <Member MemberName="Rdm">
      <MemberSignature Language="C#" Value="Rdm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Rdm = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Rdm" />
      <MemberSignature Language="VB.NET" Value="Rdm" />
      <MemberSignature Language="C++ CLI" Value="Rdm" />
      <MemberSignature Language="F#" Value="Rdm = 4" Usage="System.Net.Sockets.SocketType.Rdm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Prend en charge des messages sans connexion, orientés message, livrés avec fiabilité, et préserve les limites de message dans les données. Les messages Rdm (Reliably Delivered Messages) arrivent non dupliqués et dans l'ordre. En outre, l'émetteur est averti si des messages sont perdus. Si vous initialisez <see cref="T:System.Net.Sockets.Socket" /> à l'aide de <see cref="F:System.Net.Sockets.SocketType.Rdm" />, vous n'avez pas besoin d'une connexion d'hôte pour envoyer et recevoir des données. Avec <see cref="F:System.Net.Sockets.SocketType.Rdm" />, vous pouvez communiquer avec plusieurs homologues.</summary>
      </Docs>
    </Member>
    <Member MemberName="Seqpacket">
      <MemberSignature Language="C#" Value="Seqpacket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Seqpacket" />
      <MemberSignature Language="VB.NET" Value="Seqpacket" />
      <MemberSignature Language="C++ CLI" Value="Seqpacket" />
      <MemberSignature Language="F#" Value="Seqpacket = 5" Usage="System.Net.Sockets.SocketType.Seqpacket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Fournit un mécanisme de transfert bidirectionnel orienté connexion et fiable pour les flux d'octets ordonnés sur un réseau. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> ne duplique pas les données et conserve les limites dans le flux de données. Un <see cref="T:System.Net.Sockets.Socket" /> de type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communique avec un homologue unique et nécessite une connexion d'hôte distant pour permettre le début d'une communication.</summary>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="Stream" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Stream = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Stream" />
      <MemberSignature Language="VB.NET" Value="Stream" />
      <MemberSignature Language="C++ CLI" Value="Stream" />
      <MemberSignature Language="F#" Value="Stream = 1" Usage="System.Net.Sockets.SocketType.Stream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Prend en charge les flux d'octets fiables, bidirectionnels, orientés connexion sans la duplication de données et sans préservation de limites. Un <see cref="T:System.Net.Sockets.Socket" /> de ce type communique avec un homologue unique et nécessite une connexion d'hôte distant avant que la communication puisse débuter. <see cref="F:System.Net.Sockets.SocketType.Stream" /> utilise le protocole TCP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) et la famille d’adresses <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> .</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Unknown = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = -1" Usage="System.Net.Sockets.SocketType.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Spécifie un type <see cref="T:System.Net.Sockets.Socket" /> inconnu.</summary>
      </Docs>
    </Member>
  </Members>
</Type>