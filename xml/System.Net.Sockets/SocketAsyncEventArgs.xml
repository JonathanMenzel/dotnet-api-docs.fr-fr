<Type Name="SocketAsyncEventArgs" FullName="System.Net.Sockets.SocketAsyncEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2e34b942759b2c6ab781ca20e97ffcc3449cc1e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39911165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SocketAsyncEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAsyncEventArgs extends System.EventArgs implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketAsyncEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAsyncEventArgs&#xA;Inherits EventArgs&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAsyncEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="F#" Value="type SocketAsyncEventArgs = class&#xA;    inherit EventArgs&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f0c0c-101">Représente une opération de socket asynchrone.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0c0c-101">Represents an asynchronous socket operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-102">Le <xref:System.Net.Sockets.SocketAsyncEventArgs> classe fait partie d’un ensemble d’améliorations apportées à la <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe qui fournit un autre modèle asynchrone qui peut être utilisé par les applications de socket hautes performances spécialisées.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-102">The <xref:System.Net.Sockets.SocketAsyncEventArgs> class is part of a set of enhancements to the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class that provide an alternative asynchronous pattern that can be used by specialized high-performance socket applications.</span></span> <span data-ttu-id="f0c0c-103">Cette classe est spécialement conçue pour les applications de serveur de réseau qui nécessitent des performances élevées.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-103">This class was specifically designed for network server applications that require high performance.</span></span> <span data-ttu-id="f0c0c-104">Une application peut utiliser le modèle asynchrone amélioré exclusivement ou uniquement dans des zones (par exemple, lors de la réception de grandes quantités de données) ciblées.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-104">An application can use the enhanced asynchronous pattern exclusively or only in targeted hot areas (for example, when receiving large amounts of data).</span></span>  
  
 <span data-ttu-id="f0c0c-105">L’objectif principal de ces améliorations est d’éviter la répétition des opérations d’allocation et de synchronisation d’objets durant les processus impliquant de nombreuses entrées/sorties de socket asynchrones.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-105">The main feature of these enhancements is the avoidance of the repeated allocation and synchronization of objects during high-volume asynchronous socket I/O.</span></span> <span data-ttu-id="f0c0c-106">Le modèle de conception Begin/End actuellement implémenté par le <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe nécessite une <xref:System.IAsyncResult?displayProperty=nameWithType> objet être alloué pour chaque opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-106">The Begin/End design pattern currently implemented by the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class requires a <xref:System.IAsyncResult?displayProperty=nameWithType> object be allocated for each asynchronous socket operation.</span></span>  
  
 <span data-ttu-id="f0c0c-107">Dans le nouveau <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> améliorations, les opérations sont décrites par réutilisable de socket asynchrone de classe <xref:System.Net.Sockets.SocketAsyncEventArgs> objets alloués et gérés par l’application.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-107">In the new <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class enhancements, asynchronous socket operations are described by reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects allocated and maintained by the application.</span></span> <span data-ttu-id="f0c0c-108">Les applications de socket à hautes performances peuvent ainsi mieux évaluer le nombre d’opérations de socket superposées à conserver.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-108">High-performance socket applications know best the amount of overlapped socket operations that must be sustained.</span></span> <span data-ttu-id="f0c0c-109">L’application peut créer autant d’objets <xref:System.Net.Sockets.SocketAsyncEventArgs> qu’elle a besoin.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-109">The application can create as many of the <xref:System.Net.Sockets.SocketAsyncEventArgs> objects that it needs.</span></span> <span data-ttu-id="f0c0c-110">Par exemple, si une application serveur doit avoir 15 socket accepter les opérations en suspens en permanence pour prendre en charge les connexions client entrantes, elle peut allouer 15 réutilisables <xref:System.Net.Sockets.SocketAsyncEventArgs> objets à cet effet.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-110">For example, if a server application needs to have 15 socket accept operations outstanding at all times to support incoming client connection rates, it can allocate 15 reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects for that purpose.</span></span>  
  
 <span data-ttu-id="f0c0c-111">Le modèle pour effectuer une opération de socket asynchrone avec cette classe comprend les étapes suivantes :</span><span class="sxs-lookup"><span data-stu-id="f0c0c-111">The pattern for performing an asynchronous socket operation with this class consists of the following steps:</span></span>  
  
1.  <span data-ttu-id="f0c0c-112">Allouer un nouvel objet de contexte <xref:System.Net.Sockets.SocketAsyncEventArgs>, ou en obtenir un gratuitement à partir d’un pool d’applications.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-112">Allocate a new <xref:System.Net.Sockets.SocketAsyncEventArgs> context object, or get a free one from an application pool.</span></span>  
  
2.  <span data-ttu-id="f0c0c-113">Définir des propriétés sur le contexte de l’objet à l’opération sur à effectuer (la méthode de rappel d’achèvement, le tampon de données, offset dans la mémoire tampon et la quantité maximale de données à transférer, par exemple).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-113">Set properties on the context object to the operation about to be performed (the completion callback method, the data buffer, the offset into the buffer, and the maximum amount of data to transfer, for example).</span></span>  
  
3.  <span data-ttu-id="f0c0c-114">Appeler la méthode de socket appropriée (xxxAsync) pour lancer l’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-114">Call the appropriate socket method (xxxAsync) to initiate the asynchronous operation.</span></span>  
  
4.  <span data-ttu-id="f0c0c-115">Si la méthode de socket asynchrone (xxxAsync) retourne la valeur true, dans le rappel, interroger les propriétés de contexte pour l’état d’achèvement.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-115">If the asynchronous socket method (xxxAsync) returns true, in the callback, query the context properties for completion status.</span></span>  
  
5.  <span data-ttu-id="f0c0c-116">Si la méthode de socket asynchrone (xxxAsync) retourne la valeur false, l’opération effectuée de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-116">If the asynchronous socket method (xxxAsync) returns false, the operation completed synchronously.</span></span> <span data-ttu-id="f0c0c-117">L’obtention des propriétés de contexte peut être nécessaire pour le résultat de l’opération.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-117">The context properties may be queried for the operation result.</span></span>  
  
6.  <span data-ttu-id="f0c0c-118">Réutiliser le contexte pour une autre opération, le replacer dans le pool ou le supprimer.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-118">Reuse the context for another operation, put it back in the pool, or discard it.</span></span>  
  
 <span data-ttu-id="f0c0c-119">La durée de vie du nouvel objet de contexte des opération de socket asynchrone est déterminée par des références par le code d’application et les références d’e/s asynchrones.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-119">The lifetime of the new asynchronous socket operation context object is determined by references by the application code and asynchronous I/O references.</span></span> <span data-ttu-id="f0c0c-120">L’application n’a pas besoin de conserver de référence à un objet de contexte de l’opération de socket asynchrone une fois qu’elle a été transmise comme paramètre à l’une des méthodes de l’opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-120">It is not necessary for the application to retain a reference to an asynchronous socket operation context object after it is submitted as a parameter to one of the asynchronous socket operation methods.</span></span> <span data-ttu-id="f0c0c-121">La référence est conservée jusqu’au retour du rappel d’achèvement.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-121">It will remain referenced until the completion callback returns.</span></span> <span data-ttu-id="f0c0c-122">Toutefois, il est avantageux pour l’application de conserver la référence au contexte afin qu’il peut être réutilisé pour une opération de socket asynchrone ultérieure.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-122">However it is advantageous for the application to retain the reference to the context so that it can be reused for a future asynchronous socket operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0c0c-123">L’exemple de code suivant implémente la logique de connexion pour le serveur de socket qui utilise le <xref:System.Net.Sockets.SocketAsyncEventArgs> classe.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-123">The following code example implements the connection logic for the socket server that uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> class.</span></span> <span data-ttu-id="f0c0c-124">Après avoir accepté une connexion, toutes les données lues à partir du client est envoyé au client.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-124">After accepting a connection, all data read from the client is sent back to the client.</span></span> <span data-ttu-id="f0c0c-125">La lecture et la récupération en retour vers le modèle de client se poursuite jusqu'à ce que le client se déconnecte.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-125">The read and echo back to the client pattern is continued until the client disconnects.</span></span> <span data-ttu-id="f0c0c-126">La classe BufferManager utilisée par cet exemple est affichée dans l’exemple de code pour le <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-126">The BufferManager class that is used by this example is displayed in the code example for the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="f0c0c-127">La classe SocketAsyncEventArgsPool utilisée dans cet exemple est affichée dans l’exemple de code pour le <xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-127">The SocketAsyncEventArgsPool class that is used in this example is displayed in the code example for the <xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IAsyncResult" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAsyncEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAsyncEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-128">Crée une instance <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-128">Creates an empty <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-129">Après l’appel de ce constructeur toutes les propriétés ont leurs valeurs par défaut :</span><span class="sxs-lookup"><span data-stu-id="f0c0c-129">After calling this constructor all properties will have their default values:</span></span>  
  
-   <span data-ttu-id="f0c0c-130">Références d’objet est null</span><span class="sxs-lookup"><span data-stu-id="f0c0c-130">Object references will be null</span></span>  
  
-   <span data-ttu-id="f0c0c-131">Propriétés qui retournent un entier retournera à zéro.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-131">Properties that return an integer will return zero.</span></span>  
  
-   <span data-ttu-id="f0c0c-132">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A> est égale à la propriété <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-132">The <xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A> property will be equal to <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span></span>  
  
-   <span data-ttu-id="f0c0c-133">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A> est égale à la propriété <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType>, qui ne spécifie aucun indicateur sera utilisé.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-133">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A> property will be equal to <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType>, which specifies no flags will be used.</span></span>  
  
-   <span data-ttu-id="f0c0c-134">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A> est égale à la propriété <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-134">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A> property will be equal to <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span></span>  
  
 <span data-ttu-id="f0c0c-135">L’appelant doit définir les propriétés appropriées avant de passer l’objet à la méthode de socket asynchrone appropriée (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-135">The caller must set the appropriate properties prior to passing the object to the appropriate asynchronous socket (xxxAsync) method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0c0c-136">L’exemple de code suivant représente une collection de réutilisable <xref:System.Net.Sockets.SocketAsyncEventArgs> objets.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-136">The following code example represents a collection of reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f0c0c-137">La plateforme n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-137">The platform is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket AcceptSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptSocket As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ AcceptSocket { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-138">Obtient ou définit le socket à utiliser ou le socket créé pour accepter une connexion avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-138">Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-139">
            <see cref="T:System.Net.Sockets.Socket" /> à utiliser ou socket créé pour accepter une connexion avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-139">The <see cref="T:System.Net.Sockets.Socket" /> to use or the socket created for accepting a connection with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-140">Cette propriété peut être utilisée pour fournir une déjà créée <xref:System.Net.Sockets.Socket> qui sera utilisé pour un socket asynchrone accepter l’opération.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-140">This property can be used to provide an already created <xref:System.Net.Sockets.Socket> that will be used for an asynchronous socket accept operation.</span></span> <span data-ttu-id="f0c0c-141">À l’achèvement de l’opération d’acceptation, il est le socket qui représente la connexion acceptée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-141">Upon completion of the accept operation, it is the socket representing the accepted connection.</span></span> <span data-ttu-id="f0c0c-142">Si ne pas fourni (défini sur null) avant d’appeler le <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> (méthode), un nouveau socket sera automatiquement créé et accessible dans le rappel d’achèvement avec cette propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-142">If not supplied (set to null) before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> method, a new socket will be created automatically and be accessible in the completion callback with this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-143">Obtient la mémoire tampon des données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-143">Gets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-144">Tableau <see cref="T:System.Byte" /> qui représente la mémoire tampon des données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-144">A <see cref="T:System.Byte" /> array that represents the data buffer to use with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-145">Cette propriété obtient la mémoire tampon de données actuellement associé à la <xref:System.Net.Sockets.SocketAsyncEventArgs> instance.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-145">This property gets the data buffer currently associated with the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance.</span></span> <span data-ttu-id="f0c0c-146">Pour définir la mémoire tampon, la <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> méthode doit être utilisée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-146">To set the buffer, the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method must be used.</span></span>  
  
 <span data-ttu-id="f0c0c-147">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, et <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-147">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="Overload:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer" />
      </Docs>
    </Member>
    <Member MemberName="BufferList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; BufferList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; BufferList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferList As IList(Of ArraySegment(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ BufferList { System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ get(); void set(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BufferList : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-148">Obtient ou définit un tableau de la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-148">Gets or sets an array of data buffers to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-149">
            <see cref="T:System.Collections.IList" /> qui représente un tableau de mémoires tampons de données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-149">An <see cref="T:System.Collections.IList" /> that represents an array of data buffers to use with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-150">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> et <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-150">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f0c0c-151">Cette propriété est utilisée pour fournir plusieurs mémoires tampons de données à envoyer ou pour fournir plusieurs mémoires tampons dans lequel stocker les données reçues pour une opération de socket asynchrone qui peuvent envoyer ou recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-151">This property is used to provide multiple buffers of data to be sent or to provide multiple buffers in which to store received data for an asynchronous socket operation that can send or receive data.</span></span> <span data-ttu-id="f0c0c-152">Plusieurs mémoires tampons à l’aide de la <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> propriété sont prises en charge par le <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> et <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-152">Multiple buffers using the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property are supported by the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f0c0c-153">Si le <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> propriété est définie sur une valeur non null, le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> propriété doit être null et est ignorée par le <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> et <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-153">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property is set to a non-null value, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property must be null and is ignored by the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f0c0c-154">Si le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> a été défini sur une valeur non null et une tentative est effectuée pour définir le <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> propriété une valeur non null, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-154">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> was set to a non-null value and an attempt is made to set the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property to a non-null value, an exception is thrown.</span></span>  
  
 <span data-ttu-id="f0c0c-155">Si le <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> propriété est définie sur une valeur non null, le <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> et <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> méthodes lèvent une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-155">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property is set to a non-null value, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> methods will throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="f0c0c-156">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> paramètre est ignoré par le <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> et <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-156">The <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> parameter is ignored by the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f0c0c-157">Des mémoires tampon ambiguës sont spécifiées sur une opération ensembliste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-157">There are ambiguous buffers specified on a set operation.</span>
          </span>
          <span data-ttu-id="f0c0c-158">Cette exception se produit si la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> a eu une valeur non NULL et une tentative a été faite pour affecter à la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> une valeur non NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-158">This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property has been set to a non-null value and an attempt was made to set the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property to a non-null value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      </Docs>
    </Member>
    <Member MemberName="BytesTransferred">
      <MemberSignature Language="C#" Value="public int BytesTransferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesTransferred" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesTransferred As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesTransferred { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesTransferred : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-159">Obtient le nombre d'octets transférés dans l'opération de socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-159">Gets the number of bytes transferred in the socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-160">
            <see cref="T:System.Int32" /> qui contient le nombre d'octets transférés dans l'opération de socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-160">An <see cref="T:System.Int32" /> that contains the number of bytes transferred in the socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-161">Cette propriété fournit le nombre d’octets transférés dans une opération de socket asynchrone qui peut recevoir ou envoyer des données.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-161">This property provides the number of bytes transferred in an asynchronous socket operation that can receive or send data.</span></span> <span data-ttu-id="f0c0c-162">Si zéro est retourné à partir d’une opération de lecture, l’extrémité distante a fermé la connexion.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-162">If zero is returned from a read operation, the remote end has closed the connection.</span></span>  
  
 <span data-ttu-id="f0c0c-163">Cette propriété est définie par toutes les opérations de socket asynchrone à l’exception de la <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-163">This property is set by all asynchronous socket operations except the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.Sockets.SocketAsyncEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler(Of SocketAsyncEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::Sockets::SocketAsyncEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-164">Événement utilisé pour terminer une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-164">The event used to complete an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-165">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> événement offre un moyen aux applications clientes de terminer une opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-165">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event provides a way for client applications to complete an asynchronous socket operation.</span></span> <span data-ttu-id="f0c0c-166">Un gestionnaire d’événements doit être attaché à l’événement au sein d’un <xref:System.Net.Sockets.SocketAsyncEventArgs> instance lorsqu’une opération de socket asynchrone est initialisée, sinon l’application pas sera en mesure de déterminer quand l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-166">An event handler should be attached to the event within a <xref:System.Net.Sockets.SocketAsyncEventArgs> instance when an asynchronous socket operation is initiated, otherwise the application will not be able to determine when the operation completes.</span></span>  
  
 <span data-ttu-id="f0c0c-167">Les délégués de rappel d’achèvement référencés par le <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> événement contient la logique de programme pour terminer le traitement de l’opération de socket asynchrone pour le client.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-167">The completion callback delegates referenced by the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event contains program logic to finish processing the asynchronous socket operation for the client.</span></span>  
  
 <span data-ttu-id="f0c0c-168">Lorsque l’événement est signalé, l’application utilise le <xref:System.Net.Sockets.SocketAsyncEventArgs> de l’objet paramètre pour obtenir l’état de l’opération de socket asynchrone terminée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-168">When the event is signaled, the application uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> object parameter to obtain the status of the completed asynchronous socket operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectByNameError">
      <MemberSignature Language="C#" Value="public Exception ConnectByNameError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConnectByNameError" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectByNameError As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConnectByNameError { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectByNameError : Exception" Usage="System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-169">Obtient l'exception dans le cas d'un échec de connexion lorsqu'un <see cref="T:System.Net.DnsEndPoint" /> a été utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-169">Gets the exception in the case of a connection failure when a <see cref="T:System.Net.DnsEndPoint" /> was used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-170">
            <see cref="T:System.Exception" /> qui indique la cause de l'erreur de connexion lorsqu'un <see cref="T:System.Net.DnsEndPoint" /> a été spécifié pour la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-170">An <see cref="T:System.Exception" /> that indicates the cause of the connection error when a <see cref="T:System.Net.DnsEndPoint" /> was specified for the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-171">En cas d’échec de connexion lorsqu’un <xref:System.Net.DnsEndPoint> a été spécifiée pour le <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> propriété, le <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> propriété contiendra l’exception qui indique la cause détaillée de l’erreur de socket.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-171">In the case of a connection failure when a <xref:System.Net.DnsEndPoint> was specified for the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> property, the <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property will contain the exception that indicates the detailed cause of the socket error.</span></span>  
  
 <span data-ttu-id="f0c0c-172">Quand un <xref:System.Net.IPEndPoint> a été spécifié pour le <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> propriété et un échec de connexion se produit, le <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> propriété sera un `null` référence.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-172">When an <xref:System.Net.IPEndPoint> was specified for the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> property and a connection failure occurs, the <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property will be a `null` reference.</span></span>  
  
 <span data-ttu-id="f0c0c-173">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> propriété est toujours définie en cas d’échec de connexion.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-173">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> property is always set in the case of a connection failure.</span></span> <span data-ttu-id="f0c0c-174">Le <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> propriété contient plus d’informations sur l’échec s’il s’agissait d’un échec de la connexion à un <xref:System.Net.DnsEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-174">The <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property contains more information about the failure if it was a failure connecting to a <xref:System.Net.DnsEndPoint>.</span></span> <span data-ttu-id="f0c0c-175">Si une application s’intéresse uniquement à l’opération de connexion s’il a réussi ou échoué, l’application doit simplement vérifier la <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-175">If an application is only interested in whether the connect operation succeeded or failed, then the application only needs to check the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />
      </Docs>
    </Member>
    <Member MemberName="ConnectSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket ConnectSocket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket ConnectSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectSocket As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ ConnectSocket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectSocket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-176">Objet <see cref="T:System.Net.Sockets.Socket" /> créé et connecté après l'exécution correcte de la méthode <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-176">The created and connected <see cref="T:System.Net.Sockets.Socket" /> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-177">Objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-177">The connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-178">Après l’achèvement réussi de la <xref:System.Net.Sockets.Socket.ConnectAsync%2A> (méthode), cette propriété contient le nouvellement créé et connecté <xref:System.Net.Sockets.Socket> objet.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-178">After successful completion of the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, this property contains the newly created and connected <xref:System.Net.Sockets.Socket> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-179">Obtient la quantité maximale de données, en octets, à envoyer ou recevoir dans une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-179">Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-180">
            <see cref="T:System.Int32" /> qui contient la quantité maximale de données, en octets, à envoyer ou recevoir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-180">An <see cref="T:System.Int32" /> that contains the maximum amount of data, in bytes, to send or receive.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-181">Cette propriété est définie en appelant le <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-181">This property is set by calling the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method.</span></span>  
  
 <span data-ttu-id="f0c0c-182">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, et <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-182">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="Overload:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectReuseSocket">
      <MemberSignature Language="C#" Value="public bool DisconnectReuseSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisconnectReuseSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property DisconnectReuseSocket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisconnectReuseSocket { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectReuseSocket : bool with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-183">Obtient ou définit une valeur qui indique si le socket peut être réutilisé après une opération de déconnexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-183">Gets or sets a value that specifies if socket can be reused after a disconnect operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-184">
            <see cref="T:System.Boolean" /> qui indique si le socket peut être réutilisé après une opération de déconnexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-184">A <see cref="T:System.Boolean" /> that specifies if socket can be reused after a disconnect operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-185">Cette propriété est utilisée pour modifier le comportement de <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-185">This property is used to alter the behavior of <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f0c0c-186">Si la valeur est true, un socket déconnecté par le <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> méthode peut être réutilisée après déconnexion dans le socket suivante acceptent ou les opérations de connexion.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-186">If true, a socket disconnected by the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method can be reused after disconnect completion in subsequent socket accept or connect operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="socketAsyncEventArgs.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-187">Libère les ressources non managées utilisées par l'instance <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> et supprime éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-187">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-188">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-188">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f0c0c-189">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-189">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f0c0c-190"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-190"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f0c0c-191">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Sockets.SocketAsyncEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-191">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.SocketAsyncEventArgs> references.</span></span> <span data-ttu-id="f0c0c-192">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-192">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0c0c-193">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-193">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f0c0c-194">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-194">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f0c0c-195">
            <para>
              <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-195">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SocketAsyncEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SocketAsyncEventArgs ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="socketAsyncEventArgs.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-196">Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-196">Frees resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-197">Le <xref:System.Net.Sockets.SocketAsyncEventArgs> classe finaliseur ferme le <xref:System.Net.Sockets.SocketAsyncEventArgs> et libérer les ressources associées à la <xref:System.Net.Sockets.SocketAsyncEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-197">The <xref:System.Net.Sockets.SocketAsyncEventArgs> class finalizer closes the <xref:System.Net.Sockets.SocketAsyncEventArgs> and free resources associated with the <xref:System.Net.Sockets.SocketAsyncEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOperation">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketAsyncOperation LastOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketAsyncOperation LastOperation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastOperation As SocketAsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketAsyncOperation LastOperation { System::Net::Sockets::SocketAsyncOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.LastOperation : System.Net.Sockets.SocketAsyncOperation" Usage="System.Net.Sockets.SocketAsyncEventArgs.LastOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketAsyncOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-198">Obtient le type d'opération de socket exécuté le plus récemment avec cet objet de contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-198">Gets the type of socket operation most recently performed with this context object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-199">Instance <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> qui indique le type d'opération de socket exécutée le plus récemment avec cet objet de contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-199">A <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> instance that indicates the type of socket operation most recently performed with this context object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-200">Cette propriété décrit l’opération de socket asynchrone terminée le plus récemment à l’aide de ce <xref:System.Net.Sockets.SocketAsyncEventArgs> objet.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-200">This property describes the asynchronous socket operation that was most recently completed using this <xref:System.Net.Sockets.SocketAsyncEventArgs> object.</span></span> <span data-ttu-id="f0c0c-201">La valeur de cette propriété sera <xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType> jusqu'à ce que le <xref:System.Net.Sockets.SocketAsyncEventArgs> instance est utilisée pour lancer une opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-201">The value of this property will be <xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType> until the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance is used to begin an asynchronous socket operation.</span></span> <span data-ttu-id="f0c0c-202">La propriété sera ensuite être définie sur le type d’opération en cours d’exécution dans les méthodes qui prennent le <xref:System.Net.Sockets.SocketAsyncEventArgs> en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-202">The property will then be set to the type of operation being performed in the methods that take the <xref:System.Net.Sockets.SocketAsyncEventArgs> as a parameter.</span></span> <span data-ttu-id="f0c0c-203">Cette propriété facilite l’utilisation d’un délégué de rappel d’exécution unique pour plusieurs types d’opérations de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-203">This property more easily facilitates using a single completion callback delegate for multiple kinds of asynchronous socket operations.</span></span>  
  
 <span data-ttu-id="f0c0c-204">Cette propriété reste valide dans une <xref:System.Net.Sockets.SocketAsyncEventArgs> instance jusqu'à ce que le <xref:System.Net.Sockets.SocketAsyncEventArgs> instance est utilisée pour une autre opération de socket asynchrone (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-204">This property remains valid in a <xref:System.Net.Sockets.SocketAsyncEventArgs> instance until the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance is used for another asynchronous socket (xxxAsync) operation.</span></span>  
  
 <span data-ttu-id="f0c0c-205">Cette propriété est définie par toutes les méthodes de socket asynchrone (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-205">This property is set by all asynchronous socket (xxxAsync) methods.</span></span>  
  
 <span data-ttu-id="f0c0c-206">Appel d’une méthode de socket asynchrone (xxxAsync) sur la <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe définit cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-206">Calling an asynchronous socket method (xxxAsync) on the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class sets this property value.</span></span> <span data-ttu-id="f0c0c-207">Cette propriété est conçue pour une utilisation avec la routine d’exécution SocketAsyncCallback implémentée par l’application.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-207">This property is intended for use with the SocketAsyncCallback completion routine implemented by the application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketAsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="MemoryBuffer">
      <MemberSignature Language="C#" Value="public Memory&lt;byte&gt; MemoryBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Memory`1&lt;unsigned int8&gt; MemoryBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryBuffer As Memory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Memory&lt;System::Byte&gt; MemoryBuffer { Memory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.MemoryBuffer : Memory&lt;byte&gt;" Usage="System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-208">Obtient l'offset, en octets, dans la mémoire tampon de données référencée par la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-208">Gets the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-209">
            <see cref="T:System.Int32" /> qui contient l'offset, en octets, dans la mémoire tampon de données référencée par la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-209">An <see cref="T:System.Int32" /> that contains the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-210">Cette propriété décrit l’offset d’octet initial de données dans le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-210">This property describes the starting byte offset of data in the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span> <span data-ttu-id="f0c0c-211">Cette valeur est définie en appelant le <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-211">This value is set by calling the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method.</span></span>  
  
 <span data-ttu-id="f0c0c-212">Cette propriété ne s’applique pas à la <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-212">This property does not apply to the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property.</span></span>  
  
 <span data-ttu-id="f0c0c-213">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, et <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-213">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      </Docs>
    </Member>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnCompleted (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCompleted(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCompleted (e As SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCompleted(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit&#xA;override this.OnCompleted : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit" Usage="socketAsyncEventArgs.OnCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f0c0c-214">Événement qui est signalé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-214">The event that is signaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0c0c-215">Représente une méthode qui est appelée lorsqu'une opération asynchrone se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-215">Represents a method that is called when an asynchronous operation completes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-216">Cette méthode n’est pas pouvant être appelée par le code utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-216">This method is not callable by user code.</span></span> <span data-ttu-id="f0c0c-217">Cette méthode est appelée par les mécanismes internes de le <xref:System.Net.Sockets.SocketAsyncEventArgs> objet lors de l’opération en cours est terminée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-217">This method gets called by the internals of the <xref:System.Net.Sockets.SocketAsyncEventArgs> object when the current operation is complete.</span></span> <span data-ttu-id="f0c0c-218">Cette méthode est utilisée avec toutes les méthodes de socket asynchrone (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-218">This method is used with all asynchronous socket (xxxAsync) methods.</span></span>  
  
 <span data-ttu-id="f0c0c-219">Une application qui crée une classe qui hérite de <xref:System.Net.Sockets.SocketAsyncEventArgs> peuvent substituer cette méthode pour raccorder à cette notification d’achèvement et nettoyer toutes les ressources qu’elle a allouée pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-219">An application that creates a class inheriting from <xref:System.Net.Sockets.SocketAsyncEventArgs> can override this method to hook into this completion notification and clean up any resources that it allocated for the operation.</span></span> <span data-ttu-id="f0c0c-220">L’implémentation par défaut déclenche simplement le <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> événement.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-220">The default implementation just raises the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event.</span></span>  
  
 <span data-ttu-id="f0c0c-221">Cette méthode est utilisée pour raccorder un gestionnaire d’événements à utiliser en tant que le rappel d’achèvement d’une opération de socket asynchrone ultérieure.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-221">This method is used to hook up an event handler to be used as the completion callback for a subsequent asynchronous socket operation.</span></span> <span data-ttu-id="f0c0c-222">L’appelant doit implémenter au moins un délégué de rappel hérité de cette méthode avant de démarrer une opération de socket asynchrone à l’aide d’une des méthodes asynchrones (xxxAsync) sur la <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-222">The caller must implement at least one callback delegate inherited from this method prior to starting an asynchronous socket operation using one of the asynchronous (xxxAsync) methods on the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="f0c0c-223">L’appelant <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> méthode fournit un moyen aux applications clientes de terminer une opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-223">The caller's <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> method provides a way for client applications to complete an asynchronous socket operation.</span></span> <span data-ttu-id="f0c0c-224">Un délégué de rappel doit être implémenté lorsqu’une opération de socket asynchrone est initialisée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-224">A callback delegate must be implemented when an asynchronous socket operation is initiated.</span></span> <span data-ttu-id="f0c0c-225">Les ou les délégués de rappel achèvement héritent de la <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> méthode doit contenir la logique de programme pour terminer le traitement de l’opération de socket asynchrone pour le client.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-225">The completion callback delegate(s) inherited from the <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> method must contain program logic to finish processing the asynchronous socket operation for the client.</span></span>  
  
 <span data-ttu-id="f0c0c-226">Lorsqu’une opération asynchrone est signalée, l’application utilise le <xref:System.Net.Sockets.SocketAsyncEventArgs> de l’objet paramètre pour obtenir l’état de l’opération de socket asynchrone terminée.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-226">When an asynchronous operation is signaled, the application uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> object parameter to obtain status of the completed asynchronous socket operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFromPacketInfo">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveMessageFromPacketInfo As IPPacketInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::IPPacketInformation ReceiveMessageFromPacketInfo { System::Net::Sockets::IPPacketInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFromPacketInfo : System.Net.Sockets.IPPacketInformation" Usage="System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.IPPacketInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-227">Obtient l'adresse IP et l'interface d'un paquet reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-227">Gets the IP address and interface of a received packet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-228">Instance <see cref="T:System.Net.Sockets.IPPacketInformation" /> qui contient l'adresse IP et l'interface de destination d'un paquet reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-228">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that contains the destination IP address and interface of a received packet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-229">Cette propriété fournit des informations sur un paquet reçu à l’aide de la <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-229">This property provides information about a packet received using the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f0c0c-230">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-230">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="T:System.Net.Sockets.IPPacketInformation" />
        <altmember cref="P:System.Net.Sockets.IPPacketInformation.Address" />
        <altmember cref="P:System.Net.Sockets.IPPacketInformation.Interface" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint RemoteEndPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoteEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ RemoteEndPoint { System::Net::EndPoint ^ get(); void set(System::Net::EndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.EndPoint with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-231">Obtient ou définit le point de terminaison IP distant d'une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-231">Gets or sets the remote IP endpoint for an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-232">
            <see cref="T:System.Net.EndPoint" /> qui représente le point de terminaison IP distant d'une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-232">An <see cref="T:System.Net.EndPoint" /> that represents the remote IP endpoint for an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-233">Cette propriété spécifie le point de terminaison distant.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-233">This property specifies the remote endpoint.</span></span> <span data-ttu-id="f0c0c-234">Cette propriété peut spécifier le point de terminaison distant auquel se connecter à l’aide de la <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-234">This property can specify the remote endpoint to which to connect using the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f0c0c-235">Cette propriété peut spécifier le point de terminaison distant auquel envoyer des données à l’aide de <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-235">This property can specify the remote endpoint to which to send data using <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f0c0c-236">Cette propriété peut spécifier le point de terminaison distant à partir duquel les données ont été reçues à l’aide de la <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType> ou <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-236">This property can specify the remote endpoint from which data was received using the <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f0c0c-237">Ce point de terminaison distant spécifié par cette propriété peut inclure une adresse IPv4 ou IPv6.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-237">This remote endpoint specified by this property can include an IPv4 or IPv6 address.</span></span>  
  
 <span data-ttu-id="f0c0c-238">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, ou <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-238">This property is used with the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsElements">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SendPacketsElement[] SendPacketsElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.SendPacketsElement[] SendPacketsElements" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsElements As SendPacketsElement()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ SendPacketsElements { cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ get(); void set(cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsElements : System.Net.Sockets.SendPacketsElement[] with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SendPacketsElement[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-239">Obtient ou définit un tableau de mémoires tampons à envoyer pour une opération asynchrone utilisée par la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-239">Gets or sets an array of buffers to be sent for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-240">Tableau des objets <see cref="T:System.Net.Sockets.SendPacketsElement" /> qui représentent un tableau de mémoires tampons à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-240">An array of <see cref="T:System.Net.Sockets.SendPacketsElement" /> objects that represent an array of buffers to be sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-241">Le tableau de mémoires tampons peut représenter un ou plusieurs fichiers en mémoire ou un jeu de mémoires tampons de données.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-241">The array of buffers can represent a file or files in memory or a set of memory data buffers.</span></span> <span data-ttu-id="f0c0c-242">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-242">This property is used with the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.SendPacketsElement" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsFlags">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TransmitFileOptions SendPacketsFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.TransmitFileOptions SendPacketsFlags" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsFlags As TransmitFileOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::TransmitFileOptions SendPacketsFlags { System::Net::Sockets::TransmitFileOptions get(); void set(System::Net::Sockets::TransmitFileOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsFlags : System.Net.Sockets.TransmitFileOptions with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-243">Obtient ou définit une combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.TransmitFileOptions" /> pour une opération asynchrone utilisée par la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-243">Gets or sets a bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-244">
            <see cref="T:System.Net.Sockets.TransmitFileOptions" /> qui contient une combinaison d'opérations de bits des valeurs utilisées avec une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-244">A <see cref="T:System.Net.Sockets.TransmitFileOptions" /> that contains a bitwise combination of values that are used with an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-245">Cette propriété spécifie le <xref:System.Net.Sockets.TransmitFileOptions> qui sont utilisés par le <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-245">This property specifies the <xref:System.Net.Sockets.TransmitFileOptions> that are used by the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.TransmitFileOptions" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsSendSize">
      <MemberSignature Language="C#" Value="public int SendPacketsSendSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendPacketsSendSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsSendSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendPacketsSendSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsSendSize : int with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("unused property")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-246">Obtient ou définit la taille, en octets, du bloc de données utilisé dans l'opération d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-246">Gets or sets the size, in bytes, of the data block used in the send operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-247">
            <see cref="T:System.Int32" /> qui contient la taille, en octets, du bloc de données utilisé dans l'opération d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-247">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the data block used in the send operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-248">Définissez cette propriété sur zéro pour laisser la couche de sockets sélectionner une taille d’envoi par défaut.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-248">Set this property to zero to let the sockets layer select a default send size.</span></span> <span data-ttu-id="f0c0c-249">Définissez cette propriété à 0xFFFFFFFF permet à l’appelant de contrôler la taille et le contenu de chaque demande d’envoi, obtenue à l’aide de la <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-249">Setting this property to 0xFFFFFFFF enables the caller to control the size and content of each send request, achieved by using the <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f0c0c-250">Cette fonctionnalité est utile pour les protocoles de message qui limitent la taille des demandes d’envoi spécifique.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-250">This capability is useful for message protocols that place limitations on the size of individual send requests.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBuffer">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-251">Initialise la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-251">Initializes the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-252">Cette méthode définit le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> propriété sur null et la <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> et <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> propriétés à zéro.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-252">This method sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property to null and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> properties to zero.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (Memory&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(valuetype System.Memory`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (buffer As Memory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(Memory&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : Memory&lt;byte&gt; -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : int * int -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer (offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="f0c0c-253">Offset, en octets, dans la mémoire tampon de données où l'opération démarre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-253">The offset, in bytes, in the data buffer where the operation starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f0c0c-254">Quantité maximale de données, en octets, à envoyer ou à recevoir dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-254">The maximum amount of data, in bytes, to send or receive in the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0c0c-255">Définit la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-255">Sets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-256">Le `offset` et `count` paramètres ne peuvent pas être des nombres négatifs.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-256">The `offset` and `count` parameters can't be negative numbers.</span></span> <span data-ttu-id="f0c0c-257">La combinaison de la `offset` et `count` paramètres doivent être dans les limites du tableau de mémoire tampon dans le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-257">The combination of the `offset` and `count` parameters must be in bounds of the buffer array in the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span>  
  
 <span data-ttu-id="f0c0c-258">Cette méthode définit le <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> propriété le `count` paramètre et le <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> propriété le `offset` paramètre.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-258">This method sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> property to the `count` parameter and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> property to the `offset` parameter.</span></span> <span data-ttu-id="f0c0c-259">Si le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> propriété est null, cette méthode ignore la `offset` et `count` paramètres et les jeux les <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> et <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> propriétés sur 0.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-259">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property is null, this method ignores the `offset` and `count` parameters and sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> properties to 0.</span></span>  
  
 <span data-ttu-id="f0c0c-260">Cette méthode ne modifie pas le <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-260">This method does not change the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f0c0c-261">Un argument est hors limites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-261">An argument was out of range.</span>
          </span>
          <span data-ttu-id="f0c0c-262">Cette exception se produit si le paramètre <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-262">This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
          <span data-ttu-id="f0c0c-263">Cette exception se produit également si le paramètre <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> moins le paramètre <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-263">This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : byte[] * int * int -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f0c0c-264">Mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-264">The data buffer to use with an asynchronous socket method.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="f0c0c-265">Offset, en octets, dans la mémoire tampon de données où l'opération démarre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-265">The offset, in bytes, in the data buffer where the operation starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f0c0c-266">Quantité maximale de données, en octets, à envoyer ou à recevoir dans la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-266">The maximum amount of data, in bytes, to send or receive in the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0c0c-267">Définit la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-267">Sets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-268">Le `offset` et `count` paramètres ne peuvent pas être des nombres négatifs.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-268">The `offset` and `count` parameters can't be negative numbers.</span></span> <span data-ttu-id="f0c0c-269">La combinaison de la `offset` et `count` paramètres doivent être dans les limites du tableau de données dans le `buffer` paramètre.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-269">The combination of the `offset` and `count` parameters must be in bounds of the data array in the `buffer` parameter.</span></span>  
  
 <span data-ttu-id="f0c0c-270">Cette méthode définit le [SetBuffer (méthode) (octet\<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A > propriété le `buffer` paramètre, le [SetBuffer (méthode) (octet\<xref : System.Net.Sockets.SocketAsyncEventArgs.Count%2A > propriété le `count` paramètre et la [SetBuffer (méthode) (octet\<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A > propriété le `offset` paramètre.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-270">This method sets the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property to the `buffer` parameter, the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> property to the `count` parameter, and the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> property to the `offset` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0c0c-271">L’exemple de code suivant crée une grande mémoire tampon unique qui peut être divisée et assigné à [SetBuffer (méthode) (octet\<xref:System.Net.Sockets.SocketAsyncEventArgs > objets pour une utilisation avec chaque opération e/s de socket.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-271">The following code example creates a single large buffer which can be divided up and assigned to [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs> objects for use with each socket I/O operation.</span></span> <span data-ttu-id="f0c0c-272">Cela permet de mémoires tampons d’être facilement réutilisées et évite une fragmentation de mémoire de tas.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-272">This enables buffers to be easily reused and guards against fragmenting heap memory.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f0c0c-273">Des mémoires tampons ambiguës sont spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-273">There are ambiguous buffers specified.</span>
          </span>
          <span data-ttu-id="f0c0c-274">Cette exception se produit si la valeur des propriétés <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-274">This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f0c0c-275">Un argument est hors limites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-275">An argument was out of range.</span>
          </span>
          <span data-ttu-id="f0c0c-276">Cette exception se produit si le paramètre <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-276">This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
          <span data-ttu-id="f0c0c-277">Cette exception se produit également si le paramètre <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> moins le paramètre <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-277">This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </Member>
    <Member MemberName="SocketClientAccessPolicyProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketClientAccessPolicyProtocol As SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { System::Net::Sockets::SocketClientAccessPolicyProtocol get(); void set(System::Net::Sockets::SocketClientAccessPolicyProtocol value); };" />
      <MemberSignature Language="F#" Value="member this.SocketClientAccessPolicyProtocol : System.Net.Sockets.SocketClientAccessPolicyProtocol with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketClientAccessPolicyProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-278">Obtient ou définit le protocole à utiliser pour télécharger le fichier de stratégie d’accès client du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-278">Gets or sets the protocol to use to download the socket client access policy file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-279">Retourne <see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-279">Returns <see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" />.</span>
          </span>
          <span data-ttu-id="f0c0c-280">Protocole à utiliser pour télécharger le fichier de stratégie d’accès client du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-280">The protocol to use to download the socket client access policy file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-281">Le <xref:System.Net.Sockets.SocketClientAccessPolicyProtocol> spécifie la méthode pour télécharger un fichier de stratégie d’accès client.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-281">The <xref:System.Net.Sockets.SocketClientAccessPolicyProtocol> specifies the method to download a client access policy file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketError">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketError SocketError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketError SocketError" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketError As SocketError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketError SocketError { System::Net::Sockets::SocketError get(); void set(System::Net::Sockets::SocketError value); };" />
      <MemberSignature Language="F#" Value="member this.SocketError : System.Net.Sockets.SocketError with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-282">Obtient ou définit le résultat de l'opération de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-282">Gets or sets the result of the asynchronous socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-283">
            <see cref="T:System.Net.Sockets.SocketError" /> qui représente le résultat final de l'opération de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-283">A <see cref="T:System.Net.Sockets.SocketError" /> that represents the result of the asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-284">Cette propriété fournit l’état d’achèvement d’une opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-284">This property provides the completion status of an asynchronous socket operation.</span></span> <span data-ttu-id="f0c0c-285">La valeur <xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType> indique l’exécution réussie d’une opération.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-285">A value of <xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType> indicates successful completion of an operation.</span></span> <span data-ttu-id="f0c0c-286">Cette propriété est principalement utilisée dans la routine de gestionnaire d’événements d’une application.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-286">This property is primarily used in an application’s event handler routine.</span></span>  
  
 <span data-ttu-id="f0c0c-287">Cette propriété est utilisée avec toutes les méthodes de socket asynchrone (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-287">This property is used with all of the asynchronous socket (xxxAsync) methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketError" />
      </Docs>
    </Member>
    <Member MemberName="SocketFlags">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketFlags SocketFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketFlags SocketFlags" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketFlags As SocketFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketFlags SocketFlags { System::Net::Sockets::SocketFlags get(); void set(System::Net::Sockets::SocketFlags value); };" />
      <MemberSignature Language="F#" Value="member this.SocketFlags : System.Net.Sockets.SocketFlags with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-288">Obtient le résultat d'une opération de socket asynchrone ou définit le comportement d'une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-288">Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-289">
            <see cref="T:System.Net.Sockets.SocketFlags" /> qui représente le résultat de l'opération de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-289">A <see cref="T:System.Net.Sockets.SocketFlags" /> that represents the results of an asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-290">La propriété spécifie la combinaison au niveau du bit de le <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType> à utiliser pour une opération de socket asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-290">The property specifies the bitwise combination of the <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType> to be used for an asynchronous socket operation.</span></span>  
  
 <span data-ttu-id="f0c0c-291">Cette propriété est utilisée avec la <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, et <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-291">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public object UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserToken" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserToken { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserToken : obj with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0c0c-292">Obtient ou définit un objet utilisateur ou application associé à cette opération de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-292">Gets or sets a user or application object associated with this asynchronous socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0c0c-293">Objet qui représente l'objet utilisateur ou application associé à cette opération de socket asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0c0c-293">An object that represents the user or application object associated with this asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0c0c-294">Cette propriété peut être utilisée par une application pour associer un objet d’état application avec le <xref:System.Net.Sockets.SocketAsyncEventArgs> objet.</span><span class="sxs-lookup"><span data-stu-id="f0c0c-294">This property can be used by an application to associate an application state object with the <xref:System.Net.Sockets.SocketAsyncEventArgs> object.</span></span> <span data-ttu-id="f0c0c-295">Principalement, cette propriété est un moyen pour une application à passer l’état au gestionnaire d’événements de l’application (par exemple, la méthode d’achèvement d’opération asynchrone).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-295">Primarily, this property is a way for an application to pass state to the application’s event handler (for example, the asynchronous operation completion method).</span></span>  
  
 <span data-ttu-id="f0c0c-296">Cette propriété est utilisée avec toutes les méthodes de socket asynchrone (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="f0c0c-296">This property is used with all of the asynchronous socket (xxxAsync) methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
  </Members>
</Type>