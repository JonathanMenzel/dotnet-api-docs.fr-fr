<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6637514a0d67fe6299f5e3d0a20f346399311c43" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e7516-101">Fournit les services de réseau UDP (User Datagram Protocol).</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7516-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-102">La <xref:System.Net.Sockets.UdpClient> classe fournit des méthodes simples pour envoyer et recevoir des datagrammes UDP sans connexion en mode blocage synchrone.</span><span class="sxs-lookup"><span data-stu-id="e7516-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="e7516-103">UDP étant un protocole de transport sans connexion, vous n’avez pas besoin établir une connexion d’hôte distant avant d’envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="e7516-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="e7516-104">Vous faire, toutefois, ont la possibilité de l’établissement d’un hôte distant par défaut dans un des deux manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="e7516-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="e7516-105">Créez une instance de la <xref:System.Net.Sockets.UdpClient> classe en utilisant le nom d’hôte distant et le numéro de port en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="e7516-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="e7516-106">Créez une instance de la <xref:System.Net.Sockets.UdpClient> de classe, puis appelez le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="e7516-107">Vous pouvez utiliser une des méthodes d’envoi fournies dans le <xref:System.Net.Sockets.UdpClient> pour envoyer des données à un périphérique distant.</span><span class="sxs-lookup"><span data-stu-id="e7516-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="e7516-108">Utilisez la <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode pour recevoir des données d’hôtes distants.</span><span class="sxs-lookup"><span data-stu-id="e7516-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-109">N’appelez pas <xref:System.Net.Sockets.UdpClient.Send%2A> à l’aide d’un nom d’hôte ou <xref:System.Net.IPEndPoint> si vous avez déjà spécifié un hôte distant par défaut.</span><span class="sxs-lookup"><span data-stu-id="e7516-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="e7516-110">Si vous le faites, <xref:System.Net.Sockets.UdpClient> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="e7516-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="e7516-111"><xref:System.Net.Sockets.UdpClient> méthodes vous permettent également d’envoyer et recevoir des datagrammes multicast.</span><span class="sxs-lookup"><span data-stu-id="e7516-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="e7516-112">Utilisez le <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> méthode pour s’abonner un <xref:System.Net.Sockets.UdpClient> à un groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="e7516-113">Utilisez le <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode pour annuler l’abonnement une <xref:System.Net.Sockets.UdpClient> à partir d’un groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-114">L’exemple suivant établit une <xref:System.Net.Sockets.UdpClient> connexion à l’aide du nom d’hôte www.contoso.com sur le port 11000.</span><span class="sxs-lookup"><span data-stu-id="e7516-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="e7516-115">Un petit message de chaîne est envoyé à deux ordinateurs hôtes distants séparés.</span><span class="sxs-lookup"><span data-stu-id="e7516-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="e7516-116">Le <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode bloque l’exécution jusqu'à ce qu’un message est reçu.</span><span class="sxs-lookup"><span data-stu-id="e7516-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="e7516-117">À l’aide de la <xref:System.Net.IPEndPoint> passé à <xref:System.Net.Sockets.UdpClient.Receive%2A>, l’identité de l’hôte qui répond est révélée.</span><span class="sxs-lookup"><span data-stu-id="e7516-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="e7516-118">Pour établir une connexion sortante ou accepter une demande entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7516-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-119">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7516-120">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-121">Ce constructeur crée un nouveau <xref:System.Net.Sockets.UdpClient> et permet au fournisseur de service sous-jacent affecter le plus approprié local IPv4 adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="e7516-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="e7516-122">Si ce constructeur est utilisé, le <xref:System.Net.Sockets.UdpClient> instance est définie avec une famille d’adresses IPv4 qui ne peut pas être modifié ou remplacé par un appel de méthode de connexion avec une cible IPv6.</span><span class="sxs-lookup"><span data-stu-id="e7516-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-123">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-124">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-124">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-125">Ce constructeur n’est pas approprié pour rejoindre un groupe de multidiffusion, car il n’effectue pas de liaison du socket.</span><span class="sxs-lookup"><span data-stu-id="e7516-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="e7516-126">En outre, il fonctionne uniquement avec les types d’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="e7516-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-127">L’exemple suivant montre comment utiliser le constructeur par défaut pour créer une instance de la <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-128">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-128">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="e7516-129">Numéro de port local à partir duquel vous souhaitez communiquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-129">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-130">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et la lie au numéro de port local fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-131">Ce constructeur crée un sous-jacent <xref:System.Net.Sockets.Socket> et le lie au numéro de port à partir de laquelle vous souhaitez communiquer.</span><span class="sxs-lookup"><span data-stu-id="e7516-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="e7516-132">Utilisez ce constructeur si vous vous intéressez uniquement lors de la définition du numéro de port local.</span><span class="sxs-lookup"><span data-stu-id="e7516-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="e7516-133">Le fournisseur de services sous-jacent assigne l’adresse IP locale.</span><span class="sxs-lookup"><span data-stu-id="e7516-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="e7516-134">Si vous passez 0 au constructeur, le fournisseur de service sous-jacent affecte un numéro de port.</span><span class="sxs-lookup"><span data-stu-id="e7516-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="e7516-135">Si ce constructeur est utilisé, le <xref:System.Net.Sockets.UdpClient> instance est définie avec une famille d’adresses IPv4 qui ne peut pas être modifié ou remplacé par un appel de méthode de connexion avec une cible IPv6.</span><span class="sxs-lookup"><span data-stu-id="e7516-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-136">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-137">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-137">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-138">Ce constructeur ne fonctionne qu’avec les types d’adresse IPv4.</span><span class="sxs-lookup"><span data-stu-id="e7516-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-139">L’exemple suivant montre à l’aide d’un numéro de port local pour créer une instance de la <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7516-140">Le paramètre <paramref name="port" /> est supérieur au champ <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou inférieur au champ <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-141">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-141">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="e7516-142">
            <see cref="T:System.Net.IPEndPoint" /> qui représente le point de terminaison local auquel lier la connexion UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-143">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et la lie au point de terminaison local spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-144">Ce constructeur crée un nouveau <xref:System.Net.Sockets.UdpClient> et le lie à la <xref:System.Net.IPEndPoint> spécifié par le `localEP` paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="e7516-145">Avant d’appeler ce constructeur, vous devez créer un <xref:System.Net.IPEndPoint> à l’aide de l’adresse IP et port numéro à partir de laquelle vous souhaitez envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="e7516-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="e7516-146">Vous n’avez pas besoin de spécifier un numéro d’adresse et le port IP local pour envoyer et recevoir des données.</span><span class="sxs-lookup"><span data-stu-id="e7516-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="e7516-147">Si vous ne le faites pas, le fournisseur de service sous-jacent affecte le plus approprié local IP adresse et numéro de port.</span><span class="sxs-lookup"><span data-stu-id="e7516-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="e7516-148">Si ce constructeur est utilisé, le <xref:System.Net.Sockets.UdpClient> instance est définie avec la famille d’adresses spécifiée par la `localEP` paramètre qui ne peut pas être modifié ou remplacé par un appel de méthode de connexion avec une famille d’adresses différentes.</span><span class="sxs-lookup"><span data-stu-id="e7516-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-149">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-150">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-150">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-151">L’exemple suivant montre comment créer une instance de la <xref:System.Net.Sockets.UdpClient> classe à l’aide d’un point de terminaison local.</span><span class="sxs-lookup"><span data-stu-id="e7516-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-152">
            <paramref name="localEP" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-152">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-153">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="e7516-154">Une des valeurs <see cref="T:System.Net.Sockets.AddressFamily" /> qui spécifie le schéma d'adressage du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-155">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-156">Le `family` paramètre détermine si l’écouteur utilise une adresse IP version 4 (IPv4) ou une IP version 6 (IPv6) adresse.</span><span class="sxs-lookup"><span data-stu-id="e7516-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="e7516-157">Pour utiliser une adresse IPv4, passez la <xref:System.Net.Sockets.AddressFamily.InterNetwork> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="e7516-158">Pour utiliser une adresse IPv6, passez la <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="e7516-159">Passez une autre valeur entraînera la méthode lever une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="e7516-160">Si ce constructeur est utilisé, le <xref:System.Net.Sockets.UdpClient> instance est définie avec la famille d’adresses spécifiée par la `family` paramètre qui ne peut pas être modifié ou remplacé par un appel de méthode de connexion avec une famille d’adresses différentes.</span><span class="sxs-lookup"><span data-stu-id="e7516-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-161">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-162">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-162">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-163">Le <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> n’est pas approprié pour rejoindre un groupe de multidiffusion, car il n’effectue pas de liaison du socket.</span><span class="sxs-lookup"><span data-stu-id="e7516-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-164">
            <paramref name="family" /> n'est pas <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, ni <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-164">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-165">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-165">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="e7516-166">Port sur lequel écouter les tentatives de connexion entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-166">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="e7516-167">Une des valeurs <see cref="T:System.Net.Sockets.AddressFamily" /> qui spécifie le schéma d'adressage du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-168">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et la lie au numéro de port local fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-169">Ce constructeur crée un sous-jacent <xref:System.Net.Sockets.Socket> et le lie au numéro de port à partir de laquelle vous souhaitez communiquer.</span><span class="sxs-lookup"><span data-stu-id="e7516-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="e7516-170">Le `family` paramètre détermine si l’écouteur utilise une adresse IP version 4 (IPv4) ou une IP version 6 (IPv6) adresse.</span><span class="sxs-lookup"><span data-stu-id="e7516-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="e7516-171">Pour utiliser une adresse IPv4, passez la <xref:System.Net.Sockets.AddressFamily.InterNetwork> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="e7516-172">Pour utiliser une adresse IPv6, passez la <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> valeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="e7516-173">Passez une autre valeur entraînera la méthode lever une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="e7516-174">Si ce constructeur est utilisé, le <xref:System.Net.Sockets.UdpClient> instance est définie avec la famille d’adresses spécifiée par la `family` paramètre qui ne peut pas être modifié ou remplacé par un appel de méthode de connexion avec une famille d’adresses différentes.</span><span class="sxs-lookup"><span data-stu-id="e7516-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-175">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-176">Une fois que vous avez obtenu ce code, consultez la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-176">Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-177">L’exemple de code suivant montre comment créer un client UDP à utiliser dans un groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-178">
            <paramref name="family" /> n'est pas <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, ni <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-178">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7516-179">
            <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-179">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-180">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-180">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="e7516-181">Nom de l'hôte DNS distant auquel vous souhaitez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-181">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e7516-182">Numéro de port distant auquel vous souhaitez vous connecter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-182">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-183">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et établit un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-184">Ce constructeur initialise un nouveau <xref:System.Net.Sockets.UdpClient> et établit un hôte distant à l’aide de la `hostname` et `port` paramètres.</span><span class="sxs-lookup"><span data-stu-id="e7516-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="e7516-185">L’établissement d’un hôte distant par défaut est facultative.</span><span class="sxs-lookup"><span data-stu-id="e7516-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e7516-186">Si vous utilisez ce constructeur, vous n’êtes pas obligé de spécifier un hôte distant dans chaque appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-187">Spécification d’un hôte distant par défaut vous limite à l’hôte uniquement.</span><span class="sxs-lookup"><span data-stu-id="e7516-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e7516-188">Vous pouvez modifier l’hôte distant par défaut à tout moment en appelant le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-189">Si vous souhaitez spécifier un hôte distant dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode), n’utilisez pas ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-190">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-191">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-191">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-192">L’exemple suivant montre comment créer une instance de la <xref:System.Net.Sockets.UdpClient> classe à l’aide d’un nom d’hôte et le numéro de port.</span><span class="sxs-lookup"><span data-stu-id="e7516-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-193">
            <paramref name="hostname" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-193">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7516-194">
            <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-194">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-195">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-195">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-196">Obtient ou définit une valeur indiquant si un hôte distant par défaut a été établi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-196">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-197">
            <see langword="true" /> si une connexion est active ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-197">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-198">Les classes dérivées de <xref:System.Net.Sockets.UdpClient> pouvez utiliser cette propriété pour déterminer si un hôte distant par défaut a été établi.</span><span class="sxs-lookup"><span data-stu-id="e7516-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="e7516-199">Vous pouvez établir un hôte distant par défaut à l’aide du constructeur approprié ou en appelant le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-200">Si vous établissez un hôte distant par défaut, vous ne pouvez pas spécifier un hôte distant dans votre appel à <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7516-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="e7516-201">Valeur booléenne qui spécifie s'il faut activer ou désactiver la traversée du NAT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-202">Active ou désactive la traversée du traducteur d'accès réseau (NAT) sur une instance de <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-203">Le <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> méthode est utilisée pour activer ou désactiver parcours NAT pour une <xref:System.Net.Sockets.UdpClient> instance.</span><span class="sxs-lookup"><span data-stu-id="e7516-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="e7516-204">Parcours NAT peut être fourni à l’aide d’un tunnel ISATAP, 6to4 ou Teredo.</span><span class="sxs-lookup"><span data-stu-id="e7516-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="e7516-205">Lorsque le `allowed` paramètre est false, le <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option du socket associé a la valeur <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="e7516-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="e7516-206">Cela désactive explicitement la traversée NAT pour une <xref:System.Net.Sockets.UdpClient> instance.</span><span class="sxs-lookup"><span data-stu-id="e7516-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="e7516-207">Lorsque le `allowed` paramètre est true, le <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option du socket associé a la valeur <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="e7516-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="e7516-208">Cela peut permettre de parcours NAT pour une <xref:System.Net.Sockets.UdpClient> selon les règles de pare-feu en place sur le système.</span><span class="sxs-lookup"><span data-stu-id="e7516-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="e7516-209">Une adresse Teredo est une adresse IPv6 avec le préfixe de 2001 :: / 32.</span><span class="sxs-lookup"><span data-stu-id="e7516-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="e7516-210">Adresses Teredo peuvent être retournées par la résolution de nom DNS normale ou énumérées comme une adresse IPv6 affectée à une interface locale.</span><span class="sxs-lookup"><span data-stu-id="e7516-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-211">Obtient le volume de données reçues du réseau et accessibles en lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-211">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-212">Nombre d'octets de données reçues du réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-212">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-213">Le <xref:System.Net.Sockets.UdpClient.Available%2A> propriété est utilisée pour déterminer la quantité de données en file d’attente dans le tampon réseau pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="e7516-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="e7516-214">Si les données sont disponibles, appelez <xref:System.Net.Sockets.NetworkStream.Read%2A> pour obtenir les données.</span><span class="sxs-lookup"><span data-stu-id="e7516-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="e7516-215">Si aucune donnée n’est disponible, le <xref:System.Net.Sockets.UdpClient.Available%2A> propriété retourne 0.</span><span class="sxs-lookup"><span data-stu-id="e7516-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="e7516-216">Si l’hôte distant arrête ou ferme la connexion, le <xref:System.Net.Sockets.UdpClient.Available%2A> propriété lève une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-217">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)pour une description détaillée de la erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-218">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.UdpClient.Available%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-219">Une erreur s'est produite lors de la tentative d'accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-219">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-220">
            <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="e7516-221">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e7516-222">Objet défini par l'utilisateur qui comporte des informations sur l'opération de réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-222">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="e7516-223">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-224">Reçoit un datagramme d'un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-224">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-225">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la réception asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-226">Asynchrone <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.UdpClient.EndReceive%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="e7516-227">En règle générale, la méthode est appelée par le `requestCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7516-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e7516-228">Cette méthode ne bloque pas jusqu'à ce que l’opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="e7516-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="e7516-229">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez le <xref:System.Net.Sockets.UdpClient.Receive%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="e7516-230">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7516-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-231">Le code suivant utilise des exemple <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> réception asynchrone d’une réponse du serveur.</span><span class="sxs-lookup"><span data-stu-id="e7516-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-232">Envoie un datagramme à un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-232">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e7516-233">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-234">Le nombre d’octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-234">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="e7516-235">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e7516-236">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-236">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="e7516-237">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-238">Envoie un datagramme à un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-238">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="e7516-239">La destination a été spécifiée précédemment par un appel à <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-240">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-241">Asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.UdpClient.EndSend%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="e7516-242">En règle générale, la méthode est appelée par le `requestCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7516-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e7516-243">Cette méthode ne bloque pas jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="e7516-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="e7516-244">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.UdpClient.Send%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7516-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7516-245">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7516-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-246">Le code suivant utilise des exemple <xref:System.Net.Sockets.UdpClient.BeginSend%2A> pour envoyer une demande de serveur de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7516-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e7516-247">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-248">Le nombre d’octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-248">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="e7516-249">
            <see cref="T:System.Net.EndPoint" /> qui représente la destination des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="e7516-250">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e7516-251">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-251">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="e7516-252">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-253">Envoie un datagramme à une destination de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-253">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="e7516-254">La destination est spécifiée par un <see cref="T:System.Net.EndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-255">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-256">Asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.UdpClient.EndSend%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="e7516-257">En règle générale, la méthode est appelée par le `requestCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7516-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e7516-258">Cette méthode ne bloque pas jusqu'à ce que l’opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="e7516-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="e7516-259">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.UdpClient.Send%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7516-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7516-260">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7516-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-261">Le code suivant utilise des exemple <xref:System.Net.Sockets.UdpClient.BeginSend%2A> pour envoyer une demande de serveur de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7516-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e7516-262">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-263">Le nombre d’octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-263">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="e7516-264">Hôte de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-264">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e7516-265">Numéro du port de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-265">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="e7516-266">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e7516-267">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'envoi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-267">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="e7516-268">Cet objet est passé au délégué <c>requestCallback</c> quand l’opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-269">Envoie un datagramme à une destination de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-269">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="e7516-270">La destination est spécifiée par le nom d'hôte et le numéro de port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-270">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-271">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-272">Asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> opération doit être effectuée en appelant le <xref:System.Net.Sockets.UdpClient.EndSend%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="e7516-273">En règle générale, la méthode est appelée par le `requestCallback` déléguer.</span><span class="sxs-lookup"><span data-stu-id="e7516-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e7516-274">Cette méthode ne bloque pas jusqu'à ce que l’opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="e7516-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="e7516-275">Pour bloquer jusqu'à ce que l’opération est terminée, utilisez une de la <xref:System.Net.Sockets.UdpClient.Send%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="e7516-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e7516-276">Pour plus d’informations sur l’utilisation du modèle de programmation asynchrone, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e7516-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-277">Le code suivant utilise des exemple <xref:System.Net.Sockets.UdpClient.BeginSend%2A> pour envoyer une demande de serveur de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e7516-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-278">Obtient ou définit le <see cref="T:System.Net.Sockets.Socket" /> de réseau sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-279">
            <see cref="T:System.Net.Sockets.Socket" /> de réseau sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-280"><xref:System.Net.Sockets.UdpClient> Crée un <xref:System.Net.Sockets.Socket> utilisé pour envoyer et recevoir des données sur un réseau.</span><span class="sxs-lookup"><span data-stu-id="e7516-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="e7516-281">Les classes dérivées de <xref:System.Net.Sockets.UdpClient> cette propriété permet d’obtenir ou définir ce <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e7516-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="e7516-282">Utilisez sous-jacent <xref:System.Net.Sockets.Socket> retourné à partir de <xref:System.Net.Sockets.UdpClient.Client%2A> si vous avez besoin d’accéder aux au-delà de celles qui <xref:System.Net.Sockets.UdpClient> fournit.</span><span class="sxs-lookup"><span data-stu-id="e7516-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="e7516-283">Vous pouvez également utiliser <xref:System.Net.Sockets.UdpClient.Client%2A> définir sous-jacent <xref:System.Net.Sockets.Socket> à un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e7516-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="e7516-284">Cela est utile si vous souhaitez tirer parti de la simplicité de <xref:System.Net.Sockets.UdpClient> à l’aide d’un fichier préexistant <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e7516-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-285">L’exemple suivant illustre l’utilisation de la <xref:System.Net.Sockets.UdpClient.Client%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="e7516-286">Dans cet exemple, la diffusion est activée pour sous-jacent <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e7516-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7516-287">Ferme la connexion UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-287">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-288">Le <xref:System.Net.Sockets.UdpClient.Close%2A> désactive sous-jacent <xref:System.Net.Sockets.Socket> et libère toutes les ressources managées et non managées associées le <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="e7516-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-289">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-290">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-290">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-291">L’exemple suivant illustre la fermeture un <xref:System.Net.Sockets.UdpClient> en appelant le <xref:System.Net.Sockets.UdpClient.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-292">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-292">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-293">Établit un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-293">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="e7516-294">
            <see cref="T:System.Net.IPEndPoint" /> qui spécifie le point de terminaison du réseau auquel vous souhaitez envoyer les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-295">Établit un hôte distant par défaut en utilisant le point de terminaison du réseau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-295">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-296">Le <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode établit un hôte distant par défaut à l’aide de la valeur spécifiée dans le `endPoint` paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="e7516-297">Une fois établie, il est inutile de spécifier un hôte distant dans chaque appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="e7516-298">L’établissement d’un hôte distant par défaut est facultative.</span><span class="sxs-lookup"><span data-stu-id="e7516-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e7516-299">Spécification d’un hôte distant par défaut vous limite à l’hôte uniquement.</span><span class="sxs-lookup"><span data-stu-id="e7516-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e7516-300">Si vous souhaitez envoyer des datagrammes à un hôte distant différent, vous devez rendre un autre appel à la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode ou créer un autre <xref:System.Net.Sockets.UdpClient> sans un hôte distant par défaut.</span><span class="sxs-lookup"><span data-stu-id="e7516-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="e7516-301">Si vous avez établi un distant par défaut hôte et vous fournissez également un hôte distant dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode), <xref:System.Net.Sockets.UdpClient.Send%2A> lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-302">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-303">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-303">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-304">Si vous appelez le <xref:System.Net.Sockets.Socket.Connect%2A> (méthode), tous les datagrammes qui arrivent à partir d’une adresse autre que celle par défaut spécifiée est ignoré.</span><span class="sxs-lookup"><span data-stu-id="e7516-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="e7516-305">Vous ne pouvez pas définir une adresse de diffusion à l’aide de cette méthode, sauf si vous héritez à partir de l’hôte distant par défaut <xref:System.Net.Sockets.UdpClient>, utilisez la méthode de Client pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e7516-306">Vous pouvez toutefois, diffuser des données à la valeur par défaut adresse de diffusion, 255.255.255.255, si vous spécifiez <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-307">Si votre application requiert un plus grand contrôle sur les adresses de diffusion, vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-308">Étant donné que le protocole UDP est sans connexion, le <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="e7516-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="e7516-309">N’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode si vous souhaitez recevoir des datagrammes multicast.</span><span class="sxs-lookup"><span data-stu-id="e7516-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-310">L’exemple suivant utilise une <xref:System.Net.IPEndPoint> pour établir un hôte distant par défaut.</span><span class="sxs-lookup"><span data-stu-id="e7516-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-311">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-311">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-312">
            <paramref name="endPoint" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-312">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-313">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="e7516-314">
            <see cref="T:System.Net.IPAddress" /> de l'hôte distant auquel vous souhaitez envoyer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e7516-315">Numéro de port auquel vous souhaitez envoyer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-315">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-316">Établit un hôte distant par défaut en utilisant l'adresse IP et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-316">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-317">Le <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode établit un hôte distant par défaut à l’aide des valeurs spécifiées dans le `addr` et `port` paramètres.</span><span class="sxs-lookup"><span data-stu-id="e7516-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="e7516-318">Une fois établie, il est inutile de spécifier un hôte distant dans chaque appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="e7516-319">L’établissement d’un hôte distant par défaut est facultative.</span><span class="sxs-lookup"><span data-stu-id="e7516-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e7516-320">Spécification d’un hôte distant par défaut vous limite à l’hôte uniquement.</span><span class="sxs-lookup"><span data-stu-id="e7516-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e7516-321">Si vous souhaitez envoyer des datagrammes à un hôte distant différent, vous devez rendre un autre appel à la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode ou créer un autre <xref:System.Net.Sockets.UdpClient> sans un hôte distant par défaut.</span><span class="sxs-lookup"><span data-stu-id="e7516-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="e7516-322">Si vous avez établi un distant par défaut hôte et vous fournissez également un hôte distant dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode), <xref:System.Net.Sockets.UdpClient.Send%2A> lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-323">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-324">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-324">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-325">Si vous appelez le <xref:System.Net.Sockets.Socket.Connect%2A> (méthode), tous les datagrammes qui arrivent à partir d’une adresse autre que celle par défaut spécifiée est ignoré.</span><span class="sxs-lookup"><span data-stu-id="e7516-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="e7516-326">Vous ne pouvez pas définir une adresse de diffusion à l’aide de cette méthode, sauf si vous héritez à partir de l’hôte distant par défaut <xref:System.Net.Sockets.UdpClient>, utilisez la méthode de client pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e7516-327">Vous pouvez toutefois, diffuser des données à la valeur par défaut adresse de diffusion, 255.255.255.255, si vous spécifiez <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-328">Si votre application requiert un plus grand contrôle sur les adresses de diffusion, vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-329">Étant donné que le protocole UDP est sans connexion, le <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="e7516-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="e7516-330">N’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode si vous souhaitez recevoir des datagrammes multicast.</span><span class="sxs-lookup"><span data-stu-id="e7516-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-331">L’exemple suivant utilise une adresse IP et port numéro pour se connecter à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="e7516-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-332">
            <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-332">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-333">
            <paramref name="addr" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-333">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7516-334">
            <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-334">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-335">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="e7516-336">Nom DNS de l'hôte distant auquel vous souhaitez envoyer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-336">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e7516-337">Numéro de port de l'hôte distant auquel vous souhaitez envoyer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-337">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-338">Établit un hôte distant par défaut en utilisant le nom d'hôte et le numéro de port spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-338">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-339">Le <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode établit un hôte distant par défaut à l’aide des valeurs spécifiées dans le `port` et `hostname` paramètres.</span><span class="sxs-lookup"><span data-stu-id="e7516-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="e7516-340">Une fois établie, il est inutile de spécifier un hôte distant dans chaque appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="e7516-341">L’établissement d’un hôte distant par défaut est facultative.</span><span class="sxs-lookup"><span data-stu-id="e7516-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e7516-342">Spécification d’un hôte distant par défaut vous limite à l’hôte uniquement.</span><span class="sxs-lookup"><span data-stu-id="e7516-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e7516-343">Si vous souhaitez envoyer des datagrammes à un hôte distant différent, vous devez rendre un autre appel à la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode ou créer un autre <xref:System.Net.Sockets.UdpClient> sans un hôte distant par défaut.</span><span class="sxs-lookup"><span data-stu-id="e7516-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="e7516-344">Si vous avez établi un distant par défaut hôte et vous fournissez également un hôte distant dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode), <xref:System.Net.Sockets.UdpClient.Send%2A> lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-345">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-346">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-346">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-347">Si vous appelez le <xref:System.Net.Sockets.Socket.Connect%2A> (méthode), tous les datagrammes qui arrivent à partir d’une adresse autre que celle par défaut spécifiée est ignoré.</span><span class="sxs-lookup"><span data-stu-id="e7516-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="e7516-348">Vous ne pouvez pas définir une adresse de diffusion à l’aide de cette méthode, sauf si vous héritez à partir de l’hôte distant par défaut <xref:System.Net.Sockets.UdpClient>, utilisez la méthode de client pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e7516-349">Vous pouvez toutefois, diffuser des données à la valeur par défaut adresse de diffusion, 255.255.255.255, si vous spécifiez <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> dans votre appel à la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-350">Si votre application requiert un plus grand contrôle sur les adresses de diffusion, vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-351">Étant donné que le protocole UDP est sans connexion, le <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="e7516-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="e7516-352">N’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode si vous souhaitez recevoir des datagrammes multicast.</span><span class="sxs-lookup"><span data-stu-id="e7516-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-353">L’exemple suivant utilise le nom d’hôte et le port numéro pour vous connecter à un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="e7516-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-354">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7516-355">
            <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-355">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-356">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-356">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7516-357">Libère toutes les ressources managées et non managées utilisées par <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e7516-358">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-358">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-359">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.UdpClient" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-360">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e7516-361">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="e7516-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e7516-362"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="e7516-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e7516-363">Lorsque le `disposing` paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Net.Sockets.UdpClient> références.</span><span class="sxs-lookup"><span data-stu-id="e7516-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="e7516-364">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="e7516-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e7516-365">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7516-365">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="e7516-366">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7516-366">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="e7516-367">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7516-367">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="e7516-368">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7516-368">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-369">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.UdpClient" /> autorise la fragmentation des datagrammes IP (Internet Protocol).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-369">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-370">
            <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> autorise la fragmentation des datagrammes ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-370">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e7516-371">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-371">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-372">Les datagrammes exigent une fragmentation lorsque leur taille dépasse le Maximum unité de transfert (MTU) du support de transmission.</span><span class="sxs-lookup"><span data-stu-id="e7516-372">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="e7516-373">Les datagrammes peuvent être fragmentés par l’hôte d’envoi ou par un routeur intermédiaire.</span><span class="sxs-lookup"><span data-stu-id="e7516-373">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="e7516-374">Si un datagramme doit être fragmenté et le <xref:System.Net.Sockets.Socket.DontFragment%2A> option est définie, le datagramme est ignoré et un message d’erreur de contrôle Message ICMP (Internet Protocol) est envoyé à l’expéditeur du datagramme.</span><span class="sxs-lookup"><span data-stu-id="e7516-374">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-375">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.Socket.DontFragment%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-375">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e7516-376">Cette propriété ne peut être définie que pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-376">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-377">Quitte un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-377">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e7516-378">
            <see cref="T:System.Net.IPAddress" /> du groupe multicast à quitter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-378">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-379">Quitte un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-379">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-380">Le <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode retire le <xref:System.Net.Sockets.UdpClient> à partir du groupe de multidiffusion identifié par l’objet <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e7516-380">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e7516-381">Après avoir appelé la <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode sous-jacent <xref:System.Net.Sockets.Socket> envoie un paquet de protocole IGMP (Internet Group Management Protocol) au routeur, en supprimant le routeur du groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-381">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="e7516-382">Après un <xref:System.Net.Sockets.UdpClient> retire du groupe, il ne seront plus en mesure de recevoir les datagrammes envoyés à ce groupe.</span><span class="sxs-lookup"><span data-stu-id="e7516-382">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-383">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-383">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-384">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-384">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-385">L’exemple suivant montre comment supprimer un groupe de multidiffusion en fournissant une adresse de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-385">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-386">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-386">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-387">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-387">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-388">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-388">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-389">
            <paramref name="multicastAddr" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-389">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e7516-390">
            <see cref="T:System.Net.IPAddress" /> du groupe multicast à quitter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-390">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="e7516-391">Adresse locale du groupe multicast à quitter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-391">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-392">Quitte un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-392">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-393">Le <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode retire le <xref:System.Net.Sockets.UdpClient> à partir du groupe de multidiffusion identifié par l’objet <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e7516-393">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e7516-394">Après avoir appelé la <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode sous-jacent <xref:System.Net.Sockets.Socket> envoie un paquet de protocole IGMP (Internet Group Management Protocol) au routeur, en supprimant le routeur du groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-394">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="e7516-395">Après un <xref:System.Net.Sockets.UdpClient> retire du groupe, il ne seront plus en mesure de recevoir les datagrammes envoyés à ce groupe.</span><span class="sxs-lookup"><span data-stu-id="e7516-395">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-396">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez le <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriété pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-396">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="e7516-397">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-397">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-398">L’exemple de code suivant montre comment supprimer un groupe de multidiffusion en fournissant une adresse de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-398">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-399">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-399">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-400">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-400">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-401">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-401">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-402">
            <paramref name="multicastAddr" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-402">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-403">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.UdpClient" /> peut envoyer ou recevoir des paquets de diffusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-403">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-404">
            <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> autorise les paquets de diffusion ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-404">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e7516-405">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-405">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-406">La diffusion est limitée à un sous-réseau spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-406">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="e7516-407">Vous pouvez diffuser sur votre sous-réseau local en envoyant un paquet à l’adresse 255.255.255.255 ; ou bien, vous pouvez utiliser l’adresse de diffusion dirigée, qui est la partie du réseau d’une adresse IP (Internet Protocol) avec tous les bits définis dans la partie hôte.</span><span class="sxs-lookup"><span data-stu-id="e7516-407">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="e7516-408">Par exemple, si votre adresse IP est 192.168.1.40 (une adresse de classe C, avec la partie du réseau en tant que les trois premiers octets et la partie hôte est le dernier octet), votre adresse de diffusion dirigée est 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="e7516-408">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-409">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-409">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e7516-410">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="e7516-411">Point de terminaison distant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-411">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-412">Met fin à une réception asynchrone en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-412">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-413">En cas de réussite, un tableau d’octets qui contient les données du datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-413">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-414">Cette méthode s’interrompt jusqu'à ce que l’opération de fin.</span><span class="sxs-lookup"><span data-stu-id="e7516-414">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="e7516-415">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Sockets.UdpClient.Receive%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-415">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-416">Le code suivant utilise des exemple <xref:System.Net.Sockets.UdpClient.BeginSend%2A> pour effectuer une réception asynchrone d’une réponse du serveur.</span><span class="sxs-lookup"><span data-stu-id="e7516-416">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-417">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-417">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-418">
            <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-418">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-419">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> a été précédemment appelé pour la lecture asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-419">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-420">Une erreur s'est produite lors de la tentative d'accès au <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-420">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-421">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e7516-422">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-422">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-423">Met fin à un envoi asynchrone en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-423">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-424">En cas de réussite, nombre d'octets envoyés à <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-424">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-425">Cette méthode s’interrompt jusqu'à ce que l’opération de fin.</span><span class="sxs-lookup"><span data-stu-id="e7516-425">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="e7516-426">Pour effectuer cette opération de manière synchrone, utilisez la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-426">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-427">Le code suivant utilise des exemple <xref:System.Net.Sockets.UdpClient.BeginSend%2A> pour réaliser un envoi asynchrone d’une demande de serveur.</span><span class="sxs-lookup"><span data-stu-id="e7516-427">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-428">
            <paramref name="asyncResult" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-428">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-429">
            <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-429">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-430">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> a été précédemment appelé pour la lecture asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-430">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-431">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-431">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-432">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-432">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-433">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si l'élément <see cref="T:System.Net.Sockets.UdpClient" /> n'autorise qu'un seul client à utiliser un port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-433">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-434">
            <see langword="true" /> si l'élément <see cref="T:System.Net.Sockets.UdpClient" /> n'autorise qu'un seul client à utiliser un port spécifique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-434">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e7516-435">La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-435">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-436">Par défaut, plusieurs clients peuvent utiliser un port spécifique ; Toutefois, seul l’un des clients peut effectuer des opérations sur le trafic réseau envoyé au port.</span><span class="sxs-lookup"><span data-stu-id="e7516-436">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="e7516-437">Vous pouvez utiliser le <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> propriété pour empêcher plusieurs clients à l’aide d’un port spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-437">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="e7516-438">Cette propriété doit être définie avant que le socket sous-jacent est lié à un port client.</span><span class="sxs-lookup"><span data-stu-id="e7516-438">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="e7516-439">Si vous appelez <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, le client est lié en tant qu’un effet secondaire du constructeur, et vous ne pouvez pas définir par la suite le <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> propriété</span><span class="sxs-lookup"><span data-stu-id="e7516-439">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-440">L’exemple de code suivant crée un <xref:System.Net.Sockets.UdpClient>et obtient et définit le <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-440">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-441">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-441">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-442">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-442">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-443">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-443">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e7516-444">
            <see cref="T:System.Net.IPAddress" /> multicast du groupe auquel vous souhaitez vous joindre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-444">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-445">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-445">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-446">Le <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> méthode s’abonne le <xref:System.Net.Sockets.UdpClient> à un groupe de multidiffusion à l’aide du <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e7516-446">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e7516-447">Après avoir appelé la <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> méthode sous-jacent <xref:System.Net.Sockets.Socket> envoie un paquet de protocole IGMP (Internet Group Management Protocol) au routeur demandant l’appartenance au groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-447">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="e7516-448">La plage d’adresses de multidiffusion est entre 224.0.0.0 et 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="e7516-448">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="e7516-449">Si vous spécifiez une adresse en dehors de cette plage, ou si le routeur sur lequel la demande est effectuée n’est pas multidiffusion activée, <xref:System.Net.Sockets.UdpClient> lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-449">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-450">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-450">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-451">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-451">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="e7516-452">Une fois la <xref:System.Net.Sockets.UdpClient> est répertorié avec le routeur en tant que membre du groupe de multidiffusion, il sera en mesure de recevoir les datagrammes multicast envoyés spécifié <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e7516-452">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-453">Vous devez créer le <xref:System.Net.Sockets.UdpClient> à l’aide du numéro de port ; sinon, vous pas sera en mesure de recevoir les datagrammes multicast.</span><span class="sxs-lookup"><span data-stu-id="e7516-453">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="e7516-454">N’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode avant d’appeler le <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> (méthode), ou le <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode ne fonctionnera pas.</span><span class="sxs-lookup"><span data-stu-id="e7516-454">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="e7516-455">Vous n’avez pas besoin d’appartenir à un groupe de multidiffusion pour envoyer des datagrammes à une adresse IP de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-455">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="e7516-456">Avant de rejoindre un groupe de multidiffusion, assurez-vous que le socket est lié au port ou au point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="e7516-456">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e7516-457">Vous faire en appelant un des constructeurs qui acceptent un port ou un point de terminaison en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-457">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="e7516-458">Pour arrêter de recevoir des datagrammes multicast, appelez le <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode et fournir le <xref:System.Net.IPAddress> du groupe à partir de laquelle vous souhaitez retirer.</span><span class="sxs-lookup"><span data-stu-id="e7516-458">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-459">Dans le cas de IPv6, il existe plusieurs plages d’adresses de multidiffusion que vous pouvez choisir à partir de.</span><span class="sxs-lookup"><span data-stu-id="e7516-459">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="e7516-460">Reportez-vous à l’IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="e7516-460">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-461">Vous ne pouvez pas appeler <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> sur un <xref:System.Net.Sockets.UdpClient> construit sans port local spécifique (c'est-à-dire, à l’aide de la <xref:System.Net.Sockets.UdpClient.%23ctor> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructeur).</span><span class="sxs-lookup"><span data-stu-id="e7516-461">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-462">L’exemple de code suivant montre comment joindre un groupe de multidiffusion en fournissant une adresse de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-462">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-463">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-463">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-464">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-464">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-465">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-465">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="e7516-466">Index d'interface associé à l'adresse IP locale à laquelle joindre le groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-466">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="e7516-467">
            <see cref="T:System.Net.IPAddress" /> multicast du groupe auquel vous souhaitez vous joindre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-467">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-468">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-468">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-469">Avant de rejoindre un groupe de multidiffusion, veillez à ce que le socket est lié au port ou au point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="e7516-469">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e7516-470">Pour cela, en appelant un des constructeurs qui acceptent un port ou un point de terminaison en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-470">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="e7516-471">Le `infindex` paramètre est utilisé pour identifier une interface matérielle sur la même liaison.</span><span class="sxs-lookup"><span data-stu-id="e7516-471">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-472">Il existe plusieurs plages d’adresses de multidiffusion sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="e7516-472">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="e7516-473">Reportez-vous à l’IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="e7516-473">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-474">Vous ne pouvez pas appeler <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> sur un <xref:System.Net.Sockets.UdpClient> construit sans port local spécifique (c'est-à-dire, à l’aide de la <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructeur).</span><span class="sxs-lookup"><span data-stu-id="e7516-474">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-475">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-475">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-476">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-476">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e7516-477">
            <see cref="T:System.Net.IPAddress" /> du groupe multicast à joindre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-477">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="e7516-478">TTL mesurée en tronçons de routeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-478">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-479">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast avec la durée de vie (TTL, Time to Live) spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-479">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-480">Le <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> méthode s’abonne le <xref:System.Net.Sockets.UdpClient> à un groupe de multidiffusion à l’aide du <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e7516-480">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e7516-481">Après avoir appelé la <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> méthode sous-jacent <xref:System.Net.Sockets.Socket> envoie un paquet de protocole IGMP (Internet Group Management Protocol) au routeur demandant l’appartenance au groupe de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-481">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="e7516-482">La plage d’adresses de multidiffusion est entre 224.0.0.0 et 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="e7516-482">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="e7516-483">Si vous spécifiez une adresse en dehors de cette plage, ou si le routeur sur lequel la demande est effectuée n’est pas multidiffusion activée, <xref:System.Net.Sockets.UdpClient> lèvera une <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-483">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-484">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-484">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-485">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-485">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="e7516-486">Le `timeToLive` paramètre spécifie le nombre de tronçons de routeur autorisé pour un datagramme multicast avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="e7516-486">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="e7516-487">Une fois la <xref:System.Net.Sockets.UdpClient> est répertorié avec le routeur en tant que membre du groupe de multidiffusion, il sera en mesure de recevoir les datagrammes multicast envoyés spécifié <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e7516-487">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-488">Vous devez créer le <xref:System.Net.Sockets.UdpClient> à l’aide du numéro de port sinon vous ne serez pas en mesure de recevoir les datagrammes multicast.</span><span class="sxs-lookup"><span data-stu-id="e7516-488">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="e7516-489">N’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode avant d’appeler le <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> méthode ou la méthode de réception ne fonctionnera pas.</span><span class="sxs-lookup"><span data-stu-id="e7516-489">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="e7516-490">Vous n’avez pas besoin d’appartenir à un groupe de multidiffusion pour envoyer des datagrammes à une adresse IP de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-490">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="e7516-491">Avant de joindre un groupe de multidiffusion Assurez-vous que le socket est lié au port ou au point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="e7516-491">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e7516-492">Vous faire en appelant un des constructeurs qui acceptent un port ou un point de terminaison comme paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-492">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="e7516-493">Pour arrêter de recevoir des datagrammes multicast, appelez le <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> méthode et fournir le <xref:System.Net.IPAddress> du groupe à partir de laquelle vous souhaitez retirer.</span><span class="sxs-lookup"><span data-stu-id="e7516-493">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-494">Vous ne pouvez pas appeler <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> sur un <xref:System.Net.Sockets.UdpClient> construit sans port local spécifique (c'est-à-dire, à l’aide de la <xref:System.Net.Sockets.UdpClient.%23ctor> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructeur).</span><span class="sxs-lookup"><span data-stu-id="e7516-494">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-495">L’exemple suivant montre comment joindre un groupe de multidiffusion en fournissant deux paramètres, une adresse de multidiffusion et un nombre qui représente la durée de vie.</span><span class="sxs-lookup"><span data-stu-id="e7516-495">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7516-496">Le TTL spécifié n'est pas compris entre 0 et 255.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-496">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-497">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-497">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-498">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-498">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-499">
            <paramref name="multicastAddr" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-499">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7516-500">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-500">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e7516-501">
            <see cref="T:System.Net.IPAddress" /> multicast du groupe auquel vous souhaitez vous joindre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-501">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="e7516-502">
            <see cref="T:System.Net.IPAddress" /> local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-502">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-503">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-503">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-504">Avant de joindre un groupe de multidiffusion, veillez à ce que le socket est lié au port ou au point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="e7516-504">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e7516-505">Pour cela, en appelant un des constructeurs qui acceptent un port ou un point de terminaison en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-505">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-506">Il existe plusieurs plages d’adresses de multidiffusion sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="e7516-506">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="e7516-507">Vous les trouverez dans IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="e7516-507">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-508">Vous ne pouvez pas appeler <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> sur un <xref:System.Net.Sockets.UdpClient> construit sans port local spécifique (c'est-à-dire, à l’aide de la <xref:System.Net.Sockets.UdpClient.%23ctor> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructeur).</span><span class="sxs-lookup"><span data-stu-id="e7516-508">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-509">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-509">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-510">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-510">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-511">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-511">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-512">Obtient ou définit une valeur <see cref="T:System.Boolean" /> spécifiant si les paquets multicast sortants sont remis à l'application émettrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-512">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-513">
            <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> reçoit les paquets multicast sortants ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-513">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-514">La multidiffusion est une méthode évolutive pour les communications de type plusieurs-à-plusieurs sur Internet.</span><span class="sxs-lookup"><span data-stu-id="e7516-514">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="e7516-515">Si un processus s’abonne à une adresse de multidiffusion, tous les paquets envoyés par ce processus sont reçus par tous les processus qui se sont abonné à l’adresse de multidiffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-515">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-516">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-516">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="e7516-517">
            <see cref="T:System.Net.IPEndPoint" /> qui représente l'hôte distant à partir duquel les données ont été envoyées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-517">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-518">Retourne un datagramme UDP qui a été envoyé par un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-518">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-519">Tableau de type <see cref="T:System.Byte" /> qui contient les données du datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-519">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-520">Le <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode se bloque jusqu'à ce qu’un datagramme arrive à partir d’un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="e7516-520">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="e7516-521">Lorsque les données sont disponibles, le <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode lira le premier datagramme en file d’attente et retourne la partie données de tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="e7516-521">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="e7516-522">Cette méthode remplit la `remoteEP` paramètre avec le <xref:System.Net.IPAddress> et numéro de port de l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-522">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="e7516-523">Si vous spécifiez un hôte distant par défaut dans le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode), la <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode accepte les datagrammes à partir de cet hôte uniquement.</span><span class="sxs-lookup"><span data-stu-id="e7516-523">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="e7516-524">Tous les autres datagrammes sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="e7516-524">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="e7516-525">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-525">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-526">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-526">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-527">Si vous souhaitez recevoir des datagrammes multicast, n’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode avant d’appeler le <xref:System.Net.Sockets.UdpClient.Receive%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-527">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="e7516-528">Le <xref:System.Net.Sockets.UdpClient> vous permet de recevoir des datagrammes doit être créé à l’aide du numéro de port.</span><span class="sxs-lookup"><span data-stu-id="e7516-528">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-529">L’exemple suivant illustre la <xref:System.Net.Sockets.UdpClient.Receive%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-529">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="e7516-530">Le <xref:System.Net.Sockets.UdpClient.Receive%2A> méthode bloque l’exécution jusqu'à ce qu’il reçoit un message.</span><span class="sxs-lookup"><span data-stu-id="e7516-530">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="e7516-531">À l’aide de la <xref:System.Net.IPEndPoint> passé à <xref:System.Net.Sockets.UdpClient.Receive%2A>, l’identité de l’hôte qui répond est révélée.</span><span class="sxs-lookup"><span data-stu-id="e7516-531">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-532">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-532">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-533">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-533">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7516-534">Retourne un datagramme UDP (de manière asynchrone), envoyé par un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-534">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-535">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-535">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="e7516-536">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-536">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-537">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="e7516-537">This operation will not block.</span></span> <span data-ttu-id="e7516-538">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet UDP a été reçu.</span><span class="sxs-lookup"><span data-stu-id="e7516-538">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="e7516-539">Si vous spécifiez un hôte distant par défaut dans le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode), cette méthode accepte les datagrammes à partir de cet hôte uniquement.</span><span class="sxs-lookup"><span data-stu-id="e7516-539">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="e7516-540">Tous les autres datagrammes sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="e7516-540">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="e7516-541">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-541">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-542">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-542">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e7516-543">Si vous souhaitez recevoir des datagrammes multicast, n’appelez pas la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e7516-543">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="e7516-544">Le <xref:System.Net.Sockets.UdpClient> vous permet de recevoir des datagrammes doit être créé à l’aide du numéro de port.</span><span class="sxs-lookup"><span data-stu-id="e7516-544">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-545">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-545">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-546">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-546">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-547">Envoie un datagramme UDP à un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-547">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="e7516-548">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-548">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-549">Nombre d’octets dans le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-549">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-550">Envoie un datagramme UDP à un hôte distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-550">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-551">Nombre d’octets envoyés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-551">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-552">Cette surcharge envoie les datagrammes à l’hôte distant établi dans la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode et retourne le nombre d’octets envoyés.</span><span class="sxs-lookup"><span data-stu-id="e7516-552">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="e7516-553">Si vous n’appelez pas <xref:System.Net.Sockets.UdpClient.Connect%2A> avant d’appeler cette surcharge, le <xref:System.Net.Sockets.UdpClient.Send%2A> méthode lève un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-553">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-554">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-554">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-555">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-555">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-556">Si vous souhaitez envoyer des datagrammes à un hôte distant différent, vous devez appeler la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode et spécifier l’hôte distant souhaité.</span><span class="sxs-lookup"><span data-stu-id="e7516-556">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="e7516-557">Utilisez une des autres <xref:System.Net.Sockets.UdpClient.Send%2A> surcharges de méthode pour envoyer des datagrammes à une adresse de diffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-557">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-558">L’exemple suivant illustre la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-558">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-559">Vous devez établir un hôte distant par défaut avant d’utiliser cette surcharge.</span><span class="sxs-lookup"><span data-stu-id="e7516-559">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-560">
            <paramref name="dgram" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-560">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-561">
            <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-561">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-562">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-562">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-563">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-563">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="e7516-564">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-564">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-565">Nombre d’octets dans le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-565">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="e7516-566">
            <see cref="T:System.Net.IPEndPoint" /> qui représente l'hôte et le port auquel envoyer le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-566">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-567">Envoie un datagramme UDP à l’hôte au point de terminaison distant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-567">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-568">Nombre d’octets envoyés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-568">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-569">Le <xref:System.Net.Sockets.UdpClient.Send%2A> méthode envoie les datagrammes au point de terminaison spécifié et retourne le nombre d’octets envoyés avec succès.</span><span class="sxs-lookup"><span data-stu-id="e7516-569">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="e7516-570">Avant d’appeler cette surcharge, vous devez d’abord créer un <xref:System.Net.IPEndPoint> à l’aide de l’adresse IP et port numéro de l’hôte distant auquel seront délivrés vos datagrammes.</span><span class="sxs-lookup"><span data-stu-id="e7516-570">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="e7516-571">Vous pouvez envoyer des datagrammes à la diffusion par défaut d’adresses, 255.255.255.255, en spécifiant <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> pour le <xref:System.Net.IPAddress.Address%2A> propriété de la <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="e7516-571">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="e7516-572">Une fois que vous avez créé ce <xref:System.Net.IPEndPoint>, passer à la <xref:System.Net.Sockets.UdpClient.Send%2A> méthode comme étant le `endPoint` paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-572">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="e7516-573">Si vous souhaitez envoyer des datagrammes à une autre adresse de diffusion, utilisez le <xref:System.Net.Sockets.UdpClient.Client%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-573">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e7516-574">Vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-574">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-575">Ne fournissez pas un `endPoint` paramètre à cette méthode si vous avez déjà établi un hôte distant avec le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-575">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-576">Si vous le faites, les <xref:System.Net.Sockets.UdpClient.Send%2A> méthode lève un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-576">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-577">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-577">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-578">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-578">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-579">L’exemple suivant illustre la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-579">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-580">Cet exemple utilise un <xref:System.Net.IPEndPoint> pour spécifier l’hôte cible.</span><span class="sxs-lookup"><span data-stu-id="e7516-580">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-581">
            <paramref name="dgram" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-581">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-582">
            <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-582">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-583">
            <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-583">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-584">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-584">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="e7516-585">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-585">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-586">Nombre d’octets dans le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-586">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="e7516-587">Nom de l’hôte distant auquel vous voulez envoyer le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-587">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e7516-588">Numéro de port distant avec lequel vous souhaitez communiquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-588">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-589">Envoie un datagramme UDP à un port indiqué sur un hôte distant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-589">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-590">Nombre d’octets envoyés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-590">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-591">Le <xref:System.Net.Sockets.UdpClient.Send%2A> méthode envoie les datagrammes aux valeurs spécifiées par le `hostname` et `port` paramètres et retourne le nombre d’octets envoyé avec succès.</span><span class="sxs-lookup"><span data-stu-id="e7516-591">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="e7516-592">Vous pouvez envoyer des datagrammes à l’adresse de diffusion par défaut en spécifiant « 255.255.255.255 » pour le `hostname` la valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-592">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="e7516-593">Si vous souhaitez envoyer des datagrammes à une autre adresse de diffusion, utilisez le <xref:System.Net.Sockets.UdpClient.Client%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-593">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e7516-594">Vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-594">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7516-595">Ne pas fournir un nom d’hôte ou numéro de port à cette méthode si vous avez déjà établi un hôte distant avec le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-595">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-596">Si vous le faites, les <xref:System.Net.Sockets.UdpClient.Send%2A> méthode lève un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-596">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-597">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-597">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-598">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-598">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-599">L’exemple suivant illustre la <xref:System.Net.Sockets.UdpClient.Send%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-599">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e7516-600">Cet exemple utilise un nom d’hôte et un numéro de port pour identifier l’hôte cible.</span><span class="sxs-lookup"><span data-stu-id="e7516-600">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-601">
            <paramref name="dgram" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-601">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-602">
            <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-602">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-603">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-603">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-604">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-604">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-605">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-605">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e7516-606">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-606">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-607">Nombre d’octets dans le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-607">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-608">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-608">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-609">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-609">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-610">Cette surcharge envoie les datagrammes à l’hôte distant établi dans le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-610">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-611">Si vous n’appelez pas <xref:System.Net.Sockets.UdpClient.Connect%2A> avant d’appeler cette surcharge, la méthode lève un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-611">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-612">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-612">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-613">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-613">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e7516-614">Si vous souhaitez envoyer des datagrammes à un hôte distant différent, vous devez appeler la <xref:System.Net.Sockets.UdpClient.Connect%2A> méthode et spécifier l’hôte distant souhaité.</span><span class="sxs-lookup"><span data-stu-id="e7516-614">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="e7516-615">Utilisez une des autres <xref:System.Net.Sockets.UdpClient.SendAsync%2A> surcharges de méthode pour envoyer des datagrammes à une adresse de diffusion.</span><span class="sxs-lookup"><span data-stu-id="e7516-615">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-616">
            <paramref name="dgram" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-616">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-617">
            <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-617">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-618">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-618">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-619">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-619">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e7516-620">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-620">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-621">Nombre d’octets dans le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-621">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="e7516-622">
            <see cref="T:System.Net.IPEndPoint" /> qui représente l'hôte et le port auquel envoyer le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-622">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-623">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-623">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-624">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-624">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-625">Cette méthode envoie les datagrammes au point de terminaison spécifié.</span><span class="sxs-lookup"><span data-stu-id="e7516-625">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="e7516-626">Avant d’appeler cette surcharge, vous devez d’abord créer un <xref:System.Net.IPEndPoint> à l’aide de l’adresse IP et port numéro de l’hôte distant auquel seront délivrés vos datagrammes.</span><span class="sxs-lookup"><span data-stu-id="e7516-626">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="e7516-627">Vous pouvez envoyer des datagrammes à la diffusion par défaut d’adresses, 255.255.255.255, en spécifiant <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> pour le <xref:System.Net.IPAddress.Address%2A> propriété de la <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="e7516-627">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="e7516-628">Une fois que vous avez créé ce <xref:System.Net.IPEndPoint>, passer à cette méthode en tant que le `endPoint` paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-628">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="e7516-629">Si vous souhaitez envoyer des datagrammes à une autre adresse de diffusion, utilisez le <xref:System.Net.Sockets.UdpClient.Client%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-629">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e7516-630">Vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-630">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e7516-631">Ne fournissez pas un `endPoint` paramètre à cette méthode si vous avez déjà établi un hôte distant avec le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-631">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-632">Si vous le faites, cette méthode lève un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-632">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-633">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-633">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-634">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-634">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-635">
            <paramref name="dgram" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-635">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-636">
            <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-636">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-637">
            <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-637">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-638">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-638">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e7516-639">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-639">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e7516-640">Nombre d’octets dans le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-640">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="e7516-641">Nom de l’hôte distant auquel vous voulez envoyer le datagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-641">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e7516-642">Numéro de port distant avec lequel vous souhaitez communiquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-642">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7516-643">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-643">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7516-644">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-644">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-645">Cette méthode envoie les datagrammes aux valeurs spécifiées par le `hostname` et `port` paramètres.</span><span class="sxs-lookup"><span data-stu-id="e7516-645">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="e7516-646">Vous pouvez envoyer des datagrammes à l’adresse de diffusion par défaut en spécifiant « 255.255.255.255 » pour le `hostname` la valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="e7516-646">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="e7516-647">Si vous souhaitez envoyer des datagrammes à une autre adresse de diffusion, utilisez le <xref:System.Net.Sockets.UdpClient.Client%2A> méthode pour obtenir sous-jacent <xref:System.Net.Sockets.Socket>et définissez l’option de socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e7516-647">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e7516-648">Vous pouvez également revenir à l’aide la <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="e7516-648">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e7516-649">Ne pas fournir un nom d’hôte ou numéro de port à cette méthode si vous avez déjà établi un hôte distant avec le <xref:System.Net.Sockets.UdpClient.Connect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e7516-649">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e7516-650">Si vous le faites, cette méthode lève un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e7516-650">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e7516-651">Si vous recevez un <xref:System.Net.Sockets.SocketException>, utilisez <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> pour obtenir le code d’erreur spécifique.</span><span class="sxs-lookup"><span data-stu-id="e7516-651">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e7516-652">Une fois que vous avez obtenu ce code, vous pouvez faire référence à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 dans MSDN pour obtenir une description détaillée de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="e7516-652">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7516-653">
            <paramref name="dgram" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-653">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e7516-654">
            <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-654">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e7516-655">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-655">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e7516-656">Une erreur s’est produite pendant l’accès au socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-656">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7516-657">Obtient ou définit une valeur qui spécifie la durée de vie des paquets IP (Internet Protocol) envoyés par <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-657">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7516-658">Durée de vie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7516-658">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7516-659">La valeur de durée de vie indique le nombre maximal de routeurs un paquet peut parcourir avant que le routeur n’ignore le paquet et un Message de protocole ICMP (Internet Control) « Durée de vie dépassée » message d’erreur est renvoyé à l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="e7516-659">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7516-660">L’exemple de code suivant illustre l’utilisation de la <xref:System.Net.Sockets.UdpClient.Ttl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e7516-660">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>