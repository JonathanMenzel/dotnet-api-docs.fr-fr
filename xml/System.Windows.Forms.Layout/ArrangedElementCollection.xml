<Type Name="ArrangedElementCollection" FullName="System.Windows.Forms.Layout.ArrangedElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba5ba7758f963e35b51ecba0ebab358a21dacc59" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36356382" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrangedElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrangedElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.ArrangedElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrangedElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrangedElementCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrangedElementCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="66445-101">Represents a collection of objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-101">Represents a collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-102">Le <xref:System.Windows.Forms.Layout.ArrangedElementCollection> classe représente une collection d’objets réorganisée sur une aire de conception ou à l’intérieur d’un parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66445-102">The <xref:System.Windows.Forms.Layout.ArrangedElementCollection> class represents a collection of objects arranged on a design surface or inside a parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="66445-103">Il n’existe aucun constructeur public défini dans <xref:System.Windows.Forms.Layout.ArrangedElementCollection> , car il est conçu pour être utilisé uniquement en interne dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="66445-103">There are no publicly defined constructors in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> because it is designed to be used only internally within the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="66445-104">Toutefois, les classes dérivées de <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, tel que <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, sont disponibles pour le développeur.</span><span class="sxs-lookup"><span data-stu-id="66445-104">However, classes derived from <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, such as <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, are available to the developer.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="66445-105">Public <see langword="static" /> (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-105">Public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="66445-106">Les membres d’instance ne sont pas garantis être thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-106">Instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="66445-107">Un <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-107">An <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="66445-108">Le <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> méthode retourne un <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour accéder aux éléments.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-108">The <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> method returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to access elements.</span>
      </span>
      <span data-ttu-id="66445-109">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-109">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="66445-110">Même lorsqu’une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui amène l’énumérateur à lever une exception.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-110">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="66445-111">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66445-111">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
    <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrangedElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="66445-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span>
          </span>
          <span data-ttu-id="66445-113">The array must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-113">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66445-114">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-114">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-116">Le type du tableau spécifié doit être compatible avec la collection source.</span><span class="sxs-lookup"><span data-stu-id="66445-116">The type of the specified array must be compatible with the source collection.</span></span>  
  
 <span data-ttu-id="66445-117">Cette méthode utilise le <xref:System.Array.Copy%2A?displayProperty=nameWithType> méthode pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="66445-117">This method uses the <xref:System.Array.Copy%2A?displayProperty=nameWithType> method to copy the elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66445-118">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-118">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="66445-119">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-119">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="66445-120">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-120">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="66445-121">-or-  The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-121">-or-  The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="66445-122">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-122">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
        <altmember cref="Overload:System.Collections.ArrayList.CopyTo" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66445-123">Gets the number of elements in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-123">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66445-124">Le nombre d’éléments actuellement contenus dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-124">The number of elements currently contained in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-125">Si nécessaire, la capacité de la collection augmentera dynamiquement pour accepter davantage d’éléments.</span><span class="sxs-lookup"><span data-stu-id="66445-125">When required, the capacity of the collection will dynamically increase to accept more elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="arrangedElementCollection.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="66445-126">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-126">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-127">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-127">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66445-128">
            <see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-128">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrangedElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66445-129">Returns an enumerator for the entire collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-129">Returns an enumerator for the entire collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66445-130">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-130">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-131">En général, l’énumérateur ne dispose pas d’un accès exclusif à la collection ; Par conséquent, l’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="66445-131">Typically the enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="66445-132">Même lorsqu’une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui amène l’énumérateur à lever une exception.</span><span class="sxs-lookup"><span data-stu-id="66445-132">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="66445-133">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez suivre l’une des méthodes suivantes :</span><span class="sxs-lookup"><span data-stu-id="66445-133">To guarantee thread safety during enumeration, you can follow one of the following strategies:</span></span>  
  
-   <span data-ttu-id="66445-134">Verrouiller la collection pendant l’ensemble de l’énumération à l’aide un <xref:System.Threading.Monitor>.</span><span class="sxs-lookup"><span data-stu-id="66445-134">Lock the collection during the entire enumeration using a <xref:System.Threading.Monitor>.</span></span>  
  
-   <span data-ttu-id="66445-135">Interceptent et gèrent les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="66445-135">Catch and handle the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="Overload:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="arrangedElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66445-136">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-136">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66445-137">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-137">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66445-138">Gets a value indicating whether the collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-138">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66445-139">
            <see langword="true" /> si la collection est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-139">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="66445-140">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-140">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-141">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après la création de la collection.</span><span class="sxs-lookup"><span data-stu-id="66445-141">A read-only collection does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="66445-142">Une collection en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection.</span><span class="sxs-lookup"><span data-stu-id="66445-142">A read-only collection is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="66445-143">Si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="66445-143">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66445-144">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-144">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66445-145">
            <see langword="true" /> si l'accès à <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-145">
              <see langword="true" /> if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-146">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-146">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-147">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="66445-147">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66445-148">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-148">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66445-149">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-149">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-150">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-150">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-151">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="66445-151">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="66445-152">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-152">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-153">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-153">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66445-154">The position into which the new element was inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-154">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-155">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-155">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-156">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-156">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66445-157">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-157">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-158">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-158">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-159">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-159">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="66445-160">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-160">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-161">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-161">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66445-162">
            <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-162">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-163">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-163">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-164">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-164">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="66445-165">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-165">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-166">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-166">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66445-167">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-167">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-168">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-168">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-169">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-169">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="66445-170">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-170">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66445-171">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-171">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-172">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-172">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-173">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-173">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-174">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-174">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66445-175">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-175">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66445-176">
            <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-176">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-177">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-177">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-178">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-178">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="66445-179">The zero-based index of the element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-179">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-180">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-180">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66445-181">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-181">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-182">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-182">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-183">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-183">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="66445-184">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-184">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-185">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-185">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-186">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-186">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-187">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-187">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="66445-188">The zero-based index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-188">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66445-189">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66445-189">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66445-190">Cette méthode est une implémentation de membre d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="66445-190">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="66445-191">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="66445-191">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>