<Type Name="AttributeTableBuilder" FullName="System.Activities.Presentation.Metadata.AttributeTableBuilder">
  <TypeSignature Language="C#" Value="public class AttributeTableBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeTableBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.AttributeTableBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeTableBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeTableBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2956b-101">Crée et remplit un <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" /> utilisé par <see cref="T:System.Activities.Presentation.Metadata.MetadataStore" /> pour fournir une recherche et une inscription d'attributs.</span><span class="sxs-lookup"><span data-stu-id="2956b-101">Creates and populates an <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" /> that is used by the <see cref="T:System.Activities.Presentation.Metadata.MetadataStore" /> to provide attribute lookup and registration.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-102">Utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> et <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> pour remplir le générateur, puis appelez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> pour acquérir un <xref:System.Activities.Presentation.Metadata.AttributeTable> contenant la collection d'attributs souhaitée.</span><span class="sxs-lookup"><span data-stu-id="2956b-102">Use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, and <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> to populate the builder, then call <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> to acquire an <xref:System.Activities.Presentation.Metadata.AttributeTable> containing the desired collection of attributes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeTableBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeTableBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2956b-103">Crée une instance de la classe <see cref="T:System.Activities.Presentation.Metadata.AttributeTableBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.Metadata.AttributeTableBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCallback">
      <MemberSignature Language="C#" Value="public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCallback(class System.Type type, class System.Activities.Presentation.Metadata.AttributeCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCallback(Type ^ type, System::Activities::Presentation::Metadata::AttributeCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.Metadata.AttributeCallback" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2956b-104">Type pour lequel le rappel fournira des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2956b-104">The type for which the callback will provide metadata.</span></span></param>
        <param name="callback"><span data-ttu-id="2956b-105">Méthode de rappel.</span><span class="sxs-lookup"><span data-stu-id="2956b-105">The callback method.</span></span></param>
        <summary><span data-ttu-id="2956b-106">Spécifie un rappel qui sera appelé lorsque les métadonnées pour le type donné sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="2956b-106">Specifies a callback that will be invoked when metadata for the given type is needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-107">La première fois qu'un <xref:System.Activities.Presentation.Metadata.AttributeTable> retourné par <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> est interrogé à propos des attributs pour `type`, `callback` est appelé pour fournir les informations de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2956b-107">The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> returned by <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> is queried for attributes for `type`, `callback` is called to provide the metadata information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2956b-108">Ajoute le contenu des attributs fournis à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-108">Adds the contents of the provided attributes to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-109">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-109">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 <span data-ttu-id="2956b-110">Lors de la génération d'une grande table d'attributs, utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> pour différer le travail de création d'attributs jusqu'à ce que ceux-ci soient exigés.</span><span class="sxs-lookup"><span data-stu-id="2956b-110">When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2956b-111">Type auquel ajouter des attributs de niveau classe.</span><span class="sxs-lookup"><span data-stu-id="2956b-111">The type to add class-level attributes to.</span></span></param>
        <param name="attributes"><span data-ttu-id="2956b-112">Attributs ajoutés au générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-112">The attributes that are added to the builder.</span></span></param>
        <summary><span data-ttu-id="2956b-113">Ajoute le contenu des attributs fournis à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-113">Adds the contents of the provided attributes to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-114">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-114">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 <span data-ttu-id="2956b-115">Lors de la génération d'une grande table d'attributs, utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> pour différer le travail de création d'attributs jusqu'à ce que ceux-ci soient exigés.</span><span class="sxs-lookup"><span data-stu-id="2956b-115">When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2956b-116"><paramref name="type" /> ou <paramref name="attributes" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-116"><paramref name="type" /> or <paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, class System.ComponentModel.MemberDescriptor descriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, descriptor As MemberDescriptor, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::ComponentModel::MemberDescriptor ^ descriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="descriptor" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="2956b-117">Type qui contient le membre identifié par <c>descriptor</c>.</span><span class="sxs-lookup"><span data-stu-id="2956b-117">The type that contains the member identified by <c>descriptor</c>.</span></span></param>
        <param name="descriptor"><span data-ttu-id="2956b-118">Événement ou informations sur les propriétés auxquels les attributs sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="2956b-118">The event or property info that the attributes are added to.</span></span></param>
        <param name="attributes"><span data-ttu-id="2956b-119">Attributs ajoutés au générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-119">The attributes that are added to the builder.</span></span></param>
        <summary><span data-ttu-id="2956b-120">Ajoute le contenu des attributs fournis à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-120">Adds the contents of the provided attributes to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-121">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-121">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 <span data-ttu-id="2956b-122">Lors de la génération d'une grande table d'attributs, utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> pour différer le travail de création d'attributs jusqu'à ce que ceux-ci soient exigés.</span><span class="sxs-lookup"><span data-stu-id="2956b-122">When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2956b-123"><paramref name="ownerType" />, <paramref name="descriptor" /> ou <paramref name="attributes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-123"><paramref name="ownerType" />, <paramref name="descriptor" /> or <paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, class System.Reflection.MemberInfo member, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, member As MemberInfo, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::Reflection::MemberInfo ^ member, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="2956b-124">Type qui contient le membre identifié par <c>member</c>.</span><span class="sxs-lookup"><span data-stu-id="2956b-124">The type that contains the member identified by <c>member</c>.</span></span></param>
        <param name="member"><span data-ttu-id="2956b-125">Événement ou informations sur les propriétés auxquels les attributs sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="2956b-125">The event or property info that the attributes are added to.</span></span></param>
        <param name="attributes"><span data-ttu-id="2956b-126">Attributs ajoutés au générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-126">The attributes that are added to the builder.</span></span></param>
        <summary><span data-ttu-id="2956b-127">Ajoute le contenu des attributs fournis à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-127">Adds the contents of the provided attributes to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-128">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-128">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 <span data-ttu-id="2956b-129">Lors de la génération d'une grande table d'attributs, utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> pour différer le travail de création d'attributs jusqu'à ce que ceux-ci soient exigés.</span><span class="sxs-lookup"><span data-stu-id="2956b-129">When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2956b-130"><paramref name="ownerType" />, <paramref name="member" /> ou <paramref name="attributes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-130"><paramref name="ownerType" />, <paramref name="member" /> or <paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, string memberName, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, string memberName, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, memberName As String, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::String ^ memberName, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="2956b-131">Type qui contient le membre identifié par <c>memberName</c>.</span><span class="sxs-lookup"><span data-stu-id="2956b-131">The type that contains the member identified by <c>memberName</c>.</span></span></param>
        <param name="memberName"><span data-ttu-id="2956b-132">Nom de l'événement ou informations sur les propriétés auxquels les attributs sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="2956b-132">The name of the event or property info that the attributes are added to.</span></span></param>
        <param name="attributes"><span data-ttu-id="2956b-133">Attributs ajoutés au générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-133">The attributes that are added to the builder.</span></span></param>
        <summary><span data-ttu-id="2956b-134">Ajoute le contenu des attributs fournis à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-134">Adds the contents of the provided attributes to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-135">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-135">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 <span data-ttu-id="2956b-136">Lors de la génération d'une grande table d'attributs, utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> pour différer le travail de création d'attributs jusqu'à ce que ceux-ci soient exigés.</span><span class="sxs-lookup"><span data-stu-id="2956b-136">When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2956b-137"><paramref name="ownerType" />, <paramref name="memberName" /> ou <paramref name="attributes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-137"><paramref name="ownerType" />, <paramref name="memberName" />, or <paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, class System.Windows.DependencyProperty dp, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, dp As DependencyProperty, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::Windows::DependencyProperty ^ dp, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="2956b-138">Type qui contient la dépendance identifiée par <c>dp</c>.</span><span class="sxs-lookup"><span data-stu-id="2956b-138">The type that contains the dependency identified by <c>dp</c>.</span></span></param>
        <param name="dp"><span data-ttu-id="2956b-139">Propriété de dépendance à laquelle ajouter des attributs.</span><span class="sxs-lookup"><span data-stu-id="2956b-139">A dependency property to add attributes to.</span></span></param>
        <param name="attributes"><span data-ttu-id="2956b-140">Attributs ajoutés au générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-140">The attributes that are added to the builder.</span></span></param>
        <summary><span data-ttu-id="2956b-141">Ajoute le contenu des attributs fournis à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-141">Adds the contents of the provided attributes to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-142">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-142">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 <span data-ttu-id="2956b-143">Lors de la génération d'une grande table d'attributs, utilisez <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> pour différer le travail de création d'attributs jusqu'à ce que ceux-ci soient exigés.</span><span class="sxs-lookup"><span data-stu-id="2956b-143">When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2956b-144"><paramref name="ownerType" />, <paramref name="dp" /> ou <paramref name="attributes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-144"><paramref name="ownerType" />, <paramref name="dp" /> or <paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddTable">
      <MemberSignature Language="C#" Value="public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="2956b-145">Table d'attributs source.</span><span class="sxs-lookup"><span data-stu-id="2956b-145">The source attribute table.</span></span></param>
        <summary><span data-ttu-id="2956b-146">Ajoute le contenu de la table d'attributs fournie à ce générateur.</span><span class="sxs-lookup"><span data-stu-id="2956b-146">Adds the contents of the provided attribute table to this builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-147">En cas de conflits entre un attribut et un autre déjà inclus au générateur, le dernier attribut ajouté remplace les attributs précédents.</span><span class="sxs-lookup"><span data-stu-id="2956b-147">If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2956b-148"><paramref name="table" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-148"><paramref name="table" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Metadata.AttributeTable CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTable () As AttributeTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Metadata::AttributeTable ^ CreateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Metadata.AttributeTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2956b-149">Crée une table d'attributs qui contient toutes les définitions d'attributs fournies par le biais d'appels <see cref="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])" />.</span><span class="sxs-lookup"><span data-stu-id="2956b-149">Creates an attribute table that contains all of the attribute definitions provided through <see cref="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])" /> calls.</span></span></summary>
        <returns><span data-ttu-id="2956b-150">Objet <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" /> qui peut être passé au magasin de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2956b-150">An <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" /> that can be passed to the metadata store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-151">La table est un instantané de l'état actuel du générateur d'attributs ; tous les attributs ajoutés par les appels <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> suivants ne sont pas inclus à la table.</span><span class="sxs-lookup"><span data-stu-id="2956b-151">The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> calls are not included in the table.</span></span>  
  
 <span data-ttu-id="2956b-152">Si les méthodes de rappel ont été utilisées pour déclarer des attributs, ces méthodes ne seront pas évaluées pendant <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="2956b-152">If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>.</span></span> <span data-ttu-id="2956b-153">Au lieu de cela, la table contiendra ces rappels et les évaluera en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="2956b-153">Instead, the table will contain those callbacks and will evaluate them as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTable">
      <MemberSignature Language="C#" Value="public void ValidateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2956b-154">Vérifie que la table d'attributs en cours de construction contient des informations d'attributs valides.</span><span class="sxs-lookup"><span data-stu-id="2956b-154">Verifies that the attribute table that is being built contains valid attribute information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2956b-155">Certaines substitutions de <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> ne peut pas valider que les valeurs passées à leurs paramètres représentent des membres valides sur les classes.</span><span class="sxs-lookup"><span data-stu-id="2956b-155">Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> cannot validate that values passed to their parameters represent valid members on classes.</span></span> <span data-ttu-id="2956b-156"><xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> vérifie que toutes les informations d'attributs personnalisés correspondent à des membres réels.</span><span class="sxs-lookup"><span data-stu-id="2956b-156"><xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members.</span></span> <span data-ttu-id="2956b-157">L’exécution de cette méthode peut demander un certain temps. De plus, cette méthode n’est pas recommandée à moins que la validation soit explicitement exigée.</span><span class="sxs-lookup"><span data-stu-id="2956b-157">This method can take a long time to complete and is not recommended unless validation is explicitly needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Activities.Presentation.Metadata.AttributeTableValidationException"><span data-ttu-id="2956b-158">L'état de la table n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="2956b-158">the state of the table is invalid.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>