<Type Name="WorkflowViewElement" FullName="System.Activities.Presentation.WorkflowViewElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c42a406d469d7bd9066ce2e37d8d4c0d001a4746" />
    <Meta Name="ms.sourcegitcommit" Value="22c9818dc4a11ae279d13a36bc98a3c6852e9316" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/20/2018" />
    <Meta Name="ms.locfileid" Value="39169809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowViewElement : System.Windows.Controls.ContentControl, System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowViewElement extends System.Windows.Controls.ContentControl implements class System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowViewElement&#xA;Inherits ContentControl&#xA;Implements ICompositeViewEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowViewElement : System::Windows::Controls::ContentControl, System::Activities::Presentation::ICompositeViewEvents" />
  <TypeSignature Language="F#" Value="type WorkflowViewElement = class&#xA;    inherit ContentControl&#xA;    interface ICompositeViewEvents" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.ICompositeViewEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="233ed-101">Spécifie la classe de base de tout élément d’interface utilisateur qui apparaît dans le canevas du concepteur Windows Workflow Foundation et qui représente visuellement une instance d’un élément atomique pouvant être modifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="233ed-101">Specifies the base class for any UI element that appears on the Windows Workflow Foundation designer canvas and that visually represents an instance of an atomic item that can be edited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-102"><xref:System.Activities.Presentation.WorkflowViewElement> et <xref:System.Activities.Activity> sont des exemples d'éléments pouvant être représentés par un <xref:System.Activities.Statements.FlowNode>.</span><span class="sxs-lookup"><span data-stu-id="233ed-102">Examples of items represented by a <xref:System.Activities.Presentation.WorkflowViewElement> include <xref:System.Activities.Activity> and <xref:System.Activities.Statements.FlowNode>.</span></span> <span data-ttu-id="233ed-103">`WorkflowViewElement` fournit un contrat commun utilisé par le concepteur pour restituer l’élément visuel sur l’aire du concepteur et interagir avec lui via les différentes actions d’édition.</span><span class="sxs-lookup"><span data-stu-id="233ed-103">`WorkflowViewElement` provides a common contract that the designer uses to render the visual element onto the designer surface and to interact with it through the various editing actions.</span></span>  
  
 <span data-ttu-id="233ed-104">Si vous générez un concepteur pour une <xref:System.Activities.Activity>, vous devez utiliser le type de base <xref:System.Activities.Presentation.ActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="233ed-104">If you are building a designer for an <xref:System.Activities.Activity>, you should use the <xref:System.Activities.Presentation.ActivityDesigner> base type.</span></span> <span data-ttu-id="233ed-105">S’il existe des éléments autres que des activités qui doivent être traités comme des éléments de première classe sur le canevas du concepteur, comme un élément de boîte à outils qui doit pouvoir être glissé tout au long de la zone de dessin, ou pour les scénarios de couper-coller, utilisent `WorkflowViewElement` comme classe de base.</span><span class="sxs-lookup"><span data-stu-id="233ed-105">If there are non-activity elements that need to be treated as first class items on the designer canvas, such as a toolbox item that needs to be draggable throughout the canvas, or for cut-and-paste scenarios, use `WorkflowViewElement` as the base class.</span></span> <span data-ttu-id="233ed-106">Si vous ne souhaitez pas utiliser le chrome d’activité standard pour un concepteur d’activités, `WorkflowViewElement` doit être utilisé comme type de base pour fournir une flexibilité maximale.</span><span class="sxs-lookup"><span data-stu-id="233ed-106">If you do not want to use the standard activity chrome for an activity designer, `WorkflowViewElement` should be used as the base type to provide the most flexibility.</span></span>  
  
 <span data-ttu-id="233ed-107">Un <xref:System.Activities.Presentation.WorkflowViewElement> représente un <xref:System.Activities.Presentation.Model.ModelItem> dans l'interface utilisateur et fournit l'accès du code à l'élément de modèle, ainsi qu'un <xref:System.Activities.Presentation.EditingContext> qui permet d'apporter des modifications.</span><span class="sxs-lookup"><span data-stu-id="233ed-107">A <xref:System.Activities.Presentation.WorkflowViewElement> represents a <xref:System.Activities.Presentation.Model.ModelItem> in the UI and provides code access to the model item and an <xref:System.Activities.Presentation.EditingContext> that allows changes to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="233ed-108">Pour consulter un exemple de code qui indique comment créer une <xref:System.Activities.Activity> et un <xref:System.Activities.Presentation.ActivityDesigner>, puis comment les associer, reportez-vous à l'exemple fourni dans la documentation d'<xref:System.Activities.Presentation.ActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="233ed-108">For a code sample showing how to create a new <xref:System.Activities.Activity> and an <xref:System.Activities.Presentation.ActivityDesigner>, and then how to associate them, see the sample in the <xref:System.Activities.Presentation.ActivityDesigner> documentation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowViewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowViewElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="233ed-109">Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-109">Initializes a new instance of the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-110">Le <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> propriété a la valeur `false` par défaut.</span><span class="sxs-lookup"><span data-stu-id="233ed-110">The <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> property is set to `false` by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsible">
      <MemberSignature Language="C#" Value="public bool Collapsible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collapsible" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberSignature Language="VB.NET" Value="Public Property Collapsible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collapsible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Collapsible : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-111">Obtient ou définit une valeur qui indique si l‘élément peut être réduit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-111">Gets or sets a value that indicates whether the element can be collapsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-112">
            <see langword="true" /> si l'élément peut être réduit ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-112">
              <see langword="true" /> if the element can be collapsed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeViews">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt; CompositeViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.ICompositeView&gt; CompositeViews" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CompositeViews As IList(Of ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ CompositeViews { System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositeViews : System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;" Usage="System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-113">Obtient la liste de tous les affichages composites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-113">Gets the list of all composite views.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-114">Liste de tous les affichages composites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-114">The list of all composite views.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); void set(System::Activities::Presentation::EditingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-115">Obtient ou définit le contexte d'édition qui est partagé par tous les éléments contenus dans un Workflow Designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-115">Gets or sets the editing context that is shared by all elements contained in a workflow designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-116">Objet <see cref="T:System.Activities.Presentation.EditingContext" /> pour le Workflow Designer qui contient l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-116">The <see cref="T:System.Activities.Presentation.EditingContext" /> object for the workflow designer that contains the workflow view element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-117">L'objet <xref:System.Activities.Presentation.EditingContext> est une collection de services partagés entre tous les éléments contenus dans le concepteur et utilisés pour l'interaction entre l'hôte et le concepteur.</span><span class="sxs-lookup"><span data-stu-id="233ed-117">The <xref:System.Activities.Presentation.EditingContext> object is a collection of services shared between all elements contained in the designer and used to interact between the host and the designer.</span></span> <span data-ttu-id="233ed-118">Les services sont publiés et demandés via l'<xref:System.Activities.Presentation.EditingContext>.</span><span class="sxs-lookup"><span data-stu-id="233ed-118">Services are published and requested through the <xref:System.Activities.Presentation.EditingContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-119">Identifie la propriété de dépendance <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-119">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" /> dependency property.</span>
          </span>
          <span data-ttu-id="233ed-120">Ce champ est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-120">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCompositeView">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.ICompositeView DefaultCompositeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ICompositeView DefaultCompositeView" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DefaultCompositeView As ICompositeView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::ICompositeView ^ DefaultCompositeView { System::Activities::Presentation::ICompositeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCompositeView : System.Activities.Presentation.ICompositeView" Usage="System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ICompositeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-121">Obtient l'affichage composite par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-121">Gets the default composite view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-122">Affichage composite par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-122">The default composite view.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Designer">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.DesignerView Designer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.DesignerView Designer" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Designer As DesignerView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::DesignerView ^ Designer { System::Activities::Presentation::View::DesignerView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Designer : System.Activities.Presentation.View.DesignerView" Usage="System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.DesignerView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-123">Obtient le concepteur associé à l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-123">Gets the designer associated with the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-124">Concepteur associé à l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-124">The designer associated with the workflow view element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragHandle">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement DragHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElement DragHandle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property DragHandle As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElement ^ DragHandle { System::Windows::FrameworkElement ^ get(); void set(System::Windows::FrameworkElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DragHandle : System.Windows.FrameworkElement with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-125">Obtient ou définit la poignée de déplacement pour l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-125">Gets or sets the drag handle for the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-126">Poignée de déplacement pour l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-126">The drag handle for the workflow view element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandState">
      <MemberSignature Language="C#" Value="public bool ExpandState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpandState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExpandState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandState : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-127">Obtient ou définit une valeur qui indique si l'état d'affichage de l'élément est développé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-127">Gets or sets a value that indicates whether the view state of the element is expanded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-128">
            <see langword="true" /> si l'état d'affichage est développé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-128">
              <see langword="true" /> if the view state of the element is expanded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpandStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpandStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpandStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandStateProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-129">Identifie la propriété de dépendance <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-129">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> dependency property.</span>
          </span>
          <span data-ttu-id="233ed-130">Ce champ est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-130">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationHelpText">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationHelpText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationHelpText();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationHelpText : unit -&gt; string&#xA;override this.GetAutomationHelpText : unit -&gt; string" Usage="workflowViewElement.GetAutomationHelpText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="233ed-131">En cas d'implémentation dans une classe dérivée, récupère le texte d'aide d'automation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-131">When implemented in a derived class, retrieves the automation help text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="233ed-132">L'implémentation par défaut consiste à retourner une <see cref="T:System.String" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-132">The default implementation is to return an empty <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-133">Implémentez cette méthode dans votre classe dérivée pour ajouter votre propre gestion.</span><span class="sxs-lookup"><span data-stu-id="233ed-133">Implement this method in your derived class to add your own handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationIdMemberName();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationIdMemberName : unit -&gt; string&#xA;override this.GetAutomationIdMemberName : unit -&gt; string" Usage="workflowViewElement.GetAutomationIdMemberName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="233ed-134">En cas d'implémentation dans une classe dérivée, obtient le nom d'une propriété de l'élément de modèle associé à l'élément utilisé comme ID d'automation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-134">When implemented in a derived class, gets the name of a property of the model item associated with the element that is used as automation ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="233ed-135">Nom à utiliser comme ID d'automation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-135">The name to use as automation ID.</span>
          </span>
          <span data-ttu-id="233ed-136">La classe de base renvoie toujours <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-136">The base class always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-137">Implémentez cette méthode dans votre classe dérivée pour ajouter votre propre gestion qui spécifie une propriété d'un élément de modèle à utiliser pour identifier l'élément de modèle auprès d'automation.</span><span class="sxs-lookup"><span data-stu-id="233ed-137">Implement this method in your derived class to add your own handling that specifies a property of a model item to be used to identify the model item to automation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal virtual string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetAutomationItemStatus();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationItemStatus : unit -&gt; string&#xA;override this.GetAutomationItemStatus : unit -&gt; string" Usage="workflowViewElement.GetAutomationItemStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="233ed-138">En cas d'implémentation dans une classe dérivée, récupère l'état de l'élément d'automation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-138">When implemented in a derived class, retrieves the automation item status.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="233ed-139">L'implémentation par défaut consiste à retourner une <see cref="T:System.String" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-139">The default implementation is to return an empty <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-140">Obtient ou définit une valeur qui indique si l'élément d'affichage du flux de travail est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-140">Gets or sets a value that indicates whether the workflow view element is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-141">
            <see langword="true" /> si l'élément est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-141">
              <see langword="true" /> if the element is read only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRootDesigner : bool" Usage="System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-142">Obtient ou définit une valeur qui indique si le concepteur spécifié est le concepteur racine de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-142">Gets or sets a value that indicates whether the specified designer is the root designer for this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-143">
            <see langword="true" /> si le concepteur spécifié est un concepteur racine ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-143">
              <see langword="true" /> if the specified designer is the root designer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ModelItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ModelItem" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelItem As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ModelItem { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ModelItem : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-144">Obtient ou définit l'objet <see cref="T:System.Activities.Presentation.Model.ModelItem" /> sous-jacent associé à l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-144">Gets or sets the underlying <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object associated with the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-145">Objet <see cref="T:System.Activities.Presentation.Model.ModelItem" /> qui est un wrapper autour d'une instance de modèle ou une représentation en mémoire du flux de travail sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-145">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object that is a wrapper around a model instance or an in-memory representation of the underlying workflow.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-146">L'objet <xref:System.Activities.Presentation.Model.ModelItem> propose une notification des modifications même si l'instance de modèle ne propose pas cette notification.</span><span class="sxs-lookup"><span data-stu-id="233ed-146">The <xref:System.Activities.Presentation.Model.ModelItem> object provides notification of changes even if the model instance does not provide change notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModelItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModelItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModelItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModelItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModelItemProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-147">Identifie la propriété de dépendance <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-147">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" /> dependency property.</span>
          </span>
          <span data-ttu-id="233ed-148">Ce champ est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-148">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuLoaded (System.Windows.Controls.ContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuLoaded(class System.Windows.Controls.ContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnContextMenuLoaded(System.Windows.Controls.ContextMenu)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuLoaded (menu As ContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuLoaded(System::Windows::Controls::ContextMenu ^ menu);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuLoaded : System.Windows.Controls.ContextMenu -&gt; unit&#xA;override this.OnContextMenuLoaded : System.Windows.Controls.ContextMenu -&gt; unit" Usage="workflowViewElement.OnContextMenuLoaded menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="System.Windows.Controls.ContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">
          <span data-ttu-id="233ed-149">
            <see cref="T:System.Windows.Controls.ContextMenu" /> qui est chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-149">The <see cref="T:System.Windows.Controls.ContextMenu" /> that is loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-150">Appelée lorsque le menu contextuel est chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-150">Invoked when the context menu is loaded.</span>
          </span>
          <span data-ttu-id="233ed-151">Implémentez cette méthode dans une classe dérivée pour gérer cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-151">Implement this method in a derived class to handle this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="workflowViewElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="233ed-152">Retourne une implémentation de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> spécifique à <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> pour l’infrastructure WPF (Windows Presentation Foundation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-152">Returns a <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for the Windows Presentation Foundation (WPF) infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="233ed-153">Implémentation de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> spécifique au type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-153">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-154">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-154">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-155">Déclenche l'événement <see cref="E:System.Windows.UIElement.DragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-155">Raises the <see cref="E:System.Windows.UIElement.DragEnter" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-156">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-156">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-157">Déclenche l'événement <see cref="E:System.Windows.UIElement.DragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-157">Raises the <see cref="E:System.Windows.UIElement.DragOver" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditAnnotation();" />
      <MemberSignature Language="F#" Value="abstract member OnEditAnnotation : unit -&gt; unit&#xA;override this.OnEditAnnotation : unit -&gt; unit" Usage="workflowViewElement.OnEditAnnotation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="233ed-158">Se produit lorsque l'annotation est modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-158">Occurs when the annotation is edited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="workflowViewElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-159">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-159">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-160">Appelée lorsqu'un élément reçoit le focus clavier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-160">Invoked when an element receives keyboard focus.</span>
          </span>
          <span data-ttu-id="233ed-161">Implémentez cette méthode dans une classe dérivée pour gérer cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-161">Implement this method in a derived class to handle this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="workflowViewElement.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-162">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-162">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-163">Déclenche l'événement <see cref="E:System.Windows.FrameworkElement.Initialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-163">Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-164">L'implémentation par défaut de cette méthode virtuelle déclenche l'événement tel qu'il est décrit ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="233ed-164">The default implementation of this virtual method raises the event as described above.</span></span> <span data-ttu-id="233ed-165">Les substitutions doivent appeler l'implémentation de base pour maintenir ce comportement.</span><span class="sxs-lookup"><span data-stu-id="233ed-165">Overrides should call the base implementation to preserve this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member OnModelItemChanged : obj -&gt; unit&#xA;override this.OnModelItemChanged : obj -&gt; unit" Usage="workflowViewElement.OnModelItemChanged newItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">
          <span data-ttu-id="233ed-166">
            <see cref="T:System.Object" /> qui représente l'état modifié de l'élément de modèle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-166">An <see cref="T:System.Object" /> that represents the changed state of the model item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-167">Appelée lorsque l'élément de modèle sous-jacent est modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-167">Invoked when the underlying model item is changed.</span>
          </span>
          <span data-ttu-id="233ed-168">Implémentez cette méthode dans une classe dérivée pour gérer cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-168">Implement this method in a derived class to handle this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-169">Il n'y a pas d'implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="233ed-169">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-170">Instance <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-170">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span>
          </span>
          <span data-ttu-id="233ed-171">Ces données d'événement signalent les détails portant sur le bouton de la souris ayant été appuyé et l'état géré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-171">This event data reports details about the mouse button that was pressed and the state handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-172">Appelée lorsque le bouton de la souris est appuyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-172">Invoked when the mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-173">Instance <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-173">The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-174">Appeleée lorsque la souris est déplacée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-174">Invoked when the mouse is moved.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-175">Instance <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-175">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span>
          </span>
          <span data-ttu-id="233ed-176">Les données d’événement signalent que le bouton de la souris a été relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-176">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-177">Appelée lorsque le bouton de la souris est relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-177">Invoked when the mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-178">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-178">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-179">Appelée lorsqu'un événement Glissé non géré joint à l'événement spécifié atteint un élément sur son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-179">Invoked when an unhandled drag attached to the specified event enters an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-180">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-180">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-181">Appelée lorsqu'un événement Glissé non géré joint à l'événement spécifié quitte un élément sur son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-181">Invoked when an unhandled drag attached to the specified event leaves an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="233ed-182">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-182">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="233ed-183">Les données des événements signalent qu’un ou plusieurs boutons de la souris ont été relâchés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-183">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-184">Appelée lorsqu’un événement de relâchement de la souris non géré joint à l’événement spécifié atteint un élément sur son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-184">Invoked when an unhandled mouse release attached to the specified event reaches an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnReadOnlyChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : bool -&gt; unit&#xA;override this.OnReadOnlyChanged : bool -&gt; unit" Usage="workflowViewElement.OnReadOnlyChanged isReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly">
          <span data-ttu-id="233ed-185">
            <see langword="true" /> pour indiquer que l'élément est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-185">
              <see langword="true" /> to indicate that the element is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-186">Appelé lorsque la propriété en lecture seule est modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-186">Invoked when the read-only property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-187">Il n'y a pas d'implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="233ed-187">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowExpandedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnShowExpandedChanged (bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowExpandedChanged(bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnShowExpandedChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowExpandedChanged (newValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowExpandedChanged(bool newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnShowExpandedChanged : bool -&gt; unit&#xA;override this.OnShowExpandedChanged : bool -&gt; unit" Usage="workflowViewElement.OnShowExpandedChanged newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="newValue">
          <span data-ttu-id="233ed-188">
            <see langword="true" /> pour indiquer que la valeur de la propriété d'affichage développé a été modifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-188">
              <see langword="true" /> to indicate that the value of the show expanded property is changed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-189">Appelée lorsque la propriété d’affichage développé est modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-189">Invoked when the show expanded property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-190">Il n'y a pas d'implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="233ed-190">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinState">
      <MemberSignature Language="C#" Value="public bool PinState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PinState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberSignature Language="VB.NET" Value="Public Property PinState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PinState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PinState : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-191">Obtient ou définit une valeur qui indique si la propriété <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> doit être prioritaire sur d'autres états qui peuvent être utilisés pour développer ou réduire le <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-191">Gets or sets a value that indicates whether the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should take precedence over other states that can be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-192">
            <see langword="true" /> si la propriété <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> doit être utilisée pour développer ou réduire l'objet <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-192">
              <see langword="true" /> if the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PinStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PinStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PinStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PinStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PinStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PinStateProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-193">Identifie la propriété de dépendance <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-193">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" /> dependency property.</span>
          </span>
          <span data-ttu-id="233ed-194">Ce champ est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-194">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member RegisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.RegisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.RegisterCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="233ed-195">Affichage composite à inscrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-195">The composite view to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-196">Ajoute l'affichage composite spécifié à la liste d'affichages composites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-196">Adds the specified composite view to the list of composite views.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member RegisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.RegisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.RegisterDefaultCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="233ed-197">Affichage composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-197">The composite view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-198">Ajoute l'affichage composite spécifié comme affichage composite par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-198">Adds the specified composite view as the default composite view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpanded">
      <MemberSignature Language="C#" Value="public bool ShowExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpanded : bool" Usage="System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-199">Obtient une valeur qui indique si l'élément d'affichage de flux de travail peut être affiché dans une vue développée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-199">Gets a value that indicates whether the workflow view element is shown in an expanded view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-200">
            <see langword="true" /> si l'élément est affiché dans une vue développée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-200">
              <see langword="true" /> if the element is shown in an expanded view; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowExpandedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowExpandedProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-201">Identifie la propriété de dépendance <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-201">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" /> dependency property.</span>
          </span>
          <span data-ttu-id="233ed-202">Ce champ est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-202">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.UnregisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.UnregisterCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="233ed-203">Affichage composite dont l'inscription doit être annulée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-203">The composite view to unregister.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-204">Supprime l'affichage composite spécifié de la liste d'affichages composites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-204">Removes the specified composite view from the list of composite views.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.UnregisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.UnregisterDefaultCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="233ed-205">Affichage composite à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-205">The composite view to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="233ed-206">Supprime l'affichage composite par défaut spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-206">Removes the specified default composite view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.Services.ViewService ViewService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Services.ViewService ViewService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewService As ViewService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::Services::ViewService ^ ViewService { System::Activities::Presentation::Services::ViewService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewService : System.Activities.Presentation.Services.ViewService" Usage="System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Services.ViewService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-207">Obtient le <see cref="T:System.Activities.Presentation.Services.ViewService" /> associé à l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-207">Gets the <see cref="T:System.Activities.Presentation.Services.ViewService" /> associated with the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-208">Service d'affichage associé à l'élément d'affichage de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-208">The view service associated with the workflow view element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="233ed-209">Cette propriété est également accessible avec la propriété <xref:System.Activities.Presentation.EditingContext.Services%2A>.</span><span class="sxs-lookup"><span data-stu-id="233ed-209">This property can also be accessed with the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.ViewStateService ViewStateService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.ViewStateService ViewStateService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewStateService As ViewStateService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::ViewStateService ^ ViewStateService { System::Activities::Presentation::View::ViewStateService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateService : System.Activities.Presentation.View.ViewStateService" Usage="System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="233ed-210">Obtient le <see cref="T:System.Activities.Presentation.View.ViewStateService" /> défini dans l'<see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-210">Gets the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          </span>
          <span data-ttu-id="233ed-211">Vous pouvez accéder rapidement à cette propriété via <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-211">A shortcut to this property is by accessing <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="233ed-212">
            <see cref="T:System.Activities.Presentation.View.ViewStateService" /> défini dans le <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="233ed-212">The <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>