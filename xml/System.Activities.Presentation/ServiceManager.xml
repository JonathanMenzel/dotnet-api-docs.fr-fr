<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceManager.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58273f2de007804edfa3b2257f1735fd2bd6653d0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8273f2de007804edfa3b2257f1735fd2bd6653d0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.ServiceManager">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.IserviceProvider" /&gt;</ph> and provides access to services offered by the editing context.</source>
          <target state="translated">Implémente <ph id="ph1">&lt;see cref="T:System.IserviceProvider" /&gt;</ph> et permet d'accéder aux services offerts par le contexte d'édition.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.ServiceManager">
          <source><ph id="ph1">&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt;</ph> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt;</ph> représente des fonctionnalités qui sont fournies par l'hôte pour le concepteur ou que le concepteur utilise pour mettre des fonctions à la disposition de tous les concepteurs dans l'éditeur.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Presentation.ServiceManager">
          <source>It is obtained from the <ph id="ph1">&lt;xref:System.Activities.Presentation.EditingContext&gt;</ph> by the <ph id="ph2">&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt;</ph> property.</source>
          <target state="translated">Elle est obtenue à partir de <ph id="ph1">&lt;xref:System.Activities.Presentation.EditingContext&gt;</ph> par la propriété <ph id="ph2">&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.ServiceManager" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.Presentation.ServiceManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Contains(System.Type)">
          <source>The type of service to check.</source>
          <target state="translated">Type de service à vérifier.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Contains(System.Type)">
          <source>Returns a Boolean value that indicates whether the service manager contains a service of the given type.</source>
          <target state="translated">Retourne une valeur booléenne qui indique si le gestionnaire de services contient un service du type donné.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Contains(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a service of type <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph> has been published; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un service de type <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph> a été publié ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.Contains``1">
          <source>The type of service to check.</source>
          <target state="translated">Type de service à vérifier.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Contains``1">
          <source>Returns a Boolean value that indicates whether the service manager contains a service of the given type.</source>
          <target state="translated">Retourne une valeur booléenne qui indique si le gestionnaire de services contient un service du type donné.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Contains``1">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a service of type <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph> has been published; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un service de type <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph> a été publié ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetEnumerator">
          <source>Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</source>
          <target state="translated">Récupère un énumérateur qui peut être utilisé pour énumérer tous les services que ce gestionnaire de services publie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetEnumerator">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>, which contains an enumeration of published services.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>, qui contient une énumération des services publiés.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1">
          <source>The type of service to retrieve.</source>
          <target state="translated">Type de service à récupérer.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1">
          <source>Retrieves the requested service.</source>
          <target state="translated">Récupère le service demandé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1">
          <source>Returns a generic type, which is an instance of the service.</source>
          <target state="translated">Retourne un type générique, qui est une instance du service.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1">
          <source>Unlike <ph id="ph1">&lt;xref:System.Activities.Presentation.ServiceManager.GetService%2A&gt;</ph>, this method throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> if the service is not available.</source>
          <target state="translated">Contrairement à <ph id="ph1">&lt;xref:System.Activities.Presentation.ServiceManager.GetService%2A&gt;</ph>, cette méthode lève une <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> si le service n'est pas disponible.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1">
          <source>There is no service of the given type.</source>
          <target state="translated">Il n'existe aucun service du type donné.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">Type de service à récupérer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)">
          <source>Retrieves the requested service.</source>
          <target state="translated">Récupère le service demandé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service could not be located.</source>
          <target state="translated">Cette méthode retourne la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le service n'a pas été trouvé.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, which is an instance of the service, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service has not been published.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, qui est une instance du service, ou une valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph> si le service n'a pas été publié.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.GetService``1">
          <source>The type of service to retrieve.</source>
          <target state="translated">Type de service à récupérer.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService``1">
          <source>Retrieves the requested service.</source>
          <target state="translated">Récupère le service demandé.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService``1">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service could not be located.</source>
          <target state="translated">Cette méthode retourne la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le service n'a pas été trouvé.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetService``1">
          <source>Returns a generic type, which is an instance of the service, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service has not been published.</source>
          <target state="translated">Retourne un type générique, qui est une instance du service, ou une valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le service n'a pas été publié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)">
          <source>The delegate to get the target for.</source>
          <target state="translated">Délégué pour lequel obtenir la cible.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)">
          <source>A helper method that returns the target object for a delegate.</source>
          <target state="translated">Méthode d'assistance qui retourne l'objet cible d'un délégué.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)">
          <source>If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.</source>
          <target state="translated">Si le délégué a été créé pour rediriger via proxy un délégué générique, cette méthode retourne l'objet d'origine comme il se doit, pas le proxy.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, which is the callback target.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, qui est la cible du rappel.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)">
          <source>This can return <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the callback represents a static object.</source>
          <target state="translated">Cette méthode peut retourner <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le rappel représente un objet statique.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.ServiceManager">
          <source>Publishes the given service type, but does not declare an instance.</source>
          <target state="translated">Publie le type de service donné, mais ne déclare pas d'instance.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.ServiceManager">
          <source>When the service is requested, the Publish service callback will be invoked to create the instance.</source>
          <target state="translated">Lorsque le service est demandé, le rappel de service de publication est appelé pour créer l'instance.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.ServiceManager">
          <source>The callback is invoked only once.</source>
          <target state="translated">Le rappel est appelé une fois seulement.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Activities.Presentation.ServiceManager">
          <source>After that, the instance it returned is cached.</source>
          <target state="translated">Après cela, l'instance qu'il a retournée est mise en mémoire cache.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source>The type of service to publish.</source>
          <target state="translated">Type de service à publier.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source>A callback that will be invoked when an instance of the service is needed.</source>
          <target state="translated">Rappel qui est appelé lorsqu'une instance du service est nécessaire.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source>Publishes the specified service type, but does not declare an instance.</source>
          <target state="translated">Publie le type de service spécifié, mais ne déclare pas d'instance.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source>When the service is requested, the Publish service callback will be invoked to create the instance.</source>
          <target state="translated">Lorsque le service est demandé, le rappel de service de publication est appelé pour créer l'instance.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source>The callback is invoked only once.</source>
          <target state="translated">Le rappel est appelé une fois seulement.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source>After that, the instance it returned is cached.</source>
          <target state="translated">Après cela, l'instance qu'il a retournée est mise en mémoire cache.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="callback" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> has already been published.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> a déjà été publié.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)">
          <source>The type of service to publish.</source>
          <target state="translated">Type de service à publier.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)">
          <source>An instance of the service.</source>
          <target state="translated">Instance du service.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)">
          <source>Publishes the given service.</source>
          <target state="translated">Publie le service donné.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)">
          <source>After it is published, the service instance remains in the service manager until the editing context is disposed of.</source>
          <target state="translated">Une fois le service publié, son instance reste dans le gestionnaire de services jusqu'à suppression du contexte d'édition.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serviceInstance" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="serviceInstance" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="serviceInstance" /&gt;</ph> does not derive from or implement <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="serviceType" /&gt;</ph> has already been published.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceInstance" /&gt;</ph> ne dérive pas de <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph> et ne l'implémente pas, ou <ph id="ph3">&lt;paramref name="serviceType" /&gt;</ph> a déjà été publié.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source>The type of the service to publish.</source>
          <target state="translated">Type du service à publier.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source>A callback that will be invoked when an instance of the service is needed.</source>
          <target state="translated">Rappel qui est appelé lorsqu'une instance du service est nécessaire.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source>Publishes the given service type, but does not declare an instance yet.</source>
          <target state="translated">Publie le type de service donné, mais ne déclare pas encore d'instance.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source>When the service is requested, the <ph id="ph1">&lt;see langword="PublishServiceCallback" /&gt;</ph> will be invoked to create the instance.</source>
          <target state="translated">Lorsque le service est demandé, le <ph id="ph1">&lt;see langword="PublishServiceCallback" /&gt;</ph> sera appelé pour créer l'instance.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source>The callback is invoked only once.</source>
          <target state="translated">Le rappel est appelé une fois seulement.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source>After that, the instance it returned is cached.</source>
          <target state="translated">Après cela, l'instance qu'il a retournée est mise en mémoire cache.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)">
          <source>The type of the service to publish.</source>
          <target state="translated">Type du service à publier.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)">
          <source>An instance of the service.</source>
          <target state="translated">Instance du service.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)">
          <source>Publishes the given service.</source>
          <target state="translated">Publie le service donné.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)">
          <source>After it is published, the service instance remains in the service manager until the editing context is disposed of.</source>
          <target state="translated">Une fois le service publié, son instance reste dans le gestionnaire de services jusqu'à suppression du contexte d'édition.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)">
          <source><ph id="ph1">&lt;paramref name="serviceInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceInstance" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)">
          <source>The existing delegate to remove the callback from.</source>
          <target state="translated">Délégué existant duquel supprimer le rappel.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)">
          <source>The callback to remove.</source>
          <target state="translated">Rappel à supprimer.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)">
          <source>A helper method that performs a <ph id="ph1">&lt;see langword="Delegate.Remove" /&gt;</ph> operation, and unwraps delegates that are proxies to generic callbacks.</source>
          <target state="translated">Méthode d'assistance qui effectue une opération <ph id="ph1">&lt;see langword="Delegate.Remove" /&gt;</ph> et désencapsule des délégués qui sont des proxys de rappels génériques.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)">
          <source>You should use this method in your <ph id="ph1">&lt;see cref="Overload:System.Activities.Presentation.ServiceManager.UnSubscribe" /&gt;</ph> implementations.</source>
          <target state="translated">Vous devez utiliser cette méthode dans vos implémentations <ph id="ph1">&lt;see cref="Overload:System.Activities.Presentation.ServiceManager.UnSubscribe" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph>, which is  a new value to assign to the existing delegate.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Delegate" /&gt;</ph>, qui est une nouvelle valeur à affecter au délégué existant.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>The type of service to subscribe to.</source>
          <target state="translated">Type de service auquel s'abonner.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>A callback that will be notified when the service is available.</source>
          <target state="translated">Rappel qui sera notifié une fois le service disponible.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>Invokes the provided callback when someone has published the requested service.</source>
          <target state="translated">Appelle le rappel fourni lorsque quelqu'un a publié le service demandé.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>If the service was already available, this method invokes the callback immediately.</source>
          <target state="translated">Si le service était déjà disponible, cette méthode appelle immédiatement le rappel.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="callback" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>The type of the service to subscribe to.</source>
          <target state="translated">Type du service auquel s'abonner.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>A callback that will be notified when the service is available.</source>
          <target state="translated">Rappel qui sera notifié une fois le service disponible.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>Invokes the provided callback when someone has published the requested service.</source>
          <target state="translated">Appelle le rappel fourni lorsque quelqu'un a publié le service demandé.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>If the service was already available, this method invokes the callback immediately.</source>
          <target state="translated">Si le service était déjà disponible, cette méthode appelle immédiatement le rappel.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator">
          <source>Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</source>
          <target state="translated">Récupère un énumérateur qui peut être utilisé pour énumérer tous les services que ce gestionnaire de services publie.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, which contains an enumeration of published services.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, qui contient une énumération des services publiés.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>The type of service to remove the subscription from.</source>
          <target state="translated">Type de service duquel supprimer l'abonnement.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>The callback object to remove from the subscription.</source>
          <target state="translated">Objet de rappel à supprimer de l'abonnement.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source>Removes a subscription for a service type.</source>
          <target state="translated">Supprime un abonnement pour un type de service.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="callback" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>The type of the service to remove the subscription from.</source>
          <target state="translated">Type du service duquel supprimer l'abonnement.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>The callback object to remove from the subscription.</source>
          <target state="translated">Objet de rappel à supprimer de l'abonnement.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source>Removes a subscription for a service type.</source>
          <target state="translated">Supprime un abonnement pour un type de service.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>