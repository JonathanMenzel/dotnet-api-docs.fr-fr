<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5565bfb6f9f3ce8255c0ca1ca8bf3a4c0c2e3bdc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359673" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cd1ec-101">Fournit des méthodes qui contrôlent la durée de vie d'un complément.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd1ec-101">Provides methods that control the lifetime of an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1ec-102">Étant donné que le modèle de complément fournit la possibilité pour les compléments communiquer entre les domaines d’application et entre les processus, elle ne peut pas se baser sur le garbage collector pour les récupérer.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="cd1ec-103">Cette classe fournit un mécanisme pour le complément de comptage en obtenant un jeton de durée de vie de son contrat.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="cd1ec-104">Lorsqu’un <xref:System.AddIn.Pipeline.ContractHandle> objet est construit, il appelle la <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> méthode sur le contrat est passée au constructeur.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="cd1ec-105">Lorsque le <xref:System.AddIn.Pipeline.ContractHandle> objet est supprimé ou finalisé, il appelle la <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> méthode sur le contrat, qui supprime son blocage sur le contrat.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="cd1ec-106">Adaptateurs implémentent le contrat.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-106">Adapters implement the contract.</span></span> <span data-ttu-id="cd1ec-107">La <xref:System.AddIn.Pipeline.ContractHandle> classe a été conçue pour être utilisée dans un adaptateur de contrat en vue pour aider les développeurs de pipeline à gérer la durée de vie du contrat adapté.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="cd1ec-108">En règle générale, une instance de cette classe est instanciée pendant la construction de la classe d’adaptateur et est stockée dans un champ d’instance de la carte.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="cd1ec-109">Lorsque la classe d’adaptateur est par le garbage collector, le <xref:System.AddIn.Pipeline.ContractHandle> objet est également collecté et <xref:System.AddIn.Pipeline.ContractHandle> objet allez révoquer le jeton de durée de vie sur le contrat.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="cd1ec-110">Il est recommandé que vos adaptateurs de vue en contrat héritent la <xref:System.AddIn.Pipeline.ContractBase> classe.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="cd1ec-111">Vous pouvez ensuite utiliser une implémentation par défaut pour les membres de <xref:System.AddIn.Contract.IContract>, ce qui signifie que vous devez implémenter uniquement les membres de votre contrat spécifique.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd1ec-112">L’exemple suivant montre comment définir le handle de jeton de durée de vie dans un adaptateur de contrat en vue du côté complément d’un pipeline.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="cd1ec-113">Contrat à utiliser dans le pipeline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-113">The contract to use in the pipeline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1ec-114">Initialise une nouvelle instance de la classe <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cd1ec-115">
            <paramref name="contract" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-115">
              <paramref name="contract" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="cd1ec-116">Domaine d'application à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-116">The application domain to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1ec-117">Obtient l'instance de l'adaptateur côté complément lorsque le domaine d'application a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-117">Gets the instance of the add-in-side adapter when the application domain was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd1ec-118">Objet <see cref="T:System.AddIn.Contract.IContract" /> qui représente le propriétaire du domaine d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1ec-119">Les adaptateurs côté complément sont de type <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="cd1ec-120">Si le domaine d’application a été créé précédemment par un utilisateur, il n’existe aucun propriétaire.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cd1ec-121">
            <paramref name="domain" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-121">
              <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd1ec-122">Obtient le contrat utilisé par un pipeline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-122">Gets the contract used by a pipeline.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd1ec-123">Contrat dérivé de <see cref="T:System.AddIn.Contract.IContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="cd1ec-124">Contrat à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-124">The contract to check.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="cd1ec-125">Domaine d'application à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-125">The application domain to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1ec-126">Détermine si un domaine d'application appartient au contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-126">Determines whether an application domain is owned by the specified contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd1ec-127">
            <see langword="true" /> si le domaine d'application appartient au contrat ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-127">
              <see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cd1ec-128">
            <paramref name="contract" /> ou <paramref name="domain" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-128">
              <paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cd1ec-129">Révoque le jeton de durée de vie sur un contrat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-129">Revokes the lifetime token on a contract.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd1ec-130">Révoque le jeton de durée de vie sur un contrat, quelle que soit l'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-130">Revokes the lifetime token on a contract, regardless of input.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cd1ec-131">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-131">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1ec-132">Révoque le jeton de durée de vie sur le contrat quelle que soit l'entrée et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd1ec-133">Libère les ressources associées à l’instance <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1ec-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1ec-134">Cette méthode se substitue à <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd1ec-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd1ec-135">Code d’application ne doit pas appeler cette méthode ; d’un objet <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="cd1ec-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cd1ec-136">Lorsqu’elle est appelée par le garbage collector, cette méthode appelle la <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="cd1ec-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>