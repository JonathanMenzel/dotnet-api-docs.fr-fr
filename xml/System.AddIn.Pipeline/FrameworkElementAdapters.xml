<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e3f5f9a2cf8d810ccd1e3c5b6394bea9e9da66f" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31907597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> est utilisé par les compléments WPF (Windows Presentation Foundation) pour effectuer la conversion entre <see cref="T:System.Windows.FrameworkElement" /> et <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) étend le modèle de complément .NET Framework pour autoriser des interfaces utilisateur de WPF être passées entre les applications hôtes et les compléments. WPF nécessite que les interfaces utilisateur WPF qui sont passées directement ou indirectement dérivent <xref:System.Windows.FrameworkElement>. Toutefois, les compléments et l’hôte applications sont généralement exécutées dans des domaines d’application distincts et sont, par conséquent, séparées par une limite d’isolation. Pour cette raison, le modèle de complément .NET Framework exige que les types qui sont passés à travers la limite d’isolation soient accessibles à distance. Un type accessible à distance est conforme à une des opérations suivantes :  
  
-   Implémente l'interface <xref:System.Runtime.Serialization.ISerializable>.  
  
-   A la <xref:System.SerializableAttribute> attribut appliqué.  
  
-   Dérive de la <xref:System.MarshalByRefObject> classe.  
  
 <xref:System.Windows.FrameworkElement> n’est pas accessible à distance et doit être converti en un type accessible à distance avant d’être transmis à travers la limite d’isolation entre un complément et une application hôte. Pour cela, vous devez appeler la méthode statique <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> méthode pour convertir le <xref:System.Windows.FrameworkElement> à une instance de l’accessible à distance <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Une fois le <xref:System.AddIn.Contract.INativeHandleContract> est passé au-delà des limites d’isolation, il doit être converti en un type qui peut être affiché par l’application hôte ou le complément. Dans ce cas, la méthode statique <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> méthode est appelée pour convertir un <xref:System.AddIn.Contract.INativeHandleContract> à un <xref:System.Windows.FrameworkElement>.  
  
 Pour plus d’exposition des compléments WPF, consultez [vue d’ensemble des compléments WPF](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> qui a été passé à travers la limite d'isolation entre l'application hôte et le complément.</param>
        <summary>Retourne un <see cref="T:System.Windows.FrameworkElement" /> qui a été converti à partir d'un <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>
          <see cref="T:System.Windows.FrameworkElement" /> qui sera affiché à partir de l'application hôte ou du complément, selon la direction dans laquelle l'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] est passée entre les deux.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">
          <see cref="T:System.Windows.FrameworkElement" /> à passer à travers la limite d'isolation entre l'application hôte et le complément.</param>
        <summary>Retourne un <see cref="T:System.AddIn.Contract.INativeHandleContract" /> qui a été converti à partir d'un <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.INativeHandleContract" /> qui est passé à partir de l'application hôte ou du complément, selon la direction dans laquelle l'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] est passée entre les deux.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> n'est pas l'élément racine d'une arborescence d'éléments.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>