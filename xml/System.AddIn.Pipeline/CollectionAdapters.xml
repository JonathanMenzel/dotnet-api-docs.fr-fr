<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88a2d8db969ee1718deb4b565c2032a127e6e553" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53225552" /></Metadata><TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type CollectionAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bfdb1-101">Permet aux collections d'être passées entre un complément et son application hôte.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-101">Enables collections to be passed between an add-in and its host application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb1-102">Cette classe fournit des méthodes qui permettent une <xref:System.Collections.Generic.IList%601> collection à convertir en un <xref:System.AddIn.Contract.IListContract%601> collection.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-102">This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection.</span></span> <span data-ttu-id="bfdb1-103">Le <xref:System.AddIn.Contract.IListContract%601> collection est passée à travers la limite d’isolation et reconvertie en une <xref:System.Collections.Generic.IList%601> collection que le complément ou l’application hôte peut utiliser.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-103">The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.</span></span>  
  
 <span data-ttu-id="bfdb1-104">Objets dans les collections doivent être accessibles à distance.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-104">Objects in collections must be remotable.</span></span> <span data-ttu-id="bfdb1-105">Pour plus d’informations sur les types d’objets que vous pouvez transmettre, consultez [contrats, vues et adaptateurs](https://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span><span class="sxs-lookup"><span data-stu-id="bfdb1-105">For more information about the object types that you can pass, see [Contracts, Views, and Adapters](https://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="bfdb1-106">Compléments et extensibilité</span><span class="sxs-lookup"><span data-stu-id="bfdb1-106">Add-Ins and Extensibility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="static member ToIList : System.AddIn.Contract.IListContract&lt;'T&gt; -&gt; System.Collections.Generic.IList&lt;'T&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIList collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bfdb1-107">Type des objets contenus dans la liste.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-107">The type of objects that are contained in the list.</span></span> <span data-ttu-id="bfdb1-108"><paramref name="T" /> doit être sérialisable.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-108"><paramref name="T" /> must be serializable.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="bfdb1-109">Collection de l'autre côté du pipeline.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-109">The collection from the other side of the pipeline.</span></span></param>
        <summary><span data-ttu-id="bfdb1-110">Convertit la collection <see cref="T:System.AddIn.Contract.IListContract`1" /> spécifiée en une collection <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-110">Converts the specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="bfdb1-111">Collection convertie.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-111">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb1-112">L’application hôte ou le complément peut utiliser retourné <xref:System.Collections.Generic.IList%601> collection.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-112">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="bfdb1-113">Le <xref:System.Collections.Generic.IList%601> collection aura un jeton de durée de vie pour l’instance distante <xref:System.AddIn.Contract.IListContract%601> collection.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-113">The <xref:System.Collections.Generic.IList%601> collection will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601> collection.</span></span>  
  
 <span data-ttu-id="bfdb1-114">Vous devez utiliser cette surcharge de méthode uniquement lorsque le contenu de la <xref:System.AddIn.Contract.IListContract%601> sont des types sérialisables qui peuvent être passés directement au complément et à l’hôte (plutôt que des types qui doivent être convertis en vues).</span><span class="sxs-lookup"><span data-stu-id="bfdb1-114">You should use this method overload only when the contents of the <xref:System.AddIn.Contract.IListContract%601> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfdb1-115">L’exemple suivant implémente un segment de pipeline d’adaptateur côté hôte, comme décrit [procédure pas à pas : Passer des Collections entre hôtes et compléments](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). L’exemple s’adapte personnalisé `ProcessBooks` méthode en prenant le <xref:System.AddIn.Contract.IListContract%601> collection passée à partir du complément et converti en un <xref:System.Collections.Generic.IList%601> collection, que l’application hôte peut ensuite utiliser.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-115">The following example implements a host-side adapter pipeline segment as described [Walkthrough: Passing Collections Between Hosts and Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). The example adapts the custom `ProcessBooks` method by taking the <xref:System.AddIn.Contract.IListContract%601> collection passed from the add-in and converting it to an <xref:System.Collections.Generic.IList%601> collection, which the host application can then use.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberSignature Language="F#" Value="static member ToIList : System.AddIn.Contract.IListContract&lt;'Contract&gt; * Converter&lt;'Contract, 'View&gt; * Converter&lt;'View, 'Contract&gt; -&gt; System.Collections.Generic.IList&lt;'View&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIList (collection, contractViewAdapter, viewContractAdapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="bfdb1-116">Type qui définit le contrat pour passer des objets de type <paramref name="TView" /> à travers la limite d'isolation.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-116">The type that defines the contract for passing objects of type <paramref name="TView" /> across the isolation boundary.</span></span></typeparam>
        <typeparam name="TView"><span data-ttu-id="bfdb1-117">Type qui définit la vue des objets dans la liste.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-117">The type that defines the view of the objects in the list.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="bfdb1-118">Collection pour passer à l'autre côté du pipeline.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-118">The collection to pass to the other side of the pipeline.</span></span></param>
        <param name="contractViewAdapter"><span data-ttu-id="bfdb1-119">Convertisseur qui adapte les données du type défini dans le contrat au type attendu dans la vue.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-119">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span></span></param>
        <param name="viewContractAdapter"><span data-ttu-id="bfdb1-120">Convertisseur qui adapte les données du type défini dans la vue au type attendu dans le contrat.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-120">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span></span></param>
        <summary><span data-ttu-id="bfdb1-121">Convertit une collection <see cref="T:System.AddIn.Contract.IListContract`1" /> spécifiée en une collection <see cref="T:System.Collections.Generic.IList`1" /> en utilisant des adaptateurs de convertisseur.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-121">Converts a specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection by using converter adapters.</span></span></summary>
        <returns><span data-ttu-id="bfdb1-122">Collection convertie.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-122">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb1-123">Utilisez cette surcharge de méthode pour <xref:System.AddIn.Contract.IListContract%601> collections qui contiennent des types qui doivent être adaptées avant d’être passés au complément ou à l’hôte (plutôt que des types sérialisables simples qui peuvent être passées directement).</span><span class="sxs-lookup"><span data-stu-id="bfdb1-123">Use this method overload for <xref:System.AddIn.Contract.IListContract%601> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="bfdb1-124">L’application hôte ou le complément peut utiliser retourné <xref:System.Collections.Generic.IList%601> collection.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-124">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="bfdb1-125">Elle aura un jeton de durée de vie pour l’instance distante <xref:System.AddIn.Contract.IListContract%601>.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-125">It will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="static member ToIListContract : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.AddIn.Contract.IListContract&lt;'T&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIListContract collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="bfdb1-126">Type des objets contenus dans la liste.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-126">The type of objects that are contained in the list.</span></span> <span data-ttu-id="bfdb1-127"><paramref name="T" /> doit être sérialisable.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-127"><paramref name="T" /> must be serializable.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="bfdb1-128">Collection à convertir.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-128">The collection to convert.</span></span></param>
        <summary><span data-ttu-id="bfdb1-129">Convertit une collection spécifiée <see cref="T:System.Collections.Generic.IList`1" /> en une collection <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-129">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="bfdb1-130">Collection convertie.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-130">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb1-131">Le <xref:System.AddIn.Contract.IListContract%601> collection peut être marshalée à travers la limite d’isolation entre le complément et son application hôte.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-131">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between the add-in and its host application.</span></span>  
  
 <span data-ttu-id="bfdb1-132">Vous devez utiliser cette surcharge de méthode uniquement lorsque le contenu de la <xref:System.Collections.Generic.IList%601> collection sont des types sérialisables qui peuvent être passés directement au contrat (plutôt que des types qui doivent être convertis en contrats).</span><span class="sxs-lookup"><span data-stu-id="bfdb1-132">You should use this method overload only when the contents of the <xref:System.Collections.Generic.IList%601> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfdb1-133">L’exemple suivant implémente la classe qui définit un segment de pipeline d’adaptateur côté complément.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-133">The following example implements the class that defines an add-in side adapter pipeline segment.</span></span> <span data-ttu-id="bfdb1-134">Il s’adapte personnalisé `ProcessBooks` méthode en tirant la <xref:System.Collections.Generic.IList%601> collection passée à partir du segment de vue de complément et converti en un <xref:System.AddIn.Contract.IListContract%601> collection qui peut être marshalée au-delà de la limite d’isolation à l’hôte.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-134">It adapts the custom `ProcessBooks` method by taking the <xref:System.Collections.Generic.IList%601> collection passed from the add-in view segment and converting it to an <xref:System.AddIn.Contract.IListContract%601> collection that can be marshaled across the isolation boundary to the host.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberSignature Language="F#" Value="static member ToIListContract : System.Collections.Generic.IList&lt;'View&gt; * Converter&lt;'View, 'Contract&gt; * Converter&lt;'Contract, 'View&gt; -&gt; System.AddIn.Contract.IListContract&lt;'Contract&gt;" Usage="System.AddIn.Pipeline.CollectionAdapters.ToIListContract (collection, viewContractAdapter, contractViewAdapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView"><span data-ttu-id="bfdb1-135">Type qui définit la vue des objets dans la liste.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-135">The type that defines the view of the objects in the list.</span></span></typeparam>
        <typeparam name="TContract"><span data-ttu-id="bfdb1-136">Type qui définit le contrat pour passer des objets de type <paramref name="TView" /> à travers la limite d'isolation.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-136">The type that defines the contract for passing objects of type <paramref name="TView" /> across the isolation boundary.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="bfdb1-137">Collection à convertir.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-137">The collection to convert.</span></span></param>
        <param name="viewContractAdapter"><span data-ttu-id="bfdb1-138">Convertisseur qui adapte les données du type défini dans la vue au type attendu dans le contrat.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-138">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span></span></param>
        <param name="contractViewAdapter"><span data-ttu-id="bfdb1-139">Convertisseur qui adapte les données du type défini dans le contrat au type attendu dans la vue.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-139">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span></span></param>
        <summary><span data-ttu-id="bfdb1-140">Convertit une collection <see cref="T:System.Collections.Generic.IList`1" /> spécifiée en une collection <see cref="T:System.AddIn.Contract.IListContract`1" /> en utilisant des adaptateurs de convertisseur.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-140">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection by using converter adapters.</span></span></summary>
        <returns><span data-ttu-id="bfdb1-141">Collection convertie.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-141">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb1-142">Utilisez cette surcharge de méthode pour <xref:System.Collections.Generic.IList%601> collections qui contiennent des types qui doivent être convertis en contrats avant d’être passés au contrat (plutôt que des types sérialisables simples qui peuvent être passés directement).</span><span class="sxs-lookup"><span data-stu-id="bfdb1-142">Use this method overload for <xref:System.Collections.Generic.IList%601> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="bfdb1-143">Le <xref:System.AddIn.Contract.IListContract%601> collection peut être marshalée à travers la limite d’isolation entre un complément et son application hôte.</span><span class="sxs-lookup"><span data-stu-id="bfdb1-143">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between an add-in and its host application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>