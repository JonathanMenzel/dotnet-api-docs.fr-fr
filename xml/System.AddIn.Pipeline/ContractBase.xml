<Type Name="ContractBase" FullName="System.AddIn.Pipeline.ContractBase">
  <TypeSignature Language="C#" Value="public class ContractBase : MarshalByRefObject, System.AddIn.Contract.IContract, System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBase extends System.MarshalByRefObject implements class System.AddIn.Contract.IContract, class System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBase&#xA;Inherits MarshalByRefObject&#xA;Implements IContract, ISponsor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBase : MarshalByRefObject, System::AddIn::Contract::IContract, System::Runtime::Remoting::Lifetime::ISponsor" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Lifetime.ISponsor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="77d30-101">Fournit une implémentation par défaut de membres <see cref="T:System.AddIn.Contract.IContract" />.</span><span class="sxs-lookup"><span data-stu-id="77d30-101">Provides a default implementation of <see cref="T:System.AddIn.Contract.IContract" /> members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d30-102">Les contrats définissent les types et les méthodes utilisées par l’hôte et le complément.</span><span class="sxs-lookup"><span data-stu-id="77d30-102">Contracts define the types and methods used by the host and the add-in.</span></span> <span data-ttu-id="77d30-103">Tous les contrats doivent dériver de <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="77d30-103">All contracts must derive from <xref:System.AddIn.Contract.IContract>.</span></span> <span data-ttu-id="77d30-104">Cette classe fournit l’implémentation par défaut de <xref:System.AddIn.Contract.IContract> membres.</span><span class="sxs-lookup"><span data-stu-id="77d30-104">This class provides the default implementation of <xref:System.AddIn.Contract.IContract> members.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77d30-105">Initialise une nouvelle instance de la classe <see cref="T:System.AddIn.Pipeline.ContractBase" />.</span><span class="sxs-lookup"><span data-stu-id="77d30-105">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AcquireLifetimeToken();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.AcquireLifetimeToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77d30-106">Obtient un jeton de durée de vie.</span><span class="sxs-lookup"><span data-stu-id="77d30-106">Obtains a lifetime token.</span></span></summary>
        <returns><span data-ttu-id="77d30-107">Nombre aléatoire qui identifie un jeton.</span><span class="sxs-lookup"><span data-stu-id="77d30-107">A random number that identifies a token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="77d30-108">Tout les jetons achetés précédemment ont été révoqués.</span><span class="sxs-lookup"><span data-stu-id="77d30-108">All previously acquired tokens have been revoked.</span></span>  <span data-ttu-id="77d30-109">Aucun jeton supplémentaire n'est disponible.</span><span class="sxs-lookup"><span data-stu-id="77d30-109">No further tokens are available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRemoteHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.GetRemoteHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77d30-110">Obtient le code de hachage pour l'objet <see cref="T:System.AddIn.Pipeline.ContractBase" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="77d30-110">Gets the hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></summary>
        <returns><span data-ttu-id="77d30-111">Code de hachage pour l’objet <see cref="T:System.AddIn.Pipeline.ContractBase" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="77d30-111">A hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFinalRevoke">
      <MemberSignature Language="C#" Value="protected virtual void OnFinalRevoke ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinalRevoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinalRevoke ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinalRevoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77d30-112">En cas de substitution dans un adaptateur côté complément, libère les ressources natives détenues par l'adaptateur.</span><span class="sxs-lookup"><span data-stu-id="77d30-112">When overridden in an add-in-side adapter, releases native resources held by the adapter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d30-113">Cette méthode est appelée par le système lors de la durée de vie de jetons qui ont été acquises à partir du <xref:System.AddIn.Pipeline.ContractBase> instance ont été révoqués.</span><span class="sxs-lookup"><span data-stu-id="77d30-113">This method is called by the system when all the lifetime tokens that have been acquired from the current <xref:System.AddIn.Pipeline.ContractBase> instance have been revoked.</span></span> <span data-ttu-id="77d30-114">Utilisez cette méthode pour nettoyer les ressources natives détenues par l’adaptateur et pour signaler aux vues adaptées qu’ils doivent faire de même.</span><span class="sxs-lookup"><span data-stu-id="77d30-114">Use this method to clean up any native resources held by the adapter, and to signal to the adapted views that they should do the same.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public virtual System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.QueryContract(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier"><span data-ttu-id="77d30-115">Nom complet du contrat, y compris son nom d'assembly.</span><span class="sxs-lookup"><span data-stu-id="77d30-115">The full name of the contract, including its assembly name.</span></span></param>
        <summary><span data-ttu-id="77d30-116">Reflète sur l'instance d'un contrat et retourne le pointeur <see langword="this" /> si l'objet actuel implémente ce contrat.</span><span class="sxs-lookup"><span data-stu-id="77d30-116">Reflects over the instance of a contract and returns the <see langword="this" /> pointer if the current object implements that contract.</span></span></summary>
        <returns><span data-ttu-id="77d30-117">Pointeur <see langword="this" /> vers une interface <see cref="T:System.AddIn.Contract.IContract" />, ou <see langword="null" /> si le contrat n'est pas implémenté.</span><span class="sxs-lookup"><span data-stu-id="77d30-117">The <see langword="this" /> pointer to an <see cref="T:System.AddIn.Contract.IContract" /> interface, or <see langword="null" /> if the contract is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d30-118">Cette méthode peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="77d30-118">This method can be overridden.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77d30-119"><paramref name="contractIdentifier" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="77d30-119"><paramref name="contractIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public virtual bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="77d30-120">Objet dont l'égalité avec l'objet distant doit être testée.</span><span class="sxs-lookup"><span data-stu-id="77d30-120">The object to test for equality with the remote object.</span></span></param>
        <summary><span data-ttu-id="77d30-121">Compare l'égalité entre un objet et un objet distant.</span><span class="sxs-lookup"><span data-stu-id="77d30-121">Compares an object with a remote object for equality.</span></span></summary>
        <returns>
          <span data-ttu-id="77d30-122"><see langword="true" /> si l'objet est égal à l'objet distant ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77d30-122"><see langword="true" /> if the object is equal to the remote object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public virtual string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ RemoteToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77d30-123">Obtient une chaîne qui identifie un objet distant.</span><span class="sxs-lookup"><span data-stu-id="77d30-123">Gets a string that identifies a remote object.</span></span></summary>
        <returns><span data-ttu-id="77d30-124">Chaîne qui identifie l'objet distant.</span><span class="sxs-lookup"><span data-stu-id="77d30-124">A string that identifies the remote object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewal">
      <MemberSignature Language="C#" Value="public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renewal(class System.Runtime.Remoting.Lifetime.ILease lease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renewal (lease As ILease) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan Renewal(System::Runtime::Remoting::Lifetime::ILease ^ lease);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
      </Parameters>
      <Docs>
        <param name="lease"><span data-ttu-id="77d30-125">Objet de bail de durée de vie utilisé par le service de durée de vie de communication à distance.</span><span class="sxs-lookup"><span data-stu-id="77d30-125">The lifetime lease object that is used by the remoting lifetime service.</span></span></param>
        <summary><span data-ttu-id="77d30-126">Demande à un client d'obtention de sponsor de renouveler le bail de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="77d30-126">Requests a sponsoring client to renew the lease for the specified object.</span></span></summary>
        <returns><span data-ttu-id="77d30-127">Bail renouvelé.</span><span class="sxs-lookup"><span data-stu-id="77d30-127">The renewed lease.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77d30-128"><paramref name="lease" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="77d30-128"><paramref name="lease" /> is <see langword="null" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="77d30-129">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="77d30-129">for full trust for the immediate caller.</span></span> <span data-ttu-id="77d30-130">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="77d30-130">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RevokeLifetimeToken(int token);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="77d30-131">Numéro du jeton.</span><span class="sxs-lookup"><span data-stu-id="77d30-131">The token number.</span></span></param>
        <summary><span data-ttu-id="77d30-132">Supprime le jeton spécifié dans la liste de jetons de durée de vie en attente.</span><span class="sxs-lookup"><span data-stu-id="77d30-132">Removes the specified token from the list of outstanding lifetime tokens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77d30-133">Si le jeton n’est pas dans la liste des jetons de durée de vie en attente, cette méthode lève un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="77d30-133">If the token is not in the list of outstanding lifetime tokens, this method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="77d30-134"><paramref name="token" /> est introuvable dans la liste des jetons de durée de vie en attente.</span><span class="sxs-lookup"><span data-stu-id="77d30-134"><paramref name="token" /> is not found in the list of outstanding lifetime tokens.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>