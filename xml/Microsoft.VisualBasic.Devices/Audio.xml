<Type Name="Audio" FullName="Microsoft.VisualBasic.Devices.Audio">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ea2d8b6c3821bbaf604dc8744dc2f9fc013cab5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36727282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Audio" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Audio extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Audio" />
  <TypeSignature Language="VB.NET" Value="Public Class Audio" />
  <TypeSignature Language="C++ CLI" Value="public ref class Audio" />
  <TypeSignature Language="F#" Value="type Audio = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes permettant de lire des sons.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `My.Computer.Audio.Play` et `My.Computer.Audio.PlaySystemSound` méthodes pour lire des fichiers multimédias et des sons système.  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Le `My.Computer.Audio.Play` méthode lit le son spécifié en arrière-plan lorsque `AudioPlayMode.Background` est spécifié.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Ce code peut s’exécuter que dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Les fichiers sont ensuite accessible via la `My.Resources` objet.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Audio ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Audio();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Audio" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [Objects](http://msdn.microsoft.com/library/651c73e4-dca8-402b-9c6b-e3902b3a3f4b)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Play">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lit un fichier audio .wav.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play (string location);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Play(string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play (location As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play(System::String ^ location);" />
      <MemberSignature Language="F#" Value="member this.Play : string -&gt; unit" Usage="audio.Play location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="location">
          <see langword="String" /> contenant le nom du fichier son.</param>
        <summary>Lit un fichier audio .wav.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Play` méthode lit le fichier audio .wav stocké sous forme de fichier à `location`, en tant que tableau d’octets dans `data`, ou en tant que flux dans `stream`.  
  
 Si la surcharge qui accepte uniquement les `location` paramètre est utilisé, le `Play` méthode lit le son en arrière-plan. Dans le cas contraire, le `playMode` paramètre détermine la façon dont le son est lu.  
  
|`playMode`|Description |  
|-|-|  
|`AudioPlayMode.Background`|Lit le son en arrière-plan. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.BackgroundLoop`|Lit le son en arrière-plan jusqu'à ce que le <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> méthode est appelée. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.WaitToComplete`|Lit le son et attend jusqu'à ce qu’il se termine avant que le code appelant continue.|  
  
 Avec la lecture en arrière-plan, l’application peut exécuter du code pendant la lecture d’un son.  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Le `My.Computer.Audio.Play` méthode lit le son spécifié en arrière-plan lorsque `PlayMode.Background` est spécifié.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Cet exemple de code ne peut être exécutée dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Ils peuvent ensuite être accessibles via le `My.Resources` objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="location" /> est une chaîne vide.</exception>
        <exception cref="T:System.IO.IOException">L'utilisateur n'a pas les autorisations suffisantes pour accéder au fichier nommé par <paramref name="location" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès du fichier est incorrect dans <paramref name="location" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Le nom du chemin d'accès dans <paramref name="location" /> est trop long.</exception>
        <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</permission>
        <altmember cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" />
        <altmember cref="T:Microsoft.VisualBasic.AudioPlayMode" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play (byte[] data, Microsoft.VisualBasic.AudioPlayMode playMode);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Play(unsigned int8[] data, valuetype Microsoft.VisualBasic.AudioPlayMode playMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play (data As Byte(), playMode As AudioPlayMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play(cli::array &lt;System::Byte&gt; ^ data, Microsoft::VisualBasic::AudioPlayMode playMode);" />
      <MemberSignature Language="F#" Value="member this.Play : byte[] * Microsoft.VisualBasic.AudioPlayMode -&gt; unit" Usage="audio.Play (data, playMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="playMode" Type="Microsoft.VisualBasic.AudioPlayMode" />
      </Parameters>
      <Docs>
        <param name="data">Tableau <see langword="Byte" /> qui représente le fichier audio.</param>
        <param name="playMode">Mode <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> pour la lecture du son. Par défaut, <see langword="AudioPlayMode.Background" />.</param>
        <summary>Lit un fichier audio .wav.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Play` méthode lit le fichier audio .wav stocké sous forme de fichier à `location`, en tant que tableau d’octets dans `data`, ou en tant que flux dans `stream`.  
  
 Si la surcharge qui accepte uniquement les `location` paramètre est utilisé, le `Play` méthode lit le son en arrière-plan. Dans le cas contraire, le `playMode` paramètre détermine la façon dont le son est lu.  
  
|`playMode`|Description |  
|-|-|  
|`AudioPlayMode.Background`|Lit le son en arrière-plan. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.BackgroundLoop`|Lit le son en arrière-plan jusqu'à ce que le <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> méthode est appelée. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.WaitToComplete`|Lit le son et attend jusqu'à ce qu’il se termine avant que le code appelant continue.|  
  
 Avec la lecture en arrière-plan, l’application peut exécuter du code pendant la lecture d’un son.  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Le `My.Computer.Audio.Play` méthode lit le son spécifié en arrière-plan lorsque `PlayMode.Background` est spécifié.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Cet exemple de code ne peut être exécutée dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Ils peuvent ensuite être accessibles via le `My.Resources` objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> est <see langword="Nothing" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="playMode" /> ne fait pas partie des valeurs d'énumération <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</permission>
        <altmember cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" />
        <altmember cref="T:Microsoft.VisualBasic.AudioPlayMode" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play (System.IO.Stream stream, Microsoft.VisualBasic.AudioPlayMode playMode);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Play(class System.IO.Stream stream, valuetype Microsoft.VisualBasic.AudioPlayMode playMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play(System::IO::Stream ^ stream, Microsoft::VisualBasic::AudioPlayMode playMode);" />
      <MemberSignature Language="F#" Value="member this.Play : System.IO.Stream * Microsoft.VisualBasic.AudioPlayMode -&gt; unit" Usage="audio.Play (stream, playMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="playMode" Type="Microsoft.VisualBasic.AudioPlayMode" />
      </Parameters>
      <Docs>
        <param name="stream">Tableau <see cref="T:System.IO.Stream" /> qui représente le fichier audio.</param>
        <param name="playMode">Mode <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> pour la lecture du son. Par défaut, <see langword="AudioPlayMode.Background" />.</param>
        <summary>Lit un fichier audio .wav.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Play` méthode lit le fichier audio .wav stocké sous forme de fichier à `location`, en tant que tableau d’octets dans `data`, ou en tant que flux dans `stream`.  
  
 Si la surcharge qui accepte uniquement les `location` paramètre est utilisé, le `Play` méthode lit le son en arrière-plan. Dans le cas contraire, le `playMode` paramètre détermine la façon dont le son est lu.  
  
|`playMode`|Description |  
|-|-|  
|`AudioPlayMode.Background`|Lit le son en arrière-plan. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.BackgroundLoop`|Lit le son en arrière-plan jusqu'à ce que le <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> méthode est appelée. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.WaitToComplete`|Lit le son et attend jusqu'à ce qu’il se termine avant que le code appelant continue.|  
  
 Avec la lecture en arrière-plan, l’application peut exécuter du code pendant la lecture d’un son.  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Le `My.Computer.Audio.Play` méthode lit le son spécifié en arrière-plan lorsque `PlayMode.Background` est spécifié.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Cet exemple de code ne peut être exécutée dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Ils peuvent ensuite être accessibles via le `My.Resources` objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> est <see langword="Nothing" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="playMode" /> ne fait pas partie des valeurs d'énumération <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</permission>
        <altmember cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" />
        <altmember cref="T:Microsoft.VisualBasic.AudioPlayMode" />
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play (string location, Microsoft.VisualBasic.AudioPlayMode playMode);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Play(string location, valuetype Microsoft.VisualBasic.AudioPlayMode playMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play (location As String, playMode As AudioPlayMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play(System::String ^ location, Microsoft::VisualBasic::AudioPlayMode playMode);" />
      <MemberSignature Language="F#" Value="member this.Play : string * Microsoft.VisualBasic.AudioPlayMode -&gt; unit" Usage="audio.Play (location, playMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="playMode" Type="Microsoft.VisualBasic.AudioPlayMode" />
      </Parameters>
      <Docs>
        <param name="location">
          <see langword="String" /> contenant le nom du fichier son.</param>
        <param name="playMode">Mode <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> pour la lecture du son. Par défaut, <see langword="AudioPlayMode.Background" />.</param>
        <summary>Lit un fichier audio .wav.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Play` méthode lit le fichier audio .wav stocké sous forme de fichier à `location`, en tant que tableau d’octets dans `data`, ou en tant que flux dans `stream`.  
  
 Si la surcharge qui accepte uniquement les `location` paramètre est utilisé, le `Play` méthode lit le son en arrière-plan. Dans le cas contraire, le `playMode` paramètre détermine la façon dont le son est lu.  
  
|`playMode`|Description |  
|-|-|  
|`AudioPlayMode.Background`|Lit le son en arrière-plan. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.BackgroundLoop`|Lit le son en arrière-plan jusqu'à ce que le <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> méthode est appelée. Le code appelant continue à s'exécuter.|  
|`AudioPlayMode.WaitToComplete`|Lit le son et attend jusqu'à ce qu’il se termine avant que le code appelant continue.|  
  
 Avec la lecture en arrière-plan, l’application peut exécuter du code pendant la lecture d’un son.  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Le `My.Computer.Audio.Play` méthode lit le son spécifié en arrière-plan lorsque `PlayMode.Background` est spécifié.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Cet exemple de code ne peut être exécutée dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Ils peuvent ensuite être accessibles via le `My.Resources` objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="location" /> est une chaîne vide.</exception>
        <exception cref="T:System.IO.IOException">L'utilisateur n'a pas les autorisations suffisantes pour accéder au fichier nommé par <paramref name="location" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès du fichier est incorrect dans <paramref name="location" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Le nom du chemin d'accès dans <paramref name="location" /> est trop long.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="playMode" /> ne fait pas partie des valeurs d'énumération <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</permission>
        <altmember cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" />
        <altmember cref="T:Microsoft.VisualBasic.AudioPlayMode" />
      </Docs>
    </Member>
    <Member MemberName="PlaySystemSound">
      <MemberSignature Language="C#" Value="public void PlaySystemSound (System.Media.SystemSound systemSound);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void PlaySystemSound(class System.Media.SystemSound systemSound) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySystemSound(System::Media::SystemSound ^ systemSound);" />
      <MemberSignature Language="F#" Value="member this.PlaySystemSound : System.Media.SystemSound -&gt; unit" Usage="audio.PlaySystemSound systemSound" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemSound" Type="System.Media.SystemSound" />
      </Parameters>
      <Docs>
        <param name="systemSound">Objet <see cref="T:System.Media.SystemSound" /> représentant le son système à lire.</param>
        <summary>Lit un son système.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `PlaySystemSound` méthode lit le son système décrit par `systemSound`; le son est lu une seule fois, en arrière-plan.  
  
 La valeur de `systemSound` doit être un des membres partagés à partir de la <xref:System.Media.SystemSounds> classe :  
  
-   <xref:System.Media.SystemSounds.Asterisk%2A>  
  
-   <xref:System.Media.SystemSounds.Beep%2A>  
  
-   <xref:System.Media.SystemSounds.Exclamation%2A>  
  
-   <xref:System.Media.SystemSounds.Hand%2A>  
  
-   <xref:System.Media.SystemSounds.Question%2A>  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple utilise la `My.Computer.Audio.PlaySystemSound` méthode pour lire un son système.  
  
 [!code-vb[VbVbalrMyComputer#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#17)]  
  
 Cet exemple de code peut s’exécuter que dans une application Windows Forms.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="systemSound" /> est <see langword="Nothing" />.</exception>
        <altmember cref="T:System.Media.SystemSound" />
        <altmember cref="T:System.Media.SystemSounds" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Audio.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="audio.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arrête la lecture d'un son en arrière-plan.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Audio.Stop` méthode arrête d’émettre un son en arrière-plan qui a été démarrée par le `My.Computer.Audio.Play` (méthode).  
  
 En général, quand une application lit un son en boucle, elle doit l’arrêter à un certain point.  
  
 Pour plus d’informations, consultez [jouer sons](~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple utilise le `My.Computer.Audio.Stop` méthode pour arrêter l’application en lecture en arrière-plan ou un bouclage son et utilise le `My.Computer.Audio.Play` méthode pour lire un son en boucle en arrière-plan.  
  
 [!code-vb[VbVbalrMyComputer#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#19)]  
  
 Cet exemple de code peut s’exécuter que dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Ces fichiers sont ensuite accessible via la `My.Resources` objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>