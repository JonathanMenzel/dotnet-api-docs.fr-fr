<Type Name="Computer" FullName="Microsoft.VisualBasic.Devices.Computer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb1e29ad2ae38ed1e468f5724f4cc601a585dce4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30340023" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Computer : Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Computer extends Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Computer" />
  <TypeSignature Language="VB.NET" Value="Public Class Computer&#xA;Inherits ServerComputer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Computer : Microsoft::VisualBasic::Devices::ServerComputer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Devices.ServerComputer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés exposées par le `My.Computer` de l’objet retournent des informations sur l’ordinateur sur lequel l’application est déployée, comme déterminé au moment de l’exécution. En règle générale, ces données diffèrent de celles disponibles sur l’ordinateur de développement.  
  
 Certains membres, tels que le `My.Computer.Audio` d’objet, sont uniquement disponibles pour les applications non serveur.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer` objet.  
  
|À|Voir|  
|--------|---------|  
|Vérification du statut de connexion|[Guide pratique : vérifier l’état de la connexion](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
|Télécharger un fichier|[Guide pratique : télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Télécharger un fichier|[Guide pratique : charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Créer une clé de Registre|[Guide pratique : créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Accéder au Presse-papiers|[Stockage de données dans le Presse-papiers et lecture du Presse-papiers](~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md)|  
  
   
  
## Examples  
 Cet exemple utilise le `My.Computer.Name` propriété pour afficher le nom de l’ordinateur sur lequel s’exécute le code.  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Computer ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Computer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Computer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Computer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [Objects](http://msdn.microsoft.com/library/651c73e4-dca8-402b-9c6b-e3902b3a3f4b)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Audio Audio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Audio Audio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Audio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Audio As Audio" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Audio ^ Audio { Microsoft::VisualBasic::Devices::Audio ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Audio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui fournit des propriétés pour les méthodes destinées à la lecture des sons.</summary>
        <value>Objet <see langword="My.Computer.Audio" /> pour l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fournit un accès facile au `My.Computer.Audio` objet. Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.Devices.Audio> objet.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows Forms|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows Forms|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Le `My.Computer.Audio.Play` méthode lit le son spécifié en arrière-plan lorsque `AudioPlayMode.Background` est spécifié.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Ce code peut s’exécuter que dans une application Windows Forms.  
  
 Le nom de fichier doit faire référence à un fichier audio .wav sur votre système.  
  
 Pour simplifier la gestion de vos fichiers audio, envisagez de stocker les fichiers en tant que ressources de l’application. Les fichiers sont ensuite accessible via la `My.Resources` objet. Pour plus d’informations, consultez [My.Resources (objet)](~/docs/visual-basic/language-reference/objects/my-resources-object.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
      </Docs>
    </Member>
    <Member MemberName="Clipboard">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.ClipboardProxy Clipboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.ClipboardProxy Clipboard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Clipboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clipboard As ClipboardProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::ClipboardProxy ^ Clipboard { Microsoft::VisualBasic::MyServices::ClipboardProxy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.ClipboardProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui fournit des méthodes pour manipuler le Presse-papiers.</summary>
        <value>Objet <see langword="My.Computer.Clipboard" /> pour l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fournit un accès facile au <xref:Microsoft.VisualBasic.MyServices.ClipboardProxy> objet.  
  
 Cette propriété est disponible uniquement pour les applications non serveur.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows Forms|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows Forms|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple lit le texte du Presse-papiers dans la chaîne `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 Cet exemple échoue si aucun texte n’est présent dans le Presse-papiers.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
      </Docs>
    </Member>
    <Member MemberName="Keyboard">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Keyboard Keyboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Keyboard Keyboard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Keyboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keyboard As Keyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Keyboard ^ Keyboard { Microsoft::VisualBasic::Devices::Keyboard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Keyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui fournit des propriétés pour accéder à l'état actuel du clavier, par exemple les touches actuellement enfoncées et fournit une méthode destinée à envoyer des séquences de touches à la fenêtre active.</summary>
        <value>Objet <see langword="My.Computer.Keyboard" /> pour l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fournit un accès facile au `My.Computer.Keyboard` objet. Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.Devices.Keyboard> objet.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows Forms|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows Forms|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple utilise le `My.Computer.Keyboard.CtrlKeyDown` propriété pour déterminer si touche CTRL l’ordinateur est actuellement activée.  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
      </Docs>
    </Member>
    <Member MemberName="Mouse">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Mouse Mouse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Mouse Mouse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Mouse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mouse As Mouse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Mouse ^ Mouse { Microsoft::VisualBasic::Devices::Mouse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Mouse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
        <value>Objet <see langword="My.Computer.Mouse" /> pour l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fournit un accès facile au `My.Computer.Mouse` objet. Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.Devices.Mouse> objet.  
  
 Cette propriété est disponible uniquement pour les applications non serveur.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows Forms|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows Forms|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple utilise le `My.Computer.Mouse.WheelExists` et `My.Computer.Mouse.WheelScrollLines` propriétés afin de déterminer si la souris a une roulette de défilement et la quantité de défilement lorsqu’elle fait pivoter.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="Ports">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Ports Ports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Ports Ports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Ports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ports As Ports" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Ports ^ Ports { Microsoft::VisualBasic::Devices::Ports ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Ports</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui fournit une propriété et une méthode pour accéder aux ports série de l'ordinateur.</summary>
        <value>Objet <see langword="My.Computer.Ports" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fournit un accès facile au `My.Computer.Ports` objet. Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.Devices.Ports> objet.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows Forms|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows Forms|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d’informations, consultez [Comment : envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
      </Docs>
    </Member>
    <Member MemberName="Screen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Screen Screen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Screen Screen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Screen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Screen As Screen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Screen ^ Screen { System::Windows::Forms::Screen ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Screen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Windows.Forms.Screen" /> qui représente l'écran principal de l'ordinateur.</summary>
        <value>Objet <see cref="T:System.Windows.Forms.Screen" /> qui représente l'écran principal de l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Screen` propriété fournit une fonctionnalité similaire à la <xref:System.Windows.Forms.Screen.PrimaryScreen%2A> propriété.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows Forms|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows Forms|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple utilise le <xref:System.Windows.Forms.Screen.WorkingArea%2A> propriété de la `My.Computer.Screen` propriété pour déterminer le primaire de l’espace de travail de l’ordinateur afficher, puis redimensionne le formulaire pour remplir l’espace de travail.  
  
 [!code-vb[VbVbalrMyComputer#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#10)]  
  
 Cet exemple doit s’exécuter dans une application Windows Forms.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Windows.Forms.Screen" />
        <altmember cref="P:System.Windows.Forms.Screen.PrimaryScreen" />
      </Docs>
    </Member>
  </Members>
</Type>