<Type Name="ComputerInfo" FullName="Microsoft.VisualBasic.Devices.ComputerInfo">
  <TypeSignature Language="C#" Value="public class ComputerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComputerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComputerInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2c2c6-101">Fournit des propriétés permettant d’obtenir des informations sur la mémoire, les assemblys chargés, le nom et le système d’exploitation de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-101">Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-102">Les propriétés exposées par le `My.Computer.Info` de l’objet retournent des informations sur l’ordinateur à partir de laquelle l’application est déployée, comme déterminé au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-102">The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time.</span></span> <span data-ttu-id="2c2c6-103">En règle générale, ces données diffèrent de celles disponibles sur l’ordinateur de développement.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-103">Typically, this data differs from what was available on the development computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-104">Cet exemple utilise le `My.Computer.Info.AvailablePhysicalMemory` propriété pour afficher la quantité de mémoire physique disponible pour l’ordinateur sur lequel s’exécute le code.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-104">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComputerInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2c6-105">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-105">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong AvailablePhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailablePhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailablePhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailablePhysicalMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-106">Obtient la quantité totale de mémoire physique libre de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-106">Gets the total amount of free physical memory for the computer.</span></span></summary>
        <value><span data-ttu-id="2c2c6-107"><see langword="ULong" /> contenant le nombre d'octets de mémoire physique libre de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-107">A <see langword="ULong" /> containing the number of bytes of free physical memory for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-108">Le `My.Computer.Info.AvailablePhysicalMemory` propriété requiert Windows XP, Windows 2000 Professionnel, Windows Server 2003, Windows 2000 Server ou Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-108">The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-109">Cet exemple utilise le `My.Computer.Info.AvailablePhysicalMemory` propriété pour afficher la quantité de mémoire physique disponible pour l’ordinateur sur lequel s’exécute le code.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-109">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="2c2c6-110">L'application ne peut pas obtenir l'état de la mémoire.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-110">The application cannot obtain the memory status.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong AvailableVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailableVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailableVirtualMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-111">Obtient la quantité totale d'espace d'adresse virtuelle libre de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-111">Gets the total amount of the computer's free virtual address space.</span></span></summary>
        <value><span data-ttu-id="2c2c6-112"><see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle libre de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-112">A <see langword="ULong" /> containing the number of bytes of the computer's free virtual address space.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-113">Le `My.Computer.Info.AvailableVirtualMemory` propriété requiert Windows XP, Windows 2000 Professionnel, Windows Server 2003, Windows 2000 Server ou Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-113">The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-114">Cet exemple utilise le `My.Computer.Info.AvailableVirtualMemory` propriété pour afficher la quantité de mémoire virtuelle disponible pour l’ordinateur sur lequel s’exécute le code.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-114">This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="2c2c6-115">L'application ne peut pas obtenir l'état de la mémoire.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-115">The application cannot obtain the memory status.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-116">Obtient la culture de l'interface utilisateur installée avec le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-116">Gets the current UI culture installed with the operating system.</span></span></summary>
        <value><span data-ttu-id="2c2c6-117">Un objet <see cref="T:System.Globalization.CultureInfo" /> représente la culture de l'interface utilisateur installée sur l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-117">A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-118">Le `My.Computer.Info.InstalledUICulture` propriété a le même comportement que le <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-118">The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="2c2c6-119">Dans un système d’exploitation localisé, tels que de la version japonaise de Windows 2000 Professionnel, cette propriété retourne la culture du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-119">In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-120">Cet exemple utilise le `My.Computer.Info.InstalledUICulture` propriété pour afficher le nom de culture d’interface utilisateur du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-120">This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="OSFullName">
      <MemberSignature Language="C#" Value="public string OSFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSFullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSFullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-121">Obtient le nom complet du système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-121">Gets the full operating system name.</span></span></summary>
        <value><span data-ttu-id="2c2c6-122"><see langword="String" /> contenant le nom du système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-122">A <see langword="String" /> containing the operating-system name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-123">Cette propriété retourne des informations détaillées sur le nom du système d’exploitation si Windows Management Instrumentation (WMI) est installé sur l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-123">This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.</span></span> <span data-ttu-id="2c2c6-124">Sinon, cette propriété retourne la même chaîne que le `My.Computer.Info.OSPlatform` propriété qui fournit des informations moins détaillées que WMI.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-124">Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-125">Cet exemple utilise le `My.Computer.Info.OSFullName` propriété pour afficher le nom de l’ordinateur du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-125">This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2c2c6-126">Le code appelant n'a pas une confiance totale.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-126">The calling code does not have full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="2c2c6-127">Contrôle la possibilité d’accéder aux fichiers et dossiers.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-127">Controls the ability to access files and folders.</span></span> <span data-ttu-id="2c2c6-128">Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-128">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OSPlatform">
      <MemberSignature Language="C#" Value="public string OSPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSPlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSPlatform { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-129">Reçoit l'identificateur de plateforme pour le système d'exploitation de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-129">Gets the platform identifier for the operating system of the computer.</span></span></summary>
        <value><span data-ttu-id="2c2c6-130"><see langword="String" /> contenant l'identificateur de plateforme pour le système d'exploitation de l'ordinateur, choisi dans les noms des membres de l'énumération <see cref="T:System.PlatformID" />.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-130">A <see langword="String" /> containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-131">Le `My.Computer.Info.OSPlatform` propriété fournit une fonctionnalité similaire à la <xref:System.OperatingSystem.Platform%2A> propriété de l’objet retourné par la <xref:System.Environment.OSVersion%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-131">The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-132">Cet exemple utilise le `My.Computer.Info.OSPlatform` propriété pour afficher la plateforme de l’ordinateur du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-132">This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="2c2c6-133">L'application ne peut pas obtenir les informations sur la plateforme du système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-133">The application cannot obtain the operating-system platform information.</span></span></exception>
        <altmember cref="P:System.OperatingSystem.Platform" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-134">Obtient la version du système d'exploitation de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-134">Gets the version of the computer's operating system.</span></span></summary>
        <value><span data-ttu-id="2c2c6-135"><see langword="String" /> contenant le numéro de version actuelle du système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-135">A <see langword="String" /> containing the current version number of the operating system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-136">Le `My.Computer.Info.OSVersion` propriété met en forme la version sous « major.minor.build.revision ».</span><span class="sxs-lookup"><span data-stu-id="2c2c6-136">The `My.Computer.Info.OSVersion` property formats the version as "major.minor.build.revision".</span></span>  
  
 <span data-ttu-id="2c2c6-137">Le `My.Computer.Info.OSVersion` propriété fournit une fonctionnalité similaire à la <xref:System.OperatingSystem.Version%2A> propriété de l’objet retourné par la <xref:System.Environment.OSVersion%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-137">The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-138">Cet exemple utilise le `My.Computer.Info.OSVersion` propriété pour afficher la version de l’ordinateur du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-138">This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="2c2c6-139">L'application ne peut pas obtenir les informations relatives à la version du système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-139">The application cannot obtain the operating-system version information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TotalPhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong TotalPhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalPhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalPhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalPhysicalMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-140">Obtient la quantité totale de mémoire physique de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-140">Gets the total amount of physical memory for the computer.</span></span></summary>
        <value><span data-ttu-id="2c2c6-141"><see langword="ULong" /> contenant le nombre d'octets de mémoire physique de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-141">A <see langword="ULong" /> containing the number of bytes of physical memory for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-142">Le `My.Computer.Info.TotalPhysicalMemory` propriété requiert Windows XP, Windows 2000 Professionnel, Windows Server 2003, Windows 2000 Server ou Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="2c2c6-142">The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-143">Cet exemple utilise le `My.Computer.Info.TotalPhysicalMemory` propriété pour afficher la quantité totale de mémoire physique de l’ordinateur sur lequel s’exécute le code.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-143">This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="2c2c6-144">L'application ne peut pas obtenir l'état de la mémoire.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-144">The application cannot obtain the memory status.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TotalVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong TotalVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalVirtualMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c2c6-145">Obtient la quantité totale d'espace d'adresse virtuelle disponible de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-145">Gets the total amount of virtual address space available for the computer.</span></span></summary>
        <value><span data-ttu-id="2c2c6-146"><see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle disponible de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-146">A <see langword="ULong" /> containing the number of bytes of virtual address space available for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-147">Le `My.Computer.Info.TotalVirtualMemory` propriété requiert Windows XP, Windows 2000 Professionnel, Windows Server 2003, Windows 2000 Server ou Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="2c2c6-147">The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c2c6-148">Cet exemple utilise le `My.Computer.Info.TotalVirtualMemory` propriété pour afficher la quantité totale de mémoire virtuelle pour l’ordinateur sur lequel s’exécute le code.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-148">This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="2c2c6-149">L'application ne peut pas obtenir l'état de la mémoire.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-149">The application cannot obtain the memory status.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>