<Type Name="EventLogQuery" FullName="System.Diagnostics.Eventing.Reader.EventLogQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f08714260a292f539d103215e3b958902364cc06" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30396653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une requête pour des événements d'un journal des événements et les paramètres qui définissent comment et sur quel ordinateur la requête est exécutée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Par exemple de code à l’aide de cette classe, consultez [Comment : rechercher des événements](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069) ou [How To : Access et des informations sur les événements en lecture](http://msdn.microsoft.com/library/14db3375-d305-49ae-aa24-aedbe906e76c).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogQuery(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
      </Parameters>
      <Docs>
        <param name="path">Nom du journal des événements à demander ou chemin d'accès au fichier journal d'événements à demander.</param>
        <param name="pathType">Spécifie si la chaîne utilisée dans le paramètre du chemin d’accès indique le nom d’un journal des événements ou le chemin d’accès à un fichier journal des événements.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> en spécifiant la cible de la requête. La cible peut être un journal des événements actif ou un fichier journal.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogQuery(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Nom du journal des événements à demander ou chemin d'accès au fichier journal d'événements à demander.</param>
        <param name="pathType">Spécifie si la chaîne utilisée dans le paramètre du chemin d’accès indique le nom d’un journal des événements ou le chemin d’accès à un fichier journal des événements.</param>
        <param name="query">Requête d'événement utilisée pour récupérer les événements qui correspondent aux conditions de la requête.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> en spécifiant la cible de la requête et la requête d'événement. La cible peut être un journal des événements actif ou un fichier journal.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseDirection">
      <MemberSignature Language="C#" Value="public bool ReverseDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseDirection" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseDirection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseDirection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de type Boolean qui détermine si les événements doivent être lus du plus récent au plus ancien dans le journal des événements.</summary>
        <value>Retourne la valeur <see langword="true" /> si les événements sont lus du plus récent au plus ancien dans le journal des événements, et retourne la valeur <see langword="false" /> si les événements sont lus du plus ancien au plus récent dans le journal des événements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut est `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventLogSession Session" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
      <MemberSignature Language="VB.NET" Value="Public Property Session As EventLogSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogSession ^ Session { System::Diagnostics::Eventing::Reader::EventLogSession ^ get(); void set(System::Diagnostics::Eventing::Reader::EventLogSession ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la session qui accède au service Journal des événements sur l'ordinateur local ou sur un ordinateur distant. Cet objet peut être défini pour accéder à un journal des événements distant en créant un objet <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> ou un objet <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> avec cet objet <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />.</summary>
        <value>Retourne un objet <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TolerateQueryErrors">
      <MemberSignature Language="C#" Value="public bool TolerateQueryErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TolerateQueryErrors" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TolerateQueryErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TolerateQueryErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur de type Boolean qui détermine si cette requête continuera à récupérer des événements lorsqu'elle comportera une erreur.</summary>
        <value>
          La valeur <see langword="true" /> indique que la requête continuera à récupérer des événements même si elle échoue pour certains journaux, et la valeur <see langword="false" /> indique que cette requête ne continuera pas à récupérer des événements si elle échoue.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>