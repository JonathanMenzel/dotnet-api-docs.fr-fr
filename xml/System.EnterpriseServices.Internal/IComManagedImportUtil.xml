<Type Name="IComManagedImportUtil" FullName="System.EnterpriseServices.Internal.IComManagedImportUtil">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3432f925c942d8878bd9302103a45f747ab2d734" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36299192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComManagedImportUtil" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComManagedImportUtil" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c3f8f66b-91be-4c99-a94f-ce3b0a951039")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Identifie et installe des composants dans le catalogue COM+.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez <xref:System.EnterpriseServices.Internal.ComManagedImportUtil> pour l’implémentation par défaut de <xref:System.EnterpriseServices.Internal.IComManagedImportUtil>.  
  
 <xref:System.EnterpriseServices.Internal.IComManagedImportUtil> est utilisé en interne par le .NET Framework. Vous n’avez pas besoin utiliser directement dans votre code.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetComponentInfo (assemblyPath As String, ByRef numComponents As String, ByRef componentInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetComponentInfo(System::String ^ assemblyPath, [Runtime::InteropServices::Out] System::String ^ % numComponents, [Runtime::InteropServices::Out] System::String ^ % componentInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String&amp;" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath">Chemin d'accès de l'assembly.</param>
        <param name="numComponents">Lorsque cette méthode est retournée, ce paramètre contient le nombre de composants dans l'assembly.</param>
        <param name="componentInfo">Lorsque cette méthode est retournée, ce paramètre contient les informations relatives aux composants.</param>
        <summary>Obtient de l'assembly des informations sur le composant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le catalogue COM + pour identifier les identificateurs de classe (CLSID) et ProgID des composants dans une DLL avant son inscription.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyPath" /> est une chaîne vide (""), ne contient que des espaces blancs ou contient un ou plusieurs caractères non valides comme défini par <see cref="F:System.IO.Path.InvalidPathChars" />.  - ou - Le système n’a pas pu récupérer le chemin absolu.</exception>
        <exception cref="T:System.Security.SecurityException">L’appelant n’a pas les autorisations requises.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyPath" /> est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="assemblyPath" /> contient un signe deux-points (« : »).</exception>
        <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string filename, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string filename, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (filename As String, parname As String, appname As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ filename, System::String ^ parname, System::String ^ appname);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Chemin d'accès de l'assembly.</param>
        <param name="parname">Nom de la partition COM+.</param>
        <param name="appname">Nom de l'application COM+.</param>
        <summary>Installe un assembly dans une application COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez <xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> pour plus d’informations sur l’implémentation de cette méthode.  
  
 Cette méthode requiert que l’appelant d’avoir des privilèges d’administrateur sur l’ordinateur local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Un appelant dans la chaîne d'appel ne dispose pas de l'autorisation requise pour accéder à du code non managé.</exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException">L’assembly d’entrée ne possède pas de nom fort.</exception>
      </Docs>
    </Member>
  </Members>
</Type>