<Type Name="SoapUtility" FullName="System.EnterpriseServices.Internal.SoapUtility">
  <TypeSignature Language="C#" Value="public sealed class SoapUtility : System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapUtility extends System.Object implements class System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapUtility&#xA;Implements ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapUtility sealed : System::EnterpriseServices::Internal::ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapUtility</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5F9A955F-AA55-4127-A32B-33496AA8A44E")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1c6eb-101">Fournit les utilitaires pour la prise en charge de l'exportation par le serveur de proxies d'applications COM+ compatibles SOAP et de l'importation des proxies par le client.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-101">Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</span></span> <span data-ttu-id="1c6eb-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c6eb-103">Fonctions de l’utilitaire <xref:System.EnterpriseServices.Internal.SoapUtility> fournit sont appelées à partir de plusieurs emplacements dans COM + ; Toutefois, leur objectif principal est à prendre en charge l’exportation et l’importation de proxys clients.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-103">The utility functions that <xref:System.EnterpriseServices.Internal.SoapUtility> provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.</span></span>  
  
 <span data-ttu-id="1c6eb-104"><xref:System.EnterpriseServices.Internal.SoapUtility> est utilisé en interne par le .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-104"><xref:System.EnterpriseServices.Internal.SoapUtility> is used internally by the .NET Framework.</span></span> <span data-ttu-id="1c6eb-105">Vous n’avez pas besoin utiliser directement dans votre code.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-105">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c6eb-106">Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.Internal.SoapUtility" />.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="1c6eb-107">Serveur Web racine.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-107">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="1c6eb-108">Adresse de l'URL de base.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-108">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="1c6eb-109">Nom de la racine virtuelle.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-109">The name of the virtual root.</span></span></param>
        <param name="binPath"><span data-ttu-id="1c6eb-110">Lorsque cette méthode est retournée, ce paramètre contient le chemin d'accès du fichier pour le répertoire bin de la racine virtuelle SOAP.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-110">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.</span></span></param>
        <summary><span data-ttu-id="1c6eb-111">Retourne le chemin d'accès pour le répertoire bin SOAP.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-111">Returns the path for the SOAP bin directory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1c6eb-112">Un appelant dans la chaîne d'appel ne dispose pas de l'autorisation requise pour accéder à du code non managé.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-112">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1c6eb-113">L'utilitaire SOAP n'est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-113">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="1c6eb-114">L'appel pour obtenir le répertoire système a échoué.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-114">The call to get the system directory failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1c6eb-115">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-115">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1c6eb-116">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1c6eb-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="1c6eb-117">Serveur Web racine.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-117">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="1c6eb-118">Adresse de l'URL de base.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-118">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="1c6eb-119">Nom de la racine virtuelle.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-119">The name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="1c6eb-120">Lorsque cette méthode est retournée, ce paramètre contient le chemin d'accès du fichier pour la racine virtuelle SOAP.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-120">When this method returns, this parameter contains the file path for the SOAP virtual root.</span></span></param>
        <summary><span data-ttu-id="1c6eb-121">Retourne le chemin d'accès pour la racine virtuelle SOAP.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-121">Returns the path for the SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1c6eb-122">Un appelant dans la chaîne d'appel ne dispose pas de l'autorisation requise pour accéder à du code non managé.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-122">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1c6eb-123">L'utilitaire SOAP n'est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-123">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="1c6eb-124">L'appel pour obtenir le répertoire système a échoué.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-124">The call to get the system directory failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1c6eb-125">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-125">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1c6eb-126">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1c6eb-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Present();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.Present</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c6eb-127">Détermine la présence d'interfaces SOAP chiffrées et authentifiées.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-127">Determines whether authenticated, encrypted SOAP interfaces are present.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1c6eb-128">Un appelant dans la chaîne d'appel ne dispose pas de l'autorisation requise pour accéder à du code non managé.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-128">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1c6eb-129">L'utilitaire SOAP n'est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-129">The SOAP utility is not available.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1c6eb-130">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="1c6eb-130">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1c6eb-131">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1c6eb-131">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>