<Type Name="IServerWebConfig" FullName="System.EnterpriseServices.Internal.IServerWebConfig">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6eecfe38f9fe5e7669afb631ec65836dbd21ffed" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48685216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServerWebConfig" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServerWebConfig" />
  <TypeSignature Language="F#" Value="type IServerWebConfig = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("6261e4b5-572a-4142-a2f9-1fe1a0c97097")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Crée un fichier Web.config pour une application COM+ compatible SOAP et ajoute des entrées de composant au fichier pour les interfaces COM qui sont publiées dans l'application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.EnterpriseServices.Internal.IServerWebConfig> interface est implémentée uniquement par la <xref:System.EnterpriseServices.Internal.ServerWebConfig> classe et est utilisé uniquement au sein de l’infrastructure .NET Framework. Au lieu d’implémenter cette interface ou de l’instanciation un <xref:System.EnterpriseServices.Internal.IServerWebConfig> objet d’interface, utilisez le <xref:System.EnterpriseServices.Internal.Publish> classe qui implémente le <xref:System.EnterpriseServices.Internal.IComSoapPublisher> interface.  
  
 <xref:System.EnterpriseServices.Internal.IServerWebConfig> est utilisé en interne par le .NET Framework. Il est inutile d’utiliser directement dans votre code.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElement (FilePath As String, AssemblyName As String, TypeName As String, ProgId As String, Mode As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElement(System::String ^ FilePath, System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ ProgId, System::String ^ Mode, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member AddElement : string * string * string * string * string *  -&gt; unit" Usage="iServerWebConfig.AddElement (FilePath, AssemblyName, TypeName, ProgId, Mode, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Chemin d'accès au fichier Web.config existant.</param>
        <param name="AssemblyName">Nom de l'assembly qui contient le type qui est ajouté.</param>
        <param name="TypeName">Nom du type qui est ajouté.</param>
        <param name="ProgId">Identificateur programmatique pour le type qui est ajouté.</param>
        <param name="Mode">Constante de chaîne qui correspond au nom d'un membre de l'énumération <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />, qui indique comment un objet connu est activé.</param>
        <param name="Error">Chaîne dans laquelle un message d'erreur peut être écrit.</param>
        <summary>Ajoute des éléments XML à un fichier Web.config pour une interface COM qui est publiée dans une application COM+ compatible SOAP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez le <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> méthode pour les détails d’implémentation. Toutefois, vous n’avez pas besoin d’appeler `AddElement` directement la méthode.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FileRootName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FileRootName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (FilePath As String, FileRootName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::String ^ FilePath, System::String ^ FileRootName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member Create : string * string *  -&gt; unit" Usage="iServerWebConfig.Create (FilePath, FileRootName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FileRootName" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Dossier dans lequel créer le fichier de configuration.</param>
        <param name="FileRootName">Valeur de chaîne à laquelle une extension de configuration peut être ajoutée (par exemple, Web pour Web.config).</param>
        <param name="Error">Chaîne dans laquelle un message d'erreur peut être écrit.</param>
        <summary>Crée un fichier Web.config pour une application COM+ compatible SOAP afin que le fichier soit prêt pour l'ajout d'éléments XML pour les interfaces COM qui sont publiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez le <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> méthode pour les détails d’implémentation. Toutefois, vous n’avez pas besoin d’appeler `Create` directement.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>