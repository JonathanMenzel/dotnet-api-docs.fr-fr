<Type Name="ICommandService" FullName="System.Activities.Presentation.Hosting.ICommandService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a16ab0752b5ebaa133db0c7281c6d508dee972a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36653874" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.ICommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandService" />
  <TypeSignature Language="F#" Value="type ICommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Représente une interface de commandes utilisée pour l’intégration d’actions du Concepteur de flux de travail (par exemple, menu contextuel), avec des implémentations fournies sur demande, telles que le service de l’explorateur de propriétés, le service de débogage, etc.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecuteCommand">
      <MemberSignature Language="C#" Value="public bool CanExecuteCommand (int commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecuteCommand(int32 commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecuteCommand (commandId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecuteCommand(int commandId);" />
      <MemberSignature Language="F#" Value="abstract member CanExecuteCommand : int -&gt; bool" Usage="iCommandService.CanExecuteCommand commandId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandId">Identificateur de commande à vérifier.</param>
        <summary>Vérifie si la commande spécifiée peut être exécutée.</summary>
        <returns>
          <see langword="true" /> si la commande spécifiée peut être exécutée ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">La commande n'est pas prise en charge.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public void ExecuteCommand (int commandId, System.Collections.Generic.Dictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(int32 commandId, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteCommand (commandId As Integer, parameters As Dictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteCommand(int commandId, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : int * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; unit" Usage="iCommandService.ExecuteCommand (commandId, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="commandId">Identificateur de commande à vérifier.</param>
        <param name="parameters">Paramètres de la commande.</param>
        <summary>Exécute la commande avec l'identificateur de commande et les paramètres spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">La commande n'est pas prise en charge.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCommandSupported">
      <MemberSignature Language="C#" Value="public bool IsCommandSupported (int commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCommandSupported(int32 commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCommandSupported (commandId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCommandSupported(int commandId);" />
      <MemberSignature Language="F#" Value="abstract member IsCommandSupported : int -&gt; bool" Usage="iCommandService.IsCommandSupported commandId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandId">Identificateur de commande à vérifier.</param>
        <summary>Retourne une valeur booléenne qui indique si l'identificateur de commande spécifié est pris en charge.</summary>
        <returns>
          <see langword="true" /> si l'ID de commande spécifié est pris en charge ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>