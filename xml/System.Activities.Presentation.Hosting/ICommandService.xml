<Type Name="ICommandService" FullName="System.Activities.Presentation.Hosting.ICommandService">
  <TypeSignature Language="C#" Value="public interface ICommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.ICommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c4487-101">Représente une interface de commandes utilisée pour l’intégration d’actions du Concepteur de flux de travail (par exemple, menu contextuel), avec des implémentations fournies sur demande, telles que le service de l’explorateur de propriétés, le service de débogage, etc.</span><span class="sxs-lookup"><span data-stu-id="c4487-101">Represents a command interface that is used for integration of Windows Workflow Designer actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecuteCommand">
      <MemberSignature Language="C#" Value="public bool CanExecuteCommand (int commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecuteCommand(int32 commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecuteCommand (commandId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecuteCommand(int commandId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="c4487-102">Identificateur de commande à vérifier.</span><span class="sxs-lookup"><span data-stu-id="c4487-102">The command identifier to be checked.</span></span></param>
        <summary><span data-ttu-id="c4487-103">Vérifie si la commande spécifiée peut être exécutée.</span><span class="sxs-lookup"><span data-stu-id="c4487-103">Verifies whether the specified command can be executed.</span></span></summary>
        <returns>
          <span data-ttu-id="c4487-104"><see langword="true" /> si la commande spécifiée peut être exécutée ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4487-104"><see langword="true" /> if the specified command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4487-105">La commande n'est pas prise en charge.</span><span class="sxs-lookup"><span data-stu-id="c4487-105">The command is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public void ExecuteCommand (int commandId, System.Collections.Generic.Dictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(int32 commandId, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteCommand (commandId As Integer, parameters As Dictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteCommand(int commandId, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="c4487-106">Identificateur de commande à vérifier.</span><span class="sxs-lookup"><span data-stu-id="c4487-106">The command identifier to be checked.</span></span></param>
        <param name="parameters"><span data-ttu-id="c4487-107">Paramètres de la commande.</span><span class="sxs-lookup"><span data-stu-id="c4487-107">The parameters of the command.</span></span></param>
        <summary><span data-ttu-id="c4487-108">Exécute la commande avec l'identificateur de commande et les paramètres spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c4487-108">Executes the command with the specified command identifier and parameters.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c4487-109">La commande n'est pas prise en charge.</span><span class="sxs-lookup"><span data-stu-id="c4487-109">The command is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsCommandSupported">
      <MemberSignature Language="C#" Value="public bool IsCommandSupported (int commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCommandSupported(int32 commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCommandSupported (commandId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCommandSupported(int commandId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="c4487-110">Identificateur de commande à vérifier.</span><span class="sxs-lookup"><span data-stu-id="c4487-110">The command identifier to be checked.</span></span></param>
        <summary><span data-ttu-id="c4487-111">Retourne une valeur booléenne qui indique si l'identificateur de commande spécifié est pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c4487-111">Returns a Boolean value that indicates whether the specified command identifier is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="c4487-112"><see langword="true" /> si l'ID de commande spécifié est pris en charge ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c4487-112"><see langword="true" /> if the specified command ID is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>