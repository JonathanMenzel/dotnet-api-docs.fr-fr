<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UndoEngine.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5658fc32fd7fd13e9f252bd3a03aad6b11830e6c9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">658fc32fd7fd13e9f252bd3a03aad6b11830e6c9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Specifies generic undo/redo functionality at design time.</source>
          <target state="translated">Spécifie la fonctionnalité générique Annuler/Refaire au moment du design.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> abstract class provides a default implementation of undo functionality at design time.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe abstraite fournit une implémentation par défaut de la fonctionnalité Annuler au moment du design.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>An undo unit represents a single unit of undoable work.</source>
          <target state="translated">Une unité d’annulation représente une seule unité de travail annulable.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>This unit is added to a stack and the user can then walk the stack to undo each action.</source>
          <target state="translated">Cette unité est ajoutée à une pile et l’utilisateur peut ensuite parcourir la pile pour annuler chaque action.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.</source>
          <target state="translated">Unités d’annulation en général sont conçues pour activer ou désactiver, ce qui signifie que l’annulation appel renvoie deux fois l’application à son état de départ.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class takes advantage of the following characteristics of objects running within the designer:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe tire parti des caractéristiques suivantes des objets qui s’exécutent dans le concepteur :</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>All interesting objects can be persisted to some format by the designer loader.</source>
          <target state="translated">Tous les objets intéressants peuvent être conservées en un format par le chargeur de concepteur.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>All objects raise property-change notifications when a property is changed.</source>
          <target state="translated">Tous les objets de déclenchent des notifications de modification de propriété lorsqu’une propriété est modifiée.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> fournit l’idée de transactions, qui peut être utilisé pour fabriquer une opération d’annulation couvrant plusieurs actions plus petites.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>With these features, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> can fabricate any undo units it needs automatically.</source>
          <target state="translated">Avec ces fonctionnalités, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> peut créer des unités d’annulation dont il a besoin automatiquement.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Do not change property values directly.</source>
          <target state="translated">Ne modifiez pas directement les valeurs de propriété.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class requires you to use the appropriate <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to change property values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe, vous devez utiliser approprié <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> pour modifier les valeurs de propriété.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> monitors for change notifications to create undo units, and the units themselves consist of serialized object states.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> analyses des notifications de modification créer des unités d’annulation et les unités elles-mêmes se composent d’états de l’objet sérialisé.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The following table shows the services that must be available when <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> is created.</source>
          <target state="translated">Le tableau suivant présente les services qui doivent être disponible lorsque <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> est créé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Service</source>
          <target state="translated">Service</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Saves property and object values for a component before and after a change is made.</source>
          <target state="translated">Enregistre les valeurs de propriété et d’objet pour un composant avant et après qu’une modification est apportée.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Notifies the undo engine of changes made to components.</source>
          <target state="translated">Notifie le moteur d’annulation des modifications apportées aux composants.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Used to track transactions.</source>
          <target state="translated">Utilisé pour effectuer le suivi des transactions.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Because the <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class requires <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>, it is available only at design time.</source>
          <target state="translated">Étant donné que la <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> requiert de la classe <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> et <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>, il est disponible uniquement au moment du design.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The undo engine tracks transactions and creates a single undo unit that encompasses a transaction.</source>
          <target state="translated">Le moteur d’annulation effectue le suivi des transactions et crée une seule unité d’annulation qui englobe une transaction.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>As a result, the undo engine has control over the duration of an undoable action.</source>
          <target state="translated">Par conséquent, le moteur d’annulation a contrôle la durée d’une action annulable.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Also, because transactions can be named, undoable actions inherit their names from the current transaction.</source>
          <target state="translated">En outre, étant donné que les transactions pouvant être nommées, actions annulables héritent de leurs noms la transaction en cours.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, "Change property 'Text'").</source>
          <target state="translated">Si aucune transaction n’est disponible, et une modification est signalée, le moteur d’annulation crée un nom d’annulation en fonction du type de modification (par exemple, « modification de propriété 'Text' »).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>A parenting service provider.</source>
          <target state="translated">Fournisseur de services apparentés.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> requires several services from the <ph id="ph2">`provider`</ph> parameter to be useful.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> requiert plusieurs services à partir de la <ph id="ph2">`provider`</ph> le paramètre doit être utile.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>A required service cannot be found.</source>
          <target state="translated">Un service requis est introuvable.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>See <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> for required services.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> pour les services requis.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>If you have removed this service, ensure that you provide a replacement.</source>
          <target state="translated">Si vous avez supprimé ce service, assurez-vous d'en fournir un en remplacement.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>The undo unit to add</source>
          <target state="translated">Unité d'annulation à ajouter.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Adds an <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> to the undo stack.</source>
          <target state="translated">Ajoute <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> à la pile d'annulation.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Create the <ph id="ph1">`unit`</ph> parameter by calling the <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> method.</source>
          <target state="translated">Créer le <ph id="ph1">`unit`</ph> paramètre en appelant le <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>The name of the unit to create.</source>
          <target state="translated">Nom de l'unité à créer.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create the first of a series of nested units; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to create subsequent nested units.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour créer la première unité d'une série d'unités imbriquées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour créer les unités imbriquées suivantes.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> with a specified name.</source>
          <target state="translated">Nouveau <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> avec un nom spécifié.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> method simply returns a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>.</source>
          <target state="translated">L’implémentation par défaut de la <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> méthode retourne simplement un nouveau <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>By default, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> does nothing with the <ph id="ph2">`primary`</ph> parameter, but some implementations of undo, such as those involving the COM <ph id="ph3">`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`</ph> design pattern, may need to identify the difference between a primary unit and its children.</source>
          <target state="translated">Par défaut, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> ne fait rien avec la <ph id="ph2">`primary`</ph> paramètre, mais certaines implémentations de restauration, comme ceux impliquant le modèle COM <ph id="ph3">`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`</ph> modèle de conception, peut être nécessaire identifier la différence entre une unité principale et ses enfants.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>The unit to discard.</source>
          <target state="translated">Unité à éliminer.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Discards an <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</source>
          <target state="translated">Élimine <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Before the <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A&gt;</ph> method is called, the undo unit is closed and then undone.</source>
          <target state="translated">Avant du <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A&gt;</ph> est appelée, l’unité d’annulation est fermée, puis annulée.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.Enabled">
          <source>Enables or disables the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">Active ou désactive <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> is enabled; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> est activé ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">Type de service à récupérer.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>Gets the requested service.</source>
          <target state="translated">Obtient le service demandé.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>The requested service, if found.</source>
          <target state="translated">Le service demandé, s'il existe.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is required but cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> est requis, mais est introuvable.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>If you have removed this service, ensure that you provide a replacement.</source>
          <target state="translated">Si vous avez supprimé ce service, assurez-vous d'en fournir un en remplacement.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">Type de service à récupérer.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source>Gets the requested service.</source>
          <target state="translated">Obtient le service demandé.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source>The requested service, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the requested service is not found.</source>
          <target state="translated">Service demandé ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le service demandé est introuvable.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.UndoEngine.Undoing">
          <source>Occurs immediately before an undo action is performed.</source>
          <target state="translated">Se produit immédiatement avant l'exécution d'une opération d'annulation.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
          <source>Indicates if an undo action is in progress.</source>
          <target state="translated">Indique si une opération d'annulation est en cours.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an undo action is in progress; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une opération d'annulation est en cours ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.UndoEngine.Undone">
          <source>Occurs immediately after an undo action is performed.</source>
          <target state="translated">Se produit immédiatement après l'exécution d'une opération d'annulation.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.UndoEngine.Undone">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.Undone&gt;</ph> event is always raised, even if an exception is thrown.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.Undone&gt;</ph> est toujours déclenché, même si une exception est levée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>