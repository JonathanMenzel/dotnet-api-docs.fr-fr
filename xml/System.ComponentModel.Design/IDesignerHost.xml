<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16106b924520f98ac47409d9493e959057faf9f9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39842161" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerHost : System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : System::ComponentModel::Design::IServiceContainer" />
  <TypeSignature Language="F#" Value="type IDesignerHost = interface&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c01bc-101">Fournit une interface pour la gestion des transactions et composants du concepteur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c01bc-101">Provides an interface for managing designer transactions and components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-102"><xref:System.ComponentModel.Design.IDesignerHost> est une interface qui fonctionne avec l’architecture du concepteur forms .NET Framework pour prendre en charge des transactions du concepteur et la gestion des composants.</span><span class="sxs-lookup"><span data-stu-id="c01bc-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="c01bc-103">Le .NET Framework ne fournit pas une implémentation de cette interface.</span><span class="sxs-lookup"><span data-stu-id="c01bc-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="c01bc-104">L’interface est implémentée par les outils de développement qui prennent en charge les concepteurs.</span><span class="sxs-lookup"><span data-stu-id="c01bc-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c01bc-105">L’exemple de code suivant montre comment obtenir le <xref:System.ComponentModel.Design.IDesignerHost> interface de service à partir d’un concepteur ou un composant installé.</span><span class="sxs-lookup"><span data-stu-id="c01bc-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="c01bc-106">L’exemple de code suivant montre comment utiliser le <xref:System.ComponentModel.Design.IDesignerHost> interface aux composants du projet.</span><span class="sxs-lookup"><span data-stu-id="c01bc-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="c01bc-107">
        <para>Pour obtenir une implémentation de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à partir d’un environnement de développement, appelez <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> lorsque votre composant est actif en mode design, en passant le type de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à demande un <see cref="T:System.ComponentModel.Design.IDesignerHost" /> interface de service.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> fournit les membres suivants liés à l’état du concepteur : - le <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> propriété indique si un concepteur ou un document est en cours de chargement.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> événement se produit lorsqu’un concepteur est activé avant l’affichage.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> événement se produit lorsqu’un concepteur est désactivé.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> événement se produit après le chargement d’un document.  -Le <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> méthode active le concepteur.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> fournit les membres suivants liés à la gestion des composants : - le <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> propriété indique le conteneur de l’hôte du concepteur.  -Le <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> propriété indique la classe de base pour le composant racine.  -Le <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> propriété indique le nom de la classe du composant racine.  -Le <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> méthode crée le type de composant spécifié.  -Le <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> méthode détruit le composant spécifié.  -Le <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> méthode obtient le concepteur associé à un composant spécifié.  -Le <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> méthode obtient une instance du type portant le nom spécifié.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> fournit les membres suivants liés à la gestion des transactions : - le <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> propriété indique si le concepteur est dans une transaction.  -Le <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> propriété indique la description de la transaction actuelle.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> événement se produit lorsqu’une transaction a été effectuée.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> événement se produit lorsqu’une transaction est sur le point d’être terminée.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> événement se produit lorsqu’une transaction a commencé.  -Le <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> événement se produit lorsqu’une transaction est sur le point de commencer.  -Le <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> méthode crée et retourne une nouvelle transaction.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c01bc-107">
          <para>To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="iDesignerHost.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-108">Active le concepteur hébergé par cet hôte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-108">Activates the designer that this host is hosting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-109">Concepteurs doivent être activés avant d’afficher leur interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c01bc-109">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-110">Se produit lorsque ce concepteur est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-110">Occurs when this designer is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-111">Un concepteur est activé avant son affichage.</span><span class="sxs-lookup"><span data-stu-id="c01bc-111">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-112">Obtient le conteneur de cet hôte de concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-112">Gets the container for this designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c01bc-113">
            <see cref="T:System.ComponentModel.IContainer" /> pour cet hôte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-113">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-114">Cela <xref:System.ComponentModel.IContainer> contient les composants du document en mode design en cours.</span><span class="sxs-lookup"><span data-stu-id="c01bc-114">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="c01bc-115">Vous pouvez répertorier ou accéder à tous les composants du document en mode design en cours via le <xref:System.ComponentModel.IContainer.Components%2A> membre de ce <xref:System.ComponentModel.IContainer>.</span><span class="sxs-lookup"><span data-stu-id="c01bc-115">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-116">Crée un composant du type spécifié et l'ajoute au document de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-116">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent componentClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="c01bc-117">Type du composant à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-117">The type of the component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c01bc-118">Crée un composant du type spécifié et l'ajoute au document de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-118">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c01bc-119">Nouveau composant qui vient d'être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-119">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-120">Si le type ne peut pas être résolu en un objet qui implémente <xref:System.ComponentModel.IComponent>, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c01bc-120">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="c01bc-121">Cette méthode ne spécifie pas un nom pour le composant.</span><span class="sxs-lookup"><span data-stu-id="c01bc-121">This method does not specify a name for the component.</span></span> <span data-ttu-id="c01bc-122">La méthode crée le composant et l’ajoute au conteneur du concepteur.</span><span class="sxs-lookup"><span data-stu-id="c01bc-122">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type * string -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent (componentClass, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="c01bc-123">Type du composant à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-123">The type of the component to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="c01bc-124">Nom du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-124">The name for the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c01bc-125">Crée un composant du type spécifié avec le nom donné et l'ajoute au document de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-125">Creates a component of the specified type and name, and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c01bc-126">Nouveau composant qui vient d'être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-126">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-127">Si le type ne peut pas être résolu en un objet qui implémente <xref:System.ComponentModel.IComponent>, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c01bc-127">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="c01bc-128">Cette méthode crée le composant et l’ajoute au conteneur du concepteur.</span><span class="sxs-lookup"><span data-stu-id="c01bc-128">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-129">Crée un <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> pouvant encapsuler des séquences d'événements afin d'améliorer les performances et de permettre l'annulation, ainsi que le rétablissement des fonctionnalités de prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-129">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : unit -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-130">Crée un <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> pouvant encapsuler des séquences d'événements afin d'améliorer les performances et de permettre l'annulation, ainsi que le rétablissement des fonctionnalités de prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-130">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c01bc-131">Nouvelle instance de <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-131">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="c01bc-132">Lorsque vous terminez les étapes de votre transaction, vous devez appeler <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> sur cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-132">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-133">Cette méthode crée un <xref:System.ComponentModel.Design.DesignerTransaction> qui peut être utilisé pour encapsuler une série d’opérations.</span><span class="sxs-lookup"><span data-stu-id="c01bc-133">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="c01bc-134">Les transactions du concepteur peuvent améliorer les performances, réduire le scintillement provoqué par plusieurs mises à jour lors d’un processus d’opérations et activer la plupart des opérations d’être annulées.</span><span class="sxs-lookup"><span data-stu-id="c01bc-134">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="c01bc-135">Les opérations de longue durée qui impliquent plusieurs composants peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="c01bc-135">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="c01bc-136">Ces événements peuvent provoquer des effets secondaires, tels que le scintillement ou dégradation des performances.</span><span class="sxs-lookup"><span data-stu-id="c01bc-136">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="c01bc-137">Lors de l’utilisation de plusieurs composants en même temps, ou définition de plusieurs propriétés sur un composant unique, vous pouvez améliorer les performances en effectuant ces modifications dans une transaction.</span><span class="sxs-lookup"><span data-stu-id="c01bc-137">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="c01bc-138">Certaines opérations gèrent la <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> et <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> événements et effectuer un travail uniquement lorsqu’une transaction n’est pas en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="c01bc-138">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="c01bc-139">Pour plus d’informations sur l’utilisation de transactions, consultez la documentation pour <xref:System.ComponentModel.Design.DesignerTransaction>.</span><span class="sxs-lookup"><span data-stu-id="c01bc-139">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="c01bc-140">Titre ou description de la nouvelle transaction qui vient d'être créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-140">A title or description for the newly created transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c01bc-141">Crée un <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> pouvant encapsuler des séquences d'événements afin d'améliorer les performances et de permettre l'annulation, ainsi que le rétablissement des fonctionnalités de prise en charge, à l'aide de la description de la transaction spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-141">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c01bc-142">Nouveau <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-142">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="c01bc-143">Une fois les étapes de la transaction terminées, vous devez appeler <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> sur cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-143">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-144">Cette méthode crée un <xref:System.ComponentModel.Design.DesignerTransaction> qui peut être utilisé pour encapsuler une série d’opérations.</span><span class="sxs-lookup"><span data-stu-id="c01bc-144">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="c01bc-145">Les transactions du concepteur peuvent améliorer les performances, réduire le scintillement provoqué par plusieurs mises à jour lors d’un processus d’opérations et activer la plupart des opérations d’être annulées.</span><span class="sxs-lookup"><span data-stu-id="c01bc-145">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="c01bc-146">Les opérations de longue durée qui impliquent plusieurs composants peuvent déclencher plusieurs événements.</span><span class="sxs-lookup"><span data-stu-id="c01bc-146">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="c01bc-147">Ces événements peuvent provoquer des effets secondaires, tels que le scintillement ou dégradation des performances.</span><span class="sxs-lookup"><span data-stu-id="c01bc-147">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="c01bc-148">Lors de l’utilisation de plusieurs composants en même temps, ou définition de plusieurs propriétés sur un composant unique, vous pouvez améliorer les performances en effectuant ces modifications dans une transaction.</span><span class="sxs-lookup"><span data-stu-id="c01bc-148">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="c01bc-149">Certaines opérations gèrent la <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> et <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> événements et effectuer un travail uniquement lorsqu’une transaction n’est pas en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="c01bc-149">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="c01bc-150">Pour plus d’informations sur l’utilisation de transactions, consultez la documentation pour <xref:System.ComponentModel.Design.DesignerTransaction>.</span><span class="sxs-lookup"><span data-stu-id="c01bc-150">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-151">Se produit lorsque ce concepteur est désactivé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-151">Occurs when this designer is deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-152">Un concepteur est désactivé avant qu’il n’est plus affiché.</span><span class="sxs-lookup"><span data-stu-id="c01bc-152">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member DestroyComponent : System.ComponentModel.IComponent -&gt; unit" Usage="iDesignerHost.DestroyComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="c01bc-153">Composant à détruire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-153">The component to destroy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c01bc-154">Détruit le composant spécifié et le supprime du conteneur du concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-154">Destroys the specified component and removes it from the designer container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDesigner : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.IDesigner" Usage="iDesignerHost.GetDesigner component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="c01bc-155">
            <see cref="T:System.ComponentModel.IComponent" /> pour lequel récupérer le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-155">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c01bc-156">Obtient l'instance de concepteur qui contient le composant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-156">Gets the designer instance that contains the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c01bc-157">
            <see cref="T:System.ComponentModel.Design.IDesigner" />, ou <see langword="null" /> s'il n'existe aucun concepteur pour le composant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-157">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerHost.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="c01bc-158">Nom du type à charger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-158">The name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c01bc-159">Obtient une instance du nom de type qualifié complet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-159">Gets an instance of the specified, fully qualified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c01bc-160">Objet de type du nom de type spécifié, ou <see langword="null" /> si le type est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-160">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTransaction : bool" Usage="System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-161">Obtient une valeur indiquant si l'hôte du concepteur se trouve actuellement dans une transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-161">Gets a value indicating whether the designer host is currently in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c01bc-162">
            <see langword="true" /> si une transaction est en cours ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-162">
              <see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-163">Se produit lorsque ce concepteur a terminé le chargement de son document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-163">Occurs when this designer completes loading its document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-164">Cet événement se produit après qu’un concepteur a terminé le chargement de son document.</span><span class="sxs-lookup"><span data-stu-id="c01bc-164">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-165">Obtient une valeur indiquant si l'hôte du concepteur charge actuellement le document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-165">Gets a value indicating whether the designer host is currently loading the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c01bc-166">
            <see langword="true" /> si l'hôte du concepteur charge actuellement le document ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-166">
              <see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-167">Obtient l'instance de la classe de base utilisée comme composant racine pour le design en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-167">Gets the instance of the base class used as the root component for the current design.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c01bc-168">Instance de la classe du composant racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-168">The instance of the root component class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-169">Cette classe de base est généralement un <xref:System.Windows.Forms.Form> ou <xref:System.Windows.Forms.UserControl> instance ; elle définit la classe pour lequel s’étend la classe dérivée de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c01bc-169">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponentClassName : string" Usage="System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-170">Obtient le nom qualifié complet de la classe dont le design est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-170">Gets the fully qualified name of the class being designed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c01bc-171">Nom qualifié complet de la classe du composant de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-171">The fully qualified name of the base component class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-172">Ajoute un gestionnaire d'événements pour l'événement <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-172">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-173">Cet événement se produit après la fermeture d’une transaction.</span><span class="sxs-lookup"><span data-stu-id="c01bc-173">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="c01bc-174">Une transaction peut parfois modifier plusieurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="c01bc-174">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="c01bc-175">Les méthodes de transaction fournissent un moyen d’empêcher les performances et de scintillement des problèmes en évitant le traitement répétitif.</span><span class="sxs-lookup"><span data-stu-id="c01bc-175">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="c01bc-176">Ces méthodes diffèrent le traitement jusqu'à après la fermeture de la transaction.</span><span class="sxs-lookup"><span data-stu-id="c01bc-176">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-177">Ajoute un gestionnaire d'événements pour l'événement <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-177">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-178">Cet événement se produit juste avant qu’une transaction est terminée.</span><span class="sxs-lookup"><span data-stu-id="c01bc-178">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="c01bc-179">Une transaction peut parfois modifier plusieurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="c01bc-179">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="c01bc-180">Les méthodes de transaction fournissent un moyen d’empêcher les performances et de scintillement des problèmes en évitant le traitement répétitif.</span><span class="sxs-lookup"><span data-stu-id="c01bc-180">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="c01bc-181">Ces méthodes diffèrent le traitement jusqu'à après la fermeture de la transaction.</span><span class="sxs-lookup"><span data-stu-id="c01bc-181">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionDescription : string" Usage="System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-182">Obtient la description de la transaction en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-182">Gets the description of the current transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c01bc-183">Description de la transaction en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-183">A description of the current transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-184">La description est spécifiée avec la description du dernier <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="c01bc-184">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpened : EventHandler " Usage="member this.TransactionOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-185">Ajoute un gestionnaire d'événements pour l'événement <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-185">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-186">Cet événement se produit lorsqu’une transaction a commencé.</span><span class="sxs-lookup"><span data-stu-id="c01bc-186">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="c01bc-187">Une transaction peut parfois modifier plusieurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="c01bc-187">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="c01bc-188">Les méthodes de transaction fournissent un moyen d’empêcher les performances et de scintillement des problèmes en évitant le traitement répétitif.</span><span class="sxs-lookup"><span data-stu-id="c01bc-188">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="c01bc-189">Ces méthodes diffèrent le traitement jusqu'à après la fermeture de la transaction.</span><span class="sxs-lookup"><span data-stu-id="c01bc-189">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpening : EventHandler " Usage="member this.TransactionOpening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c01bc-190">Ajoute un gestionnaire d'événements pour l'événement <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c01bc-190">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c01bc-191">Cet événement se produit lorsqu’une transaction est sur le point de commencer.</span><span class="sxs-lookup"><span data-stu-id="c01bc-191">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="c01bc-192">Cette méthode permet aux clients de hôte du concepteur effectuer des opérations avant d’autres gestionnaires sont informés qu’une transaction a commencé.</span><span class="sxs-lookup"><span data-stu-id="c01bc-192">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="c01bc-193">Le gestionnaire spécifié est appelé uniquement lorsque le premier appel à <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> est effectuée.</span><span class="sxs-lookup"><span data-stu-id="c01bc-193">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="c01bc-194">Les appels suivants ne génèrent pas cet événement jusqu'à ce que tous les objets de transaction ont été supprimés.</span><span class="sxs-lookup"><span data-stu-id="c01bc-194">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>