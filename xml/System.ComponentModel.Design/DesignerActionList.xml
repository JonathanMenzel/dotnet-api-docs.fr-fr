<Type Name="DesignerActionList" FullName="System.ComponentModel.Design.DesignerActionList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10a64b1e720e45a21b75989b25f904e3bcecc5fc" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56386454" /></Metadata><TypeSignature Language="C#" Value="public class DesignerActionList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionList" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionList" />
  <TypeSignature Language="F#" Value="type DesignerActionList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit la classe de base pour les types qui définissent une liste d'éléments utilisés pour créer un panneau des balises actives.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `DesignerAction` fonctionnalité permet aux composants et contrôles pour afficher des informations contextuelles et des commandes. Le `DesignerAction` fonctionnalité peut être considérée comme un remplacement pour les verbes de concepteur, car un <xref:System.ComponentModel.Design.DesignerActionItem> peuvent être affichées dans le panneau des balises actives, ainsi que dans le menu contextuel associé à un composant ou contrôle. Le <xref:System.ComponentModel.Design.DesignerActionList> classe représente le point d’interaction principal pour prendre en charge par les développeurs qui souhaitent ajouter des balises actives à leurs composants et contrôles personnalisés.  
  
 <xref:System.ComponentModel.Design.DesignerActionList> est la classe de base dérivée par les développeurs de composants pour remplir un panneau des balises actives. Un panneau des balises actives représente l’interface de type menu utilisateur (IU) pour les balises actives.  
  
 Cette classe dérivée peut implémenter la `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> méthode pour retourner une collection d’objets dérivés de <xref:System.ComponentModel.Design.DesignerActionItem>. Ces objets représentent les éléments de panneau de balises actives. Chaque élément est affiché dans le panneau de configuration selon son type. Par exemple, un <xref:System.ComponentModel.Design.DesignerActionTextItem> s’affiche en tant qu’étiquette de texte statique. Les éléments du panneau actifs, représentés par le <xref:System.ComponentModel.Design.DesignerActionPropertyItem> et <xref:System.ComponentModel.Design.DesignerActionMethodItem> types, ont une propriété accessible publiquement correspondante ou une méthode, respectivement, qui implémente les fonctionnalités pour cet élément.  
  
 Pour plus d’informations sur comment ajouter des éléments au panneau des balises actives, consultez le <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> (méthode).  
  
> [!NOTE]
>  Boîtes de dialogue et les formulaires peuvent être affichés en membres de la classe dérivée de <xref:System.ComponentModel.Design.DesignerActionList>. Par défaut, le parent de ces fenêtres sera la fenêtre du conteneur pour le panneau des balises actives. Parenté entre ces fenêtres enfants vers un autre service ou une fenêtre peut entraîner l’affichage incorrect des balises actives.  
>   
>  Panneaux de balises actives ne prennent en charge le défilement ou la pagination, donc veiller à ne pas remplir vos panneaux comportant de nombreux éléments de balise active. Trop d’éléments peut entraîner le panneau des balises actives qui s’étend au-delà de la limite de l’écran.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une collection de <xref:System.ComponentModel.Design.DesignerActionItem> objets.  
  
 Pour obtenir une explication complète de cet exemple de code, consultez [Comment : Attacher des balises actives à un composant de formulaires Windows](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#2)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Commandes du concepteur et modèle objet DesignerAction pour les Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionList (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionList(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionList : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionList" Usage="new System.ComponentModel.Design.DesignerActionList component" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ComponentModel.Design.DesignerActionList> constructeur affecte la <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> propriété `false`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une collection de <xref:System.ComponentModel.Design.DesignerActionItem> objets.  
  
 Pour obtenir une explication complète de cet exemple de code, consultez [Comment : Attacher des balises actives à un composant de formulaires Windows](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#4)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShow">
      <MemberSignature Language="C#" Value="public virtual bool AutoShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShow" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoShow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoShow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShow : bool with get, set" Usage="System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le panneau des balises actives doit être affiché automatiquement lorsqu'il est créé.</summary>
        <value><see langword="true" /> si le panneau doit être affiché lorsque le composant propriétaire est créé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la valeur de propriété est définie sur `true`, le composant auquel cet <xref:System.ComponentModel.Design.DesignerActionList> automatiquement n’est associé se développer et afficher le panneau des balises actives lorsque le composant est créé.  
  
 Vous pouvez désactiver ce comportement en définissant le <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=nameWithType> propriété `false`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une collection de <xref:System.ComponentModel.Design.DesignerActionItem> objets.  
  
 Pour obtenir une explication complète de cet exemple de code, consultez [Comment : Attacher des balises actives à un composant de formulaires Windows](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <value>Composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="designerActionList.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Service fourni par <see cref="T:System.ComponentModel.Component" />.</param>
        <summary>Retourne un objet qui représente un service fourni par le composant associé à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <returns><see cref="T:System.Object" /> qui représente un service fourni par <see cref="T:System.ComponentModel.Component" />. Cette valeur est <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> ne fournit pas le service spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortedActionItems">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortedActionItems () As DesignerActionItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionItemCollection ^ GetSortedActionItems();" />
      <MemberSignature Language="F#" Value="abstract member GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection&#xA;override this.GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection" Usage="designerActionList.GetSortedActionItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionItemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenus dans la liste.</summary>
        <returns>Tableau <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> qui contient les éléments de cette liste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> méthode est implémentée pour retourner, l’ordre d’affichage dans attendu, une collection d’objets dérivés de la <xref:System.ComponentModel.Design.DesignerActionItem> classe. Ces éléments peuvent être des types spécifiques suivants.  
  
|Type|Description |  
|----------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionHeaderItem>|L’étiquette de groupe, affichée en gras.|  
|<xref:System.ComponentModel.Design.DesignerActionTextItem>|Une étiquette, affichée dans une police ordinaire.|  
|<xref:System.ComponentModel.Design.DesignerActionPropertyItem>|Un panneau élément associé à une propriété. Peut également afficher une case à cocher ou un éditeur de propriété associé à la propriété sous-jacente.|  
|<xref:System.ComponentModel.Design.DesignerActionMethodItem>|Un élément de panneau affiché sous la forme d’un lien hypertexte et associé à une méthode.|  
  
 Pour chaque <xref:System.ComponentModel.Design.DesignerActionMethodItem> et <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, une méthode correspondante ou une propriété doit être ajoutée à la classe fournies par le programmeur est dérivée le <xref:System.ComponentModel.Design.DesignerActionList> classe. Chaque élément de méthode et la propriété s’affiche comme une entrée active ; interagir avec lui via l’interface utilisateur (IU) appelle la méthode correspondante ou la propriété, respectivement.  
  
 Éléments de propriété ont une interface d’élément de panneau spéciale qui active l’affichage et manipulation de leurs valeurs de propriété correspondantes. Pour plus d'informations, consultez la classe <xref:System.ComponentModel.Design.DesignerActionPropertyItem>.  
  
 L’ordre des éléments dans le tableau retourné reflète l’ordre d’apparition dans le panneau de configuration. Les éléments sont regroupés en fonction de la <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> propriété, en utilisant les règles suivantes :  
  
-   La catégorie du premier élément rencontré signifie le démarrage du premier groupe. Ce groupe continue tant que chaque élément suivant est de la même catégorie. Lorsqu’un élément d’une nouvelle catégorie différente est rencontré, un nouveau groupe est créé et l’élément se trouve qu’il contient.  
  
-   Si un élément a un type différent de celui du groupe actuel, mais cette catégorie a déjà été utilisée, l’élément est placé dans la catégorie existante correspondante.  
  
-   Si un élément n’a pas d’une catégorie, il est placé dans un groupe divers à la fin du panneau. Ce groupe contient également des éléments dont <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A> propriété est définie sur `false`.  
  
 Le <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> méthode est appelée lorsque le panneau est créé. Vous devez appeler la <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A> méthode pour mettre à jour la liste d’éléments affichés dans le panneau de configuration.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une collection de <xref:System.ComponentModel.Design.DesignerActionItem> objets.  
  
 Pour obtenir une explication complète de cet exemple de code, consultez [Comment : Attacher des balises actives à un composant de formulaires Windows](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>