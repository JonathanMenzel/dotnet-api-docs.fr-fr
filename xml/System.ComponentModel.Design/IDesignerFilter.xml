<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d708c-101">Fournit une interface permettant à un concepteur d'accéder et de filtrer les dictionnaires d'un <see cref="T:System.ComponentModel.TypeDescriptor" /> qui stocke les descripteurs de propriétés, d'attributs et d'événements qu'un concepteur de composant peut exposer dans l'environnement au moment du design.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d708c-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-102"><xref:System.ComponentModel.Design.IDesignerFilter> permet à un concepteur filtrer le jeu de descripteurs de propriété, d’attribut et d’événement que le composant associé expose à l’aide d’un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="d708c-103">Les méthodes de cette interface dont les noms commencent par `Pre` sont appelées immédiatement avant les méthodes dont les noms commencent par `Post`.</span><span class="sxs-lookup"><span data-stu-id="d708c-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="d708c-104">Si vous souhaitez ajouter l’attribut, les événements ou les descripteurs de propriété, utilisez un <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, ou <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d708c-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="d708c-105">Si vous souhaitez modifier ou supprimer l’attribut, les événements ou les descripteurs de propriété, utilisez un <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, ou <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d708c-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d708c-106">L’exemple suivant illustre une substitution de <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> qui ajoute une propriété du concepteur à la fenêtre Propriétés lorsque le contrôle du concepteur est sélectionné au moment du design.</span><span class="sxs-lookup"><span data-stu-id="d708c-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="d708c-107">Consultez l’exemple de la <xref:System.Windows.Forms.Design.ControlDesigner> classe pour un exemple de concepteur complet qui utilise le <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span><span class="sxs-lookup"><span data-stu-id="d708c-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="d708c-108">Objets <see cref="T:System.Attribute" /> de la classe du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="d708c-109">Les clés du dictionnaire d'attributs sont les valeurs <see cref="P:System.Attribute.TypeId" /> des attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d708c-110">Lorsqu'elle est substituée dans une classe dérivée, permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble d'attributs qu'il expose par le biais d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-111">Cette méthode fournit un moyen pour modifier ou supprimer des éléments au sein du dictionnaire d’attributs que le composant associé du concepteur implémentant cette interface expose via une <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d708c-112">Les clés du dictionnaire d’attributs sont les identificateurs de type des attributs.</span><span class="sxs-lookup"><span data-stu-id="d708c-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="d708c-113">Les objets sont de type <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="d708c-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="d708c-114">Cette méthode est appelée immédiatement après <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="d708c-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="d708c-115">L’ID de type d’un attribut peut être n’importe quel objet.</span><span class="sxs-lookup"><span data-stu-id="d708c-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="d708c-116">Par défaut, <xref:System.Attribute> retourne ses <xref:System.Type> comme valeur de son <xref:System.Attribute.TypeId%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d708c-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="d708c-117">Vous pouvez vérifier le <xref:System.Attribute.TypeId%2A> d’un attribut dans le dictionnaire pour l’équivalence avec un autre <xref:System.Attribute.TypeId%2A> pour un attribut pour l’identifier, ou utilisez <xref:System.Reflection> pour identifier l’objet de l’attribut lui-même.</span><span class="sxs-lookup"><span data-stu-id="d708c-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="d708c-118">Lorsqu’un attribut ayant le même <xref:System.Attribute.TypeId%2A> comme un attribut existant ou hérité est ajouté à un composant, le nouvel attribut remplace l’ancien.</span><span class="sxs-lookup"><span data-stu-id="d708c-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="d708c-119">Pour beaucoup d’attributs, un nouvel attribut du même type remplace tout attribut précédente du type.</span><span class="sxs-lookup"><span data-stu-id="d708c-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="d708c-120">Toutefois, certains types d’attributs retournent un <xref:System.Attribute.TypeId%2A> qui distingue l’attribut de manière sélective.</span><span class="sxs-lookup"><span data-stu-id="d708c-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="d708c-121">Par exemple, afin de fournir des différents types de concepteurs simultanément actifs pour un type, comme un <xref:System.ComponentModel.Design.IRootDesigner> et un <xref:System.ComponentModel.Design.IDesigner>, le <xref:System.ComponentModel.DesignerAttribute> classe retourne un <xref:System.Attribute.TypeId%2A> qui identifie de façon unique l’attribut et le Concepteur de base type.</span><span class="sxs-lookup"><span data-stu-id="d708c-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="d708c-122">Le <xref:System.ComponentModel.DesignerAttribute> constructeur vous permet de spécifier le type de Concepteur de base du concepteur en plus de son type spécifique, et <xref:System.ComponentModel.DesignerAttribute> retourne un <xref:System.Attribute.TypeId%2A> qui indique ce nom.</span><span class="sxs-lookup"><span data-stu-id="d708c-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="d708c-123">Par conséquent, lorsque vous ajoutez un nouveau <xref:System.ComponentModel.DesignerAttribute> avec un type de Concepteur de base du même type que le type de Concepteur de base d’un objet <xref:System.ComponentModel.DesignerAttribute>, l’ancien attribut est remplacé par le nouvel attribut.</span><span class="sxs-lookup"><span data-stu-id="d708c-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d708c-124">Vous pouvez directement filtrer le dictionnaire qui est accessible via la <paramref name="attributes" /> paramètre, ou vous pouvez la laisser inchangée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-124">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="d708c-125">Si vous substituez cette méthode, appelez l’implémentation de base après avoir effectué votre propre filtrage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-125">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="d708c-126">Objets <see cref="T:System.ComponentModel.EventDescriptor" /> représentant les événements de la classe du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="d708c-127">Les clés du dictionnaire d'événements sont des noms d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-127">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d708c-128">Lorsqu'elle est substituée dans une classe dérivée, permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble d'événements qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-129">Cette méthode fournit un moyen pour modifier ou supprimer des éléments au sein du dictionnaire d’événements qui sont exposées par un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-129">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d708c-130">Les clés du dictionnaire d’événements sont les noms des événements.</span><span class="sxs-lookup"><span data-stu-id="d708c-130">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="d708c-131">Les objets sont de type <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-131">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="d708c-132">Cette méthode est appelée immédiatement après <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="d708c-132">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d708c-133">Vous pouvez directement filtrer le dictionnaire qui est accessible via la <paramref name="events" /> paramètre, ou vous pouvez la laisser inchangée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-133">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="d708c-134">Si vous substituez cette méthode, appelez l’implémentation de base après avoir effectué votre propre filtrage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-134">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="d708c-135">Objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> représentant les propriétés de la classe du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="d708c-136">Les clés du dictionnaire de propriétés sont des noms de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-136">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d708c-137">Lorsqu'elle est substituée dans une classe dérivée, permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble de propriétés qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-138">Cette méthode fournit un moyen pour modifier ou supprimer des éléments au sein du dictionnaire de propriétés qui sont exposées via un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-138">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d708c-139">Les clés dans le dictionnaire de propriétés sont les noms des propriétés.</span><span class="sxs-lookup"><span data-stu-id="d708c-139">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="d708c-140">Les objets sont de type <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-140">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="d708c-141">Cette méthode est appelée immédiatement après <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="d708c-141">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d708c-142">Vous pouvez directement filtrer le dictionnaire qui est accessible via la <paramref name="properties" /> paramètre, ou vous pouvez la laisser inchangée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-142">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="d708c-143">Si vous substituez cette méthode, appelez l’implémentation de base après avoir effectué votre propre filtrage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-143">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="d708c-144">Objets <see cref="T:System.Attribute" /> de la classe du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="d708c-145">Les clés du dictionnaire d'attributs sont les valeurs <see cref="P:System.Attribute.TypeId" /> des attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d708c-146">Lorsqu'elle est substituée dans une classe dérivée, permet à un concepteur d'ajouter des éléments à l'ensemble d'attributs qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-147">Cette méthode fournit un moyen pour ajouter des éléments au dictionnaire d’attributs que le composant associé du concepteur implémentant cette interface expose via une <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-147">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d708c-148">Les clés du dictionnaire d’attributs sont les identificateurs de type des attributs.</span><span class="sxs-lookup"><span data-stu-id="d708c-148">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="d708c-149">Les objets sont de type <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="d708c-149">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="d708c-150">Cette méthode est appelée immédiatement avant <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="d708c-150">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="d708c-151">L’ID de type d’un attribut peut être n’importe quel objet.</span><span class="sxs-lookup"><span data-stu-id="d708c-151">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="d708c-152">Par défaut, <xref:System.Attribute> retourne ses <xref:System.Type> comme valeur de son <xref:System.Attribute.TypeId%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d708c-152">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="d708c-153">Vous pouvez vérifier le <xref:System.Attribute.TypeId%2A> d’un attribut dans le dictionnaire pour l’équivalence avec un autre <xref:System.Attribute.TypeId%2A> pour un attribut pour l’identifier, ou utilisez <xref:System.Reflection> pour identifier l’objet de l’attribut lui-même.</span><span class="sxs-lookup"><span data-stu-id="d708c-153">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="d708c-154">Lorsqu’un attribut ayant le même <xref:System.Attribute.TypeId%2A> comme un attribut existant ou hérité est ajouté à un composant, le nouvel attribut remplace l’ancien.</span><span class="sxs-lookup"><span data-stu-id="d708c-154">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="d708c-155">Pour beaucoup d’attributs, un nouvel attribut du même type remplace tout attribut précédente du type.</span><span class="sxs-lookup"><span data-stu-id="d708c-155">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="d708c-156">Toutefois, certains types d’attributs retournent un <xref:System.Attribute.TypeId%2A> qui distingue l’attribut de manière sélective.</span><span class="sxs-lookup"><span data-stu-id="d708c-156">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="d708c-157">Par exemple, afin de fournir des différents types de concepteurs simultanément actifs pour un type, comme un <xref:System.ComponentModel.Design.IRootDesigner> et un <xref:System.ComponentModel.Design.IDesigner>, le <xref:System.ComponentModel.DesignerAttribute> classe retourne un <xref:System.Attribute.TypeId%2A> qui identifie de façon unique l’attribut et le Concepteur de base type.</span><span class="sxs-lookup"><span data-stu-id="d708c-157">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="d708c-158">Le <xref:System.ComponentModel.DesignerAttribute> constructeur vous permet de spécifier le type de Concepteur de base du concepteur en plus de son type spécifique, et <xref:System.ComponentModel.DesignerAttribute> retourne un <xref:System.Attribute.TypeId%2A> qui indique ce nom.</span><span class="sxs-lookup"><span data-stu-id="d708c-158">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="d708c-159">Par conséquent, lorsque vous ajoutez un nouveau <xref:System.ComponentModel.DesignerAttribute> avec un type de Concepteur de base du même type que le type de Concepteur de base d’un objet <xref:System.ComponentModel.DesignerAttribute>, l’ancien attribut est remplacé par le nouvel attribut.</span><span class="sxs-lookup"><span data-stu-id="d708c-159">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d708c-160">Vous pouvez directement filtrer le dictionnaire qui est accessible via la <paramref name="attributes" /> paramètre, ou vous pouvez la laisser inchangée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-160">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="d708c-161">Si vous substituez cette méthode, appelez l’implémentation de base après avoir effectué votre propre filtrage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-161">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="d708c-162">Objets <see cref="T:System.ComponentModel.EventDescriptor" /> représentant les événements de la classe du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="d708c-163">Les clés du dictionnaire d'événements sont des noms d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-163">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d708c-164">Lorsqu'elle est substituée dans une classe dérivée, permet à un concepteur d'ajouter des éléments à l'ensemble d'événements qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-165">Cette méthode fournit un moyen pour ajouter des éléments au dictionnaire d’événements qu’un concepteur expose via une <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-165">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d708c-166">Les clés du dictionnaire d’événements sont les noms des événements.</span><span class="sxs-lookup"><span data-stu-id="d708c-166">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="d708c-167">Les objets sont de type <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-167">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="d708c-168">Cette méthode est appelée immédiatement avant <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="d708c-168">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d708c-169">Vous pouvez modifier directement le dictionnaire qui est accessible via la <paramref name="events" /> paramètre, ou vous pouvez la laisser inchangée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-169">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="d708c-170">Si vous substituez cette méthode, appelez l’implémentation de base avant d’effectuer votre propre filtrage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-170">If you are overriding this method, call the base implementation before you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="d708c-171">Objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> représentant les propriétés de la classe du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="d708c-172">Les clés du dictionnaire de propriétés sont des noms de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-172">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d708c-173">Lorsqu'elle est substituée dans une classe dérivée, permet à un concepteur d'ajouter des éléments à l'ensemble de propriétés qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d708c-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d708c-174">Cette méthode fournit un moyen pour ajouter des éléments au dictionnaire de propriétés qu’un concepteur expose via une <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-174">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d708c-175">Les clés dans le dictionnaire de propriétés sont les noms des propriétés.</span><span class="sxs-lookup"><span data-stu-id="d708c-175">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="d708c-176">Les objets sont de type <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d708c-176">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="d708c-177">Cette méthode est appelée immédiatement avant <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="d708c-177">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d708c-178">Vous pouvez modifier directement le dictionnaire qui est accessible via la <paramref name="properties" /> paramètre, ou vous pouvez la laisser inchangée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-178">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="d708c-179">Si vous substituez cette méthode, appelez l’implémentation de base avant d’effectuer votre propre filtrage.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d708c-179">If you are overriding this method, call the base implementation before you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>