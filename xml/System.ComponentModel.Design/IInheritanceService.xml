<Type Name="IInheritanceService" FullName="System.ComponentModel.Design.IInheritanceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7727cd569d3c872c7cd3fff6591feb7bbb8f771" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37695723" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInheritanceService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInheritanceService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IInheritanceService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInheritanceService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInheritanceService" />
  <TypeSignature Language="F#" Value="type IInheritanceService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes pour identifier les composants d'un composant.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface fournit des méthodes qui peuvent être utilisés pour identifier les composants d’un composant qui sont héritées d’une classe de base.  
  
 Pour déterminer quels composants sont héritées, appelez le <xref:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents%2A> (méthode) et passez le composant à rechercher et un <xref:System.ComponentModel.IContainer> pour stocker les références aux composants identifiés. Appelez le <xref:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute%2A> méthode pour récupérer un <xref:System.ComponentModel.InheritanceAttribute> pour un composant qui a été identifié par le <xref:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents%2A> (méthode).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
  </Docs>
  <Members>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInheritedComponents (component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInheritedComponents(System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="iInheritanceService.AddInheritedComponents (component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> à rechercher. La recherche commence par ce composant.</param>
        <param name="container">
          <see cref="T:System.ComponentModel.IContainer" /> où les composants doivent être ajoutés.</param>
        <summary>Recherche les champs qui implémentent l'interface <see cref="T:System.ComponentModel.IComponent" /> dans le composant spécifié et les ajoute au conteneur spécifié en stockant leur niveau d'héritage, qui peut être récupéré en utilisant la méthode <see cref="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche le composant spécifié pour tous les champs qui implémentent le <xref:System.ComponentModel.IComponent>, ajoute au conteneur spécifié et stocke un <xref:System.ComponentModel.InheritanceAttribute> pour chacun. Le <xref:System.ComponentModel.InheritanceAttribute> pour un composant indique si le champ est hérité à partir d’une classe de base et peut être récupéré en utilisant la <xref:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritanceAttribute (component As IComponent) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::InheritanceAttribute ^ GetInheritanceAttribute(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute" Usage="iInheritanceService.GetInheritanceAttribute component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> pour lequel l'attribut d'héritage doit être récupéré.</param>
        <summary>Obtient l'attribut d'héritage du composant spécifié.</summary>
        <returns>Instance de <see cref="T:System.ComponentModel.InheritanceAttribute" /> qui décrit le niveau d'héritage du composant spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le composant a été profilé par la <xref:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents%2A> (méthode), cette méthode retourne la valeur <xref:System.ComponentModel.InheritanceAttribute.NotInherited?displayProperty=nameWithType>. Sinon, elle retourne l’attribut d’héritage pour ce composant.  
  
 Vous devez appeler <xref:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents%2A> sur le composant spécifié ou un parent du composant spécifié avant d’essayer d’obtenir un <xref:System.ComponentModel.InheritanceAttribute> qui reflète le niveau d’héritage du composant spécifié.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>