<Type Name="IDesignerOptionService" FullName="System.ComponentModel.Design.IDesignerOptionService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6385d4a6da782f2b69547f875c43270d93f28fc2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37696181" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerOptionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerOptionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerOptionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerOptionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerOptionService" />
  <TypeSignature Language="F#" Value="type IDesignerOptionService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Permet d’accéder aux options du concepteur figurant dans le menu **Outils** sous la commande **Options** dans l’environnement de développement Visual Studio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerOptionService> Fournit une interface qui peut être utilisée pour récupérer et mettre à jour les valeurs des options de Windows Forms Designer, qui sont répertoriées dans la boîte de dialogue affichée par le **Options** commande de la **outils** menu de la Environnement de développement Visual Studio. Le <xref:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue%2A> méthode récupère la valeur d’une option spécifiée. Le <xref:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue%2A> méthode définit une valeur spécifiée pour une option spécifiée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’accès à la <xref:System.ComponentModel.Design.IDesignerOptionService> pour afficher les valeurs actuelles des options standards.  
  
 [!code-cpp[IDesignerOptionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#1)]
 [!code-csharp[IDesignerOptionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#1)]
 [!code-vb[IDesignerOptionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="GetOptionValue">
      <MemberSignature Language="C#" Value="public object GetOptionValue (string pageName, string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOptionValue(string pageName, string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOptionValue (pageName As String, valueName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOptionValue(System::String ^ pageName, System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="abstract member GetOptionValue : string * string -&gt; obj" Usage="iDesignerOptionService.GetOptionValue (pageName, valueName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pageName">Nom de la page qui définit l'option.</param>
        <param name="valueName">Nom de la propriété de l'option.</param>
        <summary>Obtient la valeur de l'option du Concepteur Windows Forms spécifiée.</summary>
        <returns>Valeur de l'option spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `pageName` paramètre doit être composé de « WindowsFormsDesigner\\*CategoryName*», où *CategoryName* est un nom de catégorie d’options sans espace blanc. Le nom de catégorie est généralement « général ». Par conséquent, vous pouvez accéder de la catégorie « Général » options du concepteur avec le nom de la page en anglais « WindowsFormsDesigner\General ».  
  
> [!NOTE]
>  Les noms de page et la valeur sont supposées toujours en anglais. Par conséquent, le tableau suivant est fourni pour vous aider à accéder aux options que vous souhaitez.  
  
 Le tableau suivant indique les noms de valeurs en anglais, leur format de données et une description de chacun d’eux :  
  
|Nom de la valeur|Format de valeur|Description |  
|----------------|------------------|-----------------|  
|GridSize|<xref:System.Drawing.Size>|La taille de chaque carré de la grille.|  
|GridSize.Width|<xref:System.Int32>|La largeur de chaque carré de la grille. Cette propriété imbriquée est en lecture seule lors de l’accès via le service d’options de concepteur.|  
|GridSize.Height|<xref:System.Int32>|La hauteur de chaque carré de la grille. Cette propriété imbriquée est en lecture seule lors de l’accès via le service d’options de concepteur.|  
|ShowGrid|<xref:System.Boolean>|`true` Si la grille doit être affichée ; `false` si la grille ne doit pas être affichée.|  
|SnapToGrid|<xref:System.Boolean>|`true` Si les positions des composants doivent être alignées sur la grille ; `false` si les positions ne doivent pas nécessairement être alignées.|  
|LayoutMode|`Microsoft.VisualStudio.Windows.Forms.LayoutMode`|`SnapLines` Pour utiliser les lignes d’alignement, ou `SnapToGrid` pour aligner des contrôles à la grille,|  
|ObjectBoundSmartTagAutoShow|<xref:System.Boolean>|`true` pour permettre au panneau des balises actives d'un composant de s'ouvrir automatiquement au moment de la création ; sinon, `false`.|  
|AutoToolboxPopulate a|<xref:System.Boolean>|`true` Pour ajouter automatiquement les contrôles personnalisés et les composants à une solution le **boîte à outils**; sinon, `false`.|  
|UseOptimizedCodeGeneration|<xref:System.Boolean>|`true` si le cache du composant est activé ; sinon `false`.|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue%2A> méthode à la requête pour la valeur de la `GridSize` option.  
  
 [!code-cpp[IDesignerOptionServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#2)]
 [!code-csharp[IDesignerOptionServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#2)]
 [!code-vb[IDesignerOptionServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="SetOptionValue">
      <MemberSignature Language="C#" Value="public void SetOptionValue (string pageName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOptionValue(string pageName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOptionValue (pageName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOptionValue(System::String ^ pageName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionValue : string * string * obj -&gt; unit" Usage="iDesignerOptionService.SetOptionValue (pageName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageName">Nom de la page qui définit l'option.</param>
        <param name="valueName">Nom de la propriété de l'option.</param>
        <param name="value">Nouvelle valeur.</param>
        <summary>Définit la valeur de l'option du Concepteur Windows Forms spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `pageName` paramètre doit être composé de « WindowsFormsDesigner\C*ategoryName*», où *CategoryName* est un nom de catégorie d’options sans espace blanc. Le nom de catégorie est généralement « général ». Par conséquent, vous pouvez accéder de la catégorie « Général » options du concepteur avec le nom de la page en anglais « WindowsFormsDesigner\General ».  
  
> [!NOTE]
>  Les noms de page et la valeur sont supposées toujours en anglais. Par conséquent, le tableau suivant est fourni pour vous aider à accéder aux options que vous souhaitez.  
  
 Le tableau suivant indique les noms de valeurs en anglais, leur format de données et une description de chacun d’eux :  
  
|Nom de la valeur|Format de valeur|Description |  
|----------------|------------------|-----------------|  
|GridSize|<xref:System.Drawing.Size>|La taille de chaque carré de la grille.|  
|GridSize.Width|<xref:System.Int32>|La largeur de chaque carré de la grille. Cette propriété imbriquée est en lecture seule lors de l’accès via le service d’options de concepteur.|  
|GridSize.Height|<xref:System.Int32>|La hauteur de chaque carré de la grille. Cette propriété imbriquée est en lecture seule lors de l’accès via le service d’options de concepteur.|  
|ShowGrid|<xref:System.Boolean>|`true` Si la grille doit être affichée ; `false` si la grille ne doit pas être affichée.|  
|SnapToGrid|<xref:System.Boolean>|`true` Si les positions des composants doivent être alignées sur la grille ; `false` si les positions ne doivent pas nécessairement être alignées.|  
|LayoutMode|`Microsoft.VisualStudio.Windows.Forms.LayoutMode`|`SnapLines` Pour utiliser les lignes d’alignement, ou `SnapToGrid` pour aligner des contrôles à la grille,|  
|ObjectBoundSmartTagAutoShow|<xref:System.Boolean>|`true` pour permettre au panneau des balises actives d'un composant de s'ouvrir automatiquement au moment de la création ; sinon, `false`.|  
|AutoToolboxPopulate a|<xref:System.Boolean>|`true` Pour ajouter automatiquement les contrôles personnalisés et les composants à une solution le **boîte à outils**; sinon, `false`.|  
|UseOptimizedCodeGeneration|<xref:System.Boolean>|`true` si le cache du composant est activé ; sinon `false`.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
  </Members>
</Type>