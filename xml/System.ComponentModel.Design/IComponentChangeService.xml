<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComponentChangeService.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5647abc567c7d8f53c334f9c393caa36a6e7443a4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">647abc567c7d8f53c334f9c393caa36a6e7443a4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Provides an interface to add and remove the event handlers for events that add, change, remove or rename components, and provides methods to raise a <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> event.</source>
          <target state="translated">Fournit une interface permettant d'ajouter et de supprimer les gestionnaires d'événements pour les événements qui ajoutent, modifient, suppriment ou renomment des composants, et fournit des méthodes pour déclencher un événement <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> ou <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> provides an interface that can be used to indicate the methods that handle the following events:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> Fournit une interface qui peut être utilisée pour indiquer les méthodes qui gèrent les événements suivants :</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&gt;</ph>, raised when a component is added.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&gt;</ph>, déclenché lorsqu’un composant est ajouté.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&gt;</ph>, raised when a component is about to be added.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&gt;</ph>, déclenché lorsqu’un composant est sur le point d’être ajouté.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph>, raised when a component is changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph>, déclenché lorsqu’un composant est modifié.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph>, raised when a component is about to be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph>, déclenché lorsqu’un composant est sur le point d’être modifié.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&gt;</ph>, raised when a component is removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&gt;</ph>, déclenché lorsqu’un composant est supprimé.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&gt;</ph>, raised when a component is about to be removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&gt;</ph>, déclenché lorsqu’un composant est sur le point d’être supprimé.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename&gt;</ph>, raised when a component is renamed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename&gt;</ph>, déclenché lorsqu’un composant est renommé.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Typically, the design environment raises these component add, change, remove, or rename events.</source>
          <target state="translated">En règle générale, l’environnement de design déclenche ces ajouter de composant, modifier, supprimer ou renommer des événements.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Designers should call the methods of this interface when using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> objects to provide undo and redo functionality for design-time actions that affect components.</source>
          <target state="translated">Les concepteurs doivent appeler les méthodes de cette interface lors de l’utilisation <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> objets à proposer d’annulation et rétablissement des fonctionnalités pour les actions au moment du design qui affectent les composants.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>More information is available in the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">Informations supplémentaires sont disponibles dans la documentation de <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Generally, only the root designer handles these change notifications.</source>
          <target state="translated">En général, seul le concepteur racine gère ces notifications de modification.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>This service also provides methods that raise a component changed event or component changing event.</source>
          <target state="translated">Ce service fournit également des méthodes qui déclenchent un événement de composant a changé ou de la modification d’un événement de composant.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> or a component can indicate that a component has changed or is changing with the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> ou un composant peut indiquer qu’un composant a été modifié ou est modifié avec la <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>This following example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interface to receive notifications about the addition of, removal of, and changes to components in design mode.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interface pour recevoir des notifications sur l’ajout de, la suppression d’et les modifications apportées aux composants en mode Création.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
          <source>Occurs when a component has been added.</source>
          <target state="translated">Se produit suite à l'ajout d'un composant.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
          <source>This event occurs during load and when new components are created by the user, after the component has been sited.</source>
          <target state="translated">Cet événement se produit pendant le chargement et lorsque les nouveaux composants sont créés par l’utilisateur, une fois que le composant a été installé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>Occurs when a component is in the process of being added.</source>
          <target state="translated">Se produit pendant le processus d'ajout d'un composant.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>This event occurs during load and when the user creates a new component.</source>
          <target state="translated">Cet événement se produit pendant le chargement et lorsque l’utilisateur crée un nouveau composant.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>You can cancel the process of adding a component by throwing an exception here.</source>
          <target state="translated">Vous pouvez annuler le processus d’ajout d’un composant en levant une exception ici.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>Occurs when a component has been changed.</source>
          <target state="translated">Se produit suite à la modification d'un composant.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>This event occurs when any component on the form changes.</source>
          <target state="translated">Cet événement se produit lorsque n’importe quel composant sur le formulaire.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>This event will not occur during form load and unload, because changes are expected at this time.</source>
          <target state="translated">Cet événement ne se produisent pendant le chargement et le déchargement, car des modifications sont prévues pour l’instant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> can raise multiple <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> events.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> peut déclencher plusieurs <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> événements.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>Some <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handlers can interfere with expected sequences of events, such as if your code alters the values of properties while a transaction is occurring.</source>
          <target state="translated">Certains <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> gestionnaires d’événements peuvent interférer avec une séquence attendue d’événements, par exemple si votre code modifie les valeurs des propriétés lorsqu’une transaction se produit.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler can also impair performance if it draws after each change while a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> is in progress.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> Gestionnaire d’événements peut également affecter les performances s’il redessine après chaque modification alors qu’un <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>In order to allow a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> in process to complete without interruption or interference by your <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler, you can test the state of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A&gt;</ph> property, and defer handling the change events until the completion of the transaction by adding a <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler&gt;</ph> which will raise your <ph id="ph5">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler and remove itself upon completion of the transaction.</source>
          <target state="translated">Pour permettre une <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> en cours se termine sans interruption ni interférence par votre <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> Gestionnaire d’événements, vous pouvez tester l’état de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A&gt;</ph> propriété et différer les événements de modification jusqu'à la fin de la transaction en ajoutant un <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler&gt;</ph> qui génère votre <ph id="ph5">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> Gestionnaire d’événements et supprimer lui-même à l’achèvement de la transaction.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>Occurs when a component is in the process of being changed.</source>
          <target state="translated">Se produit pendant le processus de modification d'un composant.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>This event occurs before the component is actually changed, and gives the designer a chance to abort the change or perform any pre-change processing.</source>
          <target state="translated">Cet événement se produit avant que le composant est réellement modifié et permet le Concepteur d’annuler la modification ou effectuer tout traitement préalable à une modification.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>This event does not occur during form load and unload, because changes are expected at this time.</source>
          <target state="translated">Cet événement ne se produisent pendant le chargement et le déchargement, car des modifications sont prévues pour l’instant.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>Occurs when a component has been removed.</source>
          <target state="translated">Se produit suite à la suppression d'un composant.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>This event occurs during unload and when a component is deleted by the user.</source>
          <target state="translated">Cet événement se produit pendant le déchargement et lorsqu’un composant est supprimé par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>The event occurs before the site has been removed from the component.</source>
          <target state="translated">L’événement se produit avant que le site a été supprimé à partir du composant.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>Occurs when a component is in the process of being removed.</source>
          <target state="translated">Se produit pendant le processus de suppression d'un composant.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>This event occurs during unload and when the user deletes a component.</source>
          <target state="translated">Cet événement se produit pendant le déchargement et lorsque l’utilisateur supprime un composant.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>You can cancel the process of removing a component by throwing an exception here.</source>
          <target state="translated">Vous pouvez annuler le processus de suppression d’un composant en levant une exception ici.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
          <source>Occurs when a component is renamed.</source>
          <target state="translated">Se produit lorsqu'un composant est renommé.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
          <source>This event occurs after the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event when a component has been renamed.</source>
          <target state="translated">Cet événement se produit après la <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> événement lorsqu’un composant a été renommé.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The component that has changed.</source>
          <target state="translated">Composant modifié.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The member that has changed.</source>
          <target state="translated">Membre modifié.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this change is not related to a single member.</source>
          <target state="translated">Il est <ph id="ph1">&lt;see langword="null" /&gt;</ph> si cette modification n'est pas liée à un membre unique.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The old value of the member.</source>
          <target state="translated">Ancienne valeur du membre.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is valid only if the member is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ceci est valide uniquement si le membre n'est pas <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The new value of the member.</source>
          <target state="translated">Nouvelle valeur du membre.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is valid only if the member is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ceci est valide uniquement si le membre n'est pas <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Announces to the component change service that a particular component has changed.</source>
          <target state="translated">Avertit le service de modification du composant qu'un composant particulier a été modifié.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event.</source>
          <target state="translated">Cette méthode déclenche la <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Most designers that ship with the <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, as well as the Visual Studio design-time environment, typically raise this event for you when a component in a project is changed, so most of the time you do not need to explicitly call this method.</source>
          <target state="translated">La plupart des concepteurs qui sont fournis avec le <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, ainsi que de l’environnement au moment du design de Visual Studio, généralement déclencher cet événement pour vous lorsqu’un composant dans un projet êtes modifié, la plupart du temps, vous ne souhaitez pas explicitement appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The appropriate <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> events are automatically raised when a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is used to change a property value or components are added or removed from the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> container.</source>
          <target state="translated">Approprié <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> les événements sont automatiquement déclenché quand un <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> est utilisé pour modifier une propriété de valeur ou des composants sont ajoutés ou supprimés de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> conteneur.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Before calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, first call <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> to indicate that a component is about to change, and make the change.</source>
          <target state="translated">Avant d’appeler <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, appelez d’abord <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> pour indiquer qu’un composant est sur le point de modifier et apporter les modifications.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Then call <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event.</source>
          <target state="translated">Appelez ensuite <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> pour déclencher le <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This event allows the implementer to do any post-processing that is needed after a property change.</source>
          <target state="translated">Cet événement permet à l’implémenteur d’effectuer tout traitement nécessaire après une modification de propriété.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>For example, a designer typically updates the source code that sets the property with the new value.</source>
          <target state="translated">Par exemple, un concepteur met généralement à jour le code source qui définit la propriété avec la nouvelle valeur.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The component that is about to change.</source>
          <target state="translated">Composant sur le point d'être modifié.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The member that is changing.</source>
          <target state="translated">Membre en cours de modification.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this change is not related to a single member.</source>
          <target state="translated">Il est <ph id="ph1">&lt;see langword="null" /&gt;</ph> si cette modification n'est pas liée à un membre unique.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Announces to the component change service that a particular component is changing.</source>
          <target state="translated">Avertit le service de modification du composant qu'un composant particulier est en cours de modification.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph> event.</source>
          <target state="translated">Cette méthode déclenche la <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Most designers included with the <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, as well as the Visual Studio design-time environment, typically raise this event automatically; so most of the time, you do not need to explicitly call this method.</source>
          <target state="translated">La plupart des concepteurs inclus dans le <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, ainsi que de l’environnement au moment du design de Visual Studio, déclenche généralement cet événement automatiquement ; par conséquent, la plupart du temps, vous n’avez pas besoin d’explicitement appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The appropriate <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> events are automatically raised when a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is used to change a property value or components are added or removed from the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> container.</source>
          <target state="translated">Approprié <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> les événements sont automatiquement déclenché quand un <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> est utilisé pour modifier une propriété de valeur ou des composants sont ajoutés ou supprimés de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> conteneur.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This method throws an exception if the property cannot be changed.</source>
          <target state="translated">Cette méthode lève une exception si la propriété ne peut pas être modifiée.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This is not intended to validate the values of a particular property.</source>
          <target state="translated">Cela n’est pas destinée à valider les valeurs d’une propriété particulière.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Instead, it is intended to provide a global method of preventing a component from changing.</source>
          <target state="translated">Au lieu de cela, il doit fournir une méthode globale d’empêcher un composant à partir de la modification.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>For example, if a designer file is checked into source code control, this event's handler would typically throw an exception if the user refused to check out the file.</source>
          <target state="translated">Par exemple, si un fichier de concepteur est archivé dans le contrôle de code source, Gestionnaire de cet événement est généralement une exception si l’utilisateur a refusé d’extraire le fichier.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>