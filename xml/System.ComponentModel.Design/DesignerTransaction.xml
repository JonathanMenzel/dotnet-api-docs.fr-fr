<Type Name="DesignerTransaction" FullName="System.ComponentModel.Design.DesignerTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e013ed7735281522d4f88b1b64c4490d302c1e3" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58691328" /></Metadata><TypeSignature Language="C#" Value="public abstract class DesignerTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerTransaction extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerTransaction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerTransaction abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type DesignerTransaction = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Permet de grouper une série d'actions au moment du design afin d'améliorer les performances et de permettre l'annulation de la majorité des modifications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les transactions peuvent suivre les actions qui peuvent être annulées ultérieurement. Modifications apportées lors d’une transaction peuvent être inversées en annulant une transaction, qui tente automatiquement d’annuler chaque modification en définissant chaque propriété modifiée sur sa valeur antérieure. Les transactions peuvent également améliorer les performances pendant une série d’opérations en différant les mises à jour de l’affichage jusqu'à la fin de la transaction.  
  
 Lorsqu’une transaction est en cours, certains composants diffèrent leur traitement jusqu'à ce que la transaction a terminé en écoutant les <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> et <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> événements. La fenêtre Propriétés, par exemple, ne pas mettre à jour son affichage une fois une transaction a ouvert jusqu'à la fermeture de la transaction.  
  
 Pour utiliser des transactions pour les opérations réversibles ou multiples, que votre concepteur crée un <xref:System.ComponentModel.Design.DesignerTransaction> pour chaque opération ou une série d’opérations qui doivent être réversibles. Veillez à ne pas effectuer des actions en dehors des transactions qui peuvent empêcher une séquence d’événements d’annulation avec succès.  
  
 Vous pouvez obtenir un nouveau <xref:System.ComponentModel.Design.DesignerTransaction> en appelant le <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> méthode d’un <xref:System.ComponentModel.Design.IDesignerHost>. Veillez à obtenir chacune <xref:System.ComponentModel.Design.DesignerTransaction> active <xref:System.ComponentModel.Design.IDesignerHost> afin de s’intégrer correctement avec la transaction de concepteur mécanisme de traitement, plutôt que de créer un nouveau <xref:System.ComponentModel.Design.DesignerTransaction> directement.  
  
 Pour effectuer une action dans une transaction, vous devez d’abord créer une transaction. Vous devez appeler la <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> méthode avant chaque modification ou l’ensemble de modifications se produit et le <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> méthode après chaque modification ou l’ensemble de modifications se produisent. Enfin, terminez et fermez la transaction en appelant le <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> (méthode).  
  
> [!NOTE]
>  Pour apporter des modifications aux valeurs de propriété, utilisez le <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> méthode d’un <xref:System.ComponentModel.PropertyDescriptor>, qui appelle les méthodes de modification de composant de la <xref:System.ComponentModel.Design.IComponentChangeService> et crée un <xref:System.ComponentModel.Design.DesignerTransaction> représentant automatiquement la modification.  
  
 Pour effectuer une transaction, procédez comme suit :  
  
1.  Appelez <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> pour obtenir un <xref:System.ComponentModel.Design.DesignerTransaction> qui peut être utilisé pour contrôler la transaction.  
  
2.  Au sein d’un `try` bloc, pour chaque action que vous souhaitez effectuer le suivi avec un <xref:System.ComponentModel.Design.DesignerTransaction>, appeler le <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> (méthode), appeler l’ou les modifications, puis le <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> méthode pour signaler que l’ou les modifications ont été apportées.  
  
3.  Pour terminer la transaction, appelez <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A> depuis un `finally` bloc.  
  
 En C#, vous pouvez utiliser la `using` instruction plutôt qu’un `try/finally` bloquer, comme dans l’exemple suivant.  
  
```  
using (host.CreateTransaction() {  
// Insert your code here.  
}  
```  
  
 Pour annuler et tenter de restaurer une transaction avant qu’elle soit validée, appelez le <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> (méthode). Lorsque le <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> méthode est appelée, les actions suivies par le <xref:System.ComponentModel.Design.DesignerTransaction> sont annulées pour tenter de restaurer les modifications. Pour annuler les actions qui se sont produites dans le cadre de transactions antérieures, vous devez utiliser la commande d’annulation fournie par l’environnement de développement.  
  
   
  
## Examples  
 Le code suivant exemple programme montre comment créer un <xref:System.ComponentModel.Design.DesignerTransaction> à partir d’un concepteur. Pour exécuter cet exemple, compilez le code source dans une bibliothèque de classes. Vous devez ajouter une référence à l’assembly System.Design. Dans un nouveau projet, ajoutez une référence à la DLL compilée et ajoutez le composant dans la bibliothèque pour le **boîte à outils**.  
  
 Il existe une prise en charge étendue pour cette fonctionnalité dans Visual Studio.  
  
 Consultez également [procédure pas à pas : Remplissage automatique de la boîte à outils avec des composants personnalisés](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Le concepteur peut éventuellement afficher des notifications sur les événements de transaction de concepteur. Si vous ajoutez une instance de la `DTComponent` à un formulaire en mode design, une boîte de message s’affiche vous demande si vous souhaitez recevoir des notifications d’événements de transaction de concepteur. Vous pouvez désactiver ces notifications à l’aide du menu contextuel qui s’affiche lorsque vous cliquez sur une instance de la `DTComponent`. Les transactions sont créées lorsque vous modifiez les valeurs à l’aide de la fenêtre Propriétés. Vous pouvez également avoir le Concepteur d’effectuer une transaction en cliquant sur **exécuter l’exemple de Transaction** dans le menu contextuel pour le composant.  
  
 [!code-cpp[DesignerTransaction Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerTransaction Sample/CPP/source.cpp#1)]
 [!code-csharp[DesignerTransaction Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerTransaction Sample/CS/source.cs#1)]
 [!code-vb[DesignerTransaction Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerTransaction Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> sans description.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="new System.ComponentModel.Design.DesignerTransaction description" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">Description de cette transaction.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> avec la description de la transaction spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la transaction avec la description spécifiée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="designerTransaction.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule la transaction et tente de restaurer les modifications apportées par les événements de la transaction.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public bool Canceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Canceled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Canceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Canceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Canceled : bool" Usage="System.ComponentModel.Design.DesignerTransaction.Canceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la transaction a été annulée.</summary>
        <value><see langword="true" /> si la transaction a été annulée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une transaction de concepteur est annulée, le mécanisme de traitement de transaction tente d’annuler les modifications qui ont été effectuées dans la transaction. Réussite de cette opération dépend des facteurs tels que le type de chaque opération, si d’autres opérations d’interférences avec une de l’état du code utilisé, et si une séquence d’opérations attendues a échoué.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="designerTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Valide cette transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une transaction de concepteur est validée, la transaction est considérée comme terminée et ne pas suivre les autres modifications.  
  
 Une fois qu’une transaction a été validée, plus les appels à cette méthode ne rien faire. Appelez toujours cette méthode après avoir créé une transaction pour vous assurer que la transaction se ferme correctement.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
      </Docs>
    </Member>
    <Member MemberName="Committed">
      <MemberSignature Language="C#" Value="public bool Committed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Committed" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Committed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Committed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Committed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Committed : bool" Usage="System.ComponentModel.Design.DesignerTransaction.Committed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la transaction a été validée.</summary>
        <value><see langword="true" /> si la transaction a été validée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une transaction de concepteur est validée, la transaction est considérée comme terminée et ne pas suivre les autres modifications.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerTransaction.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.ComponentModel.Design.DesignerTransaction.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une description de la transaction.</summary>
        <value>Description de la transaction.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une transaction peut avoir une description qui est utile pour identifier la nature de l’opération ou les opérations.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designerTransaction.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> et libère éventuellement les ressources managées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode). `Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`. <xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.  
  
 Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.ComponentModel.Design.DesignerTransaction>. Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets. Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">Implémentation d'une méthode Dispose</related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">Nettoyage de ressources non managées</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DesignerTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DesignerTransaction ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="designerTransaction.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère les ressources associées à cet objet. Cette substitution valide cette transaction si elle n'est pas encore validée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace <xref:System.Object.Finalize%2A?displayProperty=nameWithType> et nettoie les ressources en appelant `Dispose(false)`. Substitue `Dispose(Boolean)` pour personnaliser le nettoyage.  
  
 Code d’application ne doit pas appeler cette méthode ; d’un objet `Finalize` méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (méthode).  
  
 Pour plus d’informations, consultez [destructeurs et méthodes Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md), et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
    <Member MemberName="OnCancel">
      <MemberSignature Language="C#" Value="protected abstract void OnCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnCancel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnCancel();" />
      <MemberSignature Language="F#" Value="abstract member OnCancel : unit -&gt; unit" Usage="designerTransaction.OnCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Déclenche l'événement <see langword="Cancel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une transaction de concepteur est annulée, le mécanisme de traitement de transaction tente d’annuler les modifications qui ont été effectuées dans la transaction. Réussite de cette opération dépend des facteurs tels que le type de chaque opération, si d’autres opérations d’interférences avec une de l’état du code utilisé, et si une séquence d’opérations attendues a échoué.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
        <block subset="none" type="overrides"><para>En cas d’implémentation dans une classe dérivée, cette méthode annule une transaction.</para></block>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="OnCommit">
      <MemberSignature Language="C#" Value="protected abstract void OnCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnCommit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnCommit();" />
      <MemberSignature Language="F#" Value="abstract member OnCommit : unit -&gt; unit" Usage="designerTransaction.OnCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute l'opération réelle de validation d'une transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une transaction de concepteur est validée, la transaction est considérée comme terminée et ne pas suivre les autres modifications.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
        <block subset="none" type="overrides"><para>En cas d’implémentation dans une classe dérivée, cette méthode effectue travail associé au traitement de la transaction.</para></block>
        <altmember cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une transaction est supprimée, il est validé.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">pour un accès complet aux ressources système. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. État associé :</permission>
      </Docs>
    </Member>
  </Members>
</Type>