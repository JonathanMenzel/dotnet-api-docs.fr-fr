<Type Name="IRootDesigner" FullName="System.ComponentModel.Design.IRootDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2f378af543d325ea7cfac2d9e77d1017778371c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706019" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRootDesigner : IDisposable, System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRootDesigner implements class System.ComponentModel.Design.IDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IRootDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRootDesigner&#xA;Implements IDesigner, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRootDesigner : IDisposable, System::ComponentModel::Design::IDesigner" />
  <TypeSignature Language="F#" Value="type IRootDesigner = interface&#xA;    interface IDesigner&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit la prise en charge des technologies d'affichage du concepteur racine.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un concepteur racine est le concepteur qui se trouve dans la position supérieure, ou racine, de la hiérarchie d’objets au moment du design document actuel. Un concepteur racine doit implémenter le <xref:System.ComponentModel.Design.IRootDesigner> interface. Un concepteur racine gère en général l’affichage d’arrière-plan en mode d’affichage du concepteur et il affiche les contrôles dans le conteneur de base du projet de temps de conception en cours.  
  
   
  
## Examples  
 L’exemple de code suivant montre un <xref:System.ComponentModel.Design.IRootDesigner> implémentation associée à un exemple de contrôle utilisateur. Cela <xref:System.ComponentModel.Design.IRootDesigner> implémentation affiche un contrôle pour l’affichage d’arrière-plan dans la vue de concepteur en substituant la <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> (méthode). Vous devez ajouter une référence à l’assembly System.Design pour compiler l’exemple.  
  
 Pour utiliser cet exemple, ajoutez le code source à un projet et afficher le `RootViewSampleComponent` en mode concepteur pour afficher la vue de concepteur racine personnalisé.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public object GetView (System.ComponentModel.Design.ViewTechnology technology);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetView(valuetype System.ComponentModel.Design.ViewTechnology technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (technology As ViewTechnology) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetView(System::ComponentModel::Design::ViewTechnology technology);" />
      <MemberSignature Language="F#" Value="abstract member GetView : System.ComponentModel.Design.ViewTechnology -&gt; obj" Usage="iRootDesigner.GetView technology" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="technology">
          <see cref="T:System.ComponentModel.Design.ViewTechnology" /> indiquant une technologie d'affichage particulière.</param>
        <summary>Obtient un objet d'affichage pour la technologie d'affichage spécifiée.</summary>
        <returns>Objet représentant l'affichage de ce concepteur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un objet de vue qui peut présenter une interface utilisateur à l’utilisateur. Le type de données retourné est un <xref:System.Object>, car il peut y avoir diverses technologies d’interface utilisateur différentes. Environnements de développement prennent généralement en charge plusieurs technologies.  
  
> [!NOTE]
>  Le <xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType> et <xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType> champs sont obsolètes. Utilisez <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType> pour les nouvelles implémentations de concepteurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La technologie d'affichage spécifiée n'est pas prise en charge ou n'existe pas.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportedTechnologies">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedTechnologies As ViewTechnology()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ SupportedTechnologies { cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTechnologies : System.ComponentModel.Design.ViewTechnology[]" Usage="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'ensemble des technologies prises en charge par le concepteur pour son affichage.</summary>
        <value>Tableau des valeurs <see cref="T:System.ComponentModel.Design.ViewTechnology" /> prises en charge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ComponentModel.Design.ViewTechnology> énumération indique les technologies d’affichage prises en charge.  
  
> [!NOTE]
>  Le <xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType> et <xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType> champs sont obsolètes. Utilisez <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType> pour les nouvelles implémentations de concepteurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>