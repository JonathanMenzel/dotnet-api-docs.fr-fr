<Type Name="MenuCommandService" FullName="System.ComponentModel.Design.MenuCommandService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5505bffdab237c6b880451226979098375975509" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuCommandService : IDisposable, System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommandService extends System.Object implements class System.ComponentModel.Design.IMenuCommandService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommandService&#xA;Implements IDisposable, IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommandService : IDisposable, System::ComponentModel::Design::IMenuCommandService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IMenuCommandService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="89cf6-101">Implémente l'interface <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89cf6-101">Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-102">Le <xref:System.ComponentModel.Design.MenuCommandService> la classe implémente le <xref:System.ComponentModel.Design.IMenuCommandService> interface, qui est l’interface managée utilisée pour ajouter des gestionnaires pour les commandes de menu et pour définir des verbes.</span><span class="sxs-lookup"><span data-stu-id="89cf6-102">The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.</span></span>  
  
 <span data-ttu-id="89cf6-103">Le <xref:System.ComponentModel.Design.MenuCommandService> classe est fournie automatiquement par la classe de package pour offrir des commandes globales pour un package entier, et il est également fourni par le `Microsoft.VisualStudio.Shell.WindowPane` classe pour offrir des commandes pour la fenêtre active.</span><span class="sxs-lookup"><span data-stu-id="89cf6-103">The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window.</span></span> <span data-ttu-id="89cf6-104">Cette offre est toujours effectuée via le conteneur de service, par conséquent, toute dérivation à partir du package ou les classes du volet de fenêtre peuvent supprimer ou remplacer l’implémentation par défaut de la <xref:System.ComponentModel.Design.IMenuCommandService> interface.</span><span class="sxs-lookup"><span data-stu-id="89cf6-104">This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.</span></span>  
  
 <span data-ttu-id="89cf6-105">La <xref:System.ComponentModel.Design.MenuCommandService> classe utilise plusieurs autres services.</span><span class="sxs-lookup"><span data-stu-id="89cf6-105">The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services.</span></span> <span data-ttu-id="89cf6-106">Tous ces services sont facultatifs, donc le comportement de la <xref:System.ComponentModel.Design.MenuCommandService> classe dégrade si un ou plusieurs services sont manquants.</span><span class="sxs-lookup"><span data-stu-id="89cf6-106">All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing.</span></span> <span data-ttu-id="89cf6-107">Le tableau suivant montre quels services sont utilisés et dans quel but.</span><span class="sxs-lookup"><span data-stu-id="89cf6-107">The following table shows which services are used and for what purpose.</span></span>  
  
|<span data-ttu-id="89cf6-108">Service</span><span class="sxs-lookup"><span data-stu-id="89cf6-108">Service</span></span>|<span data-ttu-id="89cf6-109">Objectif</span><span class="sxs-lookup"><span data-stu-id="89cf6-109">Purpose</span></span>|  
|-------------|-------------|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="89cf6-110">Permet de détecter la sélection actuelle afin d’obtenir des verbes offerts par le concepteur actuellement sélectionné.</span><span class="sxs-lookup"><span data-stu-id="89cf6-110">Used to discover the current selection in order to obtain verbs offered by the currently selected designer.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="89cf6-111">Permet d’obtenir le concepteur pour le composant sélectionné, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="89cf6-111">Used to obtain the designer for the currently selected component, if any.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IVsUIShell`|<span data-ttu-id="89cf6-112">Utilisé pour notifier Visual Studio que l’état de la commande a changé.</span><span class="sxs-lookup"><span data-stu-id="89cf6-112">Used to notify Visual Studio that the command status has changed.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IOleComponentUIManager`|<span data-ttu-id="89cf6-113">Permet d’afficher les menus contextuels.</span><span class="sxs-lookup"><span data-stu-id="89cf6-113">Used to show context menus.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommandService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommandService(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="89cf6-114">Fournisseur de services que ce service utilise pour obtenir d'autres services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-114">The service provider that this service uses to obtain other services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-115">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-116">Si le service est utilisé avec un concepteur, le `serviceProvider` paramètre doit être le fournisseur de services du concepteur, comme c’est le cas avec <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="89cf6-116">If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public virtual void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="89cf6-117">
            <see cref="T:System.ComponentModel.Design.MenuCommand" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-117">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-118">Ajoute un gestionnaire de commandes au service de commande de menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-118">Adds a command handler to the menu command service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-119">Le <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> méthode ajoute un gestionnaire de commandes au service de commande de menu.</span><span class="sxs-lookup"><span data-stu-id="89cf6-119">The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service.</span></span> <span data-ttu-id="89cf6-120">Gestionnaires de commandes ne définissent pas le texte, le raccourci ou le placement d’un élément de menu.</span><span class="sxs-lookup"><span data-stu-id="89cf6-120">Command handlers do not define the text, shortcut, or placement of a menu item.</span></span> <span data-ttu-id="89cf6-121">Au lieu de cela, elles définissent le comportement de l’élément de menu si l’élément est activé.</span><span class="sxs-lookup"><span data-stu-id="89cf6-121">Rather, they define the menu item’s behavior if the item is clicked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cf6-122">
            <paramref name="command" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-122">
              <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="89cf6-123">Un gestionnaire de commandes <paramref name="command" /> existe déjà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-123">A command handler <paramref name="command" /> already exists.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">
          <span data-ttu-id="89cf6-124">
            <see cref="T:System.ComponentModel.Design.DesignerVerb" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-124">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-125">Ajoute un verbe à la table de verbes de <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-125">Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-126">Ce verbe est disponible quel que soit le concepteur actuellement sélectionné.</span><span class="sxs-lookup"><span data-stu-id="89cf6-126">This verb is available regardless of what designer is currently selected.</span></span> <span data-ttu-id="89cf6-127">Contrairement aux commandes de menu, les verbes peuvent définir le texte qui est affiché à l’utilisateur, mais ils ne définissent pas le placement de la commande dans le menu.</span><span class="sxs-lookup"><span data-stu-id="89cf6-127">Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cf6-128">
            <paramref name="verb" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-128">
              <paramref name="verb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-129">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-129">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-130">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-130">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-131">Appelez la méthode <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.ComponentModel.Design.MenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="89cf6-131">Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="89cf6-132">La méthode <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> rend le <xref:System.ComponentModel.Design.MenuCommandService> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="89cf6-132">The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state.</span></span> <span data-ttu-id="89cf6-133">Après avoir appelé <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.ComponentModel.Design.MenuCommandService> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.ComponentModel.Design.MenuCommandService> occupée.</span><span class="sxs-lookup"><span data-stu-id="89cf6-133">After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying.</span></span> <span data-ttu-id="89cf6-134">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="89cf6-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="89cf6-135">Appelez toujours <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> avant de libérer votre dernière référence à <xref:System.ComponentModel.Design.MenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="89cf6-135">Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="89cf6-136">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.ComponentModel.Design.MenuCommandService> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="89cf6-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="89cf6-137">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-137">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-138">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-138">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-139">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="89cf6-139">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="89cf6-140">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="89cf6-140">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="89cf6-141"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="89cf6-141"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="89cf6-142">Lorsque le `disposing` paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.ComponentModel.Design.MenuCommandService> références.</span><span class="sxs-lookup"><span data-stu-id="89cf6-142">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references.</span></span> <span data-ttu-id="89cf6-143">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="89cf6-143">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89cf6-144">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="89cf6-144">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="89cf6-145">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="89cf6-145">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="89cf6-146">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="89cf6-146">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="89cf6-147">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="89cf6-147">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnsureVerbs">
      <MemberSignature Language="C#" Value="protected void EnsureVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureVerbs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-148">Garantit que la liste de verbes a été créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-148">Ensures that the verb list has been created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-149">Le <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> méthode crée la liste de verbes si elle n’a pas encore été créé.</span><span class="sxs-lookup"><span data-stu-id="89cf6-149">The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindCommand">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-150">Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à l'ID de commande donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-150">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <span data-ttu-id="89cf6-151">
            <see cref="T:System.ComponentModel.Design.CommandID" /> à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-151">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-152">Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à l'ID de commande donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-152">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf6-153">
            <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée ; sinon, <see langword="null" /> si la commande est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-153">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.MenuCommand FindCommand (Guid guid, int id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.MenuCommand FindCommand(valuetype System.Guid guid, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(Guid guid, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="guid">
          <span data-ttu-id="89cf6-154">GUID de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-154">The GUID of the command.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="89cf6-155">ID de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-155">The ID of the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-156">Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-156">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf6-157">
            <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée ; sinon, <see langword="null" /> si la commande est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-157">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetCommandList">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection GetCommandList (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.ICollection GetCommandList(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::ICollection ^ GetCommandList(Guid guid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid">
          <span data-ttu-id="89cf6-158">GUID de la liste de commandes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-158">The GUID of the command list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-159">Reçoit la liste des commandes pour un GUID donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-159">Gets the command list for a given GUID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf6-160">
            <see cref="T:System.Collections.ICollection" /> de commandes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-160">An <see cref="T:System.Collections.ICollection" /> of commands.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="89cf6-161">
            <see cref="T:System.Type" /> du service à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-161">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-162">Obtient une référence au service demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-162">Gets a reference to the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf6-163">Référence au <paramref name="serviceType" /> ; sinon, <see langword="null" /> si le service est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-163">A reference to <paramref name="serviceType" />; otherwise, <see langword="null" /> if the service is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cf6-164">
            <paramref name="serviceType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-164">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GlobalInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-165">Appelle une commande dans le formulaire local ou dans l'environnement global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-165">Invokes a command on the local form or in the global environment.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <span data-ttu-id="89cf6-166">Commande à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-166">The command to invoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-167">Appelle la commande donnée dans le formulaire local ou l'environnement global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-167">Invokes the given command on the local form or in the global environment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf6-168">
            <see langword="true" />, si la commande a été trouvée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-168">
              <see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-169">Le formulaire local est d’abord recherché pour l’ID de commande donné.</span><span class="sxs-lookup"><span data-stu-id="89cf6-169">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="89cf6-170">Si elle est trouvée, elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="89cf6-170">If it is found, it is invoked.</span></span> <span data-ttu-id="89cf6-171">Dans le cas contraire, l’ID de commande est passé au Gestionnaire de commandes d’environnement global, si celle-ci est disponible.</span><span class="sxs-lookup"><span data-stu-id="89cf6-171">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandId, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandId, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandId, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandId">
          <span data-ttu-id="89cf6-172">Commande à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-172">The command to invoke.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="89cf6-173">Paramètre pour l'appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-173">A parameter for the invocation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-174">Appelle la commande donnée avec le paramètre donné dans le formulaire local ou l'environnement global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-174">Invokes the given command with the given parameter on the local form or in the global environment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cf6-175">
            <see langword="true" />, si la commande a été trouvée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-175">
              <see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-176">Le formulaire local est d’abord recherché pour l’ID de commande donné.</span><span class="sxs-lookup"><span data-stu-id="89cf6-176">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="89cf6-177">Si elle est trouvée, elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="89cf6-177">If it is found, it is invoked.</span></span> <span data-ttu-id="89cf6-178">Dans le cas contraire, l’ID de commande est passé au Gestionnaire de commandes d’environnement global, si celle-ci est disponible.</span><span class="sxs-lookup"><span data-stu-id="89cf6-178">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="MenuCommandsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuCommandsChanged As MenuCommandsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::MenuCommandsChangedEventHandler ^ MenuCommandsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommandsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-179">Se produit lorsque l'état d'une commande de menu a changé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-179">Occurs when the status of a menu command has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-180">Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="89cf6-180">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandsChanged (System.ComponentModel.Design.MenuCommandsChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandsChanged(class System.ComponentModel.Design.MenuCommandsChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandsChanged (e As MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandsChanged(System::ComponentModel::Design::MenuCommandsChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="89cf6-181">
            <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-181">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-182">Déclenche l'événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-182">Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-183">Le <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> méthode est appelée par une commande de menu lorsque son état a changé.</span><span class="sxs-lookup"><span data-stu-id="89cf6-183">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.</span></span>  
  
 <span data-ttu-id="89cf6-184">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="89cf6-184">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="89cf6-185">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="89cf6-185">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="89cf6-186">La méthode <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="89cf6-186">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="89cf6-187">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="89cf6-187">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89cf6-188">Lors de la substitution <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="89cf6-188">When overriding <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public virtual void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="89cf6-189">Commande à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-189">The command to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-190">Supprime la commande de menu donnée du document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-190">Removes the given menu command from the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-191">S’il n’y a pas d’autres commandes dans le groupe de commandes, le groupe est supprimé.</span><span class="sxs-lookup"><span data-stu-id="89cf6-191">If there are no more commands in the command group, the group is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cf6-192">
            <paramref name="command" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-192">
              <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public virtual void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">
          <span data-ttu-id="89cf6-193">Verbe à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-193">The verb to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-194">Supprime le verbe donné du document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-194">Removes the given verb from the document.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cf6-195">
            <paramref name="verb" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-195">
              <paramref name="verb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public virtual void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">
          <span data-ttu-id="89cf6-196">Menu contextuel à afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-196">The shortcut menu to display.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="89cf6-197">Coordonnée x de l'emplacement du menu contextuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-197">The x-coordinate of the shortcut menu's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="89cf6-198">Coordonnée y de l'emplacement du menu contextuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-198">The y-coordinate of the shortcut menu's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cf6-199">Affiche le menu contextuel avec l'ID de commande donné à l'endroit indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-199">Shows the shortcut menu with the given command ID at the given location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-200">L'implémentation par défaut n'exécute aucune opération.</span><span class="sxs-lookup"><span data-stu-id="89cf6-200">The default implementation does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89cf6-201">Obtient une collection des verbes du concepteur actuellement disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-201">Gets a collection of the designer verbs that are currently available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89cf6-202">
            <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> des verbes du concepteur actuellement disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cf6-202">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cf6-203">Le <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> propriété fournit une collection de verbes.</span><span class="sxs-lookup"><span data-stu-id="89cf6-203">The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs.</span></span> <span data-ttu-id="89cf6-204">Ces verbes proviennent de deux emplacements :</span><span class="sxs-lookup"><span data-stu-id="89cf6-204">These verbs come from two places:</span></span>  
  
-   <span data-ttu-id="89cf6-205">Verbes ajoutés via la <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> méthode <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span><span class="sxs-lookup"><span data-stu-id="89cf6-205">Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span></span>  
  
-   <span data-ttu-id="89cf6-206">Verbes offerts par le concepteur actuellement sélectionné.</span><span class="sxs-lookup"><span data-stu-id="89cf6-206">Verbs offered by the currently selected designer.</span></span>  
  
 <span data-ttu-id="89cf6-207">Verbes ajoutés à ce service via la <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> méthode sont appelés des verbes globaux, car ils sont globaux pour ce service, mais en règle générale, il existe une seule instance de ce service pour chaque outil ou fenêtre de document.</span><span class="sxs-lookup"><span data-stu-id="89cf6-207">Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.</span></span> <span data-ttu-id="89cf6-208">Verbes de concepteur sont obtenus en interrogeant le fournisseur de services <xref:System.ComponentModel.Design.IDesignerHost> et <xref:System.ComponentModel.Design.ISelectionService>.</span><span class="sxs-lookup"><span data-stu-id="89cf6-208">Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>.</span></span> <span data-ttu-id="89cf6-209">Si le service de sélection offre une sélection principale et un concepteur peut être obtenu pour cette sélection à partir de <xref:System.ComponentModel.Design.IDesignerHost>, les verbes de concepteurs sont ajoutés à cette liste.</span><span class="sxs-lookup"><span data-stu-id="89cf6-209">If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list.</span></span> <span data-ttu-id="89cf6-210">Si le nom d’un verbe global est en conflit avec le nom d’un verbe de concepteur, le verbe de concepteur fournis par le concepteur est prioritaire.</span><span class="sxs-lookup"><span data-stu-id="89cf6-210">If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>