<Type Name="RootedPathValidator" FullName="System.Xml.Serialization.Configuration.RootedPathValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d21a49f363d18db28ea6fb7469652779366c30b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RootedPathValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Configuration.RootedPathValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RootedPathValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootedPathValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type RootedPathValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Valide les règles qui gouvernent l’utilisation du commutateur de configuration <c>tempFilesLocation</c>.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous ajoutez un `WebReference` objet à un service Web dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], les fichiers sont créés par le processus de découverte de service Web.  
  
 Les clients du service Web en savoir où trouver le document de description (WSDL) du service Web en ajoutant un `WebReference` objet. Les clients de service Web puis enregistrent les documents découverts sur le disque à l’aide de la `WriteAll` (méthode). Par exemple, les documents découverts peuvent être des fichiers de schéma .xsd ou des descriptions de service. À la fin du processus, le client supprime les fichiers. Vous pouvez modifier l’emplacement par défaut des fichiers dans le dossier temporaire à l’aide de la `tempFilesLocation` basculer dans le `<xmlSerializer>` élément, spécifié dans le fichier de configuration Machine.config, comme dans l’exemple suivant.  
  
```  
<configuration>  
  <system.web>  
  <system.xml.serialization>  
    <xmlSerializer tempFilesLocation=".."/>  
  </system.xml.serialization>  
</configuration>  
```  
  
 La valeur de `tempFilesLocation` doit être un chemin d’accès absolu. Si le chemin d’accès spécifié n’est pas absolu, le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] génère un <xref:System.Configuration.ConfigurationErrorsException> exception lors de la section de configuration est référencée.  
  
 La valeur de la propriété est tronquée pour supprimer les espaces à gauche et blanc.  
  
 Si la valeur de la `tempFilesLocation` propriété est composée d’espaces blancs, de l’emplacement par défaut %TMP% est utilisé pour la compilation. Le même comportement par défaut se produit lorsqu’aucun `tempFilesLocation` commutateur est spécifié.  
  
 Le <xref:System.Xml.Serialization.XmlSerializer> ne vérifie pas si le chemin d’accès existe. Dans ce cas, un <xref:System.IO.DirectoryNotFoundException> est généré. Cela est identique au comportement par défaut de la `XmlSerializer` si le chemin d’accès % de % TMP n’existe pas.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootedPathValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootedPathValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="rootedPathValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet.</param>
        <summary>Détermine si le type de l'objet peut être validé.</summary>
        <returns>
          <see langword="true" /> si le paramètre <paramref name="type" /> correspond à un objet <see langword="XMLSerializer" /> valide ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="rootedPathValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valeur d’un objet.</param>
        <summary>Détermine si la valeur d’un objet est valide.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `XmlSerializer` objet à valider est passé en tant que paramètre de la `Validate` (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>