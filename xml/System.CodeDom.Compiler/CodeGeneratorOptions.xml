<Type Name="CodeGeneratorOptions" FullName="System.CodeDom.Compiler.CodeGeneratorOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2bc79397129dbc37c4fb581308ddb1a79a566c68" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36715646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeGeneratorOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeGeneratorOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeGeneratorOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGeneratorOptions" />
  <TypeSignature Language="F#" Value="type CodeGeneratorOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8b424-101">Représente un ensemble d'options utilisées par un générateur de code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b424-101">Represents a set of options used by a code generator.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b424-102"><xref:System.CodeDom.Compiler.CodeGeneratorOptions> est passé aux méthodes de génération de code d’un <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation pour spécifier les options utilisées lors de la génération de code.</span><span class="sxs-lookup"><span data-stu-id="8b424-102"><xref:System.CodeDom.Compiler.CodeGeneratorOptions> is passed to the code generation methods of an <xref:System.CodeDom.Compiler.ICodeGenerator> implementation to specify options used during code generation.</span></span>  
  
 <span data-ttu-id="8b424-103">Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A> propriété spécifie la chaîne à utiliser pour chaque mise en retrait.</span><span class="sxs-lookup"><span data-stu-id="8b424-103">The <xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A> property specifies the string to use for each spacing indentation.</span></span> <span data-ttu-id="8b424-104">Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A> propriété spécifie le style de positionnement des accolades délimitant les blocs de code.</span><span class="sxs-lookup"><span data-stu-id="8b424-104">The <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A> property specifies the placement style for braces indicating the boundaries of code blocks.</span></span> <span data-ttu-id="8b424-105">Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A> propriété indique s’il faut ajouter une `else`, `catch`, ou `finally` bloc, y compris les parenthèses, au niveau de la ligne de la fermeture de chaque `if` ou `try` bloc.</span><span class="sxs-lookup"><span data-stu-id="8b424-105">The <xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A> property specifies whether to append an `else`, `catch`, or `finally` block, including brackets, at the closing line of each `if` or `try` block.</span></span> <span data-ttu-id="8b424-106">Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A> propriété spécifie s’il faut insérer des lignes vides entre les membres.</span><span class="sxs-lookup"><span data-stu-id="8b424-106">The <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A> property specifies whether to insert blank lines between members.</span></span>  
  
 <span data-ttu-id="8b424-107">Un <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation peut fournir les options de génération de code personnalisées que vous pouvez définir ou transférer les données à l’aide de la <xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A> indexeur de dictionnaire, un générateur de code peut rechercher des options de génération de code supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="8b424-107">An <xref:System.CodeDom.Compiler.ICodeGenerator> implementation can provide custom code generation options which you can set or pass data to using the <xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A> dictionary indexer, which a code generator can search through to locate additional code generation options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b424-108">Cette classe contient une demande de liaison et une demande d’héritage au niveau de la classe qui s’applique à tous les membres.</span><span class="sxs-lookup"><span data-stu-id="8b424-108">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="8b424-109">A <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat ou la classe dérivée n’a pas d’autorisations de confiance totale.</span><span class="sxs-lookup"><span data-stu-id="8b424-109">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="8b424-110">Pour plus d’informations sur les demandes de sécurité, consultez [les demandes de liaison](~/docs/framework/misc/link-demands.md) et [des demandes d’héritage](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="8b424-110">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 [!code-cpp[CodeGeneratorOptionsExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeGeneratorOptionsExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeGeneratorOptionsExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeGeneratorOptionsExample/CS/class1.cs#1)]
 [!code-vb[CodeGeneratorOptionsExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeGeneratorOptionsExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="8b424-111">pour la confiance totale pour l’appelant immédiat.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b424-111">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="8b424-112">Cette classe ne peut pas être utilisée par du code partiellement fiable.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b424-112">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="8b424-113">pour la confiance totale pour les héritiers de.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b424-113">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="8b424-114">Cette classe ne peut pas être héritée par du code partiellement fiable.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b424-114">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeGeneratorOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGeneratorOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeGeneratorOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b424-115">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-115">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="8b424-116">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-116">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8b424-117">Cette classe ne peut pas être utilisée par du code partiellement fiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-117">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BlankLinesBetweenMembers">
      <MemberSignature Language="C#" Value="public bool BlankLinesBetweenMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlankLinesBetweenMembers" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property BlankLinesBetweenMembers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BlankLinesBetweenMembers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BlankLinesBetweenMembers : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b424-118">Obtient ou définit une valeur indiquant s'il faut insérer des lignes vides entre les membres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-118">Gets or sets a value indicating whether to insert blank lines between members.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b424-119">
            <see langword="true" /> si les lignes vides doivent être insérées ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-119">
              <see langword="true" /> if blank lines should be inserted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8b424-120">Par défaut, la valeur de cette propriété est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-120">By default, the value of this property is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BracingStyle">
      <MemberSignature Language="C#" Value="public string BracingStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BracingStyle" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BracingStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BracingStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BracingStyle : string with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b424-121">Obtient ou définit le style à utiliser pour les accolades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-121">Gets or sets the style to use for bracing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b424-122">Chaîne contenant le style d'accolade à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-122">A string containing the bracing style to use.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b424-123">La valeur par défaut de cette propriété est `Block`, ce qui indique que le code doit être généré afin que les accolades commencent sur la même ligne que l’instruction ou la déclaration qui leur sont associées.</span><span class="sxs-lookup"><span data-stu-id="8b424-123">The default value of this property is `Block`, which indicates that code should be generated so that braces start on the same line as the statement or declaration that they are associated with.</span></span> <span data-ttu-id="8b424-124">Une valeur de propriété `C` indique que les accolades commencent sur la ligne qui suit l’instruction ou la déclaration auxquelles elles sont associées.</span><span class="sxs-lookup"><span data-stu-id="8b424-124">A property value of `C` indicates that braces start on the line following the statement or declaration that they are associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElseOnClosing">
      <MemberSignature Language="C#" Value="public bool ElseOnClosing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ElseOnClosing" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing" />
      <MemberSignature Language="VB.NET" Value="Public Property ElseOnClosing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ElseOnClosing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ElseOnClosing : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b424-125">Obtient ou définit une valeur indiquant s'il faut ajouter un bloc <see langword="else" />, <see langword="catch" /> ou <see langword="finally" />, y compris les parenthèses, au niveau de la ligne fermante de chaque bloc <see langword="if" /> ou <see langword="try" /> précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-125">Gets or sets a value indicating whether to append an <see langword="else" />, <see langword="catch" />, or <see langword="finally" /> block, including brackets, at the closing line of each previous <see langword="if" /> or <see langword="try" /> block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b424-126">
            <see langword="true" /> si un Else doit être ajouté ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-126">
              <see langword="true" /> if an else should be appended; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8b424-127">La valeur par défaut de cette propriété est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-127">The default value of this property is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentString">
      <MemberSignature Language="C#" Value="public string IndentString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentString" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentString : string with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.IndentString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b424-128">Obtient ou définit la chaîne à utiliser pour les mises en retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-128">Gets or sets the string to use for indentations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b424-129">Chaîne contenant les caractères à utiliser pour les mises en retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-129">A string containing the characters to use for indentations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b424-130">La valeur par défaut de cette propriété est « /---/ » (quatre espaces).</span><span class="sxs-lookup"><span data-stu-id="8b424-130">The default value of this property is "/----/" (four spaces).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ index); void set(System::String ^ index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="8b424-131">Nom associé à l'objet à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-131">The name associated with the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b424-132">Obtient ou définit l'objet à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-132">Gets or sets the object at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b424-133">Objet associé au nom spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-133">The object associated with the specified name.</span>
          </span>
          <span data-ttu-id="8b424-134">Si la collection ne contient aucun objet associé au nom spécifié, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-134">If no object associated with the specified name exists in the collection, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b424-135">Ce dictionnaire fournit un mécanisme d’extensibilité pour les développeurs fournir des données pour les fonctionnalités personnalisées d’un générateur de code.</span><span class="sxs-lookup"><span data-stu-id="8b424-135">This dictionary provides an extensibility mechanism for developers to provide data for custom features of a code generator.</span></span> <span data-ttu-id="8b424-136">Un générateur de code doit implémenter ces fonctionnalités et prend en charge de la vérification du dictionnaire pour cette option pour être utile.</span><span class="sxs-lookup"><span data-stu-id="8b424-136">A code generator must implement such features and support checking the dictionary for this to be useful.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerbatimOrder">
      <MemberSignature Language="C#" Value="public bool VerbatimOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerbatimOrder" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property VerbatimOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VerbatimOrder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VerbatimOrder : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b424-137">Obtient ou définit une valeur qui indique s'il faut générer des membres dans l'ordre dans lequel ils se produisent dans les collections de membres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-137">Gets or sets a value indicating whether to generate members in the order in which they occur in member collections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b424-138">
            <see langword="true" /> pour générer les membres dans l'ordre dans lequel ils se produisent dans la collection de membres ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-138">
              <see langword="true" /> to generate the members in the order in which they occur in the member collection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8b424-139">La valeur par défaut de cette propriété est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b424-139">The default value of this property is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b424-140">La valeur par défaut génère des membres par leur type, par exemple ; champ, membre, constructeur ou propriété.</span><span class="sxs-lookup"><span data-stu-id="8b424-140">The default generates members by their type, for example; field, member, constructor, or property.</span></span>  <span data-ttu-id="8b424-141">Un générateur de code peut utiliser le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder%2A> propriété pour injecter des blocs #region dans du code, modifiant ainsi l’ordre.</span><span class="sxs-lookup"><span data-stu-id="8b424-141">A code generator can use the <xref:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder%2A> property to inject #region blocks into code, thus changing the order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>