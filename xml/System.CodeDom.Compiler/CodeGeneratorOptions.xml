<Type Name="CodeGeneratorOptions" FullName="System.CodeDom.Compiler.CodeGeneratorOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e54599a1d70527c095a49bef9103a77e9c993c47" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49126023" /></Metadata><TypeSignature Language="C#" Value="public class CodeGeneratorOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeGeneratorOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeGeneratorOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGeneratorOptions" />
  <TypeSignature Language="F#" Value="type CodeGeneratorOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un ensemble d'options utilisées par un générateur de code.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.Compiler.CodeGeneratorOptions> est passé aux méthodes de génération de code d’un <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation pour spécifier les options utilisées pendant la génération de code.  
  
 Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A> propriété spécifie la chaîne à utiliser pour chaque mise en retrait. Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A> propriété spécifie le style de positionnement des accolades délimitant les blocs de code. Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A> propriété spécifie s’il faut ajouter un `else`, `catch`, ou `finally` bloc, y compris les parenthèses, au niveau de la ligne fermante de chaque `if` ou `try` bloc. Le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A> propriété spécifie s’il faut insérer des lignes vides entre les membres.  
  
 Un <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation peut fournir les options de génération de code personnalisées que vous pouvez définir ou transmettre des données à l’aide du <xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A> indexeur de dictionnaire, un générateur de code peut rechercher des options de génération de code supplémentaire.  
  
> [!NOTE]
>  Cette classe contient une demande de liaison et une demande d’héritage au niveau de la classe qui s’applique à tous les membres. Un <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat ou la classe dérivée n’a pas d’autorisations de confiance totale. Pour plus d’informations sur les demandes de sécurité, consultez [demandes de liaison](~/docs/framework/misc/link-demands.md) et [demandes d’héritage](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 [!code-cpp[CodeGeneratorOptionsExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeGeneratorOptionsExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeGeneratorOptionsExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeGeneratorOptionsExample/CS/class1.cs#1)]
 [!code-vb[CodeGeneratorOptionsExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeGeneratorOptionsExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">pour la confiance totale pour les héritiers. Cette classe ne peut pas être héritée par du code partiellement fiable.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeGeneratorOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGeneratorOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeGeneratorOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
      </Docs>
    </Member>
    <Member MemberName="BlankLinesBetweenMembers">
      <MemberSignature Language="C#" Value="public bool BlankLinesBetweenMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlankLinesBetweenMembers" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property BlankLinesBetweenMembers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BlankLinesBetweenMembers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BlankLinesBetweenMembers : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant s'il faut insérer des lignes vides entre les membres.</summary>
        <value><see langword="true" /> si les lignes vides doivent être insérées ; sinon, <see langword="false" />. Par défaut, la valeur de cette propriété est <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BracingStyle">
      <MemberSignature Language="C#" Value="public string BracingStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BracingStyle" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BracingStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BracingStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BracingStyle : string with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le style à utiliser pour les accolades.</summary>
        <value>Chaîne contenant le style d'accolade à utiliser.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut de cette propriété est `Block`, ce qui indique que le code doit être généré afin que les accolades commencent sur la même ligne que l’instruction ou la déclaration auxquelles elles sont associées. Une valeur de propriété `C` indique que les accolades commencent sur la ligne qui suit l’instruction ou la déclaration auxquelles elles sont associées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElseOnClosing">
      <MemberSignature Language="C#" Value="public bool ElseOnClosing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ElseOnClosing" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing" />
      <MemberSignature Language="VB.NET" Value="Public Property ElseOnClosing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ElseOnClosing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ElseOnClosing : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant s'il faut ajouter un bloc <see langword="else" />, <see langword="catch" /> ou <see langword="finally" />, y compris les parenthèses, au niveau de la ligne fermante de chaque bloc <see langword="if" /> ou <see langword="try" /> précédent.</summary>
        <value><see langword="true" /> si un Else doit être ajouté ; sinon, <see langword="false" />. La valeur par défaut de cette propriété est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentString">
      <MemberSignature Language="C#" Value="public string IndentString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentString" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentString : string with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.IndentString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne à utiliser pour les mises en retrait.</summary>
        <value>Chaîne contenant les caractères à utiliser pour les mises en retrait.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut de cette propriété est « /---/ » (quatre espaces).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ index); void set(System::String ^ index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Nom associé à l'objet à récupérer.</param>
        <summary>Obtient ou définit l'objet à l'index spécifié.</summary>
        <value>Objet associé au nom spécifié. Si la collection ne contient aucun objet associé au nom spécifié, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce dictionnaire fournit un mécanisme d’extensibilité pour les développeurs fournir des données pour les fonctionnalités personnalisées d’un générateur de code. Un générateur de code doit implémenter ces fonctionnalités et prennent en charge la vérification du dictionnaire pour être utiles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerbatimOrder">
      <MemberSignature Language="C#" Value="public bool VerbatimOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerbatimOrder" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property VerbatimOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VerbatimOrder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VerbatimOrder : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique s'il faut générer des membres dans l'ordre dans lequel ils se produisent dans les collections de membres.</summary>
        <value><see langword="true" /> pour générer les membres dans l'ordre dans lequel ils se produisent dans la collection de membres ; sinon, <see langword="false" />. La valeur par défaut de cette propriété est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut génère des membres par leur type, par exemple ; champ, membre, constructeur ou la propriété.  Un générateur de code peut utiliser le <xref:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder%2A> propriété pour injecter des blocs #region dans du code, modifiant ainsi l’ordre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>