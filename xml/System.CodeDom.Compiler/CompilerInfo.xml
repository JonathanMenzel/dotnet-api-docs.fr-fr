<Type Name="CompilerInfo" FullName="System.CodeDom.Compiler.CompilerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78c6b0c52ef78abdce5ac245ad1e03751614a0ef" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37704946" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompilerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompilerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompilerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerInfo sealed" />
  <TypeSignature Language="F#" Value="type CompilerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the configuration settings of a language provider. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo> classe pour déterminer si un <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation est configurée sur l’ordinateur, ou pour examiner les paramètres de configuration et du compilateur pour un fournisseur de langage spécifique.  
  
 Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier contient les paramètres de configuration de compilateur et du fournisseur de langage. Chaque fournisseur de langages configuré possède un élément de configuration du compilateur correspondant. Chaque élément définit les <xref:System.CodeDom.Compiler.CodeDomProvider> type d’implémentation, les noms de langage pris en charge, les extensions de nom de fichier pris en charge et les paramètres du compilateur.  
  
 Le .NET Framework définit les paramètres de compilateur initiaux dans le fichier de configuration machine. Les développeurs et les éditeurs de compilateurs peuvent ajouter des paramètres de configuration pour une nouvelle implémentation <xref:System.CodeDom.Compiler.CodeDomProvider>.  
  
 Le <xref:System.CodeDom.Compiler.CompilerInfo> classe fournit un accès en lecture seule à ces paramètres dans le fichier de configuration machine. Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, et <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> membres pour examiner les attributs de configuration correspondants pour un fournisseur de langages. Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> méthode pour obtenir des valeurs d’attribut de niveau options et avertissement le compilateur pour un fournisseur de langages.  
  
 Pour plus d’informations sur les paramètres de fournisseur de langages dans le fichier de configuration, consultez [compilateur et le schéma de paramètres de fournisseur de langage](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).  
  
> [!NOTE]
>  Cette classe contient une demande de liaison au niveau de la classe qui s’applique à tous les membres. Un <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat n’a pas d’autorisations de confiance totale. Pour plus d’informations sur les demandes de liaison, consultez [demandes de liaison](~/docs/framework/misc/link-demands.md).  
  
   
  
## Examples  
 L’exemple de code suivant affiche les paramètres de configuration de fournisseur de langages. Arguments de ligne de commande sont utilisés pour spécifier une langue, une extension de nom de fichier ou un type de fournisseur. Pour l’entrée donnée, l’exemple détermine le fournisseur de langages correspondant et affiche les paramètres de compilateur de langages configuré.  
  
 [!code-cpp[CodeDom_CompilerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#1)]
 [!code-csharp[CodeDom_CompilerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#1)]
 [!code-vb[CodeDom_CompilerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
    <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName="CodeDomProviderType">
      <MemberSignature Language="C#" Value="public Type CodeDomProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CodeDomProviderType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CodeDomProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProviderType : Type" Usage="System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</summary>
        <value>En lecture seule <see cref="T:System.Type" /> instance qui représente le type de fournisseur de langages configuré.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le fichier de configuration machine contient le nom de type qualifié complet pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Le <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> valeur de propriété est un <xref:System.Type> instance qui représente une implémentation de fournisseur de langages configuré.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si la langue d’entrée a un configuré <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Si un fournisseur est configuré pour la langue spécifiée, l’exemple affiche les paramètres de configuration de fournisseur de langage. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">The language provider is not configured on this computer.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Cannot locate the type because it is a <see langword="null" /> or empty string.  -or-  Cannot locate the type because the name for the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> cannot be found in the configuration file.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultCompilerParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultCompilerParameters () As CompilerParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerParameters ^ CreateDefaultCompilerParameters();" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultCompilerParameters : unit -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="compilerInfo.CreateDefaultCompilerParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the configured compiler settings for the language provider implementation.</summary>
        <returns>A read-only <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> instance that contains the compiler options and settings configured for the language provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> méthode pour examiner les paramètres de compilateur de la <xref:System.CodeDom.Compiler.CompilerInfo> instances retournées par la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> et <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> méthodes.  
  
 Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Chaque élément de configuration de fournisseur de langages peut contenir facultatif `compilerOptions` et `warningLevel` attributs. Ces attributs définissent les valeurs par défaut pour le <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> et <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> propriétés.  
  
 Si l’élément de configuration de fournisseur de langage ne définit pas le `compilerOptions` attribut, le <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> valeur de propriété est une chaîne vide ( » »). Si l’élément de configuration de fournisseur de langage ne définit pas le `warningLevel` attribut, le <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> valeur de propriété est – 1.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si la langue d’entrée a un configuré <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Si un fournisseur est configuré pour la langue spécifiée, l’exemple affiche les paramètres de configuration de fournisseur de langage. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider () As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider();" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : unit -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings.</summary>
        <returns>A CodeDOM provider associated with the language provider configuration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> méthode retourne un <xref:System.CodeDom.Compiler.CodeDomProvider> instance pour les paramètres de fournisseur de langage actuel.  
  
 Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> méthode pour obtenir un <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour un <xref:System.CodeDom.Compiler.CompilerInfo> instance retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> ou <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant énumère les fournisseurs de langages sur l’ordinateur et affiche les paramètres de configuration et de compilateur pour chaque fournisseur de langages. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider (providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider providerOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="providerOptions">A collection of provider options from the configuration file.</param>
        <summary>Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings and specified options.</summary>
        <returns>A CodeDOM provider associated with the language provider configuration and specified options.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> méthode retourne un <xref:System.CodeDom.Compiler.CodeDomProvider> instance pour les paramètres de fournisseur de langage actuel et les options de fournisseur spécifié. Pour plus d’informations sur les options de fournisseur pris en charge, consultez la documentation du fournisseur CodeDOM spécifique.  
  
 Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> méthode pour obtenir un <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour un <xref:System.CodeDom.Compiler.CompilerInfo> instance retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> ou <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerOptions" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider does not support options.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compilerInfo.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The object to compare with the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" />.</param>
        <summary>Determines whether the specified object represents the same language provider and compiler settings as the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" />.</summary>
        <returns>
          <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object and its value is the same as this instance; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> (méthode).  
  
 Les deux instances sont considérées comme égales si les valeurs des propriétés suivantes sont identiques :  
  
-   La propriété <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>.  
  
-   Le <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, et <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> propriétés de la <xref:System.CodeDom.Compiler.CompilerParameters> instance retournée par la <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="public string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; string[]" Usage="compilerInfo.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the file name extensions supported by the language provider.</summary>
        <returns>An array of file name extensions supported by the language provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Chaque fournisseur de langages configuré prend en charge une ou plusieurs extensions de nom de fichier. Par exemple, un <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> peut prendre en charge les extensions de nom de fichier « .cs » et « .c # ».  
  
   
  
## Examples  
 L’exemple de code suivant énumère les fournisseurs de langages sur l’ordinateur et affiche les paramètres de configuration et de compilateur pour chaque fournisseur de langages. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compilerInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for the current instance.</summary>
        <returns>A 32-bit signed integer hash code for the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> instance, suitable for use in hashing algorithms and data structures such as a hash table.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> (méthode).  
  
 Cette méthode génère le même code de hachage pour deux objets qui sont égaux selon la méthode <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant crée une instance de la <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> classe. L’exemple affiche le nom du fournisseur, le code de hachage et l’extension de nom de fichier par défaut pour la nouvelle instance de fournisseur. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguages">
      <MemberSignature Language="C#" Value="public string[] GetLanguages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetLanguages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguages () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetLanguages();" />
      <MemberSignature Language="F#" Value="member this.GetLanguages : unit -&gt; string[]" Usage="compilerInfo.GetLanguages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the language names supported by the language provider.</summary>
        <returns>An array of language names supported by the language provider.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Chaque fournisseur de langages configuré prend en charge un ou plusieurs noms de langage. Par exemple, le <xref:System.CodeDom.Compiler.CompilerInfo> de l’objet pour un <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> peut retourner un tableau avec le langage noms « c# », « cs » et « csharp ».  
  
   
  
## Examples  
 L’exemple de code suivant énumère les fournisseurs de langages sur l’ordinateur et affiche les paramètres de configuration et de compilateur pour chaque fournisseur de langages. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeDomProviderTypeValid">
      <MemberSignature Language="C#" Value="public bool IsCodeDomProviderTypeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCodeDomProviderTypeValid" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCodeDomProviderTypeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCodeDomProviderTypeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCodeDomProviderTypeValid : bool" Usage="System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a value indicating whether the language provider implementation is configured on the computer.</summary>
        <value>
          <see langword="true" /> Si le type de mise en œuvre de fournisseur de langages est configuré sur l’ordinateur ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> propriété à vérifier le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation avant d’accéder aux propriétés du fournisseur ou aux méthodes. Par exemple, après avoir obtenu la langue des paramètres de fournisseur à partir de la <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> (méthode), utilisez le <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> propriété pour vérifier l’implémentation du type de fournisseur avant d’appeler le <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> méthode ou à l’aide de la <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si la langue d’entrée a un configuré <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur. Si un fournisseur est configuré pour la langue spécifiée, l’exemple affiche les paramètres de configuration de fournisseur de langage. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler des membres de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associés <see cref="T:System.Security.Permissions.PermissionState" /> valeur d’énumération : <see langword="Unrestricted" />; [NIB : jeux d’autorisations nommés] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
  </Members>
</Type>