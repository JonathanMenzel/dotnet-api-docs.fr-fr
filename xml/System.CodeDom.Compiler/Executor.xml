<Type Name="Executor" FullName="System.CodeDom.Compiler.Executor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a948b7b2258d94daa9b648c40d6ef0aa971992cf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Executor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Executor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.Executor" />
  <TypeSignature Language="VB.NET" Value="Public Class Executor" />
  <TypeSignature Language="C++ CLI" Value="public ref class Executor abstract sealed" />
  <TypeSignature Language="F#" Value="type Executor = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les fonctions d'exécution de commande pour appeler les compilateurs. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe fournit une collection de méthodes qui peut être utilisé pour invoquer un compilateur, généralement à partir d’un <xref:System.CodeDom.Compiler.ICodeCompiler> mise en œuvre.  
  
> [!NOTE]
>  Cette classe contient une demande de liaison au niveau de la classe qui s’applique à tous les membres. A <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat n’a pas d’autorisations de confiance totale. Pour plus d’informations, consultez [les demandes de liaison](~/docs/framework/misc/link-demands.md).  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
  </Docs>
  <Members>
    <Member MemberName="ExecWait">
      <MemberSignature Language="C#" Value="public static void ExecWait (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecWait(string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExecWait (cmd As String, tempFiles As TempFileCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExecWait(System::String ^ cmd, System::CodeDom::Compiler::TempFileCollection ^ tempFiles);" />
      <MemberSignature Language="F#" Value="static member ExecWait : string * System.CodeDom.Compiler.TempFileCollection -&gt; unit" Usage="System.CodeDom.Compiler.Executor.ExecWait (cmd, tempFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
      </Parameters>
      <Docs>
        <param name="cmd">La commande à exécuter.</param>
        <param name="tempFiles">Une <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> permettant de gérer et stocker les références aux fichiers intermédiaires générés pendant la compilation.</param>
        <summary>Exécute la commande en utilisant les fichiers temporaires spécifiés et attend le retour de l’appel.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecWaitWithCapture">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exécute la commande spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (cmd As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(System::String ^ cmd, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberSignature Language="F#" Value="static member ExecWaitWithCapture : string * System.CodeDom.Compiler.TempFileCollection *  *  -&gt; int" Usage="System.CodeDom.Compiler.Executor.ExecWaitWithCapture (cmd, tempFiles, outputName, errorName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cmd">La commande à exécuter.</param>
        <param name="tempFiles">Une <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> permettant de gérer et stocker les références aux fichiers intermédiaires générés pendant la compilation.</param>
        <param name="outputName">Référence à une chaîne qui stockera le message de sortie du compilateur.</param>
        <param name="errorName">Référence à une chaîne qui stockera le nom des erreurs rencontrées.</param>
        <summary>Exécute la commande spécifiée à l'aide des fichiers temporaires définis puis attend le retour de l'appel, en enregistrant les résultats et les erreurs de la compilation dans les chaînes spécifiées.</summary>
        <returns>Valeur de retour du compilateur.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
      </Docs>
    </Member>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (IntPtr userToken, string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(native int userToken, string cmd, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (userToken As IntPtr, cmd As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(IntPtr userToken, System::String ^ cmd, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberSignature Language="F#" Value="static member ExecWaitWithCapture : nativeint * string * System.CodeDom.Compiler.TempFileCollection *  *  -&gt; int" Usage="System.CodeDom.Compiler.Executor.ExecWaitWithCapture (userToken, cmd, tempFiles, outputName, errorName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="userToken">Jeton de démarrage du processus du compilateur.</param>
        <param name="cmd">La commande à exécuter.</param>
        <param name="tempFiles">Une <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> permettant de gérer et stocker les références aux fichiers intermédiaires générés pendant la compilation.</param>
        <param name="outputName">Référence à une chaîne qui stockera le message de sortie du compilateur.</param>
        <param name="errorName">Référence à une chaîne qui stockera le nom des erreurs rencontrées.</param>
        <summary>Exécute la commande spécifiée à l'aide du jeton utilisateur et des fichiers temporaires définis puis attend le retour de l'appel, en enregistrant les résultats et les erreurs de la compilation dans les chaînes spécifiées.</summary>
        <returns>Valeur de retour du compilateur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `userToken` paramètre accepte un jeton d’accès de sécurité Win32 qui indique le contexte de sécurité pour le processus à démarrer. Pour plus d’informations, consultez les fenêtres `CreateProcessAsUser` documentation sur la méthode dans la documentation Platform SDK sur MSDN.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(string cmd, string currentDir, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (cmd As String, currentDir As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(System::String ^ cmd, System::String ^ currentDir, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberSignature Language="F#" Value="static member ExecWaitWithCapture : string * string * System.CodeDom.Compiler.TempFileCollection *  *  -&gt; int" Usage="System.CodeDom.Compiler.Executor.ExecWaitWithCapture (cmd, currentDir, tempFiles, outputName, errorName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="currentDir" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cmd">La commande à exécuter.</param>
        <param name="currentDir">Le répertoire actif.</param>
        <param name="tempFiles">Une <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> permettant de gérer et stocker les références aux fichiers intermédiaires générés pendant la compilation.</param>
        <param name="outputName">Référence à une chaîne qui stockera le message de sortie du compilateur.</param>
        <param name="errorName">Référence à une chaîne qui stockera le nom des erreurs rencontrées.</param>
        <summary>Exécute la commande spécifiée à l'aide du répertoire en cours et des fichiers temporaires définis puis attend le retour de l'appel, en enregistrant les résultats et les erreurs de la compilation dans les chaînes spécifiées.</summary>
        <returns>Valeur de retour du compilateur.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
    <Member MemberName="ExecWaitWithCapture">
      <MemberSignature Language="C#" Value="public static int ExecWaitWithCapture (IntPtr userToken, string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecWaitWithCapture(native int userToken, string cmd, string currentDir, class System.CodeDom.Compiler.TempFileCollection tempFiles, string&amp; outputName, string&amp; errorName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecWaitWithCapture (userToken As IntPtr, cmd As String, currentDir As String, tempFiles As TempFileCollection, ByRef outputName As String, ByRef errorName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ExecWaitWithCapture(IntPtr userToken, System::String ^ cmd, System::String ^ currentDir, System::CodeDom::Compiler::TempFileCollection ^ tempFiles, System::String ^ % outputName, System::String ^ % errorName);" />
      <MemberSignature Language="F#" Value="static member ExecWaitWithCapture : nativeint * string * string * System.CodeDom.Compiler.TempFileCollection *  *  -&gt; int" Usage="System.CodeDom.Compiler.Executor.ExecWaitWithCapture (userToken, cmd, currentDir, tempFiles, outputName, errorName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="cmd" Type="System.String" />
        <Parameter Name="currentDir" Type="System.String" />
        <Parameter Name="tempFiles" Type="System.CodeDom.Compiler.TempFileCollection" />
        <Parameter Name="outputName" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="errorName" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="userToken">Jeton de démarrage du processus du compilateur.</param>
        <param name="cmd">La commande à exécuter.</param>
        <param name="currentDir">Répertoire dans lequel le processus doit être commencé.</param>
        <param name="tempFiles">Une <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> permettant de gérer et stocker les références aux fichiers intermédiaires générés pendant la compilation.</param>
        <param name="outputName">Référence à une chaîne qui stockera le message de sortie du compilateur.</param>
        <param name="errorName">Référence à une chaîne qui stockera le nom des erreurs rencontrées.</param>
        <summary>Exécute la commande spécifiée à l'aide du jeton utilisateur, du répertoire en cours et des fichiers temporaires définis puis attend le retour de l'appel, en enregistrant les résultats et les erreurs de la compilation dans les chaînes spécifiées.</summary>
        <returns>Valeur de retour du compilateur.</returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
      </Docs>
    </Member>
  </Members>
</Type>