<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeDomProvider.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56ab122180fc89eaf109d9f5bcb109a2d70a23335.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ab122180fc89eaf109d9f5bcb109a2d70a23335</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Provides a base class for <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementations.</source>
          <target state="translated">Fournit une classe de base pour les implémentations de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class is abstract.</source>
          <target state="translated">Cette classe est abstraite.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> can be used to create and retrieve instances of code generators and code compilers.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> peut être utilisé pour créer et récupérer des instances de générateurs de code et des compilateurs de code.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</source>
          <target state="translated">Les générateurs de code permettent de générer du code dans un langage donné, tandis que les compilateurs de code permettent de compiler du code dans des assemblys.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the methods made available in the code generator and code compiler are available directly from the code provider.</source>
          <target state="translated">Dans le <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, les méthodes disponibles dans le Générateur de code et du compilateur de code sont directement disponibles dans le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> to access the methods, and those methods are marked as obsolete.</source>
          <target state="translated">Vous n’avez pas besoin d’appeler <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> pour accéder aux méthodes et ces méthodes sont marquées comme obsolètes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This applies to preexisting as well as new code provider implementations.</source>
          <target state="translated">Cela s’applique aux préexistant, ainsi que de nouvelles implémentations de fournisseur de code.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation fournit généralement code code et/ou de la génération des interfaces de compilation pour la génération de code et de gestion de la compilation pour un seul langage de programmation.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Several languages are supported by <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations that ship with the <ph id="ph2">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>.</source>
          <target state="translated">Plusieurs langues sont prises en charge par <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentations fournies avec le <ph id="ph2">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>These languages include C#, Visual Basic, C++, and JScript.</source>
          <target state="translated">Ces langages incluent c#, Visual Basic, C++ et JScript.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Developers or compiler vendors can implement the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> and <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> interfaces and provide a <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> that extends CodeDOM support to other programming languages.</source>
          <target state="translated">Les développeurs ou les éditeurs de compilateurs peuvent implémenter la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> et <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> interfaces et fournir un <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> qui étend la prise en charge de CodeDOM à d’autres langages de programmation.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations.</source>
          <target state="translated">Le <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> dans la configuration de l’ordinateur (Machine.config) de fichiers fournit un mécanisme pour les développeurs et aux fournisseurs de compilateur d’ajouter des paramètres de configuration pour supplémentaires<ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph>implémentations.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class provides static methods to discover and enumerate the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations on a computer.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> classe fournit des méthodes statiques pour découvrir et énumérer les <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentations sur un ordinateur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> method returns the settings for all <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations on a computer.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> méthode retourne les paramètres pour tous les <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentations sur un ordinateur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> method returns the settings for a specific <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation, based on the programming language name.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> méthode retourne les paramètres pour un spécifique <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation, en fonction du nom de langage de programmation.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method returns an instance of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for a specific language.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> méthode retourne une instance d’un <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une langue spécifique.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>For more details on language provider settings in the configuration file, see <bpt id="p1">[</bpt>Compiler and Language Provider Settings Schema<ept id="p1">](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les paramètres du fournisseur de langage dans le fichier de configuration, consultez <bpt id="p1">[</bpt>compilateur et langage de schéma des paramètres fournisseur<ept id="p1">](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class makes a link demand and an inheritance demand at the class level.</source>
          <target state="translated">Cette classe effectue une demande de liaison et une demande d’héritage au niveau de la classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown if either the immediate caller or the derived class does not have full trust permission.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> est levée si l’appelant immédiat ou la classe dérivée ne dispose pas d’autorisation de confiance totale.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les demandes de sécurité, consultez <bpt id="p1">[</bpt>les demandes de liaison<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> et <bpt id="p2">[</bpt>des demandes d’héritage<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class.</source>
          <target state="translated">L’exemple de programme suivant peut générer et compiler le code source basé sur un modèle CodeDOM d’un programme qui imprime « Hello World » à l’aide de la <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A Windows Forms user interface is provided.</source>
          <target state="translated">Une interface utilisateur Windows Forms est fournie.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</source>
          <target state="translated">L’utilisateur peut sélectionner la cible de langage à partir de plusieurs sélections de programmation : c#, Visual Basic et JScript.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Cette classe ne peut pas être utilisée par du code partiellement fiable.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>for full trust for inheritors.</source>
          <target state="translated">pour la confiance totale pour les héritiers de.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">Cette classe ne peut pas être héritée par du code partiellement fiable.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph>.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, les fournisseurs de code se composent d’implémentations de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph>, et <ph id="ph4">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, the <ph id="ph2">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph>, and <ph id="ph4">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> methods are obsolete, and the methods of <ph id="ph5">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> and <ph id="ph6">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> are directly available in the <ph id="ph7">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class.</source>
          <target state="translated">Dans le <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, le <ph id="ph2">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph>, et <ph id="ph4">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> sont obsolètes et les méthodes de <ph id="ph5">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> et <ph id="ph6">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> sont directement disponibles dans la <ph id="ph7">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>You should override those methods in your code provider implementation and not call the base methods.</source>
          <target state="translated">Vous devez substituer ces méthodes dans votre implémentation de fournisseur de code et n’appelez pas les méthodes de base.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Cette classe ne peut pas être utilisée par du code partiellement fiable.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> object that indicates the settings for the compilation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> indiquant les paramètres de la compilation.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that indicates the code to compile.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> indiquant le code à compiler.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>Compiles an assembly based on the <ph id="ph1">&lt;see cref="N:System.CodeDom" /&gt;</ph> trees contained in the specified array of <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> objects, using the specified compiler settings.</source>
          <target state="translated">Compile un assembly basé sur les arborescences <ph id="ph1">&lt;see cref="N:System.CodeDom" /&gt;</ph> contenues dans le tableau d'objets <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> spécifié, à l'aide des paramètres du compilateur spécifiés.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> object that indicates the results of the compilation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> indiquant les résultats de la compilation.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method for compatibility with preexisting providers that use code compilers.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des compilateurs de code.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code compiler.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’un compilateur de code.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> object that indicates the settings for the compilation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> indiquant les paramètres de la compilation.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>An array of the names of the files to compile.</source>
          <target state="translated">Tableau des noms des fichiers à compiler.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</source>
          <target state="translated">Compile un assembly à partir du code source contenu dans les fichiers spécifiés, à l'aide des paramètres du compilateur spécifiés.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> object that indicates the results of compilation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> indiquant les résultats de la compilation.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method for compatibility with preexisting providers that use code compilers.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des compilateurs de code.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code compiler.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’un compilateur de code.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> object that indicates the compiler settings for this compilation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> indiquant les paramètres du compilateur pour cette compilation.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>An array of source code strings to compile.</source>
          <target state="translated">Tableau de chaînes de code source à compiler.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</source>
          <target state="translated">Compile un assembly à partir du tableau de chaînes spécifié contenant le code source, à l'aide des paramètres du compilateur spécifiés.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> object that indicates the results of compilation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> indiquant les résultats de la compilation.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method for compatibility with preexisting providers that use code compilers.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des compilateurs de code.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code compiler.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’un compilateur de code.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>When overridden in a derived class, creates a new code compiler.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, crée un nouveau compilateur de code.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> that can be used for compilation of <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> pouvant être utilisé pour la compilation de représentations du code source basées sur <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>This method is obsolete in the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated">Cette méthode est obsolète dans le <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> methods that are directly available in the code provider.</source>
          <target state="translated">L’alternative recommandée consiste à appeler le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> les méthodes qui sont directement disponibles dans le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, you should implement the <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> members in the <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class and throw a <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when this method is called.</source>
          <target state="translated">Dans le <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, vous devez implémenter la <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> membres dans le <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> classe et lève un <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The string for which to create an escaped identifier.</source>
          <target state="translated">Chaîne pour laquelle un identificateur avec séquence d'échappement doit être créé.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>Creates an escaped identifier for the specified value.</source>
          <target state="translated">Crée un identificateur avec séquence d'échappement pour la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier for the value.</source>
          <target state="translated">Identificateur avec séquence d'échappement pour la valeur.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A&gt;</ph> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A&gt;</ph> tests si l’identificateur est en conflit avec les réservés ou des mots clés du langage et si tel est le cas, retourne un nom équivalent avec la mise en forme du code d’échappement spécifique au langage.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>This is referred to an escaped identifier.</source>
          <target state="translated">Cela s’appelle un identificateur de séquence d’échappement.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier contains the same <ph id="ph1">`value`</ph> but has escape-code formatting added to differentiate the identifier from the keyword.</source>
          <target state="translated">L’identificateur de séquence d’échappement contient la même <ph id="ph1">`value`</ph> mais est mise en forme du code d’échappement ajoutée afin de différencier l’identificateur du mot clé.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>Two implementation examples are preceding the <ph id="ph1">`value`</ph> with "@" or bracketing the <ph id="ph2">`value`</ph> with "[" and "]".</source>
          <target state="translated">Deux exemples d’implémentation précèdent la <ph id="ph1">`value`</ph> avec « @ » ou mettent entre crochets le <ph id="ph2">`value`</ph> avec » [ » et «] ».</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>When overridden in a derived class, creates a new code generator.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>When overridden in a derived class, creates a new code generator.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> that can be used to generate <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> pouvant être utilisé pour générer des représentations du code source basées sur <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>This method is obsolete in the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated">Cette méthode est obsolète dans le <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> methods that are directly available in the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> les méthodes qui sont directement disponibles dans la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, you should implement the <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> members in the <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class and throw a <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when this method is called.</source>
          <target state="translated">Dans le <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, vous devez implémenter la <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> membres dans le <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> classe et lève un <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to use to output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> à utiliser pour effectuer la sortie.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>When overridden in a derived class, creates a new code generator using the specified <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> for output.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code à l'aide du <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié pour la sortie.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> that can be used to generate <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> pouvant être utilisé pour générer des représentations du code source basées sur <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>This method uses the specified <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> for output.</source>
          <target state="translated">Cette méthode utilise le <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> pour la sortie.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>This method supports more optimized code generation that incrementally updates the source code.</source>
          <target state="translated">Cette méthode prend en charge la génération de code optimisé plus que de façon incrémentielle met à jour le code source.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>The base class implementation calls the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method, which is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> and results in a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> if an <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> object is not returned.</source>
          <target state="translated">L’implémentation de classe de base appelle la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> (méthode), qui est obsolète dans le <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> et entraîne une <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> si un <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> objet n’est retourné.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>The file name to output to.</source>
          <target state="translated">Nom du fichier vers lequel effectuer la sortie.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>When overridden in a derived class, creates a new code generator using the specified file name for output.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code à l'aide du nom de fichier spécifié pour la sortie.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> that can be used to generate <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> pouvant être utilisé pour générer des représentations du code source basées sur <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>This method uses the specified file name for output.</source>
          <target state="translated">Cette méthode utilise le nom de fichier spécifié pour la sortie.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>The base class implementation calls the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method, which is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> and results in a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> if an <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> object is not returned.</source>
          <target state="translated">L’implémentation de classe de base appelle la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> (méthode), qui est obsolète dans le <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> et entraîne une <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> si un <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> objet n’est retourné.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
          <source>When overridden in a derived class, creates a new code parser.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, crée un nouvel analyseur de code.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> that can be used to parse source code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> pouvant être utilisé pour analyser le code source.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
          <source>The base implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'implémentation de base retourne toujours <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> instance for the specified language.</source>
          <target state="translated">Crée une instance de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> pour le langage spécifié.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The language name.</source>
          <target state="translated">Nom du langage.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> instance for the specified language.</source>
          <target state="translated">Crée une instance de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> pour le langage spécifié.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>A CodeDOM provider that is implemented for the specified language name.</source>
          <target state="translated">Fournisseur CodeDOM  qui est implémentée pour le nom du langage spécifié.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</source>
          <target state="translated">Cette méthode est généralement utilisée pour créer une instance d’un fournisseur de code dans une application qui peut utiliser un des fournisseurs.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> allows you to specify at run time the code provider you wish to instantiate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> vous permet de spécifier au moment de l’exécution, le fournisseur de code que vous souhaitez instancier.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method.</source>
          <target state="translated">Si vous connaissez au moment du design quel code fournisseur doit être utilisé, vous devez créer une instance de ce fournisseur de code plutôt que d’utiliser le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> instance for a specific language name; it is similar to calling the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method with the language provider type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> méthode retourne un <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> de l’instance pour un nom de langage spécifique ; elle est similaire à l’appel du <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> méthode avec le type de fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> when you want to dynamically find a configured provider implementation for a language name.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> lorsque vous souhaitez rechercher dynamiquement une implémentation de fournisseur configurée pour un nom de langue.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>If more than one provider implementation is configured for the language name, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> returns a provider instance for the last matching configuration element.</source>
          <target state="translated">Si plusieurs implémentations de fournisseur sont configurée pour le nom de la langue, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> retourne une instance de fournisseur pour le dernier élément de configuration correspondant.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> method overload when you want a specific language provider implementation.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> surcharge de méthode lorsque vous souhaitez une implémentation de fournisseur de langage spécifique.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>For example, use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method to get a provider instance that supports the language name <ph id="ph2">`"CSharp"`</ph>; use the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> method overload to get a provider instance specifically for the <ph id="ph4">&lt;xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Par exemple, utiliser le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> méthode pour obtenir une instance de fournisseur qui prend en charge le nom du langage <ph id="ph2">`"CSharp"`</ph>; utiliser le <ph id="ph3">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> surcharge de méthode pour obtenir une instance de fournisseur spécifiquement pour le <ph id="ph4">&lt;xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>You should use the [<ph id="ph1">\]</ph>, CultureInfo, Object<ph id="ph2">\&lt;</ph>xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt; method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</source>
          <target state="translated">Vous devez utiliser le [<ph id="ph1">\]</ph>, CultureInfo, objet<ph id="ph2">\&lt;</ph>xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType &gt; méthode si vous disposez de plusieurs fournisseurs de code pour un langage et que vous souhaitez instancier un fournisseur de code spécifique.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> method checks whether at least one provider implementation supports a specific language.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> méthode vérifie si au moins une implémentation de fournisseur prend en charge une langue spécifique.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>You can validate a language name using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> before passing it to <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph>.</source>
          <target state="translated">Vous pouvez valider un nom de langue à l’aide de <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> avant leur transmission à <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>If you pass an unsupported language name to <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> is thrown.</source>
          <target state="translated">Si vous passez un nom de langage non pris en charge pour <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> un <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> method can be used to determine all <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>system.codedom<ph id="ph4">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> méthode peut être utilisée pour déterminer toutes les <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentations sur un ordinateur, y compris les implémentations supplémentaires fournies par les développeurs et les fournisseurs de compilateur qui sont identifiées dans le <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>system.codedom <ph id="ph4">&amp;gt;</ph> Élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> dans le fichier de configuration de l’ordinateur (Machine.config).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method returns an instance of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for a specific language.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> méthode retourne une instance d’un <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une langue spécifique.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Noms de langue respectent la casse.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input language and displays the configured settings for the language provider.</source>
          <target state="translated">L’exemple de code suivant détermine le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une langue d’entrée et affiche les paramètres configurés pour le fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> does not have a configured provider on this computer.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="language" /&gt;</ph> n'a pas de fournisseur configuré sur cet ordinateur.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="language" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The language name.</source>
          <target state="translated">Nom du langage.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>A collection of provider options from the configuration file.</source>
          <target state="translated">Collection d'options de fournisseur issue du fichier de configuration.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> instance for the specified language and provider options.</source>
          <target state="translated">Obtient une instance <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> pour le langage et les options de fournisseur spécifiés.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>A CodeDOM provider that is implemented for the specified language name and options.</source>
          <target state="translated">Fournisseur CodeDOM implémenté pour le nom de langage et les options spécifiés.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</source>
          <target state="translated">Cette méthode est généralement utilisée pour créer une instance d’un fournisseur de code dans une application qui peut utiliser un des fournisseurs.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> enables you to specify at run time the version of the code provider you want to instantiate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> permet de spécifier au moment de l’exécution de la version du fournisseur de code que vous souhaitez instancier.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> method.</source>
          <target state="translated">Si vous connaissez au moment du design quel code fournisseur doit être utilisé, vous devez créer une instance de ce fournisseur de code au lieu d’utiliser le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> when you want to dynamically find a configured provider implementation for a specific language and options.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> lorsque vous souhaitez rechercher dynamiquement une implémentation de fournisseur configurée pour une langue spécifique et les options.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Noms de langue respectent la casse.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>For information about supported provider options, see the specific CodeDOM provider documentation.</source>
          <target state="translated">Pour plus d’informations sur les options de fournisseur prises en charge, consultez la documentation du fournisseur CodeDOM spécifique.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations sur la validation d’un fournisseur et l’appel d’un fournisseur si plusieurs implémentations de fournisseur sont configurée pour le nom du langage, consultez la section Notes de la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The following example shows how to create an instance of a provider by using the <ph id="ph1">`providerOptions`</ph> parameter.</source>
          <target state="translated">L’exemple suivant montre comment créer une instance d’un fournisseur à l’aide de le <ph id="ph1">`providerOptions`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>The string for which to generate a valid identifier.</source>
          <target state="translated">Chaîne pour laquelle un identificateur valide doit être généré.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>Creates a valid identifier for the specified value.</source>
          <target state="translated">Crée un identificateur valide pour la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>A valid identifier for the specified value.</source>
          <target state="translated">Identificateur valide pour la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A&gt;</ph> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A&gt;</ph> Teste si l’identificateur est en conflit avec réservés ou des mots clés du langage, et le cas échéant, tente de retourner un identificateur valide nom qui n’est pas en conflit.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</source>
          <target state="translated">Généralement l’identificateur retourné est légèrement modifié pour différencier l’identificateur du mot clé ; par exemple, le nom peut être précédé par le caractère de soulignement (« _ »).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>Gets the default file name extension to use for source code files in the current language.</source>
          <target state="translated">Définit l'extension du nom de fichier par défaut à utiliser pour les fichiers de code source dans le langage actuel.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>A file name extension corresponding to the extension of the source files of the current language.</source>
          <target state="translated">Extension du nom de fichier correspondant à l'extension des fichiers sources du langage actuel.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>The base implementation always returns <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">L'implémentation de base retourne toujours <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</source>
          <target state="translated">Cette propriété est utilisée par les générateurs de code et des compilateurs de code pour indiquer les extensions de fichier doivent être générées ou a utilisée.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>The following code example creates an instance of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant crée une instance de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>The example displays the provider name, hash code and default file name extension for the new provider instance.</source>
          <target state="translated">L’exemple affiche le nom du fournisseur, le hachage par défaut et le code d’extension de fichier pour la nouvelle instance de fournisseur.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> for which to generate code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> pour lequel du code doit être généré.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which the output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> auquel le code de sortie est envoyé.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> qui indique les options à utiliser pour générer le code.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Génère du code pour l'unité de compilation CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A&gt;</ph> method to generate code for a "Hello World" application from a <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A&gt;</ph> méthode pour générer du code pour une application « Hello World » à partir d’un <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class.</source>
          <target state="translated">Cet exemple fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> object that indicates the expression for which to generate code.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> indiquant l'expression pour laquelle du code doit être généré.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> auquel le code de sortie est envoyé.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> qui indique les options à utiliser pour générer le code.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Génère du code pour l'expression CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeMember" /&gt;</ph> object that indicates the member for which to generate code.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeMember" /&gt;</ph> indiquant le membre pour lequel du code doit être généré.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> auquel le code de sortie est envoyé.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> qui indique les options à utiliser pour générer le code.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Génère du code pour la déclaration de membre CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base class implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">L’implémentation de classe de base lève une <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>See <ph id="ph1">&lt;xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType&gt;</ph> for documentation describing an implementation of this method.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType&gt;</ph> pour obtenir la documentation décrivant une implémentation de cette méthode.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> method as implemented by the <ph id="ph2">&lt;xref:Microsoft.CSharp.CSharpCodeProvider&gt;</ph> and <ph id="ph3">&lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt;</ph> classes.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> la méthode implémentée par le <ph id="ph2">&lt;xref:Microsoft.CSharp.CSharpCodeProvider&gt;</ph> et <ph id="ph3">&lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>This method is not overridden in a derived class.</source>
          <target state="translated">Cette méthode n'est pas substituée dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeNamespace" /&gt;</ph> object that indicates the namespace for which to generate code.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeNamespace" /&gt;</ph> indiquant l'espace de noms pour lequel du code doit être généré.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> auquel le code de sortie est envoyé.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> qui indique les options à utiliser pour générer le code.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Génère du code pour l'espace de noms CodeDOM (Code Document Object Model) spécifié et l'envoie au writer de texte spécifié, à l'aide des options définies.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the CodeDOM elements for which to generate code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> qui contient les éléments CodeDOM pour lesquels du code doit être généré.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> auquel le code de sortie est envoyé.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> qui indique les options à utiliser pour générer le code.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Génère du code pour l'instruction CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> object that indicates the type for which to generate code.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> indiquant le type pour lequel du code doit être généré.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> auquel le code de sortie est envoyé.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> qui indique les options à utiliser pour générer le code.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Génère du code pour la déclaration de type CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>Returns the language provider and compiler configuration settings for this computer.</source>
          <target state="translated">Retourne le fournisseur de langages et les paramètres de configuration de compilateur pour cet ordinateur.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> representing the settings of all configured <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementations.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> qui représente les paramètres de toutes les implémentations de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configurées.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> method to enumerate the language provider settings on a computer.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> méthode pour énumérer les paramètres du fournisseur de langue sur un ordinateur.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the default language providers supplied by the .NET Framework are not specified in the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>system.codedom<ph id="ph3">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</source>
          <target state="translated">Dans le <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, les fournisseurs de langages par défaut fournis par le .NET Framework ne sont pas spécifiés dans le <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>system.codedom<ph id="ph3">&amp;gt;</ph> élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> configuration de compilateur section et ne peut pas être supprimé, par conséquent cette méthode retourne des informations sur les fournisseurs par défaut et tout spécifié dans le fichier de configuration.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</source>
          <target state="translated">L’exemple de code suivant énumère les fournisseurs de langages sur l’ordinateur et affiche les paramètres de configuration et de compilateur pour chaque fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>A language name.</source>
          <target state="translated">Nom de langage.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>Returns the language provider and compiler configuration settings for the specified language.</source>
          <target state="translated">Retourne le fournisseur de langages et les paramètres de configuration de compilateur pour le langage spécifié.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> object populated with settings of the configured <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> rempli avec les paramètres de l'implémentation de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configurée.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">Le <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> dans la configuration de l’ordinateur le fichier contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation sur l’ordinateur.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>For information about machine configuration files, see the Machine Configuration Files section in <bpt id="p1">[</bpt>Configuring Apps<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les fichiers de configuration machine, consultez la section des fichiers de Configuration Machine dans <bpt id="p1">[</bpt>configuration des applications<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> method searches each provider configuration element for the specified language name.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> méthode recherche chaque élément de configuration de fournisseur pour le nom de la langue spécifiée.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instance contains the configured language provider and compiler settings.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instance contient les paramètres de langue configuré pour le compilateur et du fournisseur.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> method checks whether at least one provider implementation supports a specific language.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> méthode vérifie si au moins une implémentation de fournisseur prend en charge une langue spécifique.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>You can validate a language name using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> before passing it to <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph>.</source>
          <target state="translated">Vous pouvez valider un nom de langue à l’aide de <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> avant leur transmission à <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>This prevents throwing a <ph id="ph1">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> when you access the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instance for an unsupported language name.</source>
          <target state="translated">Cela empêche la levée d’une <ph id="ph1">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> quand vous accédez à la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instance pour un nom de langage non pris en charge.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>If more than one provider implementation is configured for the input language name, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> returns the settings from the last matching provider configuration element.</source>
          <target state="translated">Si plusieurs implémentations de fournisseur sont configurée pour le nom de la langue d’entrée, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> renvoie les paramètres du fournisseur correspondant dernier élément de configuration.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Noms de langue respectent la casse.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input language and displays the configured settings for the language provider.</source>
          <target state="translated">L’exemple de code suivant détermine le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une langue d’entrée et affiche les paramètres configurés pour le fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> does not have a configured provider on this computer.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="language" /&gt;</ph> n'a pas de fournisseur configuré sur cet ordinateur.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="language" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>The type of object to retrieve a type converter for.</source>
          <target state="translated">Type d'objet pour lequel un convertisseur de type doit être récupéré.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified data type.</source>
          <target state="translated">Obtient <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> pour le type de données spécifié.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> pour le type spécifié, ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucun <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> n'est trouvé pour le type spécifié.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>A derived class can override this method to provide specific types of type converters for specific data types.</source>
          <target state="translated">Une classe dérivée peut substituer cette méthode pour fournir des types spécifiques de convertisseurs de type pour les types de données spécifiques.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>A file name extension.</source>
          <target state="translated">Extension de nom de fichier.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>Returns a language name associated with the specified file name extension, as configured in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> compiler configuration section.</source>
          <target state="translated">Retourne un nom de langage associé à l'extension de nom de fichier spécifiée, comme configuré dans la section de configuration de compilateur <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>A language name associated with the file name extension, as configured in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> compiler configuration settings.</source>
          <target state="translated">Nom de langage associé à l'extension de nom de fichier, comme configuré dans les paramètres de configuration de compilateur <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">Le <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> dans la configuration d’ordinateur fichier (Machine.config) contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation sur le ordinateur.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> method searches each provider configuration element for the specified file name extension.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> méthode recherche chaque élément de configuration de fournisseur pour l’extension de nom de fichier spécifié.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> method checks whether at least one provider implementation supports a specific file name extension.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> méthode vérifie si au moins une implémentation de fournisseur prend en charge une extension de nom de fichier spécifique.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>You can validate a file name extension using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> before passing it to <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph>.</source>
          <target state="translated">Vous pouvez valider une extension de nom de fichier à l’aide <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> avant leur transmission à <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>This prevents <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> from throwing a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> for an unsupported file name extension.</source>
          <target state="translated">Cela empêche <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> de lever une <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> pour une extension de nom de fichier non pris en charge.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> returns the first language name for that provider.</source>
          <target state="translated">Si une implémentation de fournisseur prend en charge l’extension de nom de fichier d’entrée et il existe plusieurs langues prises en charge configurés pour ce fournisseur, puis <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> retourne le premier nom de langage pour ce fournisseur.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>If more than one provider implementation is configured for the input file name extension, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> returns the language name from the last matching provider configuration element.</source>
          <target state="translated">Si plusieurs implémentations de fournisseur sont configurée pour l’extension de nom de fichier d’entrée, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> renvoie le nom de la langue du fournisseur correspondant dernier élément de configuration.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>Language names and file name extensions are case-insensitive.</source>
          <target state="translated">Noms de langue et les extensions de nom de fichier respectent la casse.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input file name extension and displays the configured settings for the language provider.</source>
          <target state="translated">L’exemple de code suivant détermine le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une extension de nom de fichier d’entrée et affiche les paramètres configurés pour le fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> does not have a configured language provider on this computer.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> n'a pas de fournisseur de langages configuré sur cet ordinateur.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="extension" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that indicates the type to return.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> qui indique le type à retourner.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Gets the type indicated by the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</source>
          <target state="translated">Obtient le type indiqué par le <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>A text representation of the specified type, formatted for the language in which code is generated by this code generator.</source>
          <target state="translated">Représentation textuelle du type spécifié, mise en forme pour le langage dans lequel du code est généré par ce générateur de code.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>In Visual Basic, for example, passing in a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> type will return "Integer".</source>
          <target state="translated">En Visual Basic, par exemple, passer <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> pour le type <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> retourne "Integer".</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>A file name extension.</source>
          <target state="translated">Extension de nom de fichier.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>Tests whether a file name extension has an associated <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation configured on the computer.</source>
          <target state="translated">Vérifie si une implémentation de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configurée sur l'ordinateur est associée à une extension de nom de fichier.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation is configured for the specified file name extension; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une implémentation de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> est configurée pour l'extension de nom de fichier spécifiée ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">Le <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> dans la configuration d’ordinateur fichier (Machine.config) contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation sur le ordinateur.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> method searches the provider configuration elements for the specified file name extension.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> méthode recherche les éléments de configuration de fournisseur pour l’extension de nom de fichier spécifié.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>File name extensions are case-insensitive.</source>
          <target state="translated">Extensions de nom de fichier respectent la casse.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input file name extension and displays the configured settings for the language provider.</source>
          <target state="translated">L’exemple de code suivant détermine le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une extension de nom de fichier d’entrée et affiche les paramètres configurés pour le fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="extension" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The language name.</source>
          <target state="translated">Nom du langage.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>Tests whether a language has a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation configured on the computer.</source>
          <target state="translated">Vérifie si un langage dispose d'une implémentation de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configurée sur l'ordinateur.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation is configured for the specified language; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une implémentation de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> est configurée pour le langage spécifié ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">Le <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> élément<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> dans la configuration d’ordinateur fichier (Machine.config) contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation sur le ordinateur.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> method searches the provider configuration elements for the specified language name.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> méthode recherche les éléments de configuration de fournisseur pour le nom de la langue spécifiée.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Noms de langue respectent la casse.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input language and displays the configured settings for the language provider.</source>
          <target state="translated">L’exemple de code suivant détermine le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implémentation pour une langue d’entrée et affiche les paramètres configurés pour le fournisseur de langage.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="language" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">pour la confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The value to verify as a valid identifier.</source>
          <target state="translated">Valeur à vérifier comme identificateur valide.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>Returns a value that indicates whether the specified value is a valid identifier for the current language.</source>
          <target state="translated">Retourne une valeur indiquant si la valeur spécifiée est un identificateur valide pour le langage actuel.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid identifier; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="value" /&gt;</ph> est un identificateur valide ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>This method tests whether an identifier is valid.</source>
          <target state="translated">Cette méthode vérifie si un identificateur est valide.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A&gt;</ph> method is provider specific.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A&gt;</ph> méthode est spécifique au fournisseur.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>Identifiers that are valid for one provider might not be valid for other providers.</source>
          <target state="translated">Les identificateurs qui sont valides pour un fournisseur n’est peut-être pas valides pour les autres fournisseurs.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>If <ph id="ph1">`value`</ph> contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> contient des caractères en dehors de la plage de caractères ASCII, vérifiez l’identificateur pour toutes les langues qui pourraient être utilisées pour compiler le code.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /&gt;</ph> in a derived class, design the method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only if the value fits the rules of the language and does not conflict with a keyword.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /&gt;</ph> dans une classe dérivée, concevez le retour de la méthode <ph id="ph2">&lt;see langword="true" /&gt;</ph> uniquement si la valeur respecte les règles du langage et n’est pas en conflit avec un mot clé.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions">
          <source>Gets a language features identifier.</source>
          <target state="translated">Obtient un identificateur de fonctionnalités de langage.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.LanguageOptions" /&gt;</ph> that indicates special features of the language.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.LanguageOptions" /&gt;</ph> qui indique les fonctionnalités spéciales du langage.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object that is used to read the code to be parsed.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> utilisé pour lire le code à analyser.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>Compiles the code read from the specified text stream into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Compile le code lu à partir du flux de texte spécifié dans <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that contains a representation of the parsed code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> contenant une représentation du code analysé.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>The base-class method creates a parser in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph> method for compatibility with preexisting providers that use code parsers.</source>
          <target state="translated">La méthode de classe de base crée un analyseur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des analyseurs de code.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code parser.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’analyseur de code.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Returns a value indicating whether the specified code generation support is provided.</source>
          <target state="translated">Retourne une valeur indiquant si la prise en charge de la génération de code spécifiée est fournie.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code generation support is provided; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la prise en charge de la génération de code spécifiée est fournie ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>This method can be called with a number of <ph id="ph1">&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;</ph> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary <ph id="ph2">`OR`</ph> operator (&amp;#124;).</source>
          <target state="translated">Cette méthode peut être appelée avec un nombre de <ph id="ph1">&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;</ph> indicateurs en une seule fois à un ensemble de fonctionnalités de test en joignant un ensemble d’indicateurs appropriés ainsi que d’un fichier binaire <ph id="ph2">`OR`</ph> (opérateur) (&amp;#124;).</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation qui est retournée par la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> méthode du fournisseur.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même s’il n’est pas remplacé par le fournisseur de code.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si le fournisseur de code ne substitue pas cette méthode, le <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implémentation est appelée par la classe de base.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Ni cette méthode ni la méthode <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> ne sont substituées dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> méthode pour la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">La méthode de classe de base appelle ensuite la méthode équivalente le <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implémentation pour exécuter cette fonction.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Vous obtenez un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>