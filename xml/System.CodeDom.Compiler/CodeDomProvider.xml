<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c0ea984e46701bb126f786c8468d7684097575b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39792559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CodeDomProvider = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3620b-101">Fournit une classe de base pour les implémentations de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="3620b-102">Cette classe est abstraite.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-103">Un <xref:System.CodeDom.Compiler.CodeDomProvider> peut être utilisé pour créer et récupérer des instances de générateurs de code et des compilateurs de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="3620b-104">Les générateurs de code permettent de générer du code dans un langage donné, tandis que les compilateurs de code permettent de compiler du code dans des assemblys.</span><span class="sxs-lookup"><span data-stu-id="3620b-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-105">Dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], les méthodes mises à disposition dans le Générateur de code et du compilateur de code sont directement disponibles dans le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="3620b-106">Vous n’avez pas besoin d’appeler <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> ou <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> pour accéder aux méthodes et ces méthodes sont marquées comme obsolètes.</span><span class="sxs-lookup"><span data-stu-id="3620b-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="3620b-107">Cela s’applique aux préexistant, ainsi que de nouvelles implémentations de fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="3620b-108">Un <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation fournit généralement code des interfaces de compilation de code et/ou la génération pour la génération de code et la gestion de compilation pour un seul langage de programmation.</span><span class="sxs-lookup"><span data-stu-id="3620b-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="3620b-109">Plusieurs langages sont pris en charge par <xref:System.CodeDom.Compiler.CodeDomProvider> implémentations fournies avec le [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3620b-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="3620b-110">Ces langages incluent c#, Visual Basic, C++ et JScript.</span><span class="sxs-lookup"><span data-stu-id="3620b-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="3620b-111">Les développeurs ou les éditeurs de compilateurs peuvent implémenter la <xref:System.CodeDom.Compiler.ICodeGenerator> et <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces et de fournir un <xref:System.CodeDom.Compiler.CodeDomProvider> qui étend la prise en charge de CodeDOM à d’autres langages de programmation.</span><span class="sxs-lookup"><span data-stu-id="3620b-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="3620b-112">Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur (Machine.config) de fichier fournit un mécanisme pour les développeurs et éditeurs de compilateurs ajouter des paramètres de configuration supplémentaires <xref:System.CodeDom.Compiler.CodeDomProvider>implémentations.</span><span class="sxs-lookup"><span data-stu-id="3620b-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="3620b-113">Le <xref:System.CodeDom.Compiler.CodeDomProvider> classe fournit des méthodes statiques pour découvrir et énumérer les <xref:System.CodeDom.Compiler.CodeDomProvider> implémentations sur un ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="3620b-114">Le <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> méthode retourne les paramètres pour tous les <xref:System.CodeDom.Compiler.CodeDomProvider> implémentations sur un ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="3620b-115">Le <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> méthode retourne les paramètres pour un spécifique <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation, en fonction du nom de langage de programmation.</span><span class="sxs-lookup"><span data-stu-id="3620b-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="3620b-116">Le <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> méthode retourne une instance d’un <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une langue spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="3620b-117">Pour plus d’informations sur les paramètres de fournisseur de langages dans le fichier de configuration, consultez [compilateur et le schéma de paramètres de fournisseur de langage](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span><span class="sxs-lookup"><span data-stu-id="3620b-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-118">Cette classe effectue une demande de liaison et une demande d’héritage au niveau de la classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="3620b-119">Un <xref:System.Security.SecurityException> est levée si l’appelant immédiat ou la classe dérivée n’a pas d’autorisation de confiance totale.</span><span class="sxs-lookup"><span data-stu-id="3620b-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="3620b-120">Pour plus d’informations sur les demandes de sécurité, consultez [demandes de liaison](~/docs/framework/misc/link-demands.md) et [demandes d’héritage](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="3620b-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-121">L’exemple de programme suivant peut générer et compiler le code source basé sur un modèle CodeDOM d’un programme qui imprime « Hello World » à l’aide de la <xref:System.Console> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="3620b-122">Une interface utilisateur Windows Forms est fournie.</span><span class="sxs-lookup"><span data-stu-id="3620b-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="3620b-123">L’utilisateur peut sélectionner la cible de langage à partir de plusieurs sélections de programmation : c#, Visual Basic et JScript.</span><span class="sxs-lookup"><span data-stu-id="3620b-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="3620b-124">pour la confiance totale pour l’appelant immédiat.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="3620b-125">Cette classe ne peut pas être utilisée par du code partiellement fiable.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="3620b-126">pour la confiance totale pour les héritiers.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="3620b-127">Cette classe ne peut pas être héritée par du code partiellement fiable.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="3620b-128">
        <para>Dans les versions 1.0 et 1.1 du .NET Framework, les fournisseurs de code se composent d’implémentations de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, et <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. Dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], le <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, et <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> sont obsolètes et les méthodes de <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> et <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> sont directement disponibles dans la <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe. Vous devez substituer ces méthodes dans votre implémentation de fournisseur de code et n’appelez pas les méthodes de base.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="3620b-128">
          <para>In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class. You should override those methods in your code provider implementation and not call the base methods.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3620b-129">Initialise une nouvelle instance de la classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-129">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-130">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-130">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-131">Cette classe ne peut pas être utilisée par du code partiellement fiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-131">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromDom (options, compilationUnits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="3620b-132">Objet <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> indiquant les paramètres de la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-132">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="3620b-133">Tableau de type <see cref="T:System.CodeDom.CodeCompileUnit" /> indiquant le code à compiler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-133">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-134">Compile un assembly basé sur les arborescences <see cref="N:System.CodeDom" /> contenues dans le tableau d'objets <see cref="T:System.CodeDom.CodeCompileUnit" /> spécifié, à l'aide des paramètres du compilateur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-134">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-135">Objet <see cref="T:System.CodeDom.Compiler.CompilerResults" /> indiquant les résultats de la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-135">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-136">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeCompiler> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-136">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="3620b-137">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-137">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-138">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeCompiler> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-138">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-139">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-139">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-140">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des compilateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’un compilateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-140">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromFile (options, fileNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="3620b-141">Objet <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> indiquant les paramètres de la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-141">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="3620b-142">Tableau des noms des fichiers à compiler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-142">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-143">Compile un assembly à partir du code source contenu dans les fichiers spécifiés, à l'aide des paramètres du compilateur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-143">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-144">Objet <see cref="T:System.CodeDom.Compiler.CompilerResults" /> indiquant les résultats de la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-144">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-145">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeCompiler> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-145">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="3620b-146">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-146">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-147">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeCompiler> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-147">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-148">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-148">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-149">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des compilateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’un compilateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-149">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromSource (options, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="3620b-150">Objet <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> indiquant les paramètres du compilateur pour cette compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-150">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="3620b-151">Tableau de chaînes de code source à compiler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-151">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-152">Compile un assembly à partir du tableau de chaînes spécifié contenant le code source, à l'aide des paramètres du compilateur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-152">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-153">Objet <see cref="T:System.CodeDom.Compiler.CompilerResults" /> indiquant les résultats de la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-153">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-154">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeCompiler> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-154">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="3620b-155">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-155">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-156">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeCompiler> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-156">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-157">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-157">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-158">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des compilateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’un compilateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-158">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="codeDomProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3620b-159">En cas de substitution dans une classe dérivée, crée un nouveau compilateur de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-159">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-160">
            <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> pouvant être utilisé pour la compilation de représentations du code source basées sur <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-160">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-161">Cette méthode est obsolète dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3620b-161">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="3620b-162">L’alternative recommandée consiste à appeler le <xref:System.CodeDom.Compiler.ICodeCompiler> les méthodes qui sont directement disponibles dans le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-162">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-163">
            <para>Dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], vous devez implémenter le <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> membres dans le <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe et lever une <see cref="T:System.NotSupportedException" /> lorsque cette méthode est appelée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-163">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string&#xA;override this.CreateEscapedIdentifier : string -&gt; string" Usage="codeDomProvider.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3620b-164">Chaîne pour laquelle un identificateur avec séquence d'échappement doit être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-164">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-165">Crée un identificateur avec séquence d'échappement pour la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-165">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-166">Identificateur avec séquence d'échappement pour la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-166">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests si l’identificateur est en conflit avec n’importe quel réservés ou des mots clés du langage et si tel est le cas, retourne un nom équivalent avec la mise en forme du code d’échappement spécifique au langage.</span><span class="sxs-lookup"><span data-stu-id="3620b-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="3620b-168">Cette opération est appelée un identificateur avec séquence d’échappement.</span><span class="sxs-lookup"><span data-stu-id="3620b-168">This is referred to an escaped identifier.</span></span> <span data-ttu-id="3620b-169">L’identificateur avec séquence d’échappement contient la même `value` mais est mise en forme du code d’échappement ajoutée afin de différencier l’identificateur du mot clé.</span><span class="sxs-lookup"><span data-stu-id="3620b-169">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="3620b-170">Deux exemples d’implémentation précèdent le `value` avec « @ » ou mettent entre crochets le `value` avec » [ » et «] ».</span><span class="sxs-lookup"><span data-stu-id="3620b-170">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-171">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-171">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-172">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-172">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-173">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-173">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-174">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-174">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-175">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-175">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3620b-176">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-176">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3620b-177">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-177">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-178">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> pouvant être utilisé pour générer des représentations du code source basées sur <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-178">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-179">Cette méthode est obsolète dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3620b-179">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="3620b-180">L’alternative recommandée consiste à appeler le <xref:System.CodeDom.Compiler.ICodeGenerator> les méthodes qui sont directement disponibles dans la <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-180">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-181">
            <para>Dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], vous devez implémenter le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> membres dans le <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe et lever une <see cref="T:System.NotSupportedException" /> lorsque cette méthode est appelée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-181">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="3620b-182">
            <see cref="T:System.IO.TextWriter" /> à utiliser pour effectuer la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-182">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-183">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié pour la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-183">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-184">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> pouvant être utilisé pour générer des représentations du code source basées sur <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-184">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-185">Cette méthode utilise spécifié <xref:System.IO.TextWriter> pour la sortie.</span><span class="sxs-lookup"><span data-stu-id="3620b-185">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="3620b-186">Cette méthode prend en charge la génération de code optimisé plus que de façon incrémentielle met à jour le code source.</span><span class="sxs-lookup"><span data-stu-id="3620b-186">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-187">L’implémentation de classe de base appelle la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> (méthode), qui est obsolète dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] et entraîne un <xref:System.NotSupportedException> si un <xref:System.CodeDom.Compiler.ICodeGenerator> objet n’est pas retourné.</span><span class="sxs-lookup"><span data-stu-id="3620b-187">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="3620b-188">Nom du fichier vers lequel effectuer la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-188">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-189">En cas de substitution dans une classe dérivée, crée un nouveau générateur de code à l'aide du nom de fichier spécifié pour la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-189">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-190">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> pouvant être utilisé pour générer des représentations du code source basées sur <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-190">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-191">Cette méthode utilise le nom de fichier spécifié pour la sortie.</span><span class="sxs-lookup"><span data-stu-id="3620b-191">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-192">L’implémentation de classe de base appelle la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> (méthode), qui est obsolète dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] et entraîne un <xref:System.NotSupportedException> si un <xref:System.CodeDom.Compiler.ICodeGenerator> objet n’est pas retourné.</span><span class="sxs-lookup"><span data-stu-id="3620b-192">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser&#xA;override this.CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser" Usage="codeDomProvider.CreateParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeParser interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3620b-193">En cas de substitution dans une classe dérivée, crée un nouvel analyseur de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-193">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-194">
            <see cref="T:System.CodeDom.Compiler.ICodeParser" /> pouvant être utilisé pour analyser le code source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-194">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="3620b-195">L'implémentation de base retourne toujours <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-195">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3620b-196">Crée une instance de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> pour le langage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-196">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="3620b-197">Nom du langage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-197">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-198">Crée une instance de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> pour le langage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-198">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-199">Fournisseur CodeDOM  qui est implémentée pour le nom du langage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-199">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-200">Cette méthode est couramment utilisée pour créer une instance d’un fournisseur de code dans une application qui peut utiliser un des fournisseurs.</span><span class="sxs-lookup"><span data-stu-id="3620b-200">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="3620b-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> vous permet de spécifier au moment de l’exécution le fournisseur de code que vous souhaitez instancier.</span><span class="sxs-lookup"><span data-stu-id="3620b-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="3620b-202">Si vous connaissez au moment du design quel code fournisseur doit être utilisé, vous devez créer une instance de ce fournisseur de code au lieu d’utiliser le <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3620b-202">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="3620b-203">Le <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> méthode retourne un <xref:System.CodeDom.Compiler.CodeDomProvider> de l’instance pour un nom de langage spécifique ; elle est similaire à l’appel le <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> méthode avec le type de fournisseur de langage.</span><span class="sxs-lookup"><span data-stu-id="3620b-203">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="3620b-204">Utilisez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> lorsque vous souhaitez rechercher dynamiquement une implémentation de fournisseur configuré pour un nom de langage.</span><span class="sxs-lookup"><span data-stu-id="3620b-204">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="3620b-205">Si plus d’une implémentation de fournisseur est configurée pour le nom du langage, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> retourne une instance de fournisseur pour le dernier élément de configuration correspondant.</span><span class="sxs-lookup"><span data-stu-id="3620b-205">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="3620b-206">Utilisez le <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> surcharge de méthode lorsque vous souhaitez une implémentation de fournisseur de langage spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-206">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="3620b-207">Par exemple, utiliser le <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> méthode pour obtenir une instance de fournisseur qui prend en charge le nom du langage `"CSharp"`; utiliser le <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> surcharge de méthode pour obtenir une instance de fournisseur spécifiquement pour le <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="3620b-207">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="3620b-208">Vous devez utiliser le [\], CultureInfo, objet\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType > méthode si vous disposez de plusieurs fournisseurs de code pour un langage et que vous souhaitez instancier un fournisseur de code spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-208">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="3620b-209">Le <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> méthode vérifie si au moins une implémentation de fournisseur prend en charge une langue spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-209">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="3620b-210">Vous pouvez valider un nom de langue à l’aide <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> avant leur transmission à <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="3620b-210">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="3620b-211">Si vous passez un nom de langage non pris en charge à <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> est levée.</span><span class="sxs-lookup"><span data-stu-id="3620b-211">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="3620b-212">Le <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> méthode peut être utilisée pour déterminer toutes <xref:System.CodeDom.Compiler.CodeDomProvider> implémentations sur un ordinateur, y compris les implémentations supplémentaires fournies par les développeurs et éditeurs de compilateurs qui sont identifiés dans le [ &lt;system.codedom &gt; Élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans le fichier de configuration machine (Machine.config).</span><span class="sxs-lookup"><span data-stu-id="3620b-212">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="3620b-213">Le <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> méthode retourne une instance d’un <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une langue spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-213">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="3620b-214">Les noms de langage respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="3620b-214">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-215">L’exemple de code suivant détermine le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une langue d’entrée et affiche les paramètres configurés pour le fournisseur de langages.</span><span class="sxs-lookup"><span data-stu-id="3620b-215">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="3620b-216">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-216">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3620b-217">Le <paramref name="language" /> n'a pas de fournisseur configuré sur cet ordinateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-217">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3620b-218">
            <paramref name="language" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-218">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3620b-219">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-220">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-220">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-221">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-221">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider (language, providerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="3620b-222">Nom du langage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-222">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="3620b-223">Collection d'options de fournisseur issue du fichier de configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-223">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-224">Obtient une instance <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> pour le langage et les options de fournisseur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-224">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-225">Fournisseur CodeDOM implémenté pour le nom de langage et les options spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-225">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-226">Cette méthode est couramment utilisée pour créer une instance d’un fournisseur de code dans une application qui peut utiliser un des fournisseurs.</span><span class="sxs-lookup"><span data-stu-id="3620b-226">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="3620b-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> vous permet de spécifier au moment de l’exécution la version du fournisseur de code que vous souhaitez instancier.</span><span class="sxs-lookup"><span data-stu-id="3620b-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="3620b-228">Si vous connaissez au moment du design quel code fournisseur doit être utilisé, vous devez créer une instance de ce fournisseur de code au lieu d’utiliser le <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3620b-228">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="3620b-229">Utilisez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> lorsque vous souhaitez rechercher dynamiquement une implémentation de fournisseur configuré pour une langue spécifique et les options.</span><span class="sxs-lookup"><span data-stu-id="3620b-229">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="3620b-230">Les noms de langage respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="3620b-230">Language names are case-insensitive.</span></span> <span data-ttu-id="3620b-231">Pour plus d’informations sur les options de fournisseur pris en charge, consultez la documentation du fournisseur CodeDOM spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-231">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="3620b-232">Pour plus d’informations sur la validation d’un fournisseur et l’appel d’un fournisseur si plusieurs implémentations de fournisseur sont configurée pour le nom du langage, consultez la section Notes de la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3620b-232">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-233">L’exemple suivant montre comment créer une instance d’un fournisseur à l’aide de le `providerOptions` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3620b-233">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string&#xA;override this.CreateValidIdentifier : string -&gt; string" Usage="codeDomProvider.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3620b-234">Chaîne pour laquelle un identificateur valide doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-234">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-235">Crée un identificateur valide pour la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-235">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-236">Identificateur valide pour la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-236">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> Teste si l’identificateur est en conflit avec réservés ou des mots clés du langage, et le cas échéant, tente de retourner un identificateur valide nom qui ne sont pas en conflit.</span><span class="sxs-lookup"><span data-stu-id="3620b-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="3620b-238">Généralement l’identificateur retourné est que légèrement modifié pour différencier l’identificateur du mot clé ; par exemple, le nom peut être précédé par le caractère de soulignement (« _ »).</span><span class="sxs-lookup"><span data-stu-id="3620b-238">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-239">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-239">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-240">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-240">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-241">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-241">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-242">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-242">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-243">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-243">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3620b-244">Définit l'extension du nom de fichier par défaut à utiliser pour les fichiers de code source dans le langage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-244">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3620b-245">Extension du nom de fichier correspondant à l'extension des fichiers sources du langage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-245">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="3620b-246">L'implémentation de base retourne toujours <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-246">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-247">Cette propriété est utilisée par les générateurs de code et des compilateurs de code pour indiquer les extensions de fichier doivent être générées ou a utilisée.</span><span class="sxs-lookup"><span data-stu-id="3620b-247">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-248">L’exemple de code suivant crée une instance de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3620b-248">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3620b-249">L’exemple affiche le nom du fournisseur, le hachage par défaut et le code d’extension de fichier pour la nouvelle instance de fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-249">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromCompileUnit (compileUnit, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="3620b-250">
            <see cref="T:System.CodeDom.CodeCompileUnit" /> pour lequel du code doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-250">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="3620b-251">
            <see cref="T:System.IO.TextWriter" /> auquel le code de sortie est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-251">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="3620b-252">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> qui indique les options à utiliser pour générer le code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-252">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-253">Génère du code pour l'unité de compilation CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-253">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-254">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-254">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-255">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-255">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-256">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-256">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-257">L’exemple de code suivant illustre l’utilisation de la <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> méthode pour générer le code pour une application « Hello World » à partir d’un <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="3620b-257">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="3620b-258">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-258">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-259">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-259">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-260">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-260">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromExpression (expression, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="3620b-261">Objet <see cref="T:System.CodeDom.CodeExpression" /> indiquant l'expression pour laquelle du code doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-261">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="3620b-262">
            <see cref="T:System.IO.TextWriter" /> auquel le code de sortie est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-262">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="3620b-263">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> qui indique les options à utiliser pour générer le code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-263">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-264">Génère du code pour l'expression CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-264">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-265">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-265">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-266">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-266">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-267">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-267">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-268">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-268">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-269">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-269">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="3620b-270">Objet <see cref="T:System.CodeDom.CodeTypeMember" /> indiquant le membre pour lequel du code doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-270">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="3620b-271">
            <see cref="T:System.IO.TextWriter" /> auquel le code de sortie est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-271">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="3620b-272">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> qui indique les options à utiliser pour générer le code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-272">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-273">Génère du code pour la déclaration de membre CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-273">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-274">L’implémentation de classe de base lève un <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="3620b-274">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="3620b-275">Consultez <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> pour obtenir une documentation décrivant une implémentation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="3620b-275">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-276">L’exemple de code suivant illustre l’utilisation de la <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> méthode implémenté par le <xref:Microsoft.CSharp.CSharpCodeProvider> et <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span><span class="sxs-lookup"><span data-stu-id="3620b-276">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-277">Cette méthode n'est pas substituée dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-277">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromNamespace (codeNamespace, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="3620b-278">Objet <see cref="T:System.CodeDom.CodeNamespace" /> indiquant l'espace de noms pour lequel du code doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-278">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="3620b-279">
            <see cref="T:System.IO.TextWriter" /> auquel le code de sortie est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-279">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="3620b-280">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> qui indique les options à utiliser pour générer le code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-280">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-281">Génère du code pour l'espace de noms CodeDOM (Code Document Object Model) spécifié et l'envoie au writer de texte spécifié, à l'aide des options définies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-281">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-282">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-282">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-283">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-283">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-284">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-284">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-285">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-285">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-286">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-286">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromStatement (statement, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="3620b-287">
            <see cref="T:System.CodeDom.CodeStatement" /> qui contient les éléments CodeDOM pour lesquels du code doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-287">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="3620b-288">
            <see cref="T:System.IO.TextWriter" /> auquel le code de sortie est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-288">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="3620b-289">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> qui indique les options à utiliser pour générer le code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-289">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-290">Génère du code pour l'instruction CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-290">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-291">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-291">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-292">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-292">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-293">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-293">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-294">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-294">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-295">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-295">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromType (codeType, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="3620b-296">Objet <see cref="T:System.CodeDom.CodeTypeDeclaration" /> indiquant le type pour lequel du code doit être généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-296">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="3620b-297">
            <see cref="T:System.IO.TextWriter" /> auquel le code de sortie est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-297">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="3620b-298">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> qui indique les options à utiliser pour générer le code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-298">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-299">Génère du code pour la déclaration de type CodeDOM (Code Document Object Model) spécifiée et l'envoie au writer de texte spécifié, à l'aide des options définies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-299">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-300">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-300">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-301">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-301">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-302">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-302">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-303">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-303">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-304">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-304">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberSignature Language="F#" Value="static member GetAllCompilerInfo : unit -&gt; System.CodeDom.Compiler.CompilerInfo[]" Usage="System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3620b-305">Retourne le fournisseur de langages et les paramètres de configuration de compilateur pour cet ordinateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-305">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-306">Tableau de type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> qui représente les paramètres de toutes les implémentations de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-306">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-307">Utilisez le <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> méthode pour énumérer les paramètres du fournisseur de langue sur un ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-307">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-308">Dans le [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], les fournisseurs de langage par défaut fournies par le .NET Framework ne sont pas spécifiées dans le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) configuration de compilateur section et ne peut pas être supprimé, par conséquent cette méthode retourne des informations sur les fournisseurs par défaut et tout spécifié dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="3620b-308">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-309">L’exemple de code suivant énumère les fournisseurs de langages sur l’ordinateur et affiche les paramètres de configuration et de compilateur pour chaque fournisseur de langages.</span><span class="sxs-lookup"><span data-stu-id="3620b-309">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="3620b-310">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-310">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3620b-311">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-311">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-312">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-312">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-313">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-313">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member GetCompilerInfo : string -&gt; System.CodeDom.Compiler.CompilerInfo" Usage="System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="3620b-314">Nom de langage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-314">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-315">Retourne le fournisseur de langages et les paramètres de configuration de compilateur pour le langage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-315">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-316">Objet <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> rempli avec les paramètres de l'implémentation de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-316">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-317">Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-317">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="3620b-318">Pour plus d’informations sur les fichiers de configuration machine, consultez la section fichiers de Configuration Machine dans [configuration des applications](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span><span class="sxs-lookup"><span data-stu-id="3620b-318">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="3620b-319">Le <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> méthode recherche chaque élément de configuration de fournisseur pour le nom de la langue spécifiée.</span><span class="sxs-lookup"><span data-stu-id="3620b-319">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="3620b-320">Retourné <xref:System.CodeDom.Compiler.CompilerInfo> instance contient les paramètres de compilateur et du fournisseur de langages configuré.</span><span class="sxs-lookup"><span data-stu-id="3620b-320">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="3620b-321">Le <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> méthode vérifie si au moins une implémentation de fournisseur prend en charge une langue spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-321">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="3620b-322">Vous pouvez valider un nom de langue à l’aide <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> avant leur transmission à <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="3620b-322">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="3620b-323">Cela empêche la levée une <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> lorsque vous accédez à la <xref:System.CodeDom.Compiler.CompilerInfo> instance pour un nom de langage non pris en charge.</span><span class="sxs-lookup"><span data-stu-id="3620b-323">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="3620b-324">Si plus d’une implémentation de fournisseur est configurée pour le nom de la langue d’entrée, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> retourne les paramètres à partir du fournisseur correspondant dernier élément de configuration.</span><span class="sxs-lookup"><span data-stu-id="3620b-324">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="3620b-325">Les noms de langage respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="3620b-325">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-326">L’exemple de code suivant détermine le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une langue d’entrée et affiche les paramètres configurés pour le fournisseur de langages.</span><span class="sxs-lookup"><span data-stu-id="3620b-326">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="3620b-327">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-327">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="3620b-328">Le <paramref name="language" /> n'a pas de fournisseur configuré sur cet ordinateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-328">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3620b-329">
            <paramref name="language" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-329">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3620b-330">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-330">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-331">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-331">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-332">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-332">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : Type -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="codeDomProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3620b-333">Type d'objet pour lequel un convertisseur de type doit être récupéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-333">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-334">Obtient <see cref="T:System.ComponentModel.TypeConverter" /> pour le type de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-334">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-335">
            <see cref="T:System.ComponentModel.TypeConverter" /> pour le type spécifié, ou <see langword="null" /> si aucun <see cref="T:System.ComponentModel.TypeConverter" /> n'est trouvé pour le type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-335">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-336">Une classe dérivée peut substituer cette méthode pour fournir des types spécifiques de convertisseurs de type pour les types de données spécifiques.</span><span class="sxs-lookup"><span data-stu-id="3620b-336">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member GetLanguageFromExtension : string -&gt; string" Usage="System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="3620b-337">Extension de nom de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-337">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-338">Retourne un nom de langage associé à l'extension de nom de fichier spécifiée, comme configuré dans la section de configuration de compilateur <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-338">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-339">Nom de langage associé à l'extension de nom de fichier, comme configuré dans les paramètres de configuration de compilateur <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-339">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-340">Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier (Machine.config) contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur le ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-340">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="3620b-341">Le <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> méthode recherche chaque élément de configuration de fournisseur pour l’extension de nom de fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="3620b-341">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="3620b-342">Le <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> méthode vérifie si au moins une implémentation de fournisseur prend en charge une extension de nom de fichier spécifique.</span><span class="sxs-lookup"><span data-stu-id="3620b-342">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="3620b-343">Vous pouvez valider une extension de nom de fichier à l’aide <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> avant leur transmission à <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="3620b-343">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="3620b-344">Cela empêche <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> de lever un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> pour une extension de nom de fichier non pris en charge.</span><span class="sxs-lookup"><span data-stu-id="3620b-344">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="3620b-345">Si une implémentation de fournisseur prend en charge l’extension de nom de fichier d’entrée et il existe plusieurs langues prises en charge configurés pour ce fournisseur, puis <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> retourne le premier nom de langage pour ce fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-345">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="3620b-346">Si plus d’une implémentation de fournisseur est configurée pour l’extension de nom de fichier d’entrée, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> retourne le nom de la langue à partir du fournisseur correspondant dernier élément de configuration.</span><span class="sxs-lookup"><span data-stu-id="3620b-346">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="3620b-347">Les noms de langage et les extensions de nom de fichier respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="3620b-347">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-348">L’exemple de code suivant détermine le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une extension de nom de fichier d’entrée et affiche les paramètres configurés pour le fournisseur de langages.</span><span class="sxs-lookup"><span data-stu-id="3620b-348">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="3620b-349">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-349">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="3620b-350">Le <paramref name="extension" /> n'a pas de fournisseur de langages configuré sur cet ordinateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-350">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="3620b-351">
            <paramref name="extension" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-351">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3620b-352">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-352">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-353">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-353">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-354">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-354">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeDomProvider.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3620b-355">
            <see cref="T:System.CodeDom.CodeTypeReference" /> qui indique le type à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-355">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-356">Obtient le type indiqué par le <see cref="T:System.CodeDom.CodeTypeReference" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-356">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-357">Représentation textuelle du type spécifié, mise en forme pour le langage dans lequel du code est généré par ce générateur de code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-357">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="3620b-358">En Visual Basic, par exemple, passer <see cref="T:System.CodeDom.CodeTypeReference" /> pour le type <see cref="T:System.Int32" /> retourne "Integer".</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-358">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-359">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-359">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-360">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-360">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-361">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-361">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-362">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-362">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-363">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-363">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member IsDefinedExtension : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="3620b-364">Extension de nom de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-364">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-365">Vérifie si une implémentation de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurée sur l'ordinateur est associée à une extension de nom de fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-365">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-366">
            <see langword="true" /> si une implémentation de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> est configurée pour l'extension de nom de fichier spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-366">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-367">Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier (Machine.config) contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur le ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-367">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="3620b-368">Le <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> méthode recherche les éléments de configuration de fournisseur pour l’extension de nom de fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="3620b-368">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="3620b-369">Extensions de nom de fichier respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="3620b-369">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-370">L’exemple de code suivant détermine le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une extension de nom de fichier d’entrée et affiche les paramètres configurés pour le fournisseur de langages.</span><span class="sxs-lookup"><span data-stu-id="3620b-370">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="3620b-371">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-371">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3620b-372">
            <paramref name="extension" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-372">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3620b-373">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-373">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-374">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-374">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-375">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-375">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member IsDefinedLanguage : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="3620b-376">Nom du langage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-376">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-377">Vérifie si un langage dispose d'une implémentation de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurée sur l'ordinateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-377">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-378">
            <see langword="true" /> si une implémentation de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> est configurée pour le langage spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-378">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-379">Le [ &lt;system.codedom&gt; élément](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) dans la configuration d’ordinateur fichier (Machine.config) contient les fournisseur et du compilateur configuration paramètres de langue pour chaque <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation sur le ordinateur.</span><span class="sxs-lookup"><span data-stu-id="3620b-379">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="3620b-380">Le <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> méthode recherche les éléments de configuration de fournisseur pour le nom de la langue spécifiée.</span><span class="sxs-lookup"><span data-stu-id="3620b-380">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="3620b-381">Les noms de langage respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="3620b-381">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3620b-382">L’exemple de code suivant détermine le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation pour une langue d’entrée et affiche les paramètres configurés pour le fournisseur de langages.</span><span class="sxs-lookup"><span data-stu-id="3620b-382">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="3620b-383">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="3620b-383">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3620b-384">
            <paramref name="language" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-384">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3620b-385">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-385">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3620b-386">pour la confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-386">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3620b-387">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-387">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool&#xA;override this.IsValidIdentifier : string -&gt; bool" Usage="codeDomProvider.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3620b-388">Valeur à vérifier comme identificateur valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-388">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-389">Retourne une valeur indiquant si la valeur spécifiée est un identificateur valide pour le langage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-389">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-390">
            <see langword="true" /> si le paramètre <paramref name="value" /> est un identificateur valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-390">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-391">Cette méthode vérifie si un identificateur est valide.</span><span class="sxs-lookup"><span data-stu-id="3620b-391">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="3620b-392">Le <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> méthode est spécifique au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-392">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="3620b-393">Les identificateurs qui sont valides pour un fournisseur n’est peut-être pas valides pour les autres fournisseurs.</span><span class="sxs-lookup"><span data-stu-id="3620b-393">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="3620b-394">Si `value` contient des caractères en dehors de la plage de caractères ASCII, vérifiez l’identificateur pour tous les langages qui pourraient être utilisées pour compiler le code.</span><span class="sxs-lookup"><span data-stu-id="3620b-394">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-395">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-395">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-396">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-396">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-397">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-397">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-398">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-398">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-399">
            <para>Lors de la substitution <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> dans une classe dérivée, définissez la méthode pour retourner <see langword="true" /> uniquement si la valeur respecte les règles du langage et n’est pas en conflit avec un mot clé.  Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-399">
              <para>When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.  If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3620b-400">Obtient un identificateur de fonctionnalités de langage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-400">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3620b-401">
            <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> qui indique les fonctionnalités spéciales du langage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-401">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomProvider.Parse codeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="3620b-402">Objet <see cref="T:System.IO.TextReader" /> utilisé pour lire le code à analyser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-402">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-403">Compile le code lu à partir du flux de texte spécifié dans <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-403">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-404">
            <see cref="T:System.CodeDom.CodeCompileUnit" /> contenant une représentation du code analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-404">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3620b-405">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeParser> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-405">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="3620b-406">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-406">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-407">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeParser> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-407">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-408">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-408">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-409">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un analyseur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des analyseurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas d’analyseur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-409">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports supports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">
          <span data-ttu-id="3620b-410">Objet <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> indiquant le type de prise en charge de la génération de code à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-410">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <param name="supports">
          <span data-ttu-id="3620b-411">Objet <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> indiquant le type de prise en charge de la génération de code à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-411">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3620b-412">Retourne une valeur indiquant si la prise en charge de la génération de code spécifiée est fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-412">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3620b-413">
            <see langword="true" /> si la prise en charge de la génération de code spécifiée est fournie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-413">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3620b-414">Cette méthode peut être appelée avec un nombre de <xref:System.CodeDom.Compiler.GeneratorSupport> indicateurs à la fois pour tester un ensemble de fonctionnalités en combinant un ensemble d’indicateurs appropriés ainsi que d’un fichier binaire `OR` opérateur (&#124;).</span><span class="sxs-lookup"><span data-stu-id="3620b-414">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3620b-415">Dans les versions 1.0 et 1.1 du .NET Framework, cette méthode est fournie par le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation qui est retournée par la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> méthode du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="3620b-415">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="3620b-416">Dans la version 2.0, cette méthode peut être appelée directement sur le fournisseur de code, même si elle n’est pas remplacée par le fournisseur de code.</span><span class="sxs-lookup"><span data-stu-id="3620b-416">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="3620b-417">Si le fournisseur de code ne remplace pas cette méthode, le <xref:System.CodeDom.Compiler.ICodeGenerator> implémentation est appelée par la classe de base.</span><span class="sxs-lookup"><span data-stu-id="3620b-417">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3620b-418">Ni cette méthode ni la méthode <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> ne sont substituées dans une classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-418">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3620b-419">
            <para>Si vous substituez cette méthode, vous ne devez pas appeler la méthode correspondante de la classe de base. La méthode de classe de base crée un générateur dans la classe dérivée à l’aide de l’élément obsolète <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> méthode pour assurer la compatibilité avec des fournisseurs préexistants qui utilisent des générateurs de code. La méthode de classe de base appelle ensuite la méthode équivalente dans le <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implémentation pour exécuter cette fonction. Vous obtiendrez un <see cref="T:System.NotImplementedException" /> si vous appelez la méthode de classe de base à partir d’un fournisseur de code qui n’utilise pas un générateur de code.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3620b-419">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>