<Type Name="ReturnMessage" FullName="System.Runtime.Remoting.Messaging.ReturnMessage">
  <TypeSignature Language="C#" Value="public class ReturnMessage : System.Runtime.Remoting.Messaging.IMethodReturnMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReturnMessage extends System.Object implements class System.Runtime.Remoting.Messaging.IMessage, class System.Runtime.Remoting.Messaging.IMethodMessage, class System.Runtime.Remoting.Messaging.IMethodReturnMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.ReturnMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class ReturnMessage&#xA;Implements IMethodReturnMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReturnMessage : System::Runtime::Remoting::Messaging::IMethodReturnMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMethodReturnMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bee61-101">Contient un message retourné en réponse à un appel de méthode sur un objet distant.</span><span class="sxs-lookup"><span data-stu-id="bee61-101">Holds a message returned in response to a method call on a remote object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bee61-102">Cette classe effectue une demande de liaison et une demande d’héritage au niveau de la classe.</span><span class="sxs-lookup"><span data-stu-id="bee61-102">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="bee61-103">A <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat ou la classe dérivée n’a pas d’autorisation d’infrastructure.</span><span class="sxs-lookup"><span data-stu-id="bee61-103">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</span></span> <span data-ttu-id="bee61-104">Pour plus d’informations sur les demandes de sécurité, consultez [les demandes de liaison](~/docs/framework/misc/link-demands.md) et [des demandes d’héritage](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="bee61-104">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 [!code-cpp[IMethodReturnMessage_ReturnValue#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodReturnMessage_ReturnValue/CPP/imethodreturnmessage_returnvalue.cpp#1)]
 [!code-csharp[IMethodReturnMessage_ReturnValue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodReturnMessage_ReturnValue/CS/imethodreturnmessage_returnvalue.cs#1)]
 [!code-vb[IMethodReturnMessage_ReturnValue#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodReturnMessage_ReturnValue/VB/imethodreturnmessage_returnvalue.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="bee61-105">Pour opérer avec le code d’infrastructure.</span><span class="sxs-lookup"><span data-stu-id="bee61-105">for operating with infrastructure code.</span></span> <span data-ttu-id="bee61-106">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="bee61-106">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission Value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bee61-107">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="bee61-107">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReturnMessage (Exception e, System.Runtime.Remoting.Messaging.IMethodCallMessage mcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, class System.Runtime.Remoting.Messaging.IMethodCallMessage mcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.ReturnMessage.#ctor(System.Exception,System.Runtime.Remoting.Messaging.IMethodCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, mcm As IMethodCallMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReturnMessage(Exception ^ e, System::Runtime::Remoting::Messaging::IMethodCallMessage ^ mcm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="mcm" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="bee61-108">Exception qui a été levée pendant l'exécution de la méthode appelée à distance.</span><span class="sxs-lookup"><span data-stu-id="bee61-108">The exception that was thrown during execution of the remotely called method.</span></span></param>
        <param name="mcm"><span data-ttu-id="bee61-109"><see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> employé pour créer une instance de la classe <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="bee61-109">An <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> with which to create an instance of the <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> class.</span></span></param>
        <summary><span data-ttu-id="bee61-110">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="bee61-110">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReturnMessage (object ret, object[] outArgs, int outArgsCount, System.Runtime.Remoting.Messaging.LogicalCallContext callCtx, System.Runtime.Remoting.Messaging.IMethodCallMessage mcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object ret, object[] outArgs, int32 outArgsCount, class System.Runtime.Remoting.Messaging.LogicalCallContext callCtx, class System.Runtime.Remoting.Messaging.IMethodCallMessage mcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.ReturnMessage.#ctor(System.Object,System.Object[],System.Int32,System.Runtime.Remoting.Messaging.LogicalCallContext,System.Runtime.Remoting.Messaging.IMethodCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ret As Object, outArgs As Object(), outArgsCount As Integer, callCtx As LogicalCallContext, mcm As IMethodCallMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReturnMessage(System::Object ^ ret, cli::array &lt;System::Object ^&gt; ^ outArgs, int outArgsCount, System::Runtime::Remoting::Messaging::LogicalCallContext ^ callCtx, System::Runtime::Remoting::Messaging::IMethodCallMessage ^ mcm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ret" Type="System.Object" />
        <Parameter Name="outArgs" Type="System.Object[]" />
        <Parameter Name="outArgsCount" Type="System.Int32" />
        <Parameter Name="callCtx" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
        <Parameter Name="mcm" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
      </Parameters>
      <Docs>
        <param name="ret"><span data-ttu-id="bee61-111">Objet retourné par la méthode appelée d'où l'instance <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> actuelle provient.</span><span class="sxs-lookup"><span data-stu-id="bee61-111">The object returned by the invoked method from which the current <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> instance originated.</span></span></param>
        <param name="outArgs"><span data-ttu-id="bee61-112">Objets retournés de la méthode appelée sous forme de paramètres <see langword="out" />.</span><span class="sxs-lookup"><span data-stu-id="bee61-112">The objects returned from the invoked method as <see langword="out" /> parameters.</span></span></param>
        <param name="outArgsCount"><span data-ttu-id="bee61-113">Nombre de paramètres <see langword="out" /> retournés de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-113">The number of <see langword="out" /> parameters returned from the invoked method.</span></span></param>
        <param name="callCtx"><span data-ttu-id="bee61-114"><see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> de l'appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="bee61-114">The <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> of the method call.</span></span></param>
        <param name="mcm"><span data-ttu-id="bee61-115">Appel de méthode d'origine à la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-115">The original method call to the invoked method.</span></span></param>
        <summary><span data-ttu-id="bee61-116">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> avec toutes les informations retournant à l'appelant après l'appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="bee61-116">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> class with all the information returning to the caller after the method call.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgCount">
      <MemberSignature Language="C#" Value="public int ArgCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.ArgCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-117">Obtient le nombre d'arguments de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-117">Gets the number of arguments of the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-118">Nombre d'arguments de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-118">The number of arguments of the called method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="public object[] Args { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Args" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.Args" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Args As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ Args { cli::array &lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.Args</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-119">Obtient un argument spécifié passé à la méthode appelée sur l'objet distant.</span><span class="sxs-lookup"><span data-stu-id="bee61-119">Gets a specified argument passed to the method called on the remote object.</span></span></summary>
        <value><span data-ttu-id="bee61-120">Argument passé à la méthode appelée sur l'objet distant.</span><span class="sxs-lookup"><span data-stu-id="bee61-120">An argument passed to the method called on the remote object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodReturnMessage.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-121">Obtient l'exception qui a été levée pendant l'appel de méthode distant.</span><span class="sxs-lookup"><span data-stu-id="bee61-121">Gets the exception that was thrown during the remote method call.</span></span></summary>
        <value><span data-ttu-id="bee61-122">Exception levée pendant l'appel de méthode, ou <see langword="null" /> si une exception ne s'est pas produite pendant l'appel.</span><span class="sxs-lookup"><span data-stu-id="bee61-122">The exception thrown during the method call, or <see langword="null" /> if an exception did not occur during the call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArg">
      <MemberSignature Language="C#" Value="public object GetArg (int argNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetArg(int32 argNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.ReturnMessage.GetArg(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArg (argNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetArg(int argNum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argNum"><span data-ttu-id="bee61-123">Index de base zéro de l'argument demandé.</span><span class="sxs-lookup"><span data-stu-id="bee61-123">The zero-based index of the requested argument.</span></span></param>
        <summary><span data-ttu-id="bee61-124">Retourne un argument spécifié passé à la méthode distante pendant l'appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="bee61-124">Returns a specified argument passed to the remote method during the method call.</span></span></summary>
        <returns><span data-ttu-id="bee61-125">Argument passé à la méthode distante pendant l'appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="bee61-125">An argument passed to the remote method during the method call.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgName">
      <MemberSignature Language="C#" Value="public string GetArgName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetArgName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.ReturnMessage.GetArgName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetArgName(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bee61-126">Index de base zéro du nom de l'argument demandé.</span><span class="sxs-lookup"><span data-stu-id="bee61-126">The zero-based index of the requested argument name.</span></span></param>
        <summary><span data-ttu-id="bee61-127">Retourne le nom d'un argument de méthode spécifié.</span><span class="sxs-lookup"><span data-stu-id="bee61-127">Returns the name of a specified method argument.</span></span></summary>
        <returns><span data-ttu-id="bee61-128">Nom d'un argument de méthode spécifié.</span><span class="sxs-lookup"><span data-stu-id="bee61-128">The name of a specified method argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutArg">
      <MemberSignature Language="C#" Value="public object GetOutArg (int argNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutArg(int32 argNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.ReturnMessage.GetOutArg(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutArg (argNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetOutArg(int argNum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArg(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argNum"><span data-ttu-id="bee61-129">Index de base zéro du paramètre <see langword="out" />ou <see langword="ref" /> demandé.</span><span class="sxs-lookup"><span data-stu-id="bee61-129">The zero-based index of the requested <see langword="out" /> or <see langword="ref" /> parameter.</span></span></param>
        <summary><span data-ttu-id="bee61-130">Retourne l'objet passé comme paramètre <see langword="out" /> ou <see langword="ref" /> pendant l'appel de méthode distant.</span><span class="sxs-lookup"><span data-stu-id="bee61-130">Returns the object passed as an <see langword="out" /> or <see langword="ref" /> parameter during the remote method call.</span></span></summary>
        <returns><span data-ttu-id="bee61-131">Objet passé comme paramètre <see langword="out" /> ou <see langword="ref" /> pendant l'appel de méthode distant.</span><span class="sxs-lookup"><span data-stu-id="bee61-131">The object passed as an <see langword="out" /> or <see langword="ref" /> parameter during the remote method call.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutArgName">
      <MemberSignature Language="C#" Value="public string GetOutArgName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetOutArgName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.ReturnMessage.GetOutArgName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutArgName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetOutArgName(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMethodReturnMessage.GetOutArgName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bee61-132">Index de base zéro de l'argument demandé.</span><span class="sxs-lookup"><span data-stu-id="bee61-132">The zero-based index of the requested argument.</span></span></param>
        <summary><span data-ttu-id="bee61-133">Retourne le nom d'un paramètre <see langword="out" /> ou <see langword="ref" /> spécifié passé à la méthode distante.</span><span class="sxs-lookup"><span data-stu-id="bee61-133">Returns the name of a specified <see langword="out" /> or <see langword="ref" /> parameter passed to the remote method.</span></span></summary>
        <returns><span data-ttu-id="bee61-134">Chaîne représentant le nom du paramètre <see langword="out" /> ou <see langword="ref" /> spécifié ou <see langword="null" /> si la méthode actuelle n'est pas implémentée.</span><span class="sxs-lookup"><span data-stu-id="bee61-134">A string representing the name of the specified <see langword="out" /> or <see langword="ref" /> parameter, or <see langword="null" /> if the current method is not implemented.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVarArgs">
      <MemberSignature Language="C#" Value="public bool HasVarArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVarArgs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.HasVarArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVarArgs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVarArgs { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-135">Obtient une valeur indiquant si la méthode appelée accepte un nombre variable d'arguments.</span><span class="sxs-lookup"><span data-stu-id="bee61-135">Gets a value indicating whether the called method accepts a variable number of arguments.</span></span></summary>
        <value>
          <span data-ttu-id="bee61-136"><see langword="true" /> si la méthode appelée accepte un nombre variable d'arguments ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bee61-136"><see langword="true" /> if the called method accepts a variable number of arguments; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalCallContext">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.LogicalCallContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalCallContext As LogicalCallContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::LogicalCallContext ^ LogicalCallContext { System::Runtime::Remoting::Messaging::LogicalCallContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.LogicalCallContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-137">Obtient le <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-137">Gets the <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> of the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-138"><see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-138">The <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> of the called method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodBase">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase MethodBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase MethodBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.MethodBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodBase As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ MethodBase { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-139">Obtient le <see cref="T:System.Reflection.MethodBase" /> de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-139">Gets the <see cref="T:System.Reflection.MethodBase" /> of the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-140"><see cref="T:System.Reflection.MethodBase" /> de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-140">The <see cref="T:System.Reflection.MethodBase" /> of the called method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-141">Obtient le nom de la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-141">Gets the name of the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-142">Nom de la méthode de laquelle provient <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> en cours.</span><span class="sxs-lookup"><span data-stu-id="bee61-142">The name of the method that the current <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> originated from.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodSignature">
      <MemberSignature Language="C#" Value="public object MethodSignature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MethodSignature" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.MethodSignature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodSignature As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MethodSignature { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-143">Obtient un tableau d'objets <see cref="T:System.Type" /> contenant la signature de méthode.</span><span class="sxs-lookup"><span data-stu-id="bee61-143">Gets an array of <see cref="T:System.Type" /> objects containing the method signature.</span></span></summary>
        <value><span data-ttu-id="bee61-144">Tableau d'objets <see cref="T:System.Type" /> contenant la signature de la méthode.</span><span class="sxs-lookup"><span data-stu-id="bee61-144">An array of <see cref="T:System.Type" /> objects containing the method signature.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutArgCount">
      <MemberSignature Language="C#" Value="public int OutArgCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutArgCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.OutArgCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutArgCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutArgCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-145">Obtient le nombre d'arguments <see langword="out" /> ou <see langword="ref" /> sur la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-145">Gets the number of <see langword="out" /> or <see langword="ref" /> arguments on the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-146">Nombre d'arguments <see langword="out" /> ou <see langword="ref" /> sur la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-146">The number of <see langword="out" /> or <see langword="ref" /> arguments on the called method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutArgs">
      <MemberSignature Language="C#" Value="public object[] OutArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] OutArgs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.OutArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutArgs As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ OutArgs { cli::array &lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodReturnMessage.OutArgs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-147">Obtient un objet spécifié passé comme paramètre <see langword="out" /> ou <see langword="ref" /> à la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-147">Gets a specified object passed as an <see langword="out" /> or <see langword="ref" /> parameter to the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-148">Objet passé comme paramètre <see langword="out" /> ou <see langword="ref" /> à la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-148">An object passed as an <see langword="out" /> or <see langword="ref" /> parameter to the called method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMessage.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-149">Obtient un <see cref="T:System.Collections.IDictionary" /> de propriétés contenues dans <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="bee61-149">Gets an <see cref="T:System.Collections.IDictionary" /> of properties contained in the current <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" />.</span></span></summary>
        <value><span data-ttu-id="bee61-150"><see cref="T:System.Collections.IDictionary" /> de propriétés contenues dans <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="bee61-150">An <see cref="T:System.Collections.IDictionary" /> of properties contained in the current <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public virtual object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodReturnMessage.ReturnValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-151">Obtient l'objet retourné par la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-151">Gets the object returned by the called method.</span></span></summary>
        <value><span data-ttu-id="bee61-152">Objet retourné par la méthode appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-152">The object returned by the called method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-153">Obtient le nom du type sur lequel cette méthode distante a été appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-153">Gets the name of the type on which the remote method was called.</span></span></summary>
        <value><span data-ttu-id="bee61-154">Nom du type de l'objet distant sur lequel cette méthode distante a été appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-154">The type name of the remote object on which the remote method was called.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.ReturnMessage.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IInternalMessage.Uri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bee61-155">Obtient ou définit l'URI de l'objet distant sur lequel la méthode distante a été appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-155">Gets or sets the URI of the remote object on which the remote method was called.</span></span></summary>
        <value><span data-ttu-id="bee61-156">URI de l'objet distant sur lequel la méthode distante a été appelée.</span><span class="sxs-lookup"><span data-stu-id="bee61-156">The URI of the remote object on which the remote method was called.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[IMethodReturnMessage_ReturnValue#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodReturnMessage_ReturnValue/CPP/imethodreturnmessage_returnvalue.cpp#1)]
 [!code-csharp[IMethodReturnMessage_ReturnValue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodReturnMessage_ReturnValue/CS/imethodreturnmessage_returnvalue.cs#1)]
 [!code-vb[IMethodReturnMessage_ReturnValue#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodReturnMessage_ReturnValue/VB/imethodreturnmessage_returnvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>