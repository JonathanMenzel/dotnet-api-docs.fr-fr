<Type Name="IMethodMessage" FullName="System.Runtime.Remoting.Messaging.IMethodMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4f8fbd5a157891581bd0562f9efed83d6d2e6ee" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMethodMessage : System.Runtime.Remoting.Messaging.IMessage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMethodMessage implements class System.Runtime.Remoting.Messaging.IMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMethodMessage&#xA;Implements IMessage" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMethodMessage : System::Runtime::Remoting::Messaging::IMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a9de3-101">Defines the method message interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9de3-101">Defines the method message interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9de3-102">Un message de la méthode est utilisé pour envoyer des informations vers et depuis les méthodes à distance.</span><span class="sxs-lookup"><span data-stu-id="a9de3-102">A method message is used to send information to and from remote methods.</span></span> <span data-ttu-id="a9de3-103">Par exemple, des messages utilisés pour les appels de méthode distants implémentent la <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.</span><span class="sxs-lookup"><span data-stu-id="a9de3-103">For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9de3-104">L’exemple de code suivant illustre un proxy personnalisé qui substitue `RealProxy.Invoke` afin d’écrire les informations du message dans la console et de retourner immédiatement sans appel à distance.</span><span class="sxs-lookup"><span data-stu-id="a9de3-104">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console and return immediately without making a remote call.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#1)]
 [!code-csharp[IMethodMessage_MethodName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#1)]
 [!code-vb[IMethodMessage_MethodName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgCount">
      <MemberSignature Language="C#" Value="public int ArgCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-105">Gets the number of arguments passed to the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-105">Gets the number of arguments passed to the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-106">Le nombre d’arguments passés à la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-106">The number of arguments passed to the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9de3-107">L’exemple de code suivant illustre un proxy personnalisé qui substitue `RealProxy.Invoke` afin d’écrire les informations de message dans la console, à l’aide de la `ArgCount` propriété à une itération au sein des arguments.</span><span class="sxs-lookup"><span data-stu-id="a9de3-107">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console, using the `ArgCount` property to iterate through the arguments.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]
 [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]
 [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-108">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-108">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-109">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-109">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-110">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-110">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="public object[] Args { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Args" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.Args" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Args As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ Args { cli::array &lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-111">Gets an array of arguments passed to the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-111">Gets an array of arguments passed to the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-112">Un <see cref="T:System.Object" /> tableau contenant les arguments passés à la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-112">An <see cref="T:System.Object" /> array containing the arguments passed to the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9de3-113">Bien que le <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> propriété est redondante puisque la même fonctionnalité peut être obtenue via la <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> et <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, il peut y avoir l’optimisation des performances disponible si l’implémenteur comprend lorsque tous les arguments seront récupérées.</span><span class="sxs-lookup"><span data-stu-id="a9de3-113">Although the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> property is redundant since the same functionality can be achieved through the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-114">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-114">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-115">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-115">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-116">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-116">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetArg">
      <MemberSignature Language="C#" Value="public object GetArg (int argNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetArg(int32 argNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArg (argNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetArg(int argNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argNum">
          <span data-ttu-id="a9de3-117">The number of the requested argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-117">The number of the requested argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9de3-118">Gets a specific argument as an <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-118">Gets a specific argument as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9de3-119">The argument passed to the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-119">The argument passed to the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-120">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-120">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-121">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-121">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-122">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-122">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetArgName">
      <MemberSignature Language="C#" Value="public string GetArgName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetArgName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetArgName(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a9de3-123">The number of the requested argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-123">The number of the requested argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9de3-124">Gets the name of the argument passed to the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-124">Gets the name of the argument passed to the method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9de3-125">The name of the specified argument passed to the method, or <see langword="null" /> if the current method is not implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-125">The name of the specified argument passed to the method, or <see langword="null" /> if the current method is not implemented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-126">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-126">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-127">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-127">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-128">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasVarArgs">
      <MemberSignature Language="C#" Value="public bool HasVarArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVarArgs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVarArgs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVarArgs { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-129">Gets a value indicating whether the message has variable arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-129">Gets a value indicating whether the message has variable arguments.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-130">
            <see langword="true" /> Si la méthode peut accepter un nombre variable d’arguments ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-130">
              <see langword="true" /> if the method can accept a variable number of arguments; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9de3-131">L’exemple de code suivant illustre un proxy personnalisé qui substitue `RealProxy.Invoke` afin d’écrire les informations de message dans la console, notamment si l’appel de méthode possède des arguments variables.</span><span class="sxs-lookup"><span data-stu-id="a9de3-131">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console, including whether the method call has variable arguments.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]
 [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]
 [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-132">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-132">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-133">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-133">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-134">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-134">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LogicalCallContext">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalCallContext As LogicalCallContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::LogicalCallContext ^ LogicalCallContext { System::Runtime::Remoting::Messaging::LogicalCallContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.LogicalCallContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-135">Gets the <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> for the current method call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-135">Gets the <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> for the current method call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-136">Obtient le <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> pour l’appel de méthode en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-136">Gets the <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> for the current method call.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9de3-137">L’exemple de code suivant montre comment utiliser le `LogicalCallContext` propriété pour déterminer si des valeurs sont attachées à la thread logique.</span><span class="sxs-lookup"><span data-stu-id="a9de3-137">The following example code shows how to use the `LogicalCallContext` property to determine whether any values are attached to the logical thread.</span></span>  
  
 [!code-cpp[IMethodMessage_LogicalCallContext#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/CPP/imethodmessage_logicalcallcontext.cpp#1)]
 [!code-csharp[IMethodMessage_LogicalCallContext#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/CS/imethodmessage_logicalcallcontext.cs#1)]
 [!code-vb[IMethodMessage_LogicalCallContext#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/VB/imethodmessage_logicalcallcontext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-138">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-138">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-139">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-139">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-140">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MethodBase">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase MethodBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase MethodBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodBase As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ MethodBase { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-141">Gets the <see cref="T:System.Reflection.MethodBase" /> of the called method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-141">Gets the <see cref="T:System.Reflection.MethodBase" /> of the called method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-142">Le <see cref="T:System.Reflection.MethodBase" /> de la méthode appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-142">The <see cref="T:System.Reflection.MethodBase" /> of the called method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9de3-143">Ces informations ne sont pas transmises à un emplacement distant, mais il sont utilisées pour mettre en cache de la base de la méthode une fois qu’il a été trouvé qu’une seule fois.</span><span class="sxs-lookup"><span data-stu-id="a9de3-143">This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-144">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-144">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-145">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-145">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-146">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-146">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-147">Gets the name of the invoked method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-147">Gets the name of the invoked method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-148">Le nom de la méthode appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-148">The name of the invoked method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9de3-149">L’exemple de code suivant illustre un proxy personnalisé qui substitue `RealProxy.Invoke` afin d’écrire le nom de la méthode dans la console.</span><span class="sxs-lookup"><span data-stu-id="a9de3-149">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the name of the method to the console.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]
 [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]
 [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-150">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-150">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-151">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-151">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-152">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-152">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MethodSignature">
      <MemberSignature Language="C#" Value="public object MethodSignature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MethodSignature" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodSignature As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MethodSignature { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-153">Gets an object containing the method signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-153">Gets an object containing the method signature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-154">Objet contenant la signature de méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-154">An object containing the method signature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9de3-155">Toutes les implémentations actuelles de <xref:System.Runtime.Remoting.Messaging.IMethodMessage> retourner un tableau de <xref:System.Type> qui contiennent les types de paramètres de la méthode.</span><span class="sxs-lookup"><span data-stu-id="a9de3-155">All the current implementations of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> return an array of <xref:System.Type> objects containing the parameter types of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-156">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-156">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-157">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-157">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-158">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-158">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-159">Gets the full <see cref="T:System.Type" /> name of the specific object that the call is destined for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-159">Gets the full <see cref="T:System.Type" /> name of the specific object that the call is destined for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-160">La version complète <see cref="T:System.Type" /> nom de l’objet spécifique auquel l’appel est destiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-160">The full <see cref="T:System.Type" /> name of the specific object that the call is destined for.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-161">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-161">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-162">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-162">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-163">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-163">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9de3-164">Gets the URI of the specific object that the call is destined for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-164">Gets the URI of the specific object that the call is destined for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9de3-165">L’URI de l’objet distant qui contient la méthode appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-165">The URI of the remote object that contains the invoked method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a9de3-166">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-166">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9de3-167">Pour opérer avec le code d’infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-167">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="a9de3-168">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9de3-168">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>