<Type Name="IpcServerChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f896138607f91e115b31255c622873e5c162713e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489713" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcServerChannel&#xA;Implements IChannel, IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcServerChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implémente pour les appels distants un canal serveur qui utilise le système IPC pour transmettre des messages.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les canaux sont utilisés par l’infrastructure .NET Framework remoting pour transporter des appels distants. Lorsqu’un client appelle un objet distant, l’appel est sérialisé dans un message envoyé par un canal client et reçu par un canal serveur. Une fois que le message est reçu, il est désérialisé et traité. Toutes les valeurs retournées sont transmises par le canal du serveur et reçus par le canal client.  
  
 La <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> classe utilise le système de communication interprocessus (IPC) Windows pour transporter les messages entre les domaines d’application sur le même ordinateur. Lors de la communication entre les domaines d’application sur le même ordinateur, le canal IPC est beaucoup plus rapide que les canaux TCP ou HTTP.  
  
 Pour effectuer un traitement supplémentaire des messages côté serveur, spécifiez une implémentation de la <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface via laquelle tous les messages traités par le <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance sont passés.  
  
 Le <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepte les messages sérialisés au format binaire ou SOAP.  
  
 A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objet est associé à des propriétés de configuration qui peuvent être définies au moment de l’exécution, soit dans un fichier de configuration (en appelant la méthode statique <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> (méthode)) ou par programme (en passant une <xref:System.Collections.IDictionary> collection à la <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructeur). Pour obtenir la liste de ces propriétés de configuration, consultez la documentation relative à la <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructeur.  
  
> [!CAUTION]
>  Lors de la définition du `exclusiveAddressUse` propriété `false` dans les `properties` argument, plusieurs <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objets peuvent être inscrits pour le même canal nommé. Dans ce cas, les requêtes peuvent aller dans un des canaux inscrits. Ce paramètre est considéré comme sécurisé uniquement si des ACL sont également utilisées.  
  
   
  
## Examples  
 L’exemple de code suivant illustre comment utiliser la <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> classe.  
  
 [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]
 [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  
  
 Le code précédent est utilisé pour exposer l’objet distant suivant.  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 Pour obtenir un exemple d’un client à l’aide de cet objet à distance, consultez <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ portName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">Nom du port IPC devant être utilisé par le canal.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> avec le nom de port IPC spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser ce constructeur.  
  
 [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]
 [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">Collection <see cref="T:System.Collections.IDictionary" /> qui spécifie les valeurs des propriétés de configuration devant être utilisées par le canal.</param>
        <param name="sinkProvider">Implémentation de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> devant être utilisée par le canal.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> avec les propriétés de canal et le récepteur spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les propriétés de configuration de canal, consultez [propriétés de Configuration de formateur et de canal](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 Si vous n’avez pas besoin de fonctionnalité de récepteur, définissez la `sinkProvider` paramètre `null`.  
  
> [!CAUTION]
>  Lors de la définition du `exclusiveAddressUse` propriété `false` dans les `properties` argument, plusieurs <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objets peuvent être inscrits pour le même canal nommé. Dans ce cas, les requêtes peuvent aller dans un des canaux inscrits. Ce paramètre est considéré comme sécurisé uniquement si des ACL sont également utilisées.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser ce constructeur.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du canal.</param>
        <param name="portName">Nom du port IPC devant être utilisé par le canal.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> avec le nom de canal et le nom de port IPC spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur définit la <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> propriété à l’aide de le `name` paramètre. Si vous souhaitez inscrire plusieurs canaux, chaque canal doit avoir un nom unique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser ce constructeur.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" />
      </Parameters>
      <Docs>
        <param name="properties">Collection <see cref="T:System.Collections.IDictionary" /> qui spécifie les valeurs des propriétés de configuration devant être utilisées par le canal.</param>
        <param name="sinkProvider">Implémentation de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> devant être utilisée par le canal.</param>
        <param name="securityDescriptor">
          <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> devant être utilisé par le canal IPC.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> avec les propriétés de canal, le récepteur et le descripteur de sécurité spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les propriétés de configuration de canal, consultez [propriétés de Configuration de formateur et de canal](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 Si vous n’avez pas besoin de fonctionnalité de récepteur, définissez la `sinkProvider` paramètre `null`. Si vous n’avez pas besoin d’un descripteur de sécurité, définissez la `securityDescriptor` paramètre `null`.  
  
> [!CAUTION]
>  Lors de la définition du `exclusiveAddressUse` propriété `false` dans les `properties` argument, plusieurs <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objets peuvent être inscrits pour le même canal nommé. Dans ce cas, les requêtes peuvent aller dans un des canaux inscrits. Ce paramètre est considéré comme sécurisé uniquement si des ACL sont également utilisées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nom du canal.</param>
        <param name="portName">Nom du port IPC devant être utilisé par le canal.</param>
        <param name="sinkProvider">Implémentation de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> devant être utilisée par le canal.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> avec le nom de canal, le nom de port IPC et le récepteur spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur définit la <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> propriété à l’aide de le `name` paramètre. Si vous souhaitez inscrire plusieurs canaux, chaque canal doit avoir un nom unique.  
  
 Si vous n’avez pas besoin de fonctionnalité de récepteur, définissez la `sinkProvider` paramètre `null`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser ce constructeur.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les données spécifiques au canal.</summary>
        <value>Instance de <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> contenant les données spécifiques de canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien qu’il est retourné comme une instance de la <xref:System.Object?displayProperty=nameWithType> (classe), la valeur de cette propriété peut être convertie en une instance de <xref:System.Runtime.Remoting.Channels.ChannelDataStore> qui décrit le canal auquel le <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> est à l’écoute de l’objet.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser la propriété <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du canal en cours.</summary>
        <value>Instance de <see cref="T:System.String" /> contenant le nom du canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque canal enregistré a un nom unique. Le nom est utilisé pour récupérer un canal spécifique lors de l’appel du <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> (méthode). Le nom par défaut est « serveur ipc ».  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser la propriété <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la priorité du canal actuel.</summary>
        <value>Entier qui indique la priorité assignée au canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La priorité détermine l’ordre dans le canal de données s’affiche dans un <xref:System.Runtime.Remoting.ObjRef> instance ; les canaux de priorité supérieure apparaissent avant ceux de priorité inférieure. Les clients essaient de se connecter aux canaux serveur dans l’ordre dans lequel ils sont répertoriés dans le <xref:System.Runtime.Remoting.ObjRef> instance. La priorité par défaut est 20 ; les priorités négatives sont autorisées.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser la propriété <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne l'URI du canal en cours.</summary>
        <returns>
          <see cref="T:System.String" /> contenant l'URI du canal.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’URI du canal est utilisé par le client pour spécifier un canal de serveur distant.  
  
   
  
## Examples  
 L’exemple de code suivant illustre comment utiliser le <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> (méthode).  
  
 [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]
 [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri">URI de l'objet pour lequel des URL sont requises.</param>
        <summary>Retourne un tableau de toutes les URL de l'objet doté de l'URI spécifié qui sont hébergées sur l'instance de <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> en cours.</summary>
        <returns>Tableau de toutes les URL d'un objet doté de l'URI spécifié qui sont hébergées sur l'instance de <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée par le <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> (méthode).  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser la méthode <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur Boolean qui indique si le canal actuel est sécurisé.</summary>
        <value>Valeur booléenne qui indique si l'instance actuelle est sécurisée.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">URL à partir de laquelle est extrait l'URI de l'objet connu distant.</param>
        <param name="objectURI">Cette méthode retourne une instance de <see cref="T:System.String" /> contenant l'URI de l'objet connu distant.</param>
        <summary>Extrait l'URI du canal et de l'objet connu distant à partir de l'URL spécifiée.</summary>
        <returns>URI du canal en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’URI d’un objet est une valeur qui identifie de façon unique une instance d’objet spécifique.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser la méthode <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Objet qui spécifie un état d'initialisation, ou <see langword="null" /> si vous ne souhaitez pas passer un état spécifique au canal.</param>
        <summary>Commande au canal en cours de démarrer l'écoute des demandes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il n’est pas nécessaire d’appeler cette méthode pour commencer à écouter sur un canal qui vient d’être initialisé.  
  
 Utilisez cette méthode pour redémarrer l’écoute sur un canal après le <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> méthode a été appelée pour arrêter d’écouter sur le canal.  
  
 L’objet de données peut être utilisé pour passer un état d’initialisation spécifique au canal. Si vous ne souhaitez pas passer un état spécifique au canal, passez `null` comme le `data` la valeur du paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Le port à l'écoute spécifié n'est pas disponible.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Objet qui spécifie un état d'initialisation, ou <see langword="null" /> si vous ne souhaitez pas passer un état spécifique au canal.</param>
        <summary>Commande au canal en cours d'arrêter l'écoute des demandes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour arrêter l’écoute sur un canal. Pour redémarrer l’écoute, utilisez la <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> (méthode).  
  
 L’objet de données peut être utilisé pour passer un état d’initialisation spécifique au canal. Si vous ne souhaitez pas passer un état spécifique au canal, passez `null` comme le `data` la valeur du paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>