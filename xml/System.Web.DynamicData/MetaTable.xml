<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="368674963cd91da1111d2ea4951de635f21f3897" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874062" /></Metadata><TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <TypeSignature Language="F#" Value="type MetaTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2b76a-101">Représente les métadonnées qui décrivent une table utilisée par les pages Dynamic Data.</span><span class="sxs-lookup"><span data-stu-id="2b76a-101">Represents the metadata that describes a table for use by Dynamic Data pages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b76a-102">L’exemple suivant fait partie du fichier code-behind pour le modèle de page Insert.aspx.</span><span class="sxs-lookup"><span data-stu-id="2b76a-102">The following example is part of the code-behind file for the Insert.aspx page template.</span></span> <span data-ttu-id="2b76a-103">Le <xref:System.Web.DynamicData.MetaTable> instance est initialisée dans le `Page_Load` (méthode).</span><span class="sxs-lookup"><span data-stu-id="2b76a-103">The <xref:System.Web.DynamicData.MetaTable> instance is initialized in the `Page_Load` method.</span></span> <span data-ttu-id="2b76a-104">Le titre de la page est défini sur la table `DisplayName` propriété.</span><span class="sxs-lookup"><span data-stu-id="2b76a-104">The title for the page is set to the table `DisplayName` property.</span></span>  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaTable : System.Web.DynamicData.MetaModel * System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="new System.Web.DynamicData.MetaTable (metaModel, tableProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="metaModel"><span data-ttu-id="2b76a-105">Modèle méta d'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-105">The entity meta model.</span></span></param>
        <param name="tableProvider"><span data-ttu-id="2b76a-106">Fournisseur de modèles d'entités.</span><span class="sxs-lookup"><span data-stu-id="2b76a-106">The entity model provider.</span></span></param>
        <summary><span data-ttu-id="2b76a-107">Initialise une nouvelle instance de la classe <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-107">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-108">Le `tableProvider` paramètre est utilisé pour initialiser le <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2b76a-108">The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaTable.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-109">Obtient les attributs associés à la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-109">Gets the attributes that are associated with the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-110">Collection qui contient les attributs de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-110">A collection that contains the attributes of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaTable.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-111">Crée la collection d'attributs.</span><span class="sxs-lookup"><span data-stu-id="2b76a-111">Creates the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="2b76a-112">Collection d'attributs.</span><span class="sxs-lookup"><span data-stu-id="2b76a-112">The attribute collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanDelete : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanDelete : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanDelete principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="2b76a-113">Contexte de sécurité de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="2b76a-113">The user's security context.</span></span></param>
        <summary><span data-ttu-id="2b76a-114">Obtient une valeur qui indique si l'utilisateur spécifié est autorisé à exécuter des opérations de suppression.</span><span class="sxs-lookup"><span data-stu-id="2b76a-114">Gets a value that indicates whether the specified user is allowed to perform delete operations.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="2b76a-115">si l’utilisateur est autorisé à exécuter des opérations de suppression ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-115">if the user is allowed to perform delete operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-116">Un objet principal représente le contexte de sécurité de l’utilisateur au nom duquel le code est en cours d’exécution, y compris son identité et de tous les rôles auxquels ils appartiennent.</span><span class="sxs-lookup"><span data-stu-id="2b76a-116">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanInsert : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanInsert : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanInsert principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="2b76a-117">Contexte de sécurité de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="2b76a-117">The user's security context.</span></span></param>
        <summary><span data-ttu-id="2b76a-118">Obtient une valeur qui indique si l'utilisateur spécifié est autorisé à exécuter des opérations d'insertion.</span><span class="sxs-lookup"><span data-stu-id="2b76a-118">Gets a value that indicates whether the specified user is allowed to perform insert operations.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="2b76a-119">si l’utilisateur est autorisé à exécuter des opérations d’insertion ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-119">if the user is allowed to perform insert operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-120">Un objet principal représente le contexte de sécurité de l’utilisateur au nom duquel le code est en cours d’exécution, y compris son identité et de tous les rôles auxquels ils appartiennent.</span><span class="sxs-lookup"><span data-stu-id="2b76a-120">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanRead : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanRead principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="2b76a-121">Contexte de sécurité de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="2b76a-121">The user's security context.</span></span></param>
        <summary><span data-ttu-id="2b76a-122">Obtient une valeur qui indique si l'utilisateur spécifié est autorisé à exécuter des opérations de lecture.</span><span class="sxs-lookup"><span data-stu-id="2b76a-122">Gets a value that indicates whether the specified user is allowed to perform read operations.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="2b76a-123">si l’utilisateur est autorisé à exécuter des opérations de lecture ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-123">if the user is allowed to perform read operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-124">Un objet principal représente le contexte de sécurité de l’utilisateur au nom duquel le code est en cours d’exécution, y compris son identité et de tous les rôles auxquels ils appartiennent.</span><span class="sxs-lookup"><span data-stu-id="2b76a-124">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanUpdate : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanUpdate : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanUpdate principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="2b76a-125">Contexte de sécurité de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="2b76a-125">The user's security context.</span></span></param>
        <summary><span data-ttu-id="2b76a-126">Obtient une valeur qui indique si l'utilisateur spécifié est autorisé à exécuter des opérations de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="2b76a-126">Gets a value that indicates whether the specified user is allowed to perform update operations.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="2b76a-127">si l’utilisateur est autorisé à exécuter des opérations de mise à jour ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-127">if the user is allowed to perform update operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-128">Un objet principal représente le contexte de sécurité de l’utilisateur au nom duquel le code est en cours d’exécution, y compris son identité et de tous les rôles auxquels ils appartiennent.</span><span class="sxs-lookup"><span data-stu-id="2b76a-128">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-129">Obtient la collection de colonnes pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-129">Gets the column collection for the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-130">Collection qui contient les colonnes pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-130">A collection that contains the columns for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b76a-131">L'exemple suivant indique comment utiliser la propriété <xref:System.Web.DynamicData.MetaTable.Columns%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b76a-131">The following example shows how to use the <xref:System.Web.DynamicData.MetaTable.Columns%2A> property.</span></span> <span data-ttu-id="2b76a-132">Dans l’exemple, les modèles de page de données dynamiques ont été copiés dans le dossier \DynamicData\CustomPages\ProductDescriptions pour fournir un affichage personnalisé pour la table ProductDescription de la base de données AdventureWorksLT.</span><span class="sxs-lookup"><span data-stu-id="2b76a-132">In the example, the Dynamic Data page templates have been copied to the \DynamicData\CustomPages\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database.</span></span> <span data-ttu-id="2b76a-133">La balise du fichier Insert.aspx est modifiée pour ajouter un `OnDataBound` Gestionnaire d’événements nommé `DetailsView1_DataBound`.</span><span class="sxs-lookup"><span data-stu-id="2b76a-133">The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`.</span></span> <span data-ttu-id="2b76a-134">Dans le Gestionnaire d’événements, le <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> méthode est utilisée pour trouver la table de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2b76a-134">In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table.</span></span> <span data-ttu-id="2b76a-135">Le <xref:System.Web.DynamicData.MetaTable.Columns%2A> propriété est utilisée pour afficher le nombre de colonnes dans la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-135">The <xref:System.Web.DynamicData.MetaTable.Columns%2A> property is used to display the number of columns in the table.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn&#xA;override this.CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn" Usage="metaTable.CreateChildrenColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="2b76a-136">Fournisseur de colonnes.</span><span class="sxs-lookup"><span data-stu-id="2b76a-136">The column provider.</span></span></param>
        <summary><span data-ttu-id="2b76a-137">Crée un objet <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-137">Creates a new <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="2b76a-138">Nouvel objet de métacolonne enfant.</span><span class="sxs-lookup"><span data-stu-id="2b76a-138">The new child metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-139">Cette méthode peut être substituée pour créer un type dérivé.</span><span class="sxs-lookup"><span data-stu-id="2b76a-139">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn&#xA;override this.CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.CreateColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="2b76a-140">Fournisseur de colonnes.</span><span class="sxs-lookup"><span data-stu-id="2b76a-140">The column provider.</span></span></param>
        <summary><span data-ttu-id="2b76a-141">Crée un objet <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-141">Creates a <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="2b76a-142">Nouvel objet de métacolonne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-142">The new metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-143">Cette méthode peut être substituée pour créer un type dérivé.</span><span class="sxs-lookup"><span data-stu-id="2b76a-143">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberSignature Language="F#" Value="abstract member CreateContext : unit -&gt; obj&#xA;override this.CreateContext : unit -&gt; obj" Usage="metaTable.CreateContext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-144">Retourne le contexte de données pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-144">Returns the data context for the table.</span></span></summary>
        <returns><span data-ttu-id="2b76a-145">Contexte de données pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-145">The data context for the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-146">Le contexte de données est récupéré à partir d’un nouveau contexte est instancié en appelant le <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2b76a-146">The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2b76a-147">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-147">For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn&#xA;override this.CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn" Usage="metaTable.CreateForeignKeyColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="2b76a-148">Fournisseur de colonnes.</span><span class="sxs-lookup"><span data-stu-id="2b76a-148">The column provider.</span></span></param>
        <summary><span data-ttu-id="2b76a-149">Crée un objet qui contient des métadonnées de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-149">Creates an object that contains foreign-key metadata.</span></span></summary>
        <returns><span data-ttu-id="2b76a-150">Objet qui contient des métadonnées de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-150">An object that contains foreign-key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-151">Cette méthode peut être substituée pour créer un type dérivé.</span><span class="sxs-lookup"><span data-stu-id="2b76a-151">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b76a-152">Crée un objet <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-152">Creates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberSignature Language="F#" Value="static member CreateTable : System.ComponentModel.ICustomTypeDescriptor -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable typeDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor"><span data-ttu-id="2b76a-153">Informations sur le type de table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-153">Information about the table type.</span></span></param>
        <summary><span data-ttu-id="2b76a-154">Crée les métadonnées pour la table spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-154">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="2b76a-155">Objet qui contient les métadonnées de table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-155">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member CreateTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="2b76a-156">Type de table pour lequel générer des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2b76a-156">The table type for which to generate metadata.</span></span></param>
        <summary><span data-ttu-id="2b76a-157">Crée les métadonnées pour la table spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-157">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="2b76a-158">Objet qui contient les métadonnées de table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-158">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextPropertyName : string" Usage="System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-159">Obtient le nom de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-159">Gets the name of the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-160">Nom de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-160">The name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-161">Le nom provient de la <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> objet auquel appartient la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-161">The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextType : Type" Usage="System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-162">Obtient le type du contexte de données associé à la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-162">Gets the type of the data context that is associated with the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-163">Type du contexte de données.</span><span class="sxs-lookup"><span data-stu-id="2b76a-163">The type of the data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-164">Pour plus d’informations, consultez le <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-164">For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-165">Obtient la colonne utilisée pour afficher des valeurs lorsque les entrées dans cette table sont utilisées comme parents dans les relations de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-165">Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></summary>
        <value><span data-ttu-id="2b76a-166">Colonne utilisée pour afficher des valeurs lorsque les entrées dans cette table sont utilisées comme parents dans les relations de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-166">The column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-167">La colonne retournée est sélectionnée dans cet ordre :</span><span class="sxs-lookup"><span data-stu-id="2b76a-167">The column that is returned is selected in this order:</span></span>  
  
1.  <span data-ttu-id="2b76a-168">La colonne qui est spécifiée en utilisant le <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribut.</span><span class="sxs-lookup"><span data-stu-id="2b76a-168">The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.</span></span>  
  
2.  <span data-ttu-id="2b76a-169">La première colonne de chaîne qui n’est pas dans la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-169">The first string column that is not in the primary key.</span></span>  
  
3.  <span data-ttu-id="2b76a-170">La première colonne de chaîne qui est dans la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-170">The first string column that is in the primary key.</span></span>  
  
4.  <span data-ttu-id="2b76a-171">La première colonne autre qu’une chaîne qui se trouve dans la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-171">The first non-string column that is in the primary key.</span></span>  
  
5.  <span data-ttu-id="2b76a-172">La première colonne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-172">The first column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-173">Obtient le nom de la table dans un format convivial.</span><span class="sxs-lookup"><span data-stu-id="2b76a-173">Gets the name of the table in a user-friendly format.</span></span></summary>
        <value><span data-ttu-id="2b76a-174">Chaîne qui représente le nom convivial de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-174">The string that represents the user-friendly name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-175">La valeur de cette propriété par défaut à la valeur de la <xref:System.Web.DynamicData.MetaTable.Name%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2b76a-175">The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property.</span></span> <span data-ttu-id="2b76a-176">Vous pouvez personnaliser la valeur de cette propriété à l’aide de la <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> attribut.</span><span class="sxs-lookup"><span data-stu-id="2b76a-176">You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityType : Type" Usage="System.Web.DynamicData.MetaTable.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-177">Obtient le type d'entité qui représente la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-177">Gets the entity type that represents the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-178">Type qui représente l'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-178">The type that represents the entity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyColumnsNames : string" Usage="System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-179">Obtient une liste avec la virgule comme séparateur contenant des noms de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-179">Gets a comma-separated list of foreign-key names.</span></span></summary>
        <value><span data-ttu-id="2b76a-180">Liste avec la virgule comme séparateur contenant des noms de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-180">A comma-separated list of foreign-key names.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b76a-181">Obtient le chemin d'accès de l'action pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-181">Gets the action path for the specified row.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-182">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-182">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-183">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-183">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string -&gt; string&#xA;override this.GetActionPath : string -&gt; string" Usage="metaTable.GetActionPath action" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2b76a-184">Nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-184">The name of the action.</span></span></param>
        <summary><span data-ttu-id="2b76a-185">Retourne le chemin d'accès de l'action pour la table actuelle et l'action spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-185">Returns the action path for the current table and the specified action.</span></span></summary>
        <returns><span data-ttu-id="2b76a-186">Chemin d'accès de l'action pour l'action spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-186">The action path for the specified action.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b76a-187">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-187">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-188">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-188">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2b76a-189">Nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-189">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="2b76a-190">Liste des valeurs de colonnes qui constituent la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-190">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="2b76a-191">Retourne le chemin d'accès de l'action pour la table actuelle, l'action spécifiée, et la clé primaire spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-191">Returns the action path for the current table, specified action, and specified primary key.</span></span></summary>
        <returns><span data-ttu-id="2b76a-192">Chemin d'accès de l'action pour l'action et la clé primaire spécifiées.</span><span class="sxs-lookup"><span data-stu-id="2b76a-192">The action path for the specified action and primary key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-193">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-193">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-194">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-194">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj -&gt; string&#xA;override this.GetActionPath : string * obj -&gt; string" Usage="metaTable.GetActionPath (action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2b76a-195">Nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-195">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="2b76a-196">Ligne pour laquelle obtenir le chemin d'accès de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-196">The row to get the action path for.</span></span></param>
        <summary><span data-ttu-id="2b76a-197">Retourne le chemin d'accès de l'action pour la ligne spécifiée à l'aide du nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-197">Returns the action path for the specified row by using the name of the action.</span></span></summary>
        <returns><span data-ttu-id="2b76a-198">Chemin d'accès de l'action pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-198">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-199">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-199">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-200">Le chemin d’accès de l’action contient les noms de colonne de clé primaire, ce qui peuvent être utilisées pour les filtres de la chaîne de requête.</span><span class="sxs-lookup"><span data-stu-id="2b76a-200">The action path contains the primary-key column names, which can be used for query-string filters.</span></span>  
  
 <span data-ttu-id="2b76a-201">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-201">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string&#xA;override this.GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string" Usage="metaTable.GetActionPath (action, routeValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2b76a-202">Nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-202">The name of the action.</span></span></param>
        <param name="routeValues"><span data-ttu-id="2b76a-203">Liste d'itinéraires pour l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-203">The list of routes for the action.</span></span></param>
        <summary><span data-ttu-id="2b76a-204">Retourne le chemin d'accès de l'action pour la table actuelle et pour l'action et les itinéraires spécifiés.</span><span class="sxs-lookup"><span data-stu-id="2b76a-204">Returns the action path for the current table and for the specified action and routes.</span></span></summary>
        <returns><span data-ttu-id="2b76a-205">Chemin d'accès de l'action pour l'action et les itinéraires spécifiés.</span><span class="sxs-lookup"><span data-stu-id="2b76a-205">The action path for the specified action and routes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-206">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-206">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-207">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-207">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2b76a-208">Nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-208">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="2b76a-209">Liste des valeurs de colonnes qui constituent la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-209">The list of column values that make up the primary key.</span></span></param>
        <param name="path"><span data-ttu-id="2b76a-210">Chemin d'accès virtuel de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-210">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="2b76a-211">Ajoute des chaînes de requête au chemin d'accès de l'action en fonction de la clé primaire et du chemin d'accès virtuel spécifiés.</span><span class="sxs-lookup"><span data-stu-id="2b76a-211">Appends query strings to the action path, based on the specified primary key and virtual path.</span></span></summary>
        <returns><span data-ttu-id="2b76a-212">Chemin d'accès d'action pour la clé primaire et le chemin d'accès virtuel spécifiés, et les valeurs de chaîne de requête qui lui sont ajoutées.</span><span class="sxs-lookup"><span data-stu-id="2b76a-212">The action path for the specified primary key and virtual path, with query-string values appended to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-213">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-213">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-214">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-214">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj * string -&gt; string&#xA;override this.GetActionPath : string * obj * string -&gt; string" Usage="metaTable.GetActionPath (action, row, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2b76a-215">Nom de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-215">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="2b76a-216">Objet qui contient la ligne pour le chemin d'accès de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-216">An object that contains the row for the action path.</span></span></param>
        <param name="path"><span data-ttu-id="2b76a-217">Chemin d'accès virtuel de l'action.</span><span class="sxs-lookup"><span data-stu-id="2b76a-217">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="2b76a-218">Retourne le chemin d'accès de l'action pour la ligne spécifiée à l'aide du nom de l'action et du chemin d'accès virtuel de celle-ci.</span><span class="sxs-lookup"><span data-stu-id="2b76a-218">Returns the action path for the specified row by using the name of the action and the virtual path of the action.</span></span></summary>
        <returns><span data-ttu-id="2b76a-219">Chemin d'accès de l'action pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-219">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-220">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-220">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-221">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-221">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumn : string -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.GetColumn columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="2b76a-222">Nom de la colonne pour laquelle obtenir des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2b76a-222">The name of the column to get metadata for.</span></span></param>
        <summary><span data-ttu-id="2b76a-223">Retourne les métadonnées pour la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-223">Returns the metadata for the specified column.</span></span></summary>
        <returns><span data-ttu-id="2b76a-224">Métadonnées de colonne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-224">The column metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetColumnValuesFromRoute : System.Web.HttpContext -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetColumnValuesFromRoute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2b76a-225">Contexte de la demande Web spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-225">The context for the specified Web request.</span></span></param>
        <summary><span data-ttu-id="2b76a-226">Obtient la collection de valeurs de colonnes.</span><span class="sxs-lookup"><span data-stu-id="2b76a-226">Gets the collection of column values.</span></span></summary>
        <returns><span data-ttu-id="2b76a-227">Collection de valeurs de colonnes.</span><span class="sxs-lookup"><span data-stu-id="2b76a-227">The collection of column values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberSignature Language="F#" Value="abstract member GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey&#xA;override this.GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey" Usage="metaTable.GetDataKeyFromRoute " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-228">Extrait la clé primaire de l'entité à partir des valeurs d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-228">Retrieves the primary key of the entity from the route values.</span></span></summary>
        <returns><span data-ttu-id="2b76a-229">Valeurs de clé primaire des entités, si elles sont trouvées ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-229">The primary-key values of the entities, if they are found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-230">Les valeurs d’itinéraire proviennent généralement de la chaîne de requête URL.</span><span class="sxs-lookup"><span data-stu-id="2b76a-230">The route values typically come from the request URL query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayString : obj -&gt; string&#xA;override this.GetDisplayString : obj -&gt; string" Usage="metaTable.GetDisplayString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="2b76a-231">Ligne pour laquelle obtenir la chaîne d'affichage.</span><span class="sxs-lookup"><span data-stu-id="2b76a-231">The row to get the display string for.</span></span></param>
        <summary><span data-ttu-id="2b76a-232">Retourne la valeur à utiliser comme la chaîne d'affichage pour une instance d'une ligne lorsque la ligne est utilisée dans les relations de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-232">Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.</span></span></summary>
        <returns><span data-ttu-id="2b76a-233">Nom d'affichage pour une instance d'une ligne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-233">The display name for an instance of a row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-234">Si la ligne est `null`, une chaîne vide est retournée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-234">If the row is `null`, an empty string is returned.</span></span> <span data-ttu-id="2b76a-235">Si la classe d’entité inclut une substitution de la <xref:System.Web.DynamicData.MetaTable.ToString%2A> (méthode), substituées <xref:System.Web.DynamicData.MetaTable.ToString%2A> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-235">If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned.</span></span> <span data-ttu-id="2b76a-236">Sinon, la méthode retourne la `ToString` représentation de la valeur de la <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> propriété pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-236">Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberSignature Language="F#" Value="abstract member GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetFilteredColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-237">Extrait une liste de colonnes filtrables.</span><span class="sxs-lookup"><span data-stu-id="2b76a-237">Retrieves a list of columns that are filterable.</span></span></summary>
        <returns><span data-ttu-id="2b76a-238">Liste de colonnes filtrables.</span><span class="sxs-lookup"><span data-stu-id="2b76a-238">A list of columns that are filterable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-239">Une colonne est filtrable si elle est annotée avec le <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribut et la `Enabled` propriété de la <xref:System.Web.Mvc.FilterAttribute> attribut de la colonne a la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="2b76a-239">A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetPrimaryKeyDictionary row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="2b76a-240">Ligne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-240">A row.</span></span></param>
        <summary><span data-ttu-id="2b76a-241">Extrait un dictionnaire de noms et de valeurs de clé primaire pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-241">Retrieves a dictionary of primary-key names and values for the specified row.</span></span></summary>
        <returns><span data-ttu-id="2b76a-242">Dictionnaire de noms et de valeurs de clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-242">A dictionary of primary-key names and values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b76a-243">L’exemple suivant montre comment créer un dictionnaire de clés primaires.</span><span class="sxs-lookup"><span data-stu-id="2b76a-243">The following example shows how to create a primary-key dictionary.</span></span>  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b76a-244">Obtient une liste des valeurs qui représentent la clé primaire pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-244">Gets a list of values that represent the primary key for the specified row.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetPrimaryKeyString primaryKeyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues"><span data-ttu-id="2b76a-245">Liste des valeurs de colonnes qui constituent la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-245">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="2b76a-246">Retourne une liste avec la virgule comme séparateur contenant des valeurs de colonne qui représentent la clé primaire pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-246">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="2b76a-247">Liste avec la virgule comme séparateur contenant des valeurs de colonne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-247">A comma-separated list of column values.</span></span> <span data-ttu-id="2b76a-248">Si la liste est vide, une chaîne vide est retournée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-248">If the list is empty, an empty string is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : obj -&gt; string&#xA;override this.GetPrimaryKeyString : obj -&gt; string" Usage="metaTable.GetPrimaryKeyString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="2b76a-249">Ligne pour laquelle obtenir la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-249">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="2b76a-250">Retourne une liste avec la virgule comme séparateur contenant des valeurs de colonne qui représentent la clé primaire pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-250">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="2b76a-251">Liste avec la virgule comme séparateur contenant les valeurs de colonne qui représentent la clé primaire pour la ligne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-251">A comma-separated list of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;&#xA;override this.GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;" Usage="metaTable.GetPrimaryKeyValues row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="2b76a-252">Ligne pour laquelle obtenir la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-252">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="2b76a-253">Retourne une collection des valeurs de colonne qui représentent la clé primaire pour la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-253">Returns a collection of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="2b76a-254">Collection des valeurs de colonne qui représentent la clé primaire pour la ligne.</span><span class="sxs-lookup"><span data-stu-id="2b76a-254">A collection of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b76a-255">Obtient l'instance <see cref="T:System.Linq.IQueryable" /> pour le type d'entité qui représente la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-255">Gets the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : unit -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : unit -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-256">Retourne l'instance <see cref="T:System.Linq.IQueryable" /> pour le type d'entité qui représente la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-256">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
        <returns><span data-ttu-id="2b76a-257">L'instance <see cref="T:System.Linq.IQueryable" /> pour le type d'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-257">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : obj -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : obj -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2b76a-258">Contexte de l'objet <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-258">The context of the <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></param>
        <summary><span data-ttu-id="2b76a-259">Retourne l'instance <see cref="T:System.Linq.IQueryable" /> pour le type d'entité qui représente la table en utilisant le contexte de données.</span><span class="sxs-lookup"><span data-stu-id="2b76a-259">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table by using the data context.</span></span></summary>
        <returns><span data-ttu-id="2b76a-260">L'instance <see cref="T:System.Linq.IQueryable" /> pour le type d'entité qui représente la table dans le contexte de données.</span><span class="sxs-lookup"><span data-stu-id="2b76a-260">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table in the data context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-261">Si le `context` paramètre est `null`, cette méthode crée un nouveau contexte en appelant le <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2b76a-261">If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberSignature Language="F#" Value="abstract member GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetScaffoldColumns (mode, containerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="2b76a-262">Mode de contrôle lié aux données.</span><span class="sxs-lookup"><span data-stu-id="2b76a-262">The data-bound control mode.</span></span></param>
        <param name="containerType"><span data-ttu-id="2b76a-263">Valeur qui indique si la table est affichée comme une entité individuelle ou dans le cadre d'une liste d'entités.</span><span class="sxs-lookup"><span data-stu-id="2b76a-263">A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.</span></span></param>
        <summary><span data-ttu-id="2b76a-264">Retourne une liste de colonnes à afficher à l'aide de la génération de modèles automatique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-264">Returns a list of columns to display by using scaffolding.</span></span></summary>
        <returns><span data-ttu-id="2b76a-265">Liste de colonnes à afficher à l'aide de la génération de modèles automatique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-265">A list of columns to display by using scaffolding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-266">Cette méthode retourne toutes les colonnes dont <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> propriété est définie sur `true` sauf les suivants :</span><span class="sxs-lookup"><span data-stu-id="2b76a-266">This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:</span></span>  
  
-   <span data-ttu-id="2b76a-267">Colonnes qui sont des colonnes de chaînes longues dont <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> propriété est définie sur `true` et dont `containerType` paramètre est `true`.</span><span class="sxs-lookup"><span data-stu-id="2b76a-267">Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.</span></span>  
  
-   <span data-ttu-id="2b76a-268">Colonnes enfants dont <xref:System.Web.UI.WebControls.DataBoundControlMode> a la valeur <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span><span class="sxs-lookup"><span data-stu-id="2b76a-268">Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="2b76a-269">Type de l'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-269">The type of the entity.</span></span></param>
        <summary><span data-ttu-id="2b76a-270">Extrait la métatable associée au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="2b76a-270">Retrieves the metatable that is associated with the specified type.</span></span></summary>
        <returns><span data-ttu-id="2b76a-271">Métatable associée au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="2b76a-271">The metatable that is associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-272">Cette méthode appelle <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span><span class="sxs-lookup"><span data-stu-id="2b76a-272">This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span></span> <span data-ttu-id="2b76a-273">Si <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> retourne `false`, un <xref:System.InvalidOperationException> exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-273">If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b76a-274">La méthode <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> qui a été appelée par cette méthode a retourné <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-274">The <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> method that was called by this method returned <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrimaryKey : bool" Usage="System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-275">Obtient une valeur qui indique si la table possède une clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-275">Gets a value that indicates whether the table has a primary key.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="2b76a-276">Si la table possède une clé primaire ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-276">if the table has a primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaTable.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-277">Initialise des données qui peuvent ne pas être disponibles lorsque le constructeur est appelé.</span><span class="sxs-lookup"><span data-stu-id="2b76a-277">Initializes data that may not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-278">Cette méthode appelle la <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> méthode pour chaque colonne dans la <xref:System.Web.DynamicData.MetaTable> instance.</span><span class="sxs-lookup"><span data-stu-id="2b76a-278">This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance.</span></span> <span data-ttu-id="2b76a-279">Cette méthode ne peut pas être appelée directement.</span><span class="sxs-lookup"><span data-stu-id="2b76a-279">This method cannot be called directly.</span></span> <span data-ttu-id="2b76a-280">Pour personnaliser l’initialisation, vous pouvez dériver de cette classe et substituer les <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2b76a-280">To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method.</span></span> <span data-ttu-id="2b76a-281">Si vous substituez cette méthode, appelez le contrôle de base `Initialize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="2b76a-281">If you override this method, call the base control's `Initialize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b76a-282">L’exemple suivant montre comment substituer la <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> méthode afin de personnaliser le processus d’initialisation.</span><span class="sxs-lookup"><span data-stu-id="2b76a-282">The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.</span></span>  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverriddenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverriddenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-283">Obtient une valeur qui indique si la table est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2b76a-283">Gets a value that indicates whether the table is read-only.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="2b76a-284">Si la table est en lecture seule ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-284">if the table is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListActionPath : string" Usage="System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-285">Obtient le chemin d'accès de l'action vers l'action de liste pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-285">Gets the action path of the list action for the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-286">Chemin d'accès de l'action vers l'action de liste pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-286">The action path of the list action for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-287">Le chemin d’accès de l’action est une URL pour une action pour une entité spécifique.</span><span class="sxs-lookup"><span data-stu-id="2b76a-287">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="2b76a-288">Pour plus d’informations, consultez le <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-288">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaTable.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-289">Obtient le modèle méta auquel la table appartient.</span><span class="sxs-lookup"><span data-stu-id="2b76a-289">Gets the meta model that the table belongs to.</span></span></summary>
        <value><span data-ttu-id="2b76a-290">Modèle méta auquel la table appartient.</span><span class="sxs-lookup"><span data-stu-id="2b76a-290">The meta model that the table belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-291">Pour plus d’informations, consultez le <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="2b76a-291">For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaTable.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-292">Obtient le nom unique de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-292">Gets the unique name of the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-293">Nom unique de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-293">The unique name of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyColumns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-294">Obtient la collection des colonnes qui définissent la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-294">Gets the collection of columns that define the primary key.</span></span></summary>
        <value><span data-ttu-id="2b76a-295">Collection qui contient les colonnes de clé primaire.</span><span class="sxs-lookup"><span data-stu-id="2b76a-295">A collection that contains the primary-key columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.TableProvider" Usage="System.Web.DynamicData.MetaTable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-296">Obtient le fournisseur pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-296">Gets the provider for the table.</span></span></summary>
        <value><span data-ttu-id="2b76a-297">Fournisseur pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-297">The provider for the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberSignature Language="F#" Value="member this.ResetMetadata : unit -&gt; unit" Usage="metaTable.ResetMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-298">Réinitialise les métadonnées mises en cache pour la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-298">Resets the cached metadata for the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-299">Les métadonnées de table mises en cache se composent des informations obtenues à partir des attributs de modèle de données et à partir des métadonnées sur des colonnes intrinsèques.</span><span class="sxs-lookup"><span data-stu-id="2b76a-299">The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.</span></span> <span data-ttu-id="2b76a-300">Le cache des métadonnées est reconstruit la prochaine fois que toutes les métadonnées sont demandée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-300">The metadata cache is rebuilt the next time any metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootEntityType : Type" Usage="System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-301">Obtient le type racine de la hiérarchie d'héritage de l'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-301">Gets the root type of the entity's inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="2b76a-302">Type racine de la hiérarchie d'héritage de l'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-302">The root type of the entity's inheritance hierarchy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-303">Si le type est en haut de la hiérarchie d’héritage ou n’a pas un type de parent, le type d’entité est retourné.</span><span class="sxs-lookup"><span data-stu-id="2b76a-303">If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-304">Obtient ou définit une valeur qui indique si la table doit être affichée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-304">Gets or sets a value that indicates whether the table should be displayed.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="2b76a-305">Si la table doit être affichée ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-305">if the table should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-306">Obtient la valeur <see cref="T:System.Web.DynamicData.MetaColumn" /> par laquelle la table est triée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-306">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> value that the table is sorted by.</span></span></summary>
        <value><span data-ttu-id="2b76a-307">Colonne par laquelle la table est triée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-307">The column that the table is sorted by.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescending : bool" Usage="System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b76a-308">Obtient une valeur qui indique si les entrées sont triées en ordre décroissant lorsqu'elles sont utilisées comme parents dans une relation de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="2b76a-308">Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="2b76a-309">Si les entrées sont triées par ordre décroissant ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-309">if entries are sorted in descending order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-310">Vous pouvez spécifier l’ordre de tri à l’aide de la <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> attribut.</span><span class="sxs-lookup"><span data-stu-id="2b76a-310">You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b76a-311">Retourne le nom de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-311">Returns the name of the table.</span></span></summary>
        <returns><span data-ttu-id="2b76a-312">Nom de la table.</span><span class="sxs-lookup"><span data-stu-id="2b76a-312">The name of the table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberSignature Language="F#" Value="member this.TryGetColumn : string *  -&gt; bool" Usage="metaTable.TryGetColumn (columnName, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="2b76a-313">Le nom de la colonne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="2b76a-313">The name of the column to find.</span></span></param>
        <param name="column"><span data-ttu-id="2b76a-314">Cette méthode retourne l'objet <see langword="MetaColumn" /> pour <paramref name="columnName" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-314">When this method returns, contains the <see langword="MetaColumn" /> object for <paramref name="columnName" />.</span></span> <span data-ttu-id="2b76a-315">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="2b76a-315">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="2b76a-316">Retourne une valeur qui indique si une colonne spécifiée peut être trouvée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-316">Returns a value that indicates whether a specified column can be found.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="2b76a-317">si la colonne spécifiée peut être trouvée ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-317">if the specified column can be found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b76a-318">Si le `columnName` paramètre est null, une <xref:System.InvalidOperationException> exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2b76a-318">If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="static member TryGetTable : Type *  -&gt; bool" Usage="System.Web.DynamicData.MetaTable.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="2b76a-319">Type de l'entité.</span><span class="sxs-lookup"><span data-stu-id="2b76a-319">The type of the entity.</span></span></param>
        <param name="table"><span data-ttu-id="2b76a-320">Lorsque cette méthode est retournée, contient la métatable associée au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="2b76a-320">When this method returns, contains the metatable that is associated with the specified type.</span></span> <span data-ttu-id="2b76a-321">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="2b76a-321">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="2b76a-322">Extrait la métatable associée au type et à la table spécifiés.</span><span class="sxs-lookup"><span data-stu-id="2b76a-322">Retrieves the metatable that is associated with the specified type and table.</span></span></summary>
        <returns><span data-ttu-id="2b76a-323">Métatable associée au type et à la table spécifiés.</span><span class="sxs-lookup"><span data-stu-id="2b76a-323">The metatable that is associated with the given specified and table.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entityType" /> <span data-ttu-id="2b76a-324">est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b76a-324">is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>