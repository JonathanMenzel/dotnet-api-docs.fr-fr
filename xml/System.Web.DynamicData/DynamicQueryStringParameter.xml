<Type Name="DynamicQueryStringParameter" FullName="System.Web.DynamicData.DynamicQueryStringParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42e04516c451635763dc21d2a8e5796c1c957933" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402207" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicQueryStringParameter : System.Web.UI.WebControls.Parameter, System.Web.DynamicData.IWhereParametersProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicQueryStringParameter extends System.Web.UI.WebControls.Parameter implements class System.Web.DynamicData.IWhereParametersProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicQueryStringParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicQueryStringParameter&#xA;Inherits Parameter&#xA;Implements IWhereParametersProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicQueryStringParameter : System::Web::UI::WebControls::Parameter, System::Web::DynamicData::IWhereParametersProvider" />
  <TypeSignature Language="F#" Value="type DynamicQueryStringParameter = class&#xA;    inherit Parameter&#xA;    interface IWhereParametersProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IWhereParametersProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Génère automatiquement une collection de paramètres qui est utilisée pour créer la clause <see langword="Where" /> pour le contrôle de source de données en récupérant des valeurs de chaîne de requête.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.DynamicData.DynamicQueryStringParameter> classe est utilisée par les pages qui utilisent les fonctionnalités Dynamic Data ASP.NET. Le <xref:System.Web.DynamicData.DynamicQueryStringParameter> classe génère une collection de <xref:System.Web.UI.WebControls.Parameter> objets pour les clés primaires, les clés étrangères et les colonnes booléennes d’une table en récupérant des valeurs de chaîne de requête.  
  
 Pour les clés primaires, vous pouvez simplement ajouter un <xref:System.Web.DynamicData.DynamicQueryStringParameter> objet sans fournir d’autres paramètres. Dynamic Data génère les paramètres de la clé primaire ou les clés. Pour les clés étrangères ou les colonnes booléennes, vous devez définir le <xref:System.Web.UI.WebControls.Parameter.Name%2A> nom à la propriété de la colonne que vous souhaitez filtrer.  
  
 Pour pouvoir utiliser le <xref:System.Web.DynamicData.DynamicQueryStringParameter> (classe), vous devez ajouter un <xref:System.Web.DynamicData.DynamicDataManager> contrôle à la page et vous devez enregistrer le contrôle lié aux données avec le <xref:System.Web.DynamicData.DynamicDataManager> contrôle à l’aide de la <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=nameWithType> (méthode).  
  
 Voir un exemple de code au moment de l’exécution de cette fonctionnalité : [exécuter](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicQueryStringParameter).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.DynamicData.DynamicQueryStringParameter> objet en tant que filtre lors de l’affichage des données dans un <xref:System.Web.UI.WebControls.GridView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> contrôle contient un <xref:System.Web.UI.WebControls.TemplateField> objet qui crée un lien qui définit la valeur de chaîne de requête à l’aide de la valeur de clé étrangère.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicQueryStringParameter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicQueryStringParameter/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicQueryStringParameter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicQueryStringParameter/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicDataManager" />
    <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
    <altmember cref="T:System.Web.UI.WebControls.EntityDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicQueryStringParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicQueryStringParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicQueryStringParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.DynamicData.DynamicQueryStringParameter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="dynamicQueryStringParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Informations sur la requête HTTP.</param>
        <param name="control">Contrôle auquel le paramètre est lié.</param>
        <summary>Lève une exception <see cref="T:System.InvalidOperationException" /> dans tous les cas.</summary>
        <returns>Lève une exception <see cref="T:System.InvalidOperationException" /> dans tous les cas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate%2A> méthode est appelée par ASP.NET, elle lève une exception t : System.InvalidOperationException dans tous les cas. Cela se produit, car une des conditions suivantes sont remplies :  
  
-   La page ne contient pas un <xref:System.Web.DynamicData.DynamicDataManager> contrôle.  
  
-   Le contrôle lié aux données n’est pas inscrit pour une utilisation par le <xref:System.Web.DynamicData.DynamicDataManager> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicDataManager" />
      </Docs>
    </Member>
    <Member MemberName="GetWhereParameters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.WebControls.Parameter&gt; GetWhereParameters (System.Web.DynamicData.IDynamicDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.WebControls.Parameter&gt; GetWhereParameters(class System.Web.DynamicData.IDynamicDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicQueryStringParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWhereParameters (dataSource As IDynamicDataSource) As IEnumerable(Of Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::WebControls::Parameter ^&gt; ^ GetWhereParameters(System::Web::DynamicData::IDynamicDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="abstract member GetWhereParameters : System.Web.DynamicData.IDynamicDataSource -&gt; seq&lt;System.Web.UI.WebControls.Parameter&gt;&#xA;override this.GetWhereParameters : System.Web.DynamicData.IDynamicDataSource -&gt; seq&lt;System.Web.UI.WebControls.Parameter&gt;" Usage="dynamicQueryStringParameter.GetWhereParameters dataSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IWhereParametersProvider.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.WebControls.Parameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.DynamicData.IDynamicDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">Objet source de données.</param>
        <summary>Retourne une collection d'objets <see cref="T:System.Web.UI.WebControls.Parameter" /> générés automatiquement pour les colonnes d'une table en extrayant des valeurs de chaîne de requête.</summary>
        <returns>Collection de paramètres générés automatiquement pour les colonnes d'une table en extrayant des valeurs de chaîne de requête.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.DynamicData.DynamicQueryStringParameter> classe génère une collection de <xref:System.Web.UI.WebControls.Parameter> objets pour les clés primaires, les clés étrangères et les colonnes booléennes d’une table en récupérant des valeurs de chaîne de requête.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
        <altmember cref="T:System.Web.UI.WebControls.EntityDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      </Docs>
    </Member>
  </Members>
</Type>