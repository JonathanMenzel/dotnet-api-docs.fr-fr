<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f925b0977265d7d416c6bf77c7e57f9b40bb0be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537143" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe de base pour les classes <see cref="T:System.Web.DynamicData.DynamicValidator" /> qui contiennent des données d'événement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.DynamicData.DynamicValidator> classe intercepte les exceptions levées à partir de classes LINQ to SQL ou les méthodes Entity Framework dans un modèle de données. Cette classe ne contient pas de données d’événement. Il est utilisé par les événements qui ne passent pas d’informations d’état à un gestionnaire d’événements lorsqu’un événement est déclenché. Si le Gestionnaire d’événements nécessite des informations d’état, vous devez créer une classe dérivée de cette classe pour contenir les données.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">Exception survenue.</param>
        <param name="operation">Opération de source de données qui a provoqué l'exception.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> à l'aide de l'exception qui s'est produite et de l'opération de source de données qui a provoqué l'exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamic Data ASP.NET fournit des opérations de source de données qui peuvent être effectuées par un objet de source de données. Ces opérations comprennent `Delete`, `Insert`, `Select` et `Update` et `ContextCreate`. Si une exception se produit pendant une opération de source de données, l’opération de source de données qui a provoqué l’exception et l’exception qui s’est produite sont représentées par <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> et <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> respectivement.  
  
 Ce constructeur initialise une nouvelle instance de la <xref:System.Web.DynamicData.DynamicValidatorEventArgs> classe à l’aide de ces propriétés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'exception qui se produit pendant un événement d'opération de la source de données.</summary>
        <value>Exception qui s'est produite pendant l'événement d'opération de la source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamic Data ASP.NET fournit des opérations de source de données qui peuvent être effectuées par un objet de source de données. Ces opérations comprennent `Delete`, `Insert`, `Select` et `Update` et `ContextCreate`. Si une exception se produit, la <xref:System.Web.DynamicData.DynamicValidator> classe utilise cette propriété pour obtenir le type d’exception déclenchée pendant une opération de source de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'opération de source de données qui a provoqué une exception dans la classe <see cref="T:System.Web.DynamicData.DynamicValidator" />.</summary>
        <value>Opération de source de données qui a provoqué l'exception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamic Data ASP.NET fournit l’opération de source de données qui peut être effectuée par l’objet de source de données. Ces opérations comprennent `Delete`, `Insert`, `Select` et `Update` et `ContextCreate`. Si une exception se produit, la <xref:System.Web.DynamicData.DynamicValidator> classe utilise cette propriété pour extraire l’opération qui a déclenché cette exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>