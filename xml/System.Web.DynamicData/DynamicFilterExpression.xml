<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd6f13f32551502e31c15e2a801cf62772d07320" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537503" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Modifie une requête de base de données à l’aide d’une valeur du contrôle de filtre spécifié.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.DynamicData.DynamicFilterExpression> classe vous permet de modifier une requête de base de données en utilisant les valeurs assignées dans un <xref:System.Web.DynamicData.DynamicFilter> contrôle. Ce contrôle délègue la tâche de génération de la <xref:System.Linq.IQueryable> de requête à un contrôle spécialisé tel que <xref:System.Web.DynamicData.QueryableFilterRepeater> contrôle ou <xref:System.Web.DynamicData.DynamicFilter> contrôle.  
  
 Les contrôles de filtre déléguent à son tour la création de la requête pour le modèle de filtre qu’ils référencent. La requête est ensuite exécutée par le contrôle de source de données qui est référencé par le <xref:System.Web.UI.WebControls.QueryExtender> contrôle.  
  
 Pour utiliser la <xref:System.Web.DynamicData.DynamicFilterExpression> classe dans une page, vous procédez comme suit :  
  
-   Ajouter un <xref:System.Web.UI.WebControls.QueryExtender> contrôle à la page.  
  
-   Définir le `TargetControlID` propriété de la <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour référencer le contrôle de source de données.  
  
-   Ajouter un <xref:System.Web.DynamicData.DynamicFilterExpression> objet en tant qu’enfant de le <xref:System.Web.UI.WebControls.QueryExtender> contrôle.  
  
-   Définir le `ControlID` propriété de la <xref:System.Web.DynamicData.DynamicFilterExpression> objet pour référencer le contrôle de filtre.  
  
 Dans les étapes précédentes, il est supposé que les contrôles de filtre connexes, les contrôles liés aux données et contrôle de source de données sont définies dans la page.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la <xref:System.Web.DynamicData.DynamicFilterExpression> contrôle à sélectionner un modèle de filtre dans une page. Le modèle de filtre est sélectionné par le <xref:System.Web.DynamicData.DynamicFilter> contrôle qui est identifié par <xref:System.Web.DynamicData.DynamicFilterExpression> contrôler via son `ControID` propriété.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'identificateur de contrôle de filtre.</summary>
        <value>Identificateur de contrôle de filtre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet identificateur de contrôle est utilisé par la <xref:System.Web.DynamicData.DynamicFilterExpression> classe pour sélectionner le filtre de contrôle auquel il délègue la tâche de génération de la requête, qui est ensuite exécutée par le contrôle de source de données.  
  
 Le contrôle de filtre délègue la tâche de création de la requête pour le modèle de filtre de références. La requête est ensuite exécutée par le contrôle de source de données qui est référencé par le <xref:System.Web.UI.WebControls.QueryExtender> contrôle.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la <xref:System.Web.DynamicData.DynamicFilterExpression> classe pour sélectionner un contrôle de filtre dans une page.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Requête de source de données à modifier.</param>
        <summary>Obtient la requête modifiée à l'aide de la valeur de filtre actuelle.</summary>
        <returns>Requête de source de données modifiée à l'aide de la valeur actuelle contenue dans l'instance <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.DynamicData.DynamicFilterExpression.GetQueryable%2A> méthode délègue la tâche de génération de la requête au modèle de filtre référencé par le contrôle de filtre spécifié par le <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Contrôle qui contient l'instance de <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />, tel que le contrôle <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
        <param name="context">Objet <see cref="T:System.Web.HttpContext" /> actuel.</param>
        <param name="dataSource">Source de données cible pour l'instance de <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</param>
        <summary>Initialise l'expression avec les informations de source de données.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>