<Type Name="MetaColumn" FullName="System.Web.DynamicData.MetaColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a36c8f33ecad535cc95e1b538ac9c9a66daaf5bd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaColumn extends System.Object implements class System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaColumn&#xA;Implements IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaColumn : System::Web::DynamicData::IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="77ccc-101">Represents a database column that is used by Dynamic Data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77ccc-101">Represents a database column that is used by Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-102">Dans les applications Dynamic Data ASP.NET, la <xref:System.Web.DynamicData.MetaColumn> classe représente un champ de base de données.</span><span class="sxs-lookup"><span data-stu-id="77ccc-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaColumn> class represents a database field.</span></span> <span data-ttu-id="77ccc-103">La <xref:System.Web.DynamicData.MetaColumn> classe vous permet de récupérer des informations sur le champ des données telles que les informations de type et les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="77ccc-103">The <xref:System.Web.DynamicData.MetaColumn> class lets you retrieve information about the data field such as type and metadata information.</span></span>  
  
 <span data-ttu-id="77ccc-104">Vous pouvez récupérer la table à laquelle appartient le champ de données à l’aide de la <xref:System.Web.DynamicData.MetaColumn.Table%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-104">You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span> <span data-ttu-id="77ccc-105">Vous pouvez également récupérer le modèle de données à l’aide de la <xref:System.Web.DynamicData.MetaColumn.Model%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-105">You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaChildrenColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="77ccc-106">The meta table that contains the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-106">The meta table that contains the column.</span>
          </span>
        </param>
        <param name="columnProvider">
          <span data-ttu-id="77ccc-107">The column provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77ccc-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInitialValue">
      <MemberSignature Language="C#" Value="public bool AllowInitialValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInitialValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitialValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.AllowInitialValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-109">Gets or sets a value that specifies whether a column enables a value to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-109">Gets or sets a value that specifies whether a column enables a value to be inserted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-110">
            <see langword="true" /> Si la colonne autorise une valeur à insérer ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-110">
              <see langword="true" /> if the column enables a value to be inserted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-111">La valeur par défaut est `false` lorsque la colonne est en lecture seule et `true` lorsque la colonne n’est pas en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="77ccc-111">The default value is `false` when the column is read-only and `true` when the column is not read-only.</span></span> <span data-ttu-id="77ccc-112">La valeur par défaut peut être remplacée en utilisant le <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribut.</span><span class="sxs-lookup"><span data-stu-id="77ccc-112">The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ApplyFormatInEditMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-113">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-113">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-114">
            <see langword="true" /> Si la chaîne mise en forme spécifiée par la <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> propriété est appliquée aux valeurs de champ lorsque le contrôle lié aux données qui contient le champ de données qui est représenté par le <see cref="T:System.Web.DynamicData.MetaColumn" /> objet est en mode édition ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-114">
              <see langword="true" /> if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-115">Le <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-115">The <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77ccc-116">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut n’est pas trouvé, cette propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribut est appliqué pour récupérer les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="77ccc-116">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-117">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-117">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-118">La collection d’attributs de métadonnées qui s’appliquent au champ de données représenté par la <see cref="T:System.Web.DynamicData.MetaColumn" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-118">The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-119">Gets the attribute collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-119">Gets the attribute collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77ccc-120">The attribute collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-120">The attribute collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-121">Vous devez appeler la <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> méthode avant que vous accédez à la <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-121">You must call the <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public Type ColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ColumnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ColumnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-122">Gets the data field type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-122">Gets the data field type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-123">Le type de champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-123">The data field type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-124">Le <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> propriété retourne le type du common language runtime (CLR) du champ de données.</span><span class="sxs-lookup"><span data-stu-id="77ccc-124">The <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property returns the common language runtime (CLR) type of the data field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ConvertEmptyStringToNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-125">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-125">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-126">
            <see langword="true" /> Si les chaînes vides sont converties automatiquement en <see langword="null" /> lorsque le champ de données est mise à jour dans la source de données ; sinon, les valeurs <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-126">
              <see langword="true" /> if empty string values are automatically converted to <see langword="null" /> values when the data field is updated in the data source; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-127">Le <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-127">The <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77ccc-128">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut n’est pas trouvé, cette propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribut est appliqué pour récupérer les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="77ccc-128">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataFormatString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-129">Gets the string that specifies the display format for the field value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-129">Gets the string that specifies the display format for the field value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-130">Chaîne qui spécifie le format d’affichage de la valeur du champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-130">The string that specifies the display format for the field value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-131">Le <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-131">The <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77ccc-132">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut n’est pas trouvé, cette propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribut est appliqué pour récupérer les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="77ccc-132">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="DataTypeAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTypeAttribute As DataTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DataAnnotations::DataTypeAttribute ^ DataTypeAttribute { System::ComponentModel::DataAnnotations::DataTypeAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataTypeAttribute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.DataTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-133">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-133">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-134">Le <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribut est appliqué au champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-134">The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-135">Gets the default value for the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-135">Gets the default value for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-136">La valeur par défaut pour le champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-136">The default value for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-137">Le <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> propriété est généralement utilisée pour préremplir la valeur de champ lors de la création d’une nouvelle entrée.</span><span class="sxs-lookup"><span data-stu-id="77ccc-137">The <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> property is typically used to pre-populate the field value when a new entry is created.</span></span> <span data-ttu-id="77ccc-138">Cette propriété vérifie si un <xref:System.ComponentModel.DefaultValueAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-138">This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
        <altmember cref="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-139">Gets the description for the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-139">Gets the description for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-140">La description du champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-140">The description for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-141">Le <xref:System.Web.DynamicData.MetaColumn.Description%2A> propriété vérifie si un <xref:System.ComponentModel.DescriptionAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-141">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
        <altmember cref="P:System.ComponentModel.DescriptionAttribute.Description" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-142">Gets the display name for the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-142">Gets the display name for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-143">Le nom complet du champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-143">The display name for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-144">Le <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> propriété retourne le nom complet convivial pour le champ de données s’il a été défini, ou le nom de champ si aucun nom complet n’a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="77ccc-144">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.</span></span> <span data-ttu-id="77ccc-145">Le <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> propriété vérifie si un nom d’affichage convivial a été défini en vérifiant si un <xref:System.ComponentModel.DisplayNameAttribute> attribut est appliqué au champ de données.</span><span class="sxs-lookup"><span data-stu-id="77ccc-145">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EntityTypeProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo EntityTypeProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo EntityTypeProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeProperty As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyInfo ^ EntityTypeProperty { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.EntityTypeProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-146">Gets an object that contains attributes of the property that represents the data field in the entity type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-146">Gets an object that contains attributes of the property that represents the data field in the entity type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-147">Objet qui contient les attributs de la propriété qui représente le champ de données dans le type d’entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-147">An object that contains attributes of the property that represents the data field in the entity type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.FilterUIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-148">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-148">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-149">Le <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> valeur qui est utilisée pour la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-149">The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.HtmlEncode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-150">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-150">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-151">
            <see langword="true" /> dans tous les cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-151">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-152">Initializes data that might not be available when the constructor is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-152">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-153">Cette méthode ne peut pas être appelée directement.</span><span class="sxs-lookup"><span data-stu-id="77ccc-153">This method cannot be called directly.</span></span> <span data-ttu-id="77ccc-154">Pour personnaliser l’initialisation, vous pouvez dériver de cette classe et substituer la `Initialize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="77ccc-154">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="77ccc-155">Si vous substituez cette méthode, appelez le contrôle de base `Initialize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="77ccc-155">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryData">
      <MemberSignature Language="C#" Value="public bool IsBinaryData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinaryData" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinaryData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinaryData { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsBinaryData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-156">Gets a value that indicates whether the data field contains binary data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-156">Gets a value that indicates whether the data field contains binary data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-157">
            <see langword="true" /> Si le champ des données contient des données binaires ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-157">
              <see langword="true" /> if the data field contains binary data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomProperty">
      <MemberSignature Language="C#" Value="public bool IsCustomProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsCustomProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-158">Gets a value that indicates whether the data field exists in the database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-158">Gets a value that indicates whether the data field exists in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-159">
            <see langword="true" /> Si le champ de données n’existe pas dans la base de données ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-159">
              <see langword="true" /> if the data field does not exist in the database; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-160">Utilisez le <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> propriété pour déterminer si un champ de données est dans la base de données ou si elle est une propriété supplémentaire a été ajoutée à l’objet de contexte de données.</span><span class="sxs-lookup"><span data-stu-id="77ccc-160">Use the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFloatingPoint">
      <MemberSignature Language="C#" Value="public bool IsFloatingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloatingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFloatingPoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFloatingPoint { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsFloatingPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-161">Gets a value that indicates whether the data field is a floating-point type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-161">Gets a value that indicates whether the data field is a floating-point type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-162">
            <see langword="true" /> Si le champ de données est un type à virgule flottante ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-162">
              <see langword="true" /> if the data field is a floating-point type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-163">Les types `float`, `double`, et `decimal` sont des types virgule flottante.</span><span class="sxs-lookup"><span data-stu-id="77ccc-163">The types `float`, `double`, and `decimal` are floating point types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsForeignKeyComponent">
      <MemberSignature Language="C#" Value="public bool IsForeignKeyComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKeyComponent" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKeyComponent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKeyComponent { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsForeignKeyComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-164">Gets a value that indicates whether the data field is part of a foreign key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-164">Gets a value that indicates whether the data field is part of a foreign key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-165">
            <see langword="true" /> Si le champ de données fait partie d’une clé étrangère ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-165">
              <see langword="true" /> if the data field is part of a foreign key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      </Docs>
    </Member>
    <Member MemberName="IsGenerated">
      <MemberSignature Language="C#" Value="public bool IsGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsGenerated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-166">Gets a value that indicates whether the data field value is automatically generated in the database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-166">Gets a value that indicates whether the data field value is automatically generated in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-167">
            <see langword="true" /> Si la valeur de champ de données est généré automatiquement dans la base de données ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-167">
              <see langword="true" /> if the data field value is automatically generated in the database; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteger">
      <MemberSignature Language="C#" Value="public bool IsInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteger" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInteger As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteger { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsInteger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-168">Gets a value that indicates whether the data field type is an integer type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-168">Gets a value that indicates whether the data field type is an integer type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-169">
            <see langword="true" /> Si le type de champ de données est un type entier ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-169">
              <see langword="true" /> if the data field type is an integer type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-170">Les types `byte`, `short`, `int`, et `long` sont des types entiers.</span><span class="sxs-lookup"><span data-stu-id="77ccc-170">The types `byte`, `short`, `int`, and `long` are integer types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsLongString">
      <MemberSignature Language="C#" Value="public bool IsLongString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLongString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLongString { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsLongString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-171">Gets a value that indicates whether the data field type can contain long strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-171">Gets a value that indicates whether the data field type can contain long strings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-172">
            <see langword="true" /> Si le type de champ de données peut contenir des chaînes longues ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-172">
              <see langword="true" /> if the data field type can contain long strings; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-173">Les types SQL `text`, `ntext`, `varchar`, et `nvarchar` peut contenir des chaînes longues.</span><span class="sxs-lookup"><span data-stu-id="77ccc-173">The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings.</span></span> <span data-ttu-id="77ccc-174">La valeur de la <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> propriété est utilisée pour déterminer si le modèle de champ TextBox ou TextArea est affiché pour permettre aux utilisateurs de modifier la valeur du champ.</span><span class="sxs-lookup"><span data-stu-id="77ccc-174">The value of the <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-175">Gets a value that indicates whether the data field is part of the table's primary key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-175">Gets a value that indicates whether the data field is part of the table's primary key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-176">
            <see langword="true" /> Si le champ de données fait partie de la clé primaire de la table ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-176">
              <see langword="true" /> if the data field is part of the table's primary key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-177">Gets a value that indicates whether the data field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-177">Gets a value that indicates whether the data field is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-178">
            <see langword="true" /> Si le champ de données est en lecture seule ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-178">
              <see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-179">Gets a value that indicates whether the data field requires a value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-179">Gets a value that indicates whether the data field requires a value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-180">
            <see langword="true" /> Si le champ de données requiert une valeur ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-180">
              <see langword="true" /> if the data field requires a value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-181">Le <xref:System.Web.DynamicData.MetaColumn.Description%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> si le schéma de base de données contient des informations sur les données du champ requis dans la base de données pour déterminer si le champ de données requiert une valeur ou d’attribut est appliqué au champ de données.</span><span class="sxs-lookup"><span data-stu-id="77ccc-181">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="IsString">
      <MemberSignature Language="C#" Value="public bool IsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-182">Gets a value that indicates whether the data field type is a string type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-182">Gets a value that indicates whether the data field type is a string type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-183">
            <see langword="true" /> Si le type de champ de données est un type de chaîne ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-183">
              <see langword="true" /> if the data field type is a string type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsLongString" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-184">Gets a value that indicates the maximum length of data that can be stored in the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-184">Gets a value that indicates the maximum length of data that can be stored in the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-185">La longueur maximale des données qui peuvent être stockées dans le champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-185">The maximum length of data that can be stored in the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-186">Le <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-186">The <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property.</span></span> <span data-ttu-id="77ccc-187">Si un <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribut n’est pas appliqué au champ de données, le <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> propriété utilise le type de base de données pour récupérer la longueur maximale autorisée.</span><span class="sxs-lookup"><span data-stu-id="77ccc-187">If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property uses the database type to retrieve the maximum length allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" />
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-188">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-188">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-189">Objet qui représente le modèle de données auquel appartient ce champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-189">An object that represents the data model that this data field belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaModel" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-190">Gets the name of the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-190">Gets the name of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-191">Nom du champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-191">The name of the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.NullDisplayText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-192">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-192">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-193">La légende affichée pour un champ lorsque la valeur du champ est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-193">The caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-194">Le <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-194">The <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77ccc-195">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribut n’est pas trouvé, cette propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribut est appliqué pour récupérer les informations de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="77ccc-195">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public virtual string Prompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Prompt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prompt { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Prompt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-196">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-196">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-197">Une valeur qui peut être utilisée comme filigrane dans l’interface utilisateur qui est lié aux données dans la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-197">A value that can be used as a watermark in the UI that is bound to data in the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-198">A `null` ou chaîne vide peut être retournée.</span><span class="sxs-lookup"><span data-stu-id="77ccc-198">A `null` or empty string can be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77ccc-199">Cette propriété est définie par le <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribut dans la définition de la colonne dans la classe méta de l’entité de données.</span><span class="sxs-lookup"><span data-stu-id="77ccc-199">This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::ColumnProvider ^ Provider { System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-200">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-200">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-201">L’objet de fournisseur d’abstraction qui permet de générer le <see cref="T:System.Web.DynamicData.MetaColumn" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-201">The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequiredErrorMessage">
      <MemberSignature Language="C#" Value="public string RequiredErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequiredErrorMessage { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.RequiredErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-202">Gets the error message that is displayed when the data field requires a value but its value is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-202">Gets the error message that is displayed when the data field requires a value but its value is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-203">Le message d’erreur qui s’affiche lorsque le champ de données requiert une valeur mais sa valeur est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-203">The error message that is displayed when the data field requires a value but its value is empty.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetMetadata();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaColumn.ResetMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-204">Clears cached column metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-204">Clears cached column metadata.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-205">Les métadonnées de colonne sont informations qui est dérivée des attributs et qui est mis en cache pour les performances.</span><span class="sxs-lookup"><span data-stu-id="77ccc-205">The column metadata is information that is derived from attributes and that is cached for performance.</span></span> <span data-ttu-id="77ccc-206">Appel de cette méthode efface le cache des métadonnées pour cette colonne.</span><span class="sxs-lookup"><span data-stu-id="77ccc-206">Calling this method clears the metadata cache for this column.</span></span> <span data-ttu-id="77ccc-207">Le cache des métadonnées est reconstruit la prochaine fois que toutes les informations qui sont dérivées de métadonnées sont demandées.</span><span class="sxs-lookup"><span data-stu-id="77ccc-207">The metadata cache is rebuilt the next time any information that is derived from metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-208">Gets a value that indicates whether the data field should be displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-208">Gets a value that indicates whether the data field should be displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-209">
            <see langword="true" /> Si le champ de données doit être affiché ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-209">
              <see langword="true" /> if the data field should be displayed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-210">Le <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> propriété indique si un champ de données doit être affiché lorsqu’il est généré automatiquement par Dynamic Data ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="77ccc-210">The <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.</span></span> <span data-ttu-id="77ccc-211">Cette propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribut est appliqué au champ de données et retourne la valeur de la <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-211">This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77ccc-212">Si un <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribut n’est pas appliqué au champ de données, Dynamic Data utilise les règles suivantes pour déterminer s’il faut afficher la colonne :</span><span class="sxs-lookup"><span data-stu-id="77ccc-212">If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:</span></span>  
  
-   <span data-ttu-id="77ccc-213">Si un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribut est appliqué au champ de données, le champ de données s’affiche.</span><span class="sxs-lookup"><span data-stu-id="77ccc-213">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed.</span></span> <span data-ttu-id="77ccc-214">Cette règle remplace toutes les autres règles.</span><span class="sxs-lookup"><span data-stu-id="77ccc-214">This rule overrides all the other rules.</span></span>  
  
-   <span data-ttu-id="77ccc-215">Si la valeur de la <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> propriété est `true`, le champ de données n’est pas affiché.</span><span class="sxs-lookup"><span data-stu-id="77ccc-215">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="77ccc-216">Cela se produit parce que Dynamic Data gère les champs de clé étrangère d’une manière différente et pas en général affiche la valeur du champ de clé étrangère.</span><span class="sxs-lookup"><span data-stu-id="77ccc-216">This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.</span></span>  
  
-   <span data-ttu-id="77ccc-217">Si la valeur de la <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> propriété est `true`, le champ de données n’est pas affiché.</span><span class="sxs-lookup"><span data-stu-id="77ccc-217">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="77ccc-218">En général, les champs qui sont générés automatiquement dans la base de données ne contiennent pas les informations pertinentes.</span><span class="sxs-lookup"><span data-stu-id="77ccc-218">Typically fields that are automatically generated in the database do not contain relevant information.</span></span> <span data-ttu-id="77ccc-219">Assurez-vous que vous appliquez le <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribut au champ de données, si le champ de données doit être affiché.</span><span class="sxs-lookup"><span data-stu-id="77ccc-219">Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.</span></span>  
  
-   <span data-ttu-id="77ccc-220">Si la valeur de la <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> propriété est `true`, le champ de données n’est pas affiché.</span><span class="sxs-lookup"><span data-stu-id="77ccc-220">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      </Docs>
    </Member>
    <Member MemberName="ShortDisplayName">
      <MemberSignature Language="C#" Value="public virtual string ShortDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShortDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShortDisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ShortDisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-221">Gets the short name for the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-221">Gets the short name for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-222">Le nom court de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-222">The short name for the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-223">Cette propriété est fournie pour <xref:System.Web.UI.WebControls.GridView> contrôle et autres contrôles où un nom court est nécessaire car limitée espace d’en-tête de colonne.</span><span class="sxs-lookup"><span data-stu-id="77ccc-223">This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.SortExpression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-224">Gets the expression that is used to determine the sort order for the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-224">Gets the expression that is used to determine the sort order for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-225">L’expression qui est utilisée pour déterminer l’ordre de tri pour le champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-225">The expression that is used to determine the sort order for the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-226">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-226">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-227">Objet qui représente la table à laquelle appartient le champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-227">An object that represents the table that the data field belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Model" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-228">Gets the data field name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-228">Gets the data field name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77ccc-229">The data field name, which is the string representation of the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-229">The data field name, which is the string representation of the column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode TypeCode { TypeCode get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.TypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-230">Gets the type of the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-230">Gets the type of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-231">Type du champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-231">The type of the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-232">Le <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> valeur de propriété est dérivée de la valeur de la <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-232">The <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.UIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77ccc-233">Gets the name of the field template specified for the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-233">Gets the name of the field template specified for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77ccc-234">Le nom du modèle de champ spécifié pour le champ de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77ccc-234">The name of the field template specified for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ccc-235">Le <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propriété vérifie si un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribut est appliqué au champ de données et récupère la valeur de la <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="77ccc-235">The <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77ccc-236">Si un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribut n’est pas appliqué au champ de données, le <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propriété retourne une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="77ccc-236">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>