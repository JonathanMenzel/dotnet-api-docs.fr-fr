<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6dacb7a050b755bd275e866b6ef026770c73b4c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37608274" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente une identité de l'utilisateur authentifiée pour les services d'application cliente en utilisant l'authentification par formulaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fonctionnalité de services d’application cliente utilise cette classe pour représenter un utilisateur authentifié. Lorsque vous configurez votre application pour utiliser le client application services et authentification par formulaire, vous pouvez authentifier un utilisateur en appelant le `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> (méthode). Après l’authentification, vous pouvez récupérer une référence à le <xref:System.Web.ClientServices.ClientFormsIdentity> par le biais de l’instance la <xref:System.Security.Principal.IPrincipal.Identity%2A> propriété de la <xref:System.Security.Principal.IPrincipal> récupéré via la `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété. Pour plus d’informations, consultez [Services d’application cliente](~/docs/framework/common-client-technologies/client-application-services.md).  
  
 Vous accéderez généralement un <xref:System.Web.ClientServices.ClientFormsIdentity> de l’objet comme un <xref:System.Security.Principal.IIdentity> référence afin d’éviter une dépendance directe sur cette classe. Vous pouvez déterminer si un utilisateur est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> propriété de l’identité. Toutefois, l’utilisateur peut être authentifié pour Windows, mais pas pour les services d’application cliente. Pour déterminer si l’utilisateur est authentifié pour les services d’application cliente, vous devez également confirmer que le <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valeur de propriété est « ClientForms ».  
  
 Vous devez utiliser explicite <xref:System.Web.ClientServices.ClientFormsIdentity> référence pour appeler le <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> (méthode), ce qui n’est pas définie par le <xref:System.Security.Principal.IIdentity> interface.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette classe pour revalider un utilisateur silencieusement lorsque l’application quitte l’état hors connexion. Dans cet exemple, un <xref:System.Windows.Forms.CheckBox.CheckedChanged> Gestionnaire d’événements met à jour l’état hors connexion pour correspondre à la valeur de la case à cocher. Si l’utilisateur définit l’application à l’état en ligne, le Gestionnaire d’événements essaie de revalider l’utilisateur en appelant le <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> (méthode). Toutefois, si le serveur d’authentification n’est pas disponible, le Gestionnaire d’événements retourne l’application à l’état hors connexion.  
  
> [!NOTE]
>  La méthode <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> est fournie pour des raisons pratiques uniquement. Étant donné qu'elle n'a pas de valeur de retour, elle ne peut pas indiquer si la revalidation a échoué. La revalidation peut, par exemple, échouer si les informations d'identification de l'utilisateur ont été modifiées sur le serveur. Dans ce cas, vous souhaitez peut-être inclure du code qui valide explicitement les utilisateurs après l'échec d'un appel de service. Pour plus d’informations, consultez la section accès aux paramètres Web dans [procédure pas à pas : Services d’Application cliente à l’aide de](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'utilisateur authentifié.</param>
        <param name="password">Le mot de passe de l'utilisateur authentifié.</param>
        <param name="provider">Fournisseur d'appartenances utilisé pour authentifier l'utilisateur.</param>
        <param name="authenticationType">Le type d'authentification utilisé.</param>
        <param name="isAuthenticated">
          <see langword="true" /> si l'utilisateur a été authentifié ; sinon, <see langword="false" />.</param>
        <param name="authenticationCookies">Les cookies extraits du service d'authentification.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection des cookies extraite du service d'authentification.</summary>
        <value>Les cookies extraits du service d'authentification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété n’est pas destinée à utiliser dans votre code d’application. Vous ne pouvez pas modifier significativement les cookies extraits via cette propriété, et ils ne contiennent aucune information utile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type d'authentification utilisé pour authentifier l'utilisateur.</summary>
        <value>Le type d'authentification utilisé pour authentifier l'utilisateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous accéderez généralement un <xref:System.Web.ClientServices.ClientFormsIdentity> de l’objet comme un <xref:System.Security.Principal.IIdentity> référence afin d’éviter une dépendance directe sur cette classe. Vous pouvez déterminer si un utilisateur est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> propriété de l’identité. Toutefois, l’utilisateur peut être authentifié pour Windows, mais pas pour les services d’application cliente. Pour déterminer si l’utilisateur est authentifié pour les services d’application cliente, vous devez également confirmer que le <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valeur de propriété est « ClientForms ». Pour plus d’informations, consultez le <xref:System.Web.ClientServices.ClientFormsIdentity> vue d’ensemble de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété via un <xref:System.Security.Principal.IIdentity> référence pour déterminer si un utilisateur est actuellement authentifié pour les services d’application cliente. Cet exemple suppose que l’application est dans la configuration par défaut où les utilisateurs ne doivent pas se connecter à nouveau lorsque le cookie d’authentification expire. Sinon, le <xref:System.Net.WebException> peut indiquer que la connexion de l’utilisateur a expiré. Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libère les ressources utilisées par le <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez la méthode <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Web.ClientServices.ClientFormsIdentity>. La méthode <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> rend le <xref:System.Web.ClientServices.ClientFormsIdentity> inutilisable. Après avoir appelé <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Web.ClientServices.ClientFormsIdentity> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Web.ClientServices.ClientFormsIdentity> occupée. Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Web.ClientServices.ClientFormsIdentity>. Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Web.ClientServices.ClientFormsIdentity> de l'objet `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> et libère éventuellement les ressources managées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode). `Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`. <xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.  
  
 Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Web.ClientServices.ClientFormsIdentity> références. Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [nettoyage des Resources](~/docs/standard/garbage-collection/unmanaged.md) non managé et [substitution de la méthode Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'utilisateur a été authentifié.</summary>
        <value>
          <see langword="true" /> si l'utilisateur a été authentifié ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous accéderez généralement un <xref:System.Web.ClientServices.ClientFormsIdentity> de l’objet comme un <xref:System.Security.Principal.IIdentity> référence afin d’éviter une dépendance directe sur cette classe. Vous pouvez déterminer si un utilisateur est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> propriété de l’identité. Toutefois, l’utilisateur peut être authentifié pour Windows, mais pas pour les services d’application cliente. Pour déterminer si l’utilisateur est authentifié pour les services d’application cliente, vous devez également confirmer que le <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valeur de propriété est « ClientForms ». Pour plus d’informations, consultez le <xref:System.Web.ClientServices.ClientFormsIdentity> vue d’ensemble de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété via un <xref:System.Security.Principal.IIdentity> référence pour déterminer si un utilisateur est actuellement authentifié pour les services d’application cliente. Cet exemple suppose que l’application est dans la configuration par défaut où les utilisateurs ne doivent pas se connecter à nouveau lorsque le cookie d’authentification expire. Sinon, le <xref:System.Net.WebException> peut indiquer que la connexion de l’utilisateur a expiré. Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de l'utilisateur.</summary>
        <value>Nom de l'utilisateur.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le fournisseur d'appartenances qui est utilisé pour authentifier l'utilisateur.</summary>
        <value>Fournisseur d'appartenances qui est utilisé pour authentifier l'utilisateur.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Authentifie silencieusement l'utilisateur en utilisant des informations d'identification mises en cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous utilisez l’authentification par formulaire pour valider l’utilisateur actuel, le <xref:System.Web.ClientServices.ClientFormsIdentity> classe stocke les informations d’identification de l’utilisateur tant que l’application est en cours d’exécution. Toutefois, l’utilisateur est authentifié uniquement jusqu'à ce que le cookie d’authentification expire. Une fois que le cookie expire, l’utilisateur doit être revalidé pour accéder aux services de paramètres Web ou de rôles distants. Vous pouvez utiliser la **paramètres avancés pour les Services** boîte de dialogue pour configurer votre application pour revalider automatiquement l’utilisateur, comme décrit dans [Comment : configurer les Services d’Application cliente](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md). Toutefois, si vous configurez votre application pour honorer l’expiration du cookie, vous pouvez revalider par programme l’utilisateur en appelant le <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> (méthode). Cette méthode est également utile lors du passage du mode hors connexion en mode en ligne, car l’application a été arrêtée pendant qu’elle était hors connexion.  
  
> [!NOTE]
>  La méthode <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> est fournie pour des raisons pratiques uniquement. Étant donné qu'elle n'a pas de valeur de retour, elle ne peut pas indiquer si la revalidation a échoué. La revalidation peut, par exemple, échouer si les informations d'identification de l'utilisateur ont été modifiées sur le serveur. Dans ce cas, vous souhaitez peut-être inclure du code qui valide explicitement les utilisateurs après l'échec d'un appel de service. Pour plus d’informations, consultez la section accès aux paramètres Web dans [procédure pas à pas : Services d’Application cliente à l’aide de](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette méthode pour revalider un utilisateur silencieusement lorsque l’application quitte l’état hors connexion. Dans cet exemple, un <xref:System.Windows.Forms.CheckBox.CheckedChanged> Gestionnaire d’événements met à jour l’état hors connexion pour correspondre à la valeur de la case à cocher. Si l’utilisateur définit l’application à l’état en ligne, le Gestionnaire d’événements tente de revalider l’utilisateur. Toutefois, si le serveur d’authentification n’est pas disponible, le Gestionnaire d’événements retourne l’application à l’état hors connexion.  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>