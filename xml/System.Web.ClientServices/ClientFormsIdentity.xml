<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7a556-101">Représente une identité de l'utilisateur authentifiée pour les services d'application cliente en utilisant l'authentification par formulaire.</span><span class="sxs-lookup"><span data-stu-id="7a556-101">Represents a user identity authenticated for client application services by using forms authentication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-102">La fonctionnalité de services d’application cliente utilise cette classe pour représenter un utilisateur authentifié.</span><span class="sxs-lookup"><span data-stu-id="7a556-102">The client application services feature uses this class to represent an authenticated user.</span></span> <span data-ttu-id="7a556-103">Lorsque vous configurez votre application pour utiliser l’authentification de formulaires et les services de l’application client, vous pouvez authentifier un utilisateur en appelant le `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7a556-103">When you configure your application to use client application services and forms authentication, you can authenticate a user by calling the `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7a556-104">Après l’authentification, vous pouvez récupérer une référence à le <xref:System.Web.ClientServices.ClientFormsIdentity> par le biais de l’instance le <xref:System.Security.Principal.IPrincipal.Identity%2A> propriété de la <xref:System.Security.Principal.IPrincipal> récupérées via la `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="7a556-104">After authentication, you can retrieve a reference to the current <xref:System.Web.ClientServices.ClientFormsIdentity> instance through the <xref:System.Security.Principal.IPrincipal.Identity%2A> property of the <xref:System.Security.Principal.IPrincipal> retrieved through the `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7a556-105">Pour plus d’informations, consultez [Services d’application cliente](~/docs/framework/common-client-technologies/client-application-services.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-105">For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).</span></span>  
  
 <span data-ttu-id="7a556-106">Vous accéderez en général à un <xref:System.Web.ClientServices.ClientFormsIdentity> de l’objet en un <xref:System.Security.Principal.IIdentity> référence afin d’éviter une dépendance directe sur cette classe.</span><span class="sxs-lookup"><span data-stu-id="7a556-106">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="7a556-107">Vous pouvez déterminer si un utilisateur est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> propriété de l’identité.</span><span class="sxs-lookup"><span data-stu-id="7a556-107">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="7a556-108">Toutefois, l’utilisateur peut être authentifié pour Windows, mais pas pour les services d’application cliente.</span><span class="sxs-lookup"><span data-stu-id="7a556-108">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="7a556-109">Pour déterminer si l’utilisateur est authentifié pour les services d’application cliente, vous devez également vérifier que le <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valeur de propriété est « ClientForms ».</span><span class="sxs-lookup"><span data-stu-id="7a556-109">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span>  
  
 <span data-ttu-id="7a556-110">Vous devez utiliser explicite <xref:System.Web.ClientServices.ClientFormsIdentity> référence pour appeler le <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> (méthode), qui n’est pas défini par le <xref:System.Security.Principal.IIdentity> interface.</span><span class="sxs-lookup"><span data-stu-id="7a556-110">You must use an explicit <xref:System.Web.ClientServices.ClientFormsIdentity> reference to call the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method, which is not defined by the <xref:System.Security.Principal.IIdentity> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a556-111">L’exemple de code suivant montre comment utiliser cette classe pour revalider un utilisateur silencieusement lorsque l’application quitte l’état hors connexion.</span><span class="sxs-lookup"><span data-stu-id="7a556-111">The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="7a556-112">Dans cet exemple, un <xref:System.Windows.Forms.CheckBox.CheckedChanged> Gestionnaire d’événements met à jour l’état hors connexion pour correspondre à la valeur de la case à cocher.</span><span class="sxs-lookup"><span data-stu-id="7a556-112">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="7a556-113">Si l’utilisateur définit l’application à l’état en ligne, le Gestionnaire d’événements essaie de revalider l’utilisateur en appelant le <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7a556-113">If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="7a556-114">Toutefois, si le serveur d’authentification n’est pas disponible, le Gestionnaire d’événements retourne l’application à l’état hors connexion.</span><span class="sxs-lookup"><span data-stu-id="7a556-114">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a556-115">La méthode <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> est fournie pour des raisons pratiques uniquement.</span><span class="sxs-lookup"><span data-stu-id="7a556-115">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="7a556-116">Étant donné qu'elle n'a pas de valeur de retour, elle ne peut pas indiquer si la revalidation a échoué.</span><span class="sxs-lookup"><span data-stu-id="7a556-116">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="7a556-117">La revalidation peut, par exemple, échouer si les informations d'identification de l'utilisateur ont été modifiées sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="7a556-117">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="7a556-118">Dans ce cas, vous souhaitez peut-être inclure du code qui valide explicitement les utilisateurs après l'échec d'un appel de service.</span><span class="sxs-lookup"><span data-stu-id="7a556-118">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="7a556-119">Pour plus d’informations, consultez la section accès aux paramètres Web dans [procédure pas à pas : à l’aide de Services d’Application cliente](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-119">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7a556-120">Nom de l'utilisateur authentifié.</span><span class="sxs-lookup"><span data-stu-id="7a556-120">The name of the authenticated user.</span></span></param>
        <param name="password"><span data-ttu-id="7a556-121">Le mot de passe de l'utilisateur authentifié.</span><span class="sxs-lookup"><span data-stu-id="7a556-121">The password of the authenticated user.</span></span></param>
        <param name="provider"><span data-ttu-id="7a556-122">Fournisseur d'appartenances utilisé pour authentifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-122">The membership provider used to authenticate the user.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="7a556-123">Le type d'authentification utilisé.</span><span class="sxs-lookup"><span data-stu-id="7a556-123">The type of authentication that is used.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="7a556-124"><see langword="true" /> si l'utilisateur a été authentifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7a556-124"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></param>
        <param name="authenticationCookies"><span data-ttu-id="7a556-125">Les cookies extraits du service d'authentification.</span><span class="sxs-lookup"><span data-stu-id="7a556-125">The cookies retrieved from the authentication service.</span></span></param>
        <summary><span data-ttu-id="7a556-126">Initialise une nouvelle instance de la classe <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="7a556-126">Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a556-127">Obtient une collection des cookies extraite du service d'authentification.</span><span class="sxs-lookup"><span data-stu-id="7a556-127">Gets a collection of the cookies retrieved from the authentication service.</span></span></summary>
        <value><span data-ttu-id="7a556-128">Les cookies extraits du service d'authentification.</span><span class="sxs-lookup"><span data-stu-id="7a556-128">The cookies retrieved from the authentication service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-129">Cette propriété n’est pas conçue pour une utilisation dans votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="7a556-129">This property is not meant for use in your application code.</span></span> <span data-ttu-id="7a556-130">Vous ne pouvez pas modifier significativement les cookies extraits via cette propriété, et ils ne contiennent aucune information utile.</span><span class="sxs-lookup"><span data-stu-id="7a556-130">You cannot meaningfully modify the cookies retrieved through this property, and they contain no useful information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a556-131">Obtient le type d'authentification utilisé pour authentifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-131">Gets the type of authentication that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="7a556-132">Le type d'authentification utilisé pour authentifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-132">The type of authentication that is used to authenticate the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-133">Vous accéderez en général à un <xref:System.Web.ClientServices.ClientFormsIdentity> de l’objet en un <xref:System.Security.Principal.IIdentity> référence afin d’éviter une dépendance directe sur cette classe.</span><span class="sxs-lookup"><span data-stu-id="7a556-133">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="7a556-134">Vous pouvez déterminer si un utilisateur est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> propriété de l’identité.</span><span class="sxs-lookup"><span data-stu-id="7a556-134">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="7a556-135">Toutefois, l’utilisateur peut être authentifié pour Windows, mais pas pour les services d’application cliente.</span><span class="sxs-lookup"><span data-stu-id="7a556-135">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="7a556-136">Pour déterminer si l’utilisateur est authentifié pour les services d’application cliente, vous devez également vérifier que le <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valeur de propriété est « ClientForms ».</span><span class="sxs-lookup"><span data-stu-id="7a556-136">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="7a556-137">Pour plus d’informations, consultez le <xref:System.Web.ClientServices.ClientFormsIdentity> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="7a556-137">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a556-138">L’exemple de code suivant montre comment utiliser cette propriété via un <xref:System.Security.Principal.IIdentity> référence pour déterminer si un utilisateur est actuellement authentifié pour les services d’application cliente.</span><span class="sxs-lookup"><span data-stu-id="7a556-138">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="7a556-139">Cet exemple suppose que l’application est dans la configuration par défaut dans laquelle les utilisateurs ne sont pas requises pour vous connecter à nouveau lorsque le cookie d’authentification expire.</span><span class="sxs-lookup"><span data-stu-id="7a556-139">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="7a556-140">Dans le cas contraire, le <xref:System.Net.WebException> peut indiquer que la connexion de l’utilisateur a expiré.</span><span class="sxs-lookup"><span data-stu-id="7a556-140">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="7a556-141">Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-141">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7a556-142">Libère les ressources utilisées par le <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="7a556-142">Releases the resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a556-143">Libère toutes les ressources utilisées par <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="7a556-143">Releases all resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-144">Appelez la méthode <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Web.ClientServices.ClientFormsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="7a556-144">Call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> when you are finished using the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="7a556-145">La méthode <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> rend le <xref:System.Web.ClientServices.ClientFormsIdentity> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="7a556-145">The <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> method leaves the <xref:System.Web.ClientServices.ClientFormsIdentity> in an unusable state.</span></span> <span data-ttu-id="7a556-146">Après avoir appelé <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Web.ClientServices.ClientFormsIdentity> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Web.ClientServices.ClientFormsIdentity> occupée.</span><span class="sxs-lookup"><span data-stu-id="7a556-146">After calling <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, you must release all references to the <xref:System.Web.ClientServices.ClientFormsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Web.ClientServices.ClientFormsIdentity> was occupying.</span></span> <span data-ttu-id="7a556-147">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a556-148">Appelez toujours <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Web.ClientServices.ClientFormsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="7a556-148">Always call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="7a556-149">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Web.ClientServices.ClientFormsIdentity> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="7a556-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Web.ClientServices.ClientFormsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7a556-150"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="7a556-150"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="7a556-151">Libère les ressources non managées utilisées par <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="7a556-151">Releases the unmanaged resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-152">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7a556-152">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7a556-153">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="7a556-153">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7a556-154"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="7a556-154"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7a556-155">Lorsque le `disposing` paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Web.ClientServices.ClientFormsIdentity> références.</span><span class="sxs-lookup"><span data-stu-id="7a556-155">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Web.ClientServices.ClientFormsIdentity> references.</span></span> <span data-ttu-id="7a556-156">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="7a556-156">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7a556-157"><see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="7a556-157"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="7a556-158">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="7a556-158">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="7a556-159">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-159">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="7a556-160">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="7a556-160">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a556-161">Obtient une valeur indiquant si l'utilisateur a été authentifié.</span><span class="sxs-lookup"><span data-stu-id="7a556-161">Gets a value indicating whether the user has been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="7a556-162"><see langword="true" /> si l'utilisateur a été authentifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7a556-162"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-163">Vous accéderez en général à un <xref:System.Web.ClientServices.ClientFormsIdentity> de l’objet en un <xref:System.Security.Principal.IIdentity> référence afin d’éviter une dépendance directe sur cette classe.</span><span class="sxs-lookup"><span data-stu-id="7a556-163">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="7a556-164">Vous pouvez déterminer si un utilisateur est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> propriété de l’identité.</span><span class="sxs-lookup"><span data-stu-id="7a556-164">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="7a556-165">Toutefois, l’utilisateur peut être authentifié pour Windows, mais pas pour les services d’application cliente.</span><span class="sxs-lookup"><span data-stu-id="7a556-165">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="7a556-166">Pour déterminer si l’utilisateur est authentifié pour les services d’application cliente, vous devez également vérifier que le <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> valeur de propriété est « ClientForms ».</span><span class="sxs-lookup"><span data-stu-id="7a556-166">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="7a556-167">Pour plus d’informations, consultez le <xref:System.Web.ClientServices.ClientFormsIdentity> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="7a556-167">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a556-168">L’exemple de code suivant montre comment utiliser cette propriété via un <xref:System.Security.Principal.IIdentity> référence pour déterminer si un utilisateur est actuellement authentifié pour les services d’application cliente.</span><span class="sxs-lookup"><span data-stu-id="7a556-168">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="7a556-169">Cet exemple suppose que l’application est dans la configuration par défaut dans laquelle les utilisateurs ne sont pas requises pour vous connecter à nouveau lorsque le cookie d’authentification expire.</span><span class="sxs-lookup"><span data-stu-id="7a556-169">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="7a556-170">Dans le cas contraire, le <xref:System.Net.WebException> peut indiquer que la connexion de l’utilisateur a expiré.</span><span class="sxs-lookup"><span data-stu-id="7a556-170">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="7a556-171">Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-171">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a556-172">Obtient le nom de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-172">Gets the name of the user.</span></span></summary>
        <value><span data-ttu-id="7a556-173">Nom de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-173">The name of the user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a556-174">Obtient le fournisseur d'appartenances qui est utilisé pour authentifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-174">Gets the membership provider that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="7a556-175">Fournisseur d'appartenances qui est utilisé pour authentifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-175">The membership provider that is used to authenticate the user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a556-176">Authentifie silencieusement l'utilisateur en utilisant des informations d'identification mises en cache.</span><span class="sxs-lookup"><span data-stu-id="7a556-176">Silently authenticates the user by using cached credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a556-177">Lorsque vous utilisez l’authentification par formulaire pour valider l’utilisateur actuel, la <xref:System.Web.ClientServices.ClientFormsIdentity> classe stocke les informations d’identification de l’utilisateur tant que l’application est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="7a556-177">When you use forms authentication to validate the current user, the <xref:System.Web.ClientServices.ClientFormsIdentity> class stores the user credentials as long as the application is running.</span></span> <span data-ttu-id="7a556-178">Toutefois, l’utilisateur est authentifié uniquement les jusqu'à ce que le cookie d’authentification expire.</span><span class="sxs-lookup"><span data-stu-id="7a556-178">However, the user is only authenticated until the authentication cookie expires.</span></span> <span data-ttu-id="7a556-179">Une fois que le cookie expire, l’utilisateur doit être revalidé pour accéder aux rôles distants ou des services de paramètres Web.</span><span class="sxs-lookup"><span data-stu-id="7a556-179">After the cookie expires, the user must be revalidated to access the remote roles or Web settings services.</span></span> <span data-ttu-id="7a556-180">Vous pouvez utiliser la **paramètres avancés pour les Services** boîte de dialogue pour configurer votre application pour revalider automatiquement l’utilisateur, comme décrit dans [Comment : configurer les Services d’Application cliente](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-180">You can use the **Advanced Settings for Services** dialog box to configure your application to automatically revalidate the user, as described in [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span> <span data-ttu-id="7a556-181">Toutefois, si vous configurez votre application pour honorer l’expiration du cookie, vous pouvez revalider par programme l’utilisateur en appelant le <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7a556-181">However, if you configure your application to honor the cookie expiration, you can programmatically revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="7a556-182">Cette méthode est également utile lors du passage du mode hors connexion en mode en ligne, car l’application a été arrêtée pendant qu’elle était hors connexion.</span><span class="sxs-lookup"><span data-stu-id="7a556-182">This method is also useful when switching from offline mode to online mode, because the application may have been shut down while offline.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a556-183">La méthode <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> est fournie pour des raisons pratiques uniquement.</span><span class="sxs-lookup"><span data-stu-id="7a556-183">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="7a556-184">Étant donné qu'elle n'a pas de valeur de retour, elle ne peut pas indiquer si la revalidation a échoué.</span><span class="sxs-lookup"><span data-stu-id="7a556-184">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="7a556-185">La revalidation peut, par exemple, échouer si les informations d'identification de l'utilisateur ont été modifiées sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="7a556-185">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="7a556-186">Dans ce cas, vous souhaitez peut-être inclure du code qui valide explicitement les utilisateurs après l'échec d'un appel de service.</span><span class="sxs-lookup"><span data-stu-id="7a556-186">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="7a556-187">Pour plus d’informations, consultez la section accès aux paramètres Web dans [procédure pas à pas : à l’aide de Services d’Application cliente](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span><span class="sxs-lookup"><span data-stu-id="7a556-187">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a556-188">L’exemple de code suivant montre comment utiliser cette méthode pour revalider un utilisateur silencieusement lorsque l’application quitte l’état hors connexion.</span><span class="sxs-lookup"><span data-stu-id="7a556-188">The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="7a556-189">Dans cet exemple, un <xref:System.Windows.Forms.CheckBox.CheckedChanged> Gestionnaire d’événements met à jour l’état hors connexion pour correspondre à la valeur de la case à cocher.</span><span class="sxs-lookup"><span data-stu-id="7a556-189">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="7a556-190">Si l’utilisateur définit l’application à l’état en ligne, le Gestionnaire d’événements tente de revalider l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7a556-190">If the user sets the application to the online state, the event handler attempts to revalidate the user.</span></span> <span data-ttu-id="7a556-191">Toutefois, si le serveur d’authentification n’est pas disponible, le Gestionnaire d’événements retourne l’application à l’état hors connexion.</span><span class="sxs-lookup"><span data-stu-id="7a556-191">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>