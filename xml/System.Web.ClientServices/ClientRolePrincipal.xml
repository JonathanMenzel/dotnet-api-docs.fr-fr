<Type Name="ClientRolePrincipal" FullName="System.Web.ClientServices.ClientRolePrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4dce894ed9bf8309b705fa0865a24d8482b7226" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientRolePrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRolePrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientRolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRolePrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRolePrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClientRolePrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente des informations de sécurité pour les services d'application cliente, qui incluent des informations de rôle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous validez un utilisateur dans les services d’application cliente, le <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> ou <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> définit le `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété à une instance de cette classe. Le <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> initialise le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété vers une nouvelle instance de la <xref:System.Web.ClientServices.ClientFormsIdentity> classe. Le <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> initialise le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété le <xref:System.Security.Principal.WindowsIdentity> objet retourné par la `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> (méthode).  
  
 Vous n'accéderez pas en général à cette classe directement. En règle générale, vous appellerez la <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Security.Principal.IPrincipal> retourné par la `static` <xref:System.Threading.Thread.CurrentPrincipal%2A> propriété. Toutefois, vous pouvez effectuer un cast le <xref:System.Threading.Thread.CurrentPrincipal%2A> valeur de propriété à un <xref:System.Web.ClientServices.ClientRolePrincipal> référence pour appeler le <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> méthode explicitement, comme illustré dans la section exemple.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette classe pour afficher un bouton uniquement lorsque l’utilisateur est dans le rôle « manager ». Cet exemple nécessite un <xref:System.Windows.Forms.Button> nommé `managerOnlyButton` avec une initiale <xref:System.Windows.Forms.Control.Visible%2A> valeur de propriété `false`.  
  
 [!code-csharp[ClientApplicationServices#313](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#313)]
 [!code-vb[ClientApplicationServices#313](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#313)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
    <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
    <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientRolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.ClientServices.ClientRolePrincipal" Usage="new System.Web.ClientServices.ClientRolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Représente l'utilisateur en cours.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété est initialisée avec la valeur de la `identity` paramètre.  
  
 Lorsque vous validez un utilisateur dans les services d’application cliente, le <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> ou <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> définit le `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété à une instance de cette classe. Le <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> initialise le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété vers une nouvelle instance de la <xref:System.Web.ClientServices.ClientFormsIdentity> classe. Le <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> initialise le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété le <xref:System.Security.Principal.WindowsIdentity> objet retourné par la `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
        <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.ClientServices.ClientRolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identité de sécurité associée au <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />.</summary>
        <value>Représente l'utilisateur en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous validez un utilisateur dans les services d’application cliente, le <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> ou <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> définit le `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété à une instance de cette classe. Le <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> initialise le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété vers une nouvelle instance de la <xref:System.Web.ClientServices.ClientFormsIdentity> classe. Le <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> initialise le <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriété le <xref:System.Security.Principal.WindowsIdentity> objet retourné par la `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
        <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="clientRolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Le rôle à vérifier.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur représenté par le <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> figure dans le rôle spécifié.</summary>
        <returns>
          <see langword="true" /> si l'utilisateur est dans le rôle spécifié ; <see langword="false" /> si l'utilisateur n'est pas dans le rôle spécifié ou n'est pas authentifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous appellerez la <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Security.Principal.IPrincipal> retourné par la `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété. Toutefois, vous pouvez effectuer un cast du <xref:System.Threading.Thread.CurrentPrincipal%2A> valeur de propriété à un <xref:System.Web.ClientServices.ClientRolePrincipal> référence pour appeler cette méthode explicitement, comme illustré dans la section exemple.  
  
 La méthode <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> retourne toujours la valeur `false` si la connexion de l'utilisateur a expiré. Cela se produit si votre application appelle la <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode une fois peu après l’authentification. Si votre application doit récupérer des rôles d'utilisateur à d'autres moments, vous souhaitez peut-être ajouter du code pour revalider les utilisateurs dont la connexion a expiré. Si des rôles sont attribués à tous les utilisateurs valides, vous pouvez déterminer si la connexion a expiré en appelant la méthode <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=nameWithType> . Si aucun rôle n'est retourné, la connexion a expiré. Pour obtenir un exemple de cette fonctionnalité, consultez la méthode <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> . Cette fonctionnalité n'est requise que si vous avez sélectionné l'option **Imposer aux utilisateurs de se reconnecter chaque fois que le cookie du serveur expire** dans la configuration de votre application. Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette méthode pour afficher un bouton uniquement lorsque l’utilisateur est dans le rôle « manager ». Cet exemple nécessite un <xref:System.Windows.Forms.Button> nommé `managerOnlyButton` avec une initiale <xref:System.Windows.Forms.Control.Visible%2A> valeur de propriété `false`.  
  
 [!code-csharp[ClientApplicationServices#313](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#313)]
 [!code-vb[ClientApplicationServices#313](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#313)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>