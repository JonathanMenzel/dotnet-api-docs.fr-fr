<Type Name="Renewing" FullName="System.IdentityModel.Protocols.WSTrust.Renewing">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87cd781ae399c63ddd609726cd92bf8e3560da2f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36483077" /></Metadata><TypeSignature Language="C#" Value="public class Renewing" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Renewing extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.Renewing" />
  <TypeSignature Language="VB.NET" Value="Public Class Renewing" />
  <TypeSignature Language="C++ CLI" Value="public ref class Renewing" />
  <TypeSignature Language="F#" Value="type Renewing = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente l'élément wst:Renewing dans une demande de renouvellement WS-Trust.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet élément facultatif indique à l’émetteur du jeton que le jeton demandé peut être renouvelé si l’attribut autoriser a la valeur true et que le jeton peut être renouvelé après son expiration si l’attribut OK a la valeur true. Ces attributs sont représentés par le <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> et <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> propriétés respectivement.  
  
 Pour plus d’informations sur l’élément représenté par cette classe, consultez la version de la spécification WS-Trust qui s’applique à votre scénario.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Renewing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.Renewing.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Renewing();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /><see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> avec des valeurs de propriété par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés pour le nouveau <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A>|`true`|  
|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A>|`false`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Renewing (bool allowRenewal, bool okForRenewalAfterExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool allowRenewal, bool okForRenewalAfterExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowRenewal As Boolean, okForRenewalAfterExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Renewing(bool allowRenewal, bool okForRenewalAfterExpiration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.Renewing : bool * bool -&gt; System.IdentityModel.Protocols.WSTrust.Renewing" Usage="new System.IdentityModel.Protocols.WSTrust.Renewing (allowRenewal, okForRenewalAfterExpiration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowRenewal" Type="System.Boolean" />
        <Parameter Name="okForRenewalAfterExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowRenewal"><see langword="true" /> si le renouvellement est autorisé ; sinon, <see langword="false" />.</param>
        <param name="okForRenewalAfterExpiration"><see langword="true" /> si le jeton demandé peut être remplacé après son expiration ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /><see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> avec les valeurs spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés du nouveau <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instance sont définies en fonction de la valeur des paramètres.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRenewal">
      <MemberSignature Language="C#" Value="public bool AllowRenewal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRenewal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRenewal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRenewal : bool with get, set" Usage="System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le jeton peut être renouvelé.</summary>
        <value><see langword="true" /> si le renouvellement est autorisé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’attribut de l’autoriser. Cet attribut facultatif est utilisé pour demander un jeton renouvelable. La valeur par défaut est `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OkForRenewalAfterExpiration">
      <MemberSignature Language="C#" Value="public bool OkForRenewalAfterExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OkForRenewalAfterExpiration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property OkForRenewalAfterExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OkForRenewalAfterExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OkForRenewalAfterExpiration : bool with get, set" Usage="System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le jeton peut être remplacé après expiration.</summary>
        <value><see langword="true" /> si le jeton demandé peut être remplacé après son expiration ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’attribut OK. Cet attribut facultatif est utilisé pour indiquer qu’un jeton renouvelable est acceptable si la durée demandée dépasse la limite du service d’émission. Autrement dit, si `true`, puis le jeton peut être renouvelé après son expiration. La valeur par défaut est `false` pour des raisons de sécurité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>