<Type Name="RequestSecurityToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15cacdefb968d00be6f9cd663bf1753047c6b117" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RequestSecurityToken : System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestSecurityToken extends System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestSecurityToken&#xA;Inherits WSTrustMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestSecurityToken : System::IdentityModel::Protocols::WSTrust::WSTrustMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Protocols.WSTrust.WSTrustMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente l'élément wst:RequestSecurityToken (RST), qui est utilisé pour demander un jeton de sécurité.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’élément WST : RequestSecurityToken (message) contient les paramètres et les propriétés utilisées pour demander un jeton de sécurité à partir d’un service de jeton de sécurité (STS). Le message (ou élément) est abrégé en tant que RST. La <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> classe contient des propriétés qui représentent les éléments du RST. Un RST peut former une demande qui correspond à une des liaisons de requête définies par WS-Trust ; par exemple, la liaison d’émission, la liaison de renouvellement, la liaison de la validation ou la liaison annulation. Un grand nombre des propriétés dans la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> classe correspondent aux éléments qui sont présents uniquement dans des types spécifiques de requêtes, comme défini par ces liaisons. En fonction du type de demande un particulier <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> objet représente ou les paramètres présents dans la demande spécifique qu’elle représente, certaines propriétés de l’objet peuvent être `null`.  
  
 Le STS retourne une réponse à la demande dans un message qui contient un élément wst:RequestSecurityTokenResponse (RSTR). Ce message est représenté par la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse> classe.  
  
 [!INCLUDE[wif_wstrust_ref](~/includes/wif-wstrust-ref-md.md)]  
  
   
  
## Examples  
 L’exemple de code qui est utilisé dans cette rubrique est extraite la `Custom Token` exemple. Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web) et il inclut une implémentation de STS passif qui est capable de fournir un jeton SWT. STS est implémentée par une classe dérivée de <xref:System.IdentityModel.SecurityTokenService>. Un grand nombre des méthodes de la <xref:System.IdentityModel.SecurityTokenService> classe sont appelées à partir de sa prise de pipeline d’émission de jeton un <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> leurs paramètres de l’objet comme si un seul. Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
 L'exemple de code suivant illustre une implémentation de la méthode <xref:System.IdentityModel.SecurityTokenService.GetScope%2A?displayProperty=nameWithType>. La méthode prend un <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> en tant qu’un de ses paramètres et les propriétés de ce paramètre sont utilisées pour définir des propriétés sur le <xref:System.IdentityModel.Scope> objet qui est retourné par la méthode.  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> propriété et <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A> les propriétés sont initialisées à `null`.  
  
 Ce constructeur est généralement utilisé par le récepteur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Chaîne qui contient l'URI de type de requête.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> avec le type de requête spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A> est initialisée à `null`.  
  
 Ce constructeur est généralement utilisé par l’expéditeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType, string keyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType, string keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String, keyType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType, System::String ^ keyType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="keyType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Chaîne qui contient l'URI de type de requête.</param>
        <param name="keyType">Chaîne qui contient l'URI de type de clé. Il doit s'agir d'une des constantes définies par le classe <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> avec le type de requête spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique la valeur initiale de la <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> propriété des valeurs spécifiques de le `keyType` paramètre.  
  
|Paramètre `keyType`|Propriété <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A>|  
|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Asymmetric>|1024|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer>|0|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Symmetric>|256|  
  
 Ce constructeur est généralement utilisé par l’expéditeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActAs">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ActAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ActAs" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberSignature Language="VB.NET" Value="Public Property ActAs As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ActAs { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton de sécurité pour l'identité avec laquelle le demandeur tente d'agir.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui représente l'identité que le demandeur tente d'endosser. Peut être <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:ActAs. Cet élément facultatif prend en charge les scénarios de délégation et indique que le demandeur est la demande d’agir en tant qu’identité d’un autre. Cet élément est introduit dans WS-Trust 1.4. Cette propriété est `null` dans les demandes qui n’incluent pas de délégation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalContext As AdditionalContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ AdditionalContext { System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ get(); void set(System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.AdditionalContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations de contexte supplémentaires pour la demande.</summary>
        <value>
          <see cref="T:System.IdentityModel.Protocols.WSTrust.AdditionalContext" /> qui contient les informations de contexte supplémentaires pour la demande. Peut être <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément auth:AdditionalContext. Cet élément facultatif fournit des informations supplémentaires que le service de jeton de sécurité (STS) pouvez utiliser dans le processus d’émission de jeton.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement CancelTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement CancelTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ CancelTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton à annuler dans une demande d'annulation WS-Trust.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui contient le jeton à annuler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu d’un élément wst:CancelTarget. Cet élément contient les informations sur le jeton d’annulation dans une demande d’annulation de WS-Trust.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Claims As RequestClaimCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ Claims { System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestClaimCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les types de revendication demandés par le client (demandeur).</summary>
        <value>
          <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" /> contenant les revendications demandées. La valeur par défaut est une collection vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:Claims. Cet élément facultatif demande l’ensemble des types de revendication spécifiques demandées par le client.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedKeyAlgorithm">
      <MemberSignature Language="C#" Value="public string ComputedKeyAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComputedKeyAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ComputedKeyAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ComputedKeyAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un URI qui représente l'algorithme souhaité à utiliser lorsque des clés calculées sont utilisées pour les jetons émis.</summary>
        <value>Chaîne qui contient l'URI qui représente l'algorithme de clé calculé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente l’élément wst:ComputedKeyAlgorithm. Cet élément facultatif spécifie un URI qui représente l’algorithme de votre choix à utiliser lors de la clés calculées sont utilisées pour les jetons émis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegatable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Delegatable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Delegatable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberSignature Language="VB.NET" Value="Public Property Delegatable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Delegatable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le jeton émis est marqué comme pouvant être délégué.</summary>
        <value>
          <see langword="true" /> si le jeton émis peut être délégué ; sinon, <see langword="false" />. Peut être <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de la wst : élément délégable. Cet élément facultatif indique que le jeton retourné peut être délégable vers un autre tiers. Cet élément est introduit dans WS-Trust 1.4. Cette propriété conjointement avec la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateTo">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement DelegateTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement DelegateTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateTo As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ DelegateTo { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'identité à laquelle le jeton émis doit être délégué.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui représente l'identité pour laquelle le jeton émis doit être délégué. Peut être <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:DelegateTo. Cet élément facultatif indique que le jeton émis être déléguée à l’identité spécifiée. Cet élément est introduit dans WS-Trust 1.4. Cette propriété est `null` dans les demandes qui n’incluent pas de délégation. Cette propriété est utilisée conjointement avec la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement Encryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement Encryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Encryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ Encryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations relatives au jeton et à la clé à utiliser lors du chiffrement.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui contient les informations relatives au chiffrement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:Encryption. Cet élément facultatif indique que les secrets retournés dans les jetons de sécurité émis doivent être chiffrées pour le jeton spécifié.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forwardable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Forwardable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Forwardable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberSignature Language="VB.NET" Value="Public Property Forwardable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Forwardable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le jeton émis est marqué comme pouvant être transféré.</summary>
        <value>
          <see langword="true" /> si le jeton émis peut être transféré ; sinon, <see langword="false" />. Peut être <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de la wst : élément Forwardable. Cet élément facultatif indique si le jeton retourné est lié à l’ordinateur ou le service du demandeur (indiqué par une `false` valeur). Cet élément est introduit dans WS-Trust 1.4. Cette propriété conjointement avec la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As EndpointReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::EndpointReference ^ Issuer { System::IdentityModel::Protocols::WSTrust::EndpointReference ^ get(); void set(System::IdentityModel::Protocols::WSTrust::EndpointReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.EndpointReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'émetteur du jeton wst:OnBehalfOf.</summary>
        <value>
          <see cref="T:System.ServiceModel.EndpointAddress" /> qui contient l'adresse de l'émetteur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:Issuer. Cet élément facultatif identifie l’émetteur du jeton qui est spécifié dans l’élément wst:OnBehalfOf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBehalfOf">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberSignature Language="VB.NET" Value="Public Property OnBehalfOf As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ OnBehalfOf { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton de l'identité pour laquelle la demande est faite.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui contient le jeton de l'identité pour lequel la demande est formulée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:OnBehalfOf. Cet élément facultatif indique que le demandeur est la demande pour le compte d’une autre identité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Participants">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Participants Participants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Participants Participants" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberSignature Language="VB.NET" Value="Public Property Participants As Participants" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Participants ^ Participants { System::IdentityModel::Protocols::WSTrust::Participants ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Participants ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Participants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les participants qui sont autorisés à utiliser le jeton émis.</summary>
        <value>
          <see cref="T:System.IdentityModel.Protocols.WSTrust.Participants" /> qui contient les participants qui sont autorisés à utiliser le jeton émis.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:Participants. Cet élément facultatif identifie les autres participants qui sont autorisés à utiliser le jeton.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProofEncryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ProofEncryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ProofEncryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton à utiliser pour chiffrer le jeton de preuve.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui contient le jeton.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:ProofEncryption. Cet élément facultatif contient le jeton à utiliser pour chiffrer la clé de vérification.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewing">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Renewing Renewing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Renewing Renewing" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberSignature Language="VB.NET" Value="Public Property Renewing As Renewing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Renewing ^ Renewing { System::IdentityModel::Protocols::WSTrust::Renewing ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Renewing ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Renewing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la sémantique de renouvellement pour une demande de renouvellement WS-Trust.</summary>
        <value>Retourne <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> qui contient la sémantique de renouvellement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de la wst : élément de renouvellement. Cet élément facultatif spécifie la sémantique de renouvellement pour une demande de renouvellement WS-Trust.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement RenewTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement RenewTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ RenewTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton à renouveler dans une demande de renouvellement WS-Trust.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui contient le jeton à renouveler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu d’un élément WST : RenewTarget. Cet élément contient les informations sur le jeton doit être renouvelé dans un WS-Trust renouveler la demande.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryParameters">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property SecondaryParameters As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ SecondaryParameters { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les paramètres dont le demandeur n'est pas le créateur.</summary>
        <value>
          <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> qui contient des paramètres secondaires pour la demande ; autrement dit, des paramètres dont le demandeur n'est pas le créateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu d’un élément wst:SecondaryParameters. Cet élément facultatif contient les paramètres pour lesquels le demandeur n’est pas l’expéditeur. Un STS peut choisir d’utiliser les valeurs figurant dans cet élément en fonction de sa stratégie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ValidateTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton à valider dans une demande de validation WS-Trust.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> qui contient le jeton à valider.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu d’un élément wst:ValidateTarget. Cet élément contient les informations sur le jeton à valider dans un WS-Trust confirmer la demande.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>