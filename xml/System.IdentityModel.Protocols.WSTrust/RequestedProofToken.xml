<Type Name="RequestedProofToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestedProofToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e359d0e5798d3d1a4447bbfdb11e9f109d39ca92" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39064869" /></Metadata><TypeSignature Language="C#" Value="public class RequestedProofToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestedProofToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestedProofToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestedProofToken" />
  <TypeSignature Language="F#" Value="type RequestedProofToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente le contenu d'un élément wst:RequestedProofToken.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le contenu d’un élément WST : RequestedProofToken peut être une clé ou une clé chiffrée en texte clair. Dans les deux cas, le <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A> propriété contient la clé. Si le jeton de sécurité est un jeton standard, comme un SCT, sa clé de session sera le matériel qui est les données chiffré. Lorsque le WST : RequestedProofToken contient uniquement un élément wst:ComputedKey comme dans le cas d’entropie combinée, la <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A> propriété conserve son contenu.  
  
 Pour plus d’informations sur l’élément représenté par cette classe, consultez la version de la spécification WS-Trust qui s’applique à votre scénario.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (byte[] secret);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] secret) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (secret As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(cli::array &lt;System::Byte&gt; ^ secret);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : byte[] -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken secret" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="secret" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="secret">Tableau d'objet <see cref="T:System.Byte" /> qui contient le matériel de clé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" /> à l'aide du matériel de clé spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur lorsque la clé est du texte brut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (System.IdentityModel.Protocols.WSTrust.ProtectedKey protectedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Protocols.WSTrust.ProtectedKey protectedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(System::IdentityModel::Protocols::WSTrust::ProtectedKey ^ protectedKey);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : System.IdentityModel.Protocols.WSTrust.ProtectedKey -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken protectedKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectedKey" Type="System.IdentityModel.Protocols.WSTrust.ProtectedKey" />
      </Parameters>
      <Docs>
        <param name="protectedKey"><see cref="T:System.IdentityModel.Protocols.WSTrust.ProtectedKey" /> qui représente la clé, qui peut être un secret binaire ou une clé chiffrée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" /> à l'aide de l'objet <see cref="T:System.IdentityModel.Protocols.WSTrust.ProtectedKey" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="protectedKey" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (string computedKeyAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string computedKeyAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (computedKeyAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(System::String ^ computedKeyAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : string -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken computedKeyAlgorithm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="computedKeyAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="computedKeyAlgorithm">Chaîne qui contient un URI qui indique l'algorithme utilisé pour calculer la clé de session dans le cas d'entropie combinée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" /> à l'aide de l'algorithme de la clé calculée spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur dans le cas d’entropie combiné pour spécifier l’algorithme utilisé pour calculer la clé de session.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="computedKeyAlgorithm" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] secret, class System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (secret As Byte(), wrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(cli::array &lt;System::Byte&gt; ^ secret, System::IdentityModel::Tokens::EncryptingCredentials ^ wrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : byte[] * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken (secret, wrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="secret" Type="System.Byte[]" />
        <Parameter Name="wrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="secret">Tableau d'objet <see cref="T:System.Byte" /> qui contient le matériel de clé.</param>
        <param name="wrappingCredentials"><see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> qui représente les informations d'identification utilisées pour chiffrer le matériel de clé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" /> à l'aide du matériel de clé et des informations d'identification de chiffrement spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur lorsque la clé est chiffrée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedKeyAlgorithm">
      <MemberSignature Language="C#" Value="public string ComputedKeyAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComputedKeyAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComputedKeyAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ComputedKeyAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComputedKeyAlgorithm : string" Usage="System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'algorithme de clé calculé utilisé pour calculer la clé de session dans le cas d'entropie combiné.</summary>
        <value>Chaîne qui contient un URI qui indique l'algorithme de clé calculé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément wst:ComputedKey. Cet élément contient un URI qui indique l’algorithme de clé calculé utilisé lorsque les clés doivent être calculées ; par exemple, dans le cas d’entropie combiné lorsque le demandeur et l’émetteur spécifient entropie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.ProtectedKey ProtectedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.ProtectedKey ProtectedKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedKey As ProtectedKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::ProtectedKey ^ ProtectedKey { System::IdentityModel::Protocols::WSTrust::ProtectedKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtectedKey : System.IdentityModel.Protocols.WSTrust.ProtectedKey" Usage="System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.ProtectedKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la clé lorsque l'élément wst:RequestedProofToken contient une clé.</summary>
        <value><see cref="T:System.IdentityModel.Protocols.WSTrust.ProtectedKey" /> qui représente la clé, qui peut être chiffrée ou en texte clair.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente le contenu de l’élément WST : RequestedProofToken lorsque l’élément contient une clé (plutôt qu’un wst:ComputedKeyElement).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>