<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyContainerPermissionAccessEntryEnumerator.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac566f862bbfa6c0776208bb1fde780133d2c230622.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66f862bbfa6c0776208bb1fde780133d2c230622</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Represents the enumerator for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> objects in a <ph id="ph2">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /&gt;</ph>.</source>
          <target state="translated">Représente l'énumérateur des objets <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> d'une <ph id="ph2">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Enumerators allow only reading the data in the collection.</source>
          <target state="translated">Les énumérateurs permettent uniquement de lire les données dans la collection.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs ne peuvent pas être utilisés pour modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> méthode Replace également l’énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">À cette position, appelant le <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propriété lève une exception.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Par conséquent, vous devez appeler la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> méthode pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de la <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Une fois la collection terminée, l'énumérateur est placé après le dernier élément de la collection et l'appel à <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> retourne la valeur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, l’appel <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>To reset <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour réinitialiser <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> au premier élément de la collection, appelez <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> suivi par un appel à <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> lève une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">Si la collection est modifiée entre l’appel <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> retourne l’élément auquel il est actuellement défini, même si l’énumérateur est déjà invalidé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>Gets the current entry in the collection.</source>
          <target state="translated">Obtient l'entrée en cours dans la collection.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> object in the collection.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> en cours dans la collection.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>When the enumerator is created, it does not point to an object, so the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Lorsque l’énumérateur est créé, il ne pointe pas vers un objet, donc la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propriété n’est pas valide et lèvera une exception si elle est accessible.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.</source>
          <target state="translated">Vous devez d’abord appeler la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> méthode pour positionner le curseur sur le premier objet dans la collection.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>Getting the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property multiple times with no intervening calls to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object each time.</source>
          <target state="translated">Obtention de la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propriété plusieurs fois avec sans appels intermédiaires à <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> retournera le même <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> objet chaque fois.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> property is accessed before first calling the <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> method.</source>
          <target state="translated">L'accès à la propriété <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> a lieu avant l'appel à la méthode <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The cursor is located before the first object in the collection.</source>
          <target state="translated">Le curseur se trouve avant le premier objet de la collection.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> property is accessed after a call to the <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>, which indicates that the cursor is located after the last object in the collection.</source>
          <target state="translated">L'accès à la propriété <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> a lieu après qu'un appel à la méthode <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> a retourné <ph id="ph3">&lt;see langword="false" /&gt;</ph>, ce qui indique que le curseur se trouve après le dernier objet de la collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>Moves to the next element in the collection.</source>
          <target state="translated">Passe à l'élément suivant dans la collection.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si l'énumérateur a dépassé la fin de la collection.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> immediately if there are no objects in the collection.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> retourne de la méthode <ph id="ph2">`false`</ph> immédiatement s’il y a aucun objet dans la collection.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> Retourne <ph id="ph2">`true`</ph> jusqu'à ce qu’il a atteint la fin de la collection.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>It then returns <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">Elle retourne ensuite <ph id="ph1">`false`</ph> pour chaque appel.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>However, once <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">Toutefois, une fois <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> a retourné <ph id="ph2">`false`</ph>, l’accès à la <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propriété lève une exception.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>Upon creation, an enumerator is positioned before the first <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object in the collection, and the first call to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> positions the enumerator to the first object in the collection.</source>
          <target state="translated">Lors de la création, un énumérateur est positionné avant le premier <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> objet dans la collection et le premier appel à <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> place l’énumérateur sur le premier objet de la collection.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>Resets the enumerator to the beginning of the collection.</source>
          <target state="translated">Rétablit l'énumérateur au début de la collection.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Un énumérateur se déplace dans une direction avant uniquement.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>Use this method to return to the beginning of the collection.</source>
          <target state="translated">Utilisez cette méthode pour retourner au début de la collection.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> méthode positionne le curseur sur le premier objet dans la collection.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, you do not need to call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> to move the cursor forward to the first object.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, vous n’avez pas besoin d’appeler <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> pour déplacer le curseur jusqu’au premier objet.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current object in the collection.</source>
          <target state="translated">Obtient l’objet actuel dans la collection.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>The current object in the collection.</source>
          <target state="translated">Objet en cours dans la collection.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>Do not call this method; use the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property instead.</source>
          <target state="translated">N’appelez pas cette méthode ; Utilisez le <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propriété à la place.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>