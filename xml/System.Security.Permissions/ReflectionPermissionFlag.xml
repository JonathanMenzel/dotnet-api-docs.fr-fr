<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionPermissionFlag.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59ea8a0435690e232ce077bff445bd216d32b3a29.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ea8a0435690e232ce077bff445bd216d32b3a29</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Specifies the permitted use of the <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> and <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> namespaces.</source>
          <target state="translated">Spécifie l'utilisation autorisée des espaces de noms <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> et <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This enumeration is used by the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> classes.</source>
          <target state="translated">Cette énumération est utilisée par le <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> et <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>If no <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</source>
          <target state="translated">Si aucun <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> est accordé, la réflexion est autorisée sur tous les types et membres, mais les opérations d’appel sont autorisées uniquement sur les types visibles et les membres.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For more information, see <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Considérations relatives à la sécurité de la réflexion<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Because <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> can provide access to private class members, we recommend that you grant <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> peut fournir l’accès aux membres de classe privée, nous vous recommandons d’attribuer des <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> à du code Internet uniquement avec l’indicateur RestrictedMemberAccess aux et non avec tous les autres indicateurs.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The RestrictedMemberAccess flag is introduced in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">L’indicateur RestrictedMemberAccess aux est introduit dans le <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this flag, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">Pour utiliser cet indicateur, votre application doit cibler le <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> ou version ultérieure.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>AllFlags does not include the RestrictedMemberAccess flag.</source>
          <target state="translated">AllFlags n’inclut pas l’indicateur RestrictedMemberAccess aux.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</source>
          <target state="translated">Pour obtenir un masque qui inclut tous les indicateurs dans cette énumération, vous devez utiliser la combinaison de AllFlags avec RestrictedMemberAccess aux.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</source>
          <target state="translated">En commençant par le <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, l’indicateur ReflectionEmit n’est plus nécessaire d’émettre du code, sauf si les symboles de débogage sont émis.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this feature, your application should target the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> or later.</source>
          <target state="translated">Pour utiliser cette fonctionnalité, votre application doit cibler le <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> ou version ultérieure.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</source>
          <target state="translated">En commençant par le <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, l’indicateur TypeInformation n’est plus requis pour refléter les membres et types non publics ; l’indicateur a été marqué comme obsolète.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> enumeration to initialize a new instance of the <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> class that represents the right to perform restricted member access.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> énumération pour initialiser une nouvelle instance de la <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> classe qui représente le droit d’effectuer l’accès membre restreint.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> class.</source>
          <target state="translated">Cet exemple fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see <bpt id="p1">[</bpt>Walkthrough: Emitting Code in Partial Trust Scenarios<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>.</source>
          <target state="translated">Pour obtenir un exemple qui montre comment utiliser l’indicateur RestrictedMemberAccess avec le code Internet, consultez <bpt id="p1">[</bpt>procédure pas à pas : émission de Code dans les scénarios de confiance partielle<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph> , <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph>, and <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> are set.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph>, <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph> et <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> sont définis.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> does not include <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> n'inclut pas <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>Invocation operations on all members are allowed, regardless of grant set.</source>
          <target state="translated">Les opérations d'appel sur tous les membres sont autorisées, quel que soit le jeu d'autorisations.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>If this flag is not set, invocation operations are allowed only on visible members.</source>
          <target state="translated">Si cet indicateur n'est pas défini, les opérations d'appel sont autorisées uniquement sur des membres visibles.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Enumeration of types and members is allowed.</source>
          <target state="translated">L'énumération de types et de membres est autorisée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Invocation operations are allowed on visible types and members.</source>
          <target state="translated">Les opérations d'appel sont autorisées sur les types et les membres visibles.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Emitting debug symbols is allowed.</source>
          <target state="translated">L'émission de symboles de débogage est autorisée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this flag is no longer required to emit code.</source>
          <target state="translated">À compter du <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, cet indicateur n'est plus requis pour émettre du code.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Restricted member access is provided for partially trusted code.</source>
          <target state="translated">L'accès membre restreint est fourni pour le code d'un niveau de confiance partiel.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</source>
          <target state="translated">Le code d'un niveau de confiance partiel peut accéder à des types et des membres non publics, mais uniquement si le jeu d'autorisations du code d'un niveau de confiance partiel inclut toutes les autorisations dans le jeu d'autorisations de l'assembly qui contient les types et les membres non publics faisant l'objet d'un accès.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>This flag is new in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">Cet indicateur est nouveau dans <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>This flag is obsolete.</source>
          <target state="translated">Cet indicateur est obsolète.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>No flags are necessary to enumerate types and members and to examine their metadata.</source>
          <target state="translated">Aucun indicateur n'est nécessaire pour énumérer les types et les membres et pour examiner leurs métadonnées.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>Use <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph> instead.</source>
          <target state="translated">Utilisez plutôt <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>