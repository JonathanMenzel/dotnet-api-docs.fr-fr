<Type Name="ReflectionPermissionFlag" FullName="System.Security.Permissions.ReflectionPermissionFlag">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ea8a0435690e232ce077bff445bd216d32b3a29" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498423" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ReflectionPermissionFlag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReflectionPermissionFlag extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermissionFlag" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReflectionPermissionFlag" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReflectionPermissionFlag" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8476-101">Spécifie l'utilisation autorisée des espaces de noms <see cref="N:System.Reflection" /> et <see cref="N:System.Reflection.Emit" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8476-101">Specifies the permitted use of the <see cref="N:System.Reflection" /> and <see cref="N:System.Reflection.Emit" /> namespaces.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8476-102">Cette énumération est utilisée par le <xref:System.Security.Permissions.ReflectionPermission> et <xref:System.Security.Permissions.ReflectionPermissionAttribute> classes.</span><span class="sxs-lookup"><span data-stu-id="e8476-102">This enumeration is used by the <xref:System.Security.Permissions.ReflectionPermission> and <xref:System.Security.Permissions.ReflectionPermissionAttribute> classes.</span></span> <span data-ttu-id="e8476-103">Si aucun <xref:System.Security.Permissions.ReflectionPermission> est accordé, la réflexion est autorisée sur tous les types et membres, mais les opérations d’appel sont autorisées uniquement sur les types visibles et les membres.</span><span class="sxs-lookup"><span data-stu-id="e8476-103">If no <xref:System.Security.Permissions.ReflectionPermission> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</span></span> <span data-ttu-id="e8476-104">Pour plus d’informations, consultez [Considérations relatives à la sécurité de la réflexion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span><span class="sxs-lookup"><span data-stu-id="e8476-104">For more information, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8476-105">Étant donné que <xref:System.Security.Permissions.ReflectionPermission> peut fournir l’accès aux membres de classe privée, nous vous recommandons d’attribuer des <xref:System.Security.Permissions.ReflectionPermission> à du code Internet uniquement avec l’indicateur RestrictedMemberAccess aux et non avec tous les autres indicateurs.</span><span class="sxs-lookup"><span data-stu-id="e8476-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to private class members, we recommend that you grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</span></span>  
  
 <span data-ttu-id="e8476-106">L’indicateur RestrictedMemberAccess aux est introduit dans le [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e8476-106">The RestrictedMemberAccess flag is introduced in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span></span> <span data-ttu-id="e8476-107">Pour utiliser cet indicateur, votre application doit cibler le [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="e8476-107">To use this flag, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e8476-108">AllFlags n’inclut pas l’indicateur RestrictedMemberAccess aux.</span><span class="sxs-lookup"><span data-stu-id="e8476-108">AllFlags does not include the RestrictedMemberAccess flag.</span></span> <span data-ttu-id="e8476-109">Pour obtenir un masque qui inclut tous les indicateurs dans cette énumération, vous devez utiliser la combinaison de AllFlags avec RestrictedMemberAccess aux.</span><span class="sxs-lookup"><span data-stu-id="e8476-109">To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</span></span>  
  
 <span data-ttu-id="e8476-110">En commençant par le [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], l’indicateur ReflectionEmit n’est plus nécessaire d’émettre du code, sauf si les symboles de débogage sont émis.</span><span class="sxs-lookup"><span data-stu-id="e8476-110">Starting with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</span></span> <span data-ttu-id="e8476-111">Pour utiliser cette fonctionnalité, votre application doit cibler le [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="e8476-111">To use this feature, your application should target the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] or later.</span></span>  
  
 <span data-ttu-id="e8476-112">En commençant par le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], l’indicateur TypeInformation n’est plus requis pour refléter les membres et types non publics ; l’indicateur a été marqué comme obsolète.</span><span class="sxs-lookup"><span data-stu-id="e8476-112">Starting with the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8476-113">L’exemple suivant montre comment utiliser le <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> énumération pour initialiser une nouvelle instance de la <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> classe qui représente le droit d’effectuer l’accès membre restreint.</span><span class="sxs-lookup"><span data-stu-id="e8476-113">The following example shows how to use the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> class that represents the right to perform restricted member access.</span></span> <span data-ttu-id="e8476-114">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags> classe.</span><span class="sxs-lookup"><span data-stu-id="e8476-114">This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags> class.</span></span>  
  
 <span data-ttu-id="e8476-115">Pour obtenir un exemple qui montre comment utiliser l’indicateur RestrictedMemberAccess avec le code Internet, consultez [procédure pas à pas : émission de Code dans les scénarios de confiance partielle](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).</span><span class="sxs-lookup"><span data-stu-id="e8476-115">For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="AllFlags">
      <MemberSignature Language="C#" Value="AllFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag AllFlags = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <MemberSignature Language="VB.NET" Value="AllFlags" />
      <MemberSignature Language="C++ CLI" Value="AllFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8476-116">
            <see langword="TypeInformation" />, <see langword="MemberAccess" /> et <see langword="ReflectionEmit" /> sont définis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-116">
              <see langword="TypeInformation" /> , <see langword="MemberAccess" />, and <see langword="ReflectionEmit" /> are set.</span>
          </span>
          <span data-ttu-id="e8476-117">
            <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> n'inclut pas <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-117">
              <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> does not include <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MemberAccess">
      <MemberSignature Language="C#" Value="MemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag MemberAccess = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <MemberSignature Language="VB.NET" Value="MemberAccess" />
      <MemberSignature Language="C++ CLI" Value="MemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8476-118">Les opérations d'appel sur tous les membres sont autorisées, quel que soit le jeu d'autorisations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-118">Invocation operations on all members are allowed, regardless of grant set.</span>
          </span>
          <span data-ttu-id="e8476-119">Si cet indicateur n'est pas défini, les opérations d'appel sont autorisées uniquement sur des membres visibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-119">If this flag is not set, invocation operations are allowed only on visible members.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoFlags">
      <MemberSignature Language="C#" Value="NoFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag NoFlags = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <MemberSignature Language="VB.NET" Value="NoFlags" />
      <MemberSignature Language="C++ CLI" Value="NoFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8476-120">L'énumération de types et de membres est autorisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-120">Enumeration of types and members is allowed.</span>
          </span>
          <span data-ttu-id="e8476-121">Les opérations d'appel sont autorisées sur les types et les membres visibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-121">Invocation operations are allowed on visible types and members.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReflectionEmit">
      <MemberSignature Language="C#" Value="ReflectionEmit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag ReflectionEmit = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <MemberSignature Language="VB.NET" Value="ReflectionEmit" />
      <MemberSignature Language="C++ CLI" Value="ReflectionEmit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8476-122">L'émission de symboles de débogage est autorisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-122">Emitting debug symbols is allowed.</span>
          </span>
          <span data-ttu-id="e8476-123">À compter du [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], cet indicateur n'est plus requis pour émettre du code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-123">Beginning with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this flag is no longer required to emit code.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RestrictedMemberAccess">
      <MemberSignature Language="C#" Value="RestrictedMemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag RestrictedMemberAccess = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <MemberSignature Language="VB.NET" Value="RestrictedMemberAccess" />
      <MemberSignature Language="C++ CLI" Value="RestrictedMemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8476-124">L'accès membre restreint est fourni pour le code d'un niveau de confiance partiel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-124">Restricted member access is provided for partially trusted code.</span>
          </span>
          <span data-ttu-id="e8476-125">Le code d'un niveau de confiance partiel peut accéder à des types et des membres non publics, mais uniquement si le jeu d'autorisations du code d'un niveau de confiance partiel inclut toutes les autorisations dans le jeu d'autorisations de l'assembly qui contient les types et les membres non publics faisant l'objet d'un accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-125">Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</span>
          </span>
          <span data-ttu-id="e8476-126">Cet indicateur est nouveau dans [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-126">This flag is new in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TypeInformation">
      <MemberSignature Language="C#" Value="TypeInformation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag TypeInformation = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
      <MemberSignature Language="VB.NET" Value="TypeInformation" />
      <MemberSignature Language="C++ CLI" Value="TypeInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("not used anymore")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8476-127">Cet indicateur est obsolète.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-127">This flag is obsolete.</span>
          </span>
          <span data-ttu-id="e8476-128">Aucun indicateur n'est nécessaire pour énumérer les types et les membres et pour examiner leurs métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-128">No flags are necessary to enumerate types and members and to examine their metadata.</span>
          </span>
          <span data-ttu-id="e8476-129">Utilisez plutôt <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8476-129">Use <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> instead.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>