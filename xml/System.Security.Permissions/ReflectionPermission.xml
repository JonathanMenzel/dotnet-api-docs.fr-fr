<Type Name="ReflectionPermission" FullName="System.Security.Permissions.ReflectionPermission">
  <TypeSignature Language="C#" Value="public sealed class ReflectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReflectionPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReflectionPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="256d5-101">Contrôle l'accès aux membres et types non publics à travers les API <see cref="N:System.Reflection" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-101">Controls access to non-public types and members through the <see cref="N:System.Reflection" /> APIs.</span></span> <span data-ttu-id="256d5-102">Contrôle certaines fonctions des API <see cref="N:System.Reflection.Emit" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-102">Controls some features of the <see cref="N:System.Reflection.Emit" /> APIs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-103">Sans <xref:System.Security.Permissions.ReflectionPermission>, code peut utiliser la réflexion pour accéder uniquement aux membres publics d’objets.</span><span class="sxs-lookup"><span data-stu-id="256d5-103">Without <xref:System.Security.Permissions.ReflectionPermission>, code can use reflection to access only the public members of objects.</span></span> <span data-ttu-id="256d5-104">Le code avec <xref:System.Security.Permissions.ReflectionPermission> et approprié <xref:System.Security.Permissions.ReflectionPermissionFlag> indicateurs peuvent accéder à la `protected` et `private` membres des objets.</span><span class="sxs-lookup"><span data-stu-id="256d5-104">Code with <xref:System.Security.Permissions.ReflectionPermission> and the appropriate <xref:System.Security.Permissions.ReflectionPermissionFlag> flags can access the `protected` and `private` members of objects.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="256d5-105">Étant donné que <xref:System.Security.Permissions.ReflectionPermission> permettent d’accéder aux types non publics et aux membres, nous vous recommandons de ne pas accorder <xref:System.Security.Permissions.ReflectionPermission> à du code Internet, sauf avec le <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="256d5-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to non-public types and members, we recommend that you do not grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code, except with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="256d5-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> autorise l’accès aux membres non publics, avec la restriction que le jeu d’autorisations des membres non publics doit être égal à, ou un sous-ensemble du jeu d’autorisations du code qui accède aux membres non publics.</span><span class="sxs-lookup"><span data-stu-id="256d5-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> allows access to non-public members, with the restriction that the grant set of the non-public members must be equal to, or a subset of, the grant set of the code that accesses the non-public members.</span></span>  
  
 <span data-ttu-id="256d5-107">Certaines fonctionnalités de réflexion émission, telles que l’émission de symboles de débogage, requièrent <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="256d5-107">Certain features of reflection emit, such as emitting debug symbols, require <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="256d5-108">Pour plus d’informations, consultez l’énumération <xref:System.Security.Permissions.ReflectionPermissionFlag>.</span><span class="sxs-lookup"><span data-stu-id="256d5-108">For more information, see the <xref:System.Security.Permissions.ReflectionPermissionFlag> enumeration.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionFlag" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="256d5-109">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-109">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="256d5-110">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-110">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="256d5-111">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ReflectionPermission" /> avec autorisation restreinte ou non spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-111">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with either fully restricted or unrestricted permission as specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-112">Crée un totalement restreint (`None`) ou `Unrestricted` l’accès aux métadonnées.</span><span class="sxs-lookup"><span data-stu-id="256d5-112">Creates either fully restricted (`None`) or `Unrestricted` access to metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="256d5-113">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="256d5-113">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="256d5-114">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-114">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#7)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-115">Le paramètre <paramref name="state" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-115">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.ReflectionPermissionFlag flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.ReflectionPermissionFlag flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As ReflectionPermissionFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::ReflectionPermissionFlag flag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="256d5-116">Une des valeurs de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-116">One of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values.</span></span></param>
        <summary><span data-ttu-id="256d5-117">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.ReflectionPermission" /> avec accès spécifié.</span><span class="sxs-lookup"><span data-stu-id="256d5-117">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with the specified access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="256d5-118">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="256d5-118">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="256d5-119">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-119">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-120">Le paramètre <paramref name="flag" /> n’est pas une valeur valide d’<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-120">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="256d5-121">Crée et retourne une copie identique de l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-121">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="256d5-122">Copie de l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-122">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-123">Une copie d’une autorisation représente le même accès aux ressources que l’autorisation d’origine.</span><span class="sxs-lookup"><span data-stu-id="256d5-123">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="256d5-124">L’exemple de code suivant montre le comportement de la <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="256d5-124">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> method.</span></span> <span data-ttu-id="256d5-125">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-125">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="256d5-126">L’exemple de code vise à montrer le comportement de la méthode, ne pas à son utilisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-126">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="256d5-127">En règle générale, les méthodes des classes d’autorisation sont utilisées par l’infrastructure de sécurité ; ils ne sont généralement pas utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="256d5-127">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#5)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.ReflectionPermissionFlag Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As ReflectionPermissionFlag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::ReflectionPermissionFlag Flags { System::Security::Permissions::ReflectionPermissionFlag get(); void set(System::Security::Permissions::ReflectionPermissionFlag value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="256d5-128">Obtient ou définit le type de réflexion autorisée pour l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="256d5-128">Gets or sets the type of reflection allowed for the current permission.</span></span></summary>
        <value><span data-ttu-id="256d5-129">Indicateurs définis pour l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="256d5-129">The set flags for the current permission.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="256d5-130">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="256d5-130">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> property.</span></span> <span data-ttu-id="256d5-131">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-131">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-132">Une tentative d’affecter une valeur non valide à cette propriété est effectuée.</span><span class="sxs-lookup"><span data-stu-id="256d5-132">An attempt is made to set this property to an invalid value.</span></span> <span data-ttu-id="256d5-133">Consultez <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> pour connaître les valeurs valides.</span><span class="sxs-lookup"><span data-stu-id="256d5-133">See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd"><span data-ttu-id="256d5-134">Encodage XML à utiliser pour reconstruire l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-134">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="256d5-135">Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</span><span class="sxs-lookup"><span data-stu-id="256d5-135">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="256d5-136">L’exemple de code suivant montre le comportement de la <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="256d5-136">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> method.</span></span> <span data-ttu-id="256d5-137">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-137">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="256d5-138">L’exemple de code vise à montrer le comportement de la méthode, ne pas à son utilisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-138">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="256d5-139">En règle générale, les méthodes des classes d’autorisation sont utilisées par l’infrastructure de sécurité ; ils ne sont généralement pas utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="256d5-139">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="256d5-140">Le paramètre <paramref name="esd" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-140">The <paramref name="esd" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-141">Le paramètre <paramref name="esd" /> n'est pas un élément d'autorisation valide.</span><span class="sxs-lookup"><span data-stu-id="256d5-141">The <paramref name="esd" /> parameter is not a valid permission element.</span></span>  
  
 <span data-ttu-id="256d5-142">- ou -</span><span class="sxs-lookup"><span data-stu-id="256d5-142">-or-</span></span>  
  
 <span data-ttu-id="256d5-143">Le numéro de version du paramètre <paramref name="esd" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="256d5-143">The <paramref name="esd" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="256d5-144">Autorisation à croiser avec l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-144">A permission to intersect with the current permission.</span></span> <span data-ttu-id="256d5-145">Elle doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-145">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="256d5-146">Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-146">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="256d5-147">Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-147">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="256d5-148">Cette nouvelle autorisation est <see langword="null" /> si l'intersection est vide.</span><span class="sxs-lookup"><span data-stu-id="256d5-148">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-149">L’intersection de deux autorisations est une autorisation qui décrit l’ensemble des opérations qu’elles décrivent en commun.</span><span class="sxs-lookup"><span data-stu-id="256d5-149">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="256d5-150">Seule une demande qui passe les deux autorisations d’origine passera l’intersection.</span><span class="sxs-lookup"><span data-stu-id="256d5-150">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="256d5-151">L’exemple de code suivant montre le comportement de la <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="256d5-151">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> method.</span></span> <span data-ttu-id="256d5-152">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-152">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="256d5-153">L’exemple de code vise à montrer le comportement de la méthode, ne pas à son utilisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-153">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="256d5-154">En règle générale, les méthodes des classes d’autorisation sont utilisées par l’infrastructure de sécurité ; ils ne sont généralement pas utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="256d5-154">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#4)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-155">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="256d5-155">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="256d5-156">Autorisation qui doit être testée pour la relation de sous-ensemble.</span><span class="sxs-lookup"><span data-stu-id="256d5-156">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="256d5-157">Cette autorisation doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-157">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="256d5-158">Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-158">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns>
          <span data-ttu-id="256d5-159"><see langword="true" /> si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-159"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-160">L’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée si l’autorisation actuelle spécifie un ensemble d’opérations qui est entièrement contenu par l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-160">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="256d5-161">Par exemple, une autorisation qui représente l’accès à C:\example.txt est un sous-ensemble d’une autorisation qui représente l’accès à C:\\.</span><span class="sxs-lookup"><span data-stu-id="256d5-161">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="256d5-162">Si cette méthode retourne `true`, l’autorisation en cours ne représente pas plus d’accès à la ressource protégée que l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-162">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="256d5-163">L’exemple de code suivant montre le comportement de la <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="256d5-163">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="256d5-164">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-164">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="256d5-165">L’exemple de code vise à montrer le comportement de la méthode, ne pas à son utilisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-165">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="256d5-166">En règle générale, les méthodes des classes d’autorisation sont utilisées par l’infrastructure de sécurité ; ils ne sont généralement pas utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="256d5-166">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-167">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="256d5-167">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="256d5-168">Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</span><span class="sxs-lookup"><span data-stu-id="256d5-168">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns>
          <span data-ttu-id="256d5-169"><see langword="true" /> si l'autorisation en cours est illimitée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="256d5-169"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-170">Une autorisation sans restriction représente l’accès à toutes les ressources protégées par l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-170">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="256d5-171">Crée un codage XML de l’autorisation et de son état actuel.</span><span class="sxs-lookup"><span data-stu-id="256d5-171">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="256d5-172">Codage XML de l’autorisation, y compris les informations d’état éventuelles.</span><span class="sxs-lookup"><span data-stu-id="256d5-172">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="256d5-173">L’exemple de code suivant montre le comportement de la <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="256d5-173">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> method.</span></span> <span data-ttu-id="256d5-174">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-174">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="256d5-175">L’exemple de code vise à montrer le comportement de la méthode, ne pas à son utilisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-175">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="256d5-176">En règle générale, les méthodes des classes d’autorisation sont utilisées par l’infrastructure de sécurité ; ils ne sont généralement pas utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="256d5-176">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="256d5-177">Autorisation à combiner avec l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-177">A permission to combine with the current permission.</span></span> <span data-ttu-id="256d5-178">Elle doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="256d5-178">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="256d5-179">Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-179">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="256d5-180">Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-180">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="256d5-181">Le résultat d’un appel à <xref:System.Security.Permissions.ReflectionPermission.Union%2A> est une autorisation qui représente toutes les opérations représentées par l’autorisation actuelle et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="256d5-181">The result of a call to <xref:System.Security.Permissions.ReflectionPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="256d5-182">Toute demande qui transmet une autorisation passe leur union.</span><span class="sxs-lookup"><span data-stu-id="256d5-182">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="256d5-183">L’exemple de code suivant montre le comportement de la <xref:System.Security.Permissions.ReflectionPermission.Union%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="256d5-183">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Union%2A> method.</span></span> <span data-ttu-id="256d5-184">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Permissions.ReflectionPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="256d5-184">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="256d5-185">L’exemple de code vise à montrer le comportement de la méthode, ne pas à son utilisation.</span><span class="sxs-lookup"><span data-stu-id="256d5-185">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="256d5-186">En règle générale, les méthodes des classes d’autorisation sont utilisées par l’infrastructure de sécurité ; ils ne sont généralement pas utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="256d5-186">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#3)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="256d5-187">Le paramètre <paramref name="other" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="256d5-187">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>