<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionPermissionAttribute.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aec5794cb575c759fcbd5494125e2221980cbb39.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aec5794cb575c759fcbd5494125e2221980cbb39</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>Allows security actions for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> to be applied to code using declarative security.</source>
          <target state="translated">Permet d’appliquer les actions de sécurité de <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> au code à l’aide de la sécurité déclarative.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>The scope of the declaration that is allowed depends on the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> that is used.</source>
          <target state="translated">La portée de la déclaration est autorisée varie selon le <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> qui est utilisé.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</source>
          <target state="translated">Les informations de sécurité déclarées par un attribut de sécurité sont stockées dans les métadonnées de l’attribut cible et sont accessible par le système en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>Security attributes are used only for declarative security.</source>
          <target state="translated">Les attributs de sécurité sont utilisés uniquement pour la sécurité déclarative.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>For imperative security, use the corresponding permission class.</source>
          <target state="translated">Pour une sécurité impérative, utilisez la classe d’autorisation correspondante.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /&gt;</ph> avec le <ph id="ph2">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>Creates and returns a new <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</source>
          <target state="translated">Crée et retourne un nouveau <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> that corresponds to this attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> qui correspond à cet attribut.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>This method should only be called by the security system, never by application code.</source>
          <target state="translated">Cette méthode doit uniquement être appelée par le système de sécurité, jamais par le code d’application.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>At compile time, attributes convert security declarations to a serialized form in metadata.</source>
          <target state="translated">Au moment de la compilation, attributs convertir les déclarations de sécurité à un formulaire sérialisé dans les métadonnées.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</source>
          <target state="translated">Les données de la sécurité déclarative dans les métadonnées sont créées à partir de l’autorisation retournée par cette méthode qui correspond à cet attribut.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>Gets or sets the current allowed uses of reflection.</source>
          <target state="translated">Obtient ou définit les opérations de réflexion actuellement autorisées.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>One or more of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> values combined using a bitwise OR.</source>
          <target state="translated">Une ou plusieurs des valeurs <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> combinées à l'aide d'une opération de bits OR.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>An attempt is made to set this property to an invalid value.</source>
          <target state="translated">Cette propriété fait l’objet d’une définition sur une valeur non valide.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>See <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> for the valid values.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> pour connaître les valeurs valides.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
          <source>Gets or sets a value that indicates whether invocation of operations on non-public members is allowed.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si l'appel d'opérations sur des membres non publics est autorisé.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if invocation of operations on non-public members is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'appel d'opérations sur des membres non publics est autorisé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>Gets or sets a value that indicates whether use of certain features in <ph id="ph1">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph>, such as emitting debug symbols, is allowed.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si utilisation de certaines fonctionnalités dans <ph id="ph1">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph>, telles que l'émission de symboles de débogage, est autorisée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if use of the affected features is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'utilisation des fonctionnalités affectées est autorisée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, emitting code no longer requires <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">En commençant par le <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, l’émission de code ne nécessite plus <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> avec la <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>Some features of reflection emit, such as emitting debug symbols, still require the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Certaines fonctionnalités de la réflexion émission, telles que l’émission de symboles de débogage, requièrent toujours le <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>(See <bpt id="p1">[</bpt>Security Issues in Reflection Emit<ept id="p1">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.)</source>
          <target state="translated">(Consultez <bpt id="p1">[</bpt>émettre des problèmes de sécurité dans la réflexion<ept id="p1">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">Pour utiliser cette fonctionnalité, votre application doit cibler <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> ou version ultérieure.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>Gets or sets a value that indicates whether restricted invocation of non-public members is allowed.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si l'appel d'opérations restreint sur des membres non publics est autorisé.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>Restricted invocation means that the grant set of the assembly that contains the non-public member that is being invoked must be equal to, or a subset of, the grant set of the invoking assembly.</source>
          <target state="translated">L'appel restreint signifie que le jeu d'autorisations de l'assembly qui contient le membre non public appelé doit être égal au jeu d'autorisations, ou à un sous-ensemble du jeu d'autorisations de l'assembly appelant.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if restricted invocation of non-public members is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'appel d'opérations restreint sur des membres non publics est autorisé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>This property is introduced in the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>.</source>
          <target state="translated">Cette propriété est introduite dans le <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>To use this property, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">Pour utiliser cette propriété, votre application doit cibler le <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> ou version ultérieure.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source>Gets or sets a value that indicates whether reflection on members that are not visible is allowed.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si la réflexion sur des membres qui ne sont pas visibles est autorisée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if reflection on members that are not visible is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la réflexion sur des membres qui ne sont pas visibles est autorisée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source>This property is now obsolete.</source>
          <target state="translated">cette propriété est désormais obsolète.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source>Reflecting on the metadata of members that are not visible no longer requires <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</source>
          <target state="translated">La réflexion sur les métadonnées des membres qui ne sont pas visibles ne requiert plus <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>