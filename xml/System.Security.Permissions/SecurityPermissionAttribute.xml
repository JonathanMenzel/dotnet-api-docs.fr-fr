<Type Name="SecurityPermissionAttribute" FullName="System.Security.Permissions.SecurityPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d496fbd01a65f7d6d91de49edd14059e27ea65e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39936331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.SecurityPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type SecurityPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1">
      <AttributeName>System.Obsolete("CAS support is not available with Silverlight applications.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c64e8-101">Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.SecurityPermission" /> au code à l’aide de la sécurité déclarative.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c64e8-101">Allows security actions for <see cref="T:System.Security.Permissions.SecurityPermission" /> to be applied to code using declarative security.</span>
      </span>
      <span data-ttu-id="c64e8-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c64e8-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c64e8-103">L’étendue de la déclaration est autorisée varie selon le <xref:System.Security.Permissions.SecurityAction> qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="c64e8-103">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span>  
  
 <span data-ttu-id="c64e8-104">Les informations de sécurité déclarées par un attribut de sécurité sont stockées dans les métadonnées de la cible d’attribut et sont accessibles par le système au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="c64e8-104">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="c64e8-105">Attributs de sécurité sont utilisés uniquement pour la sécurité déclarative.</span><span class="sxs-lookup"><span data-stu-id="c64e8-105">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="c64e8-106">Pour une sécurité impérative, utilisez la classe d’autorisation correspondante.</span><span class="sxs-lookup"><span data-stu-id="c64e8-106">For imperative security, use the corresponding permission class.</span></span>  
  
 <span data-ttu-id="c64e8-107">Lorsque vous utilisez le <xref:System.Security.Permissions.SecurityPermissionAttribute> class, suivez l’action de sécurité avec les autorisations qui sont demandées.</span><span class="sxs-lookup"><span data-stu-id="c64e8-107">When you use the <xref:System.Security.Permissions.SecurityPermissionAttribute> class, follow the security action with the permission(s) that are being requested.</span></span> <span data-ttu-id="c64e8-108">Chaque autorisation de sécurité qui peut être demandée, comme défini dans le <xref:System.Security.Permissions.SecurityPermissionFlag> énumération, a une propriété correspondante la <xref:System.Security.Permissions.SecurityPermissionAttribute> classe.</span><span class="sxs-lookup"><span data-stu-id="c64e8-108">Each security permission that can be requested, as defined in the <xref:System.Security.Permissions.SecurityPermissionFlag> enumeration, has a corresponding property in the <xref:System.Security.Permissions.SecurityPermissionAttribute> class.</span></span> <span data-ttu-id="c64e8-109">Par exemple, pour demander la capacité d’accéder au code non managé, suivez l’instruction de la demande avec le paramètre de propriété demandé, comme suit : `SecurityPermissionAttribute(SecurityAction.Demand, UnmanagedCode=true)`.</span><span class="sxs-lookup"><span data-stu-id="c64e8-109">For example, to demand the ability to access unmanaged code, follow the demand statement with the property setting that is being requested, as follows: `SecurityPermissionAttribute(SecurityAction.Demand, UnmanagedCode=true)`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c64e8-110">Une exception à l’équivalence entre le <xref:System.Security.Permissions.SecurityPermissionFlag> énumération et la <xref:System.Security.Permissions.SecurityPermissionAttribute> propriétés est que le <xref:System.Security.Permissions.SecurityPermissionFlag.AllFlags> valeur d’énumération est représentée par le <xref:System.Security.Permissions.SecurityAttribute.Unrestricted%2A> propriété (héritée de la <xref:System.Security.Permissions.SecurityAttribute> classe).</span><span class="sxs-lookup"><span data-stu-id="c64e8-110">An exception to the equivalence between the <xref:System.Security.Permissions.SecurityPermissionFlag> enumeration and the <xref:System.Security.Permissions.SecurityPermissionAttribute> properties is that the <xref:System.Security.Permissions.SecurityPermissionFlag.AllFlags> enumeration value is represented by the <xref:System.Security.Permissions.SecurityAttribute.Unrestricted%2A> property (inherited from the <xref:System.Security.Permissions.SecurityAttribute> class).</span></span> <span data-ttu-id="c64e8-111">Pour demander toutes les autorisations de sécurité, spécifiez `Unrestricted=true`.</span><span class="sxs-lookup"><span data-stu-id="c64e8-111">To demand all security permissions, specify `Unrestricted=true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.SecurityPermission" />
    <altmember cref="T:System.Security.Permissions.SecurityPermissionFlag" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.SecurityPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.SecurityPermissionAttribute" Usage="new System.Security.Permissions.SecurityPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="c64e8-112">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-112">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c64e8-113">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.SecurityPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-113">Initializes a new instance of the <see cref="T:System.Security.Permissions.SecurityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assertion">
      <MemberSignature Language="C#" Value="public bool Assertion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Assertion" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.Assertion" />
      <MemberSignature Language="VB.NET" Value="Public Property Assertion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Assertion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Assertion : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.Assertion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-114">Obtient ou définit une valeur qui indique si l’autorisation d’affirmer que tous les appelants de ce code ont l’autorisation nécessaire pour l’opération est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-114">Gets or sets a value indicating whether permission to assert that all this code's callers have the requisite permission for the operation is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-115">
            <see langword="true" /> si l’autorisation d’assertion est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-115">
              <see langword="true" /> if permission to assert is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingRedirects">
      <MemberSignature Language="C#" Value="public bool BindingRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindingRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindingRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindingRedirects : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-116">Obtient ou définit une valeur qui indique si le code est autorisé à effectuer une redirection de liaison dans le fichier de configuration d’application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-116">Gets or sets a value that indicates whether code has permission to perform binding redirection in the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-117">
            <see langword="true" /> si le code peut effectuer des redirections de liaison ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-117">
              <see langword="true" /> if code can perform binding redirects; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c64e8-118">Cette autorisation permet la redirection des assemblys .NET Framework qui ont été unifiés, ainsi que d’autres assemblys ne faisant pas partie du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c64e8-118">This permission allows redirection of .NET Framework assemblies that have been unified, as well as other assemblies found outside the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAppDomain">
      <MemberSignature Language="C#" Value="public bool ControlAppDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlAppDomain" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlAppDomain As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlAppDomain { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlAppDomain : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-119">Obtient ou définit une valeur qui indique si l’autorisation de manipuler le <see cref="T:System.AppDomain" /> est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-119">Gets or sets a value indicating whether permission to manipulate <see cref="T:System.AppDomain" /> is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-120">
            <see langword="true" /> si l’autorisation de manipuler le <see cref="T:System.AppDomain" /> est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-120">
              <see langword="true" /> if permission to manipulate <see cref="T:System.AppDomain" /> is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlDomainPolicy">
      <MemberSignature Language="C#" Value="public bool ControlDomainPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlDomainPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlDomainPolicy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlDomainPolicy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlDomainPolicy : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-121">Obtient ou définit une valeur indiquant si l’autorisation de modifier et de manipuler la stratégie de sécurité de domaine est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-121">Gets or sets a value indicating whether permission to alter or manipulate domain security policy is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-122">
            <see langword="true" /> si l’autorisation de modification ou de manipulation de la stratégie de sécurité d’un domaine d’application est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-122">
              <see langword="true" /> if permission to alter or manipulate security policy in an application domain is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlEvidence">
      <MemberSignature Language="C#" Value="public bool ControlEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlEvidence As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlEvidence { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlEvidence : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-123">Obtient ou définit une valeur indiquant si l’autorisation de modifier et de manipuler les preuves est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-123">Gets or sets a value indicating whether permission to alter or manipulate evidence is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-124">
            <see langword="true" /> si la possibilité de modifier et de manipuler les preuves est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-124">
              <see langword="true" /> if the ability to alter or manipulate evidence is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPolicy">
      <MemberSignature Language="C#" Value="public bool ControlPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlPolicy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlPolicy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlPolicy : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-125">Obtient ou définit une valeur indiquant si l’autorisation d’afficher et de manipuler la stratégie de sécurité est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-125">Gets or sets a value indicating whether permission to view and manipulate security policy is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-126">
            <see langword="true" /> si l'autorisation de manipuler une stratégie de sécurité est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-126">
              <see langword="true" /> if permission to manipulate security policy is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPrincipal">
      <MemberSignature Language="C#" Value="public bool ControlPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlPrincipal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlPrincipal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlPrincipal : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-127">Obtient ou définit une valeur qui indique si l’autorisation de manipuler le principal actuel est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-127">Gets or sets a value indicating whether permission to manipulate the current principal is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-128">
            <see langword="true" /> si l’autorisation de manipuler le principal actuel est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-128">
              <see langword="true" /> if permission to manipulate the current principal is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlThread">
      <MemberSignature Language="C#" Value="public bool ControlThread { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlThread" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.ControlThread" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlThread As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlThread { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlThread : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.ControlThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-129">Obtient ou définit une valeur qui indique si l’autorisation de manipuler les threads est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-129">Gets or sets a value indicating whether permission to manipulate threads is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-130">
            <see langword="true" /> si l’autorisation de manipuler les threads est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-130">
              <see langword="true" /> if permission to manipulate threads is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c64e8-131">Pour plus d'informations, consultez <xref:System.Threading.Thread>.</span><span class="sxs-lookup"><span data-stu-id="c64e8-131">For more information, see <xref:System.Threading.Thread>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SecurityPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="securityPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-132">Crée et retourne un nouveau <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-132">Creates and returns a new <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c64e8-133">
            <see cref="T:System.Security.Permissions.SecurityPermission" /> qui correspond à cet attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-133">A <see cref="T:System.Security.Permissions.SecurityPermission" /> that corresponds to this attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c64e8-134">Cette méthode doit uniquement être appelée par le système de sécurité, jamais par le code d’application.</span><span class="sxs-lookup"><span data-stu-id="c64e8-134">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="c64e8-135">Au moment de la compilation, attributs convertir les déclarations de sécurité à un formulaire sérialisé dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="c64e8-135">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="c64e8-136">Les données de sécurité déclarative dans les métadonnées sont créées à partir de l’autorisation retournée par cette méthode qui correspond à cet attribut.</span><span class="sxs-lookup"><span data-stu-id="c64e8-136">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execution">
      <MemberSignature Language="C#" Value="public bool Execution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Execution" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.Execution" />
      <MemberSignature Language="VB.NET" Value="Public Property Execution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Execution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Execution : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.Execution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-137">Obtient ou définit une valeur qui indique si l’autorisation d’exécuter du code est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-137">Gets or sets a value indicating whether permission to execute code is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-138">
            <see langword="true" /> si l’autorisation d’exécuter du code est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-138">
              <see langword="true" /> if permission to execute code is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c64e8-139">Une demande pour <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> autorisation au niveau de l’assembly est ignorée.</span><span class="sxs-lookup"><span data-stu-id="c64e8-139">A demand for <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> permission at the assembly level is ignored.</span></span> <span data-ttu-id="c64e8-140">Si un assembly a le droit d’exécuter, <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> autorisation est automatiquement accordé et paramètre les <xref:System.Security.Permissions.SecurityPermissionAttribute.Execution%2A> propriété `true` ou `false` n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="c64e8-140">If an assembly has the right to execute, <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> permission is automatically granted, and setting the <xref:System.Security.Permissions.SecurityPermissionAttribute.Execution%2A> property to either `true` or `false` has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.SecurityPermissionFlag Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.SecurityPermissionFlag Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As SecurityPermissionFlag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::SecurityPermissionFlag Flags { System::Security::Permissions::SecurityPermissionFlag get(); void set(System::Security::Permissions::SecurityPermissionFlag value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Permissions.SecurityPermissionFlag with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.SecurityPermissionFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-141">Obtient ou définit tous les indicateurs d'autorisation comprenant les autorisations <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-141">Gets or sets all permission flags comprising the <see cref="T:System.Security.Permissions.SecurityPermission" /> permissions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-142">Une ou plusieurs des valeurs <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> combinées à l'aide d'une opération de bits OR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-142">One or more of the <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> values combined using a bitwise OR.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c64e8-143">Cette propriété fait l’objet d’une définition sur une valeur non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-143">An attempt is made to set this property to an invalid value.</span>
          </span>
          <span data-ttu-id="c64e8-144">Consultez <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> pour connaître les valeurs valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-144">See <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> for the valid values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Infrastructure">
      <MemberSignature Language="C#" Value="public bool Infrastructure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Infrastructure" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.Infrastructure" />
      <MemberSignature Language="VB.NET" Value="Public Property Infrastructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Infrastructure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Infrastructure : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.Infrastructure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-145">Obtient ou définit une valeur qui indique si le code peut s’intégrer à l’infrastructure du Common Language Runtime, comme l’ajout de récepteurs de contexte d’accès distant, d’envoi et dynamiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-145">Gets or sets a value indicating whether code can plug into the common language runtime infrastructure, such as adding Remoting Context Sinks, Envoy Sinks and Dynamic Sinks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-146">
            <see langword="true" /> si du code peut s'intégrer à l'infrastructure du Common Language Runtime ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-146">
              <see langword="true" /> if code can plug into the common language runtime infrastructure; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotingConfiguration">
      <MemberSignature Language="C#" Value="public bool RemotingConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemotingConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemotingConfiguration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RemotingConfiguration : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-147">Obtient ou définit une valeur indiquant si le code peut configurer des canaux et des types à distance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-147">Gets or sets a value indicating whether code can configure remoting types and channels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-148">
            <see langword="true" /> si du code peut configurer des canaux et des types de communication à distance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-148">
              <see langword="true" /> if code can configure remoting types and channels; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationFormatter">
      <MemberSignature Language="C#" Value="public bool SerializationFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializationFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializationFormatter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializationFormatter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationFormatter : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-149">Obtient ou définit une valeur indiquant si le code peut utiliser un formateur de sérialisation pour sérialiser ou désérialiser un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-149">Gets or sets a value indicating whether code can use a serialization formatter to serialize or deserialize an object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-150">
            <see langword="true" /> si du code peut utiliser un formateur de sérialisation pour sérialiser ou désérialiser un objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-150">
              <see langword="true" /> if code can use a serialization formatter to serialize or deserialize an object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipVerification">
      <MemberSignature Language="C#" Value="public bool SkipVerification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipVerification" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.SkipVerification" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipVerification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipVerification { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipVerification : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.SkipVerification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-151">Obtient ou définit une valeur qui indique si l’autorisation d’ignorer la vérification du code est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-151">Gets or sets a value indicating whether permission to bypass code verification is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-152">
            <see langword="true" /> si l'autorisation d'ignorer la vérification du code est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-152">
              <see langword="true" /> if permission to bypass code verification is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="c64e8-153">Il s’agit d’une autorisation puissante qui ne doit être accordée uniquement au code hautement approuvé.</span><span class="sxs-lookup"><span data-stu-id="c64e8-153">This is a powerful permission that should be granted only to highly trusted code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmanagedCode">
      <MemberSignature Language="C#" Value="public bool UnmanagedCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnmanagedCode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />
      <MemberSignature Language="VB.NET" Value="Public Property UnmanagedCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnmanagedCode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnmanagedCode : bool with get, set" Usage="System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c64e8-154">Obtient ou définit une valeur qui indique si l’autorisation d’appeler du code non managé est déclarée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-154">Gets or sets a value indicating whether permission to call unmanaged code is declared.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c64e8-155">
            <see langword="true" /> si l'autorisation d'appel du code non managé est déclarée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c64e8-155">
              <see langword="true" /> if permission to call unmanaged code is declared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>