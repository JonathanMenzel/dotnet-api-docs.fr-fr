<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c80a1ca495dfe40157bf97e75246761ad6921d28" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <TypeSignature Language="F#" Value="type TtsEngineSsml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6582f-101">Classe de base abstraite à implémenter par tous les moteurs de synthèse de conversion de texte par synthèse vocale (Text-to-Speech).</span>
      <span class="sxs-lookup">
        <span data-stu-id="6582f-101">Abstract base class to be implemented by all text to speech synthesis engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6582f-102">Pour construire un moteur de texte par synthèse vocale personnalisé, une application doit toujours implémenter une classe dérivée de la classe de base abstraite <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span><span class="sxs-lookup"><span data-stu-id="6582f-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="6582f-103">Une implémentation inscrite du <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> peut ensuite être utilisé comme une voix synthétiseur par <xref:System.Speech.Synthesis> applications basées sur l’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="6582f-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="6582f-104">Objets héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> doit substituer les membres suivants : <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> et <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="6582f-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="6582f-105">Le membre le plus important de la <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> classe à implémenter est la <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6582f-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="6582f-106">Le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> méthode est appelée par l’Analyseur de texte infrastructures réception :</span><span class="sxs-lookup"><span data-stu-id="6582f-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="6582f-107">Une référence à la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, ce qui permet d’accéder aux services système tels que les files d’attente même et d’écrire la sortie audio.</span><span class="sxs-lookup"><span data-stu-id="6582f-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="6582f-108">Un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produit à partir de l’entrée de reconnaissance vocale synthèse SSML (Markup Language).</span><span class="sxs-lookup"><span data-stu-id="6582f-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="6582f-109">En plus de texte à afficher en tant que la reconnaissance vocale, l’analyse de la SSML stocke des informations sur les attributs requis de la voix dans un <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associée à chaque entrée <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objet.</span><span class="sxs-lookup"><span data-stu-id="6582f-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="6582f-110">Une application de synthétiseur vocal peut éventuellement effectuer des demandes pour un format de sortie spécifié en implémentant <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> à être appelé par la plateforme lorsqu’il tente de fournir la sortie audio correcte.</span><span class="sxs-lookup"><span data-stu-id="6582f-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="6582f-111">Un implémenteur prend également en charge de la gestion des définitions externes de prononciation ou lexiques, à leur implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> et <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="6582f-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml : string -&gt; System.Speech.Synthesis.TtsEngine.TtsEngineSsml" Usage="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml registryKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey">
          <span data-ttu-id="6582f-112">Nom complet de la clé de Registre pour le jeton de voix associée à l'implémentation de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span>
          </span>
          <span data-ttu-id="6582f-113">moteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-113">engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6582f-114">Construit une nouvelle instance <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> selon une clé de Registre appropriée de jeton de voix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6582f-115">Les appels à ce constructeur sont généralement générés par <xref:System.Speech.Synthesis> en fonction des applications en sélectionnant une voix synthétiseur devant être utilisées par une instance de <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="6582f-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="6582f-116">Un <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> doit être le Registre sous HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span><span class="sxs-lookup"><span data-stu-id="6582f-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member AddLexicon : Uri * string * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.AddLexicon (uri, mediaType, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="6582f-117">Instance valide de <see langword="System.Uri" /> indiquant l'emplacement des informations de lexique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="6582f-118">Chaîne contenant le type de média du lexique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-118">A string containing the media type of the lexicon.</span>
          </span>
          <span data-ttu-id="6582f-119">Les types de média ne respectent pas la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-119">Media types are case insensitive.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="6582f-120">Référence à une interface <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> utilisée pour interagir avec l'infrastructure de la plateforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6582f-121">Ajoute un lexique au <see langword="Synthesizer" /><see langword="Voice" /> implémenté par l’instance de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6582f-122">Un lexique prononciation est une collection de mots ou expressions ainsi que leur prononciation spécifiée à l’aide d’un caractère alphabétique prononciation approprié.</span><span class="sxs-lookup"><span data-stu-id="6582f-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="6582f-123">Cette méthode est généralement appelée par l’infrastructure de plateforme en réponse à une <xref:System.Speech.Synthesis> en fonction des applications qui appellent <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> et à l’aide de la voix synthétiseur implémentée par actuel <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span><span class="sxs-lookup"><span data-stu-id="6582f-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="6582f-124">La valeur de `mediaType` est généralement une spécification MIME, car la spécification SSML utilise MIME pour les spécifications du support.</span><span class="sxs-lookup"><span data-stu-id="6582f-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6582f-125">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> utilise le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passé à charger un lexique à partir d’une ressource.</span><span class="sxs-lookup"><span data-stu-id="6582f-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="6582f-126">Il stocke ensuite une `System.IO.Stream` pour le lexique dans un `System.Collections.Generic.Dictionary` instance, indexé par le lexique URI.</span><span class="sxs-lookup"><span data-stu-id="6582f-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6582f-127">
            <para>Il incombe à l’implémentation pour maîtriser entièrement et être en mesure de traiter le lexique stocké sur <paramref name="uri" />. L’implémentation doit également effectuer le suivi et gérer les durées de vie de tous les lexiques qu'il ajoute.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-127">
              <para>It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />. The implementation must also keep track and manage the lifetimes of all lexicons it adds.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputFormat : System.Speech.Synthesis.TtsEngine.SpeakOutputFormat * nativeint -&gt; nativeint" Usage="ttsEngineSsml.GetOutputFormat (speakOutputFormat, targetWaveFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat">
          <span data-ttu-id="6582f-128">Membre valide de l'énumération <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> indiquant le type de format de sortie audio demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-128">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span>
          </span>
        </param>
        <param name="targetWaveFormat">
          <span data-ttu-id="6582f-129">Pointeur vers un <see langword="struct" /> contenant un paramètre spécifique pour le type de format audio demandé par l’argument <c>speakOutputFormat</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-129">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <c>speakOutputFormat</c> argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6582f-130">Retourne la meilleure sortie audio correspondante prise en charge par une réponse de moteur de synthèse donnée à un moteur synthétiseur pour la prise en charge d'un format de sortie particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-130">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6582f-131">Retourne une instance de <see langword="IntPtr" /> faisant référence à <see langword="struct" /> contenant des informations détaillées sur le format de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-131">Returns a valid <see langword="IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6582f-132">La structure utilisée en tant que `targetWaveFormat` et retournée par la méthode doit compatible avec le `WAVEFORMATEX` disponible sous SAPI, et la valeur retournée doit être allouée à l’aide de `CoTaskMemAlloc`.</span><span class="sxs-lookup"><span data-stu-id="6582f-132">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="6582f-133">Le `struct` doit fournir une fonctionnalité équivalente à :</span><span class="sxs-lookup"><span data-stu-id="6582f-133">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="6582f-134">L’implémentation de l’exemple ci-dessous valide les entrées sélectionnées, leur utilisation, s’ils figurent dans les tolérances, sinon à l’aide des valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="6582f-134">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6582f-135">
            <para>Objet héritant de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> doit examiner le format de sortie tel que spécifié par <paramref name="targetWaveFormat" /> et retourner le format le plus proche pris en charge.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-135">
              <para>Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member RemoveLexicon : Uri * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.RemoveLexicon (uri, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="6582f-136">Instance valide de <see langword="System.Uri" /> indiquant l'emplacement des informations de lexique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-136">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="6582f-137">Référence à une interface <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> passée par l'infrastructure de la plateforme pour autoriser l'accès aux ressources de l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-137">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6582f-138">Supprime un lexique actuellement chargé par le <see langword="Synthesizer" /><see langword="Voice" /> implémenté par l’instance actuelle de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-138">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6582f-139">Un lexique prononciation est une collection de mots ou expressions ainsi que leur prononciation spécifiée à l’aide d’un caractère alphabétique prononciation approprié.</span><span class="sxs-lookup"><span data-stu-id="6582f-139">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="6582f-140">Cette méthode est généralement appelée en réponse à une <xref:System.Speech.Synthesis> en fonction des applications qui appellent <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> et à l’aide de la voix synthétiseur implémentée par actuel <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span><span class="sxs-lookup"><span data-stu-id="6582f-140">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6582f-141">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> utilise le lexique URI pour interroger une instance `System.Collections.Generic.Dictionary` pour le `System.IO.Stream`, ferme le flux et supprime l’uri faisant référence au lexique.</span><span class="sxs-lookup"><span data-stu-id="6582f-141">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6582f-142">
            <para>Il incombe à l’implémentation pour maîtriser entièrement et être en mesure de traiter le lexique stocké sur <paramref name="uri" />. L’implémentation doit également effectuer le suivi et gérer les durées de vie de tous les lexiques qu'il le supprime.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-142">
              <para>It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />. The implementation must also keep track and manage the lifetimes of all lexicons it removes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member Speak : System.Speech.Synthesis.TtsEngine.TextFragment[] * nativeint * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.Speak (fragment, waveHeader, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment">
          <span data-ttu-id="6582f-143">Tableau d'instances <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> contenant le texte devant être restitué par la reconnaissance vocale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-143">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span>
          </span>
        </param>
        <param name="waveHeader">
          <span data-ttu-id="6582f-144">
            <see langword="IntPtr" /> qui pointe vers une structure contenant le format de sortie audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-144">An <see langword="IntPtr" /> pointing to a structure containing audio output format.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="6582f-145">Référence à une interface <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> passée par l'infrastructure de la plateforme pour autoriser l'accès aux ressources de l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-145">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6582f-146">Affiche le tableau <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> spécifié au format de sortie spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-146">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6582f-147">La structure utilisée en tant que `waveHeader` et retournée par la méthode doit compatible avec le `WAVEFORMATEX` disponible sous SAPI.</span><span class="sxs-lookup"><span data-stu-id="6582f-147">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="6582f-148">Le `struct` doit fournir une fonctionnalité équivalente à :</span><span class="sxs-lookup"><span data-stu-id="6582f-148">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="6582f-149">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisé héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="6582f-149">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="6582f-150">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="6582f-150">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="6582f-151">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances doit être passé à la `Speak` méthode sur un moteur de synthèse sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6582f-151">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="6582f-152">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retournée par le <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="6582f-152">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="6582f-153">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="6582f-153">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="6582f-154">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement pour le lecteur d’un indicateur de progression synthétiseur est créé.</span><span class="sxs-lookup"><span data-stu-id="6582f-154">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="6582f-155">Un moteur de rendu vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="6582f-155">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6582f-156">
            <para>Synthétiseur vocal personnalisé implémente à l’aide de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> et <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> Professionnel en tant que filtres ou les intermédiaires entre les applications de synthétiseur construites à l’aide de l’infrastructure de plateforme à travers les membres de le <see cref="N:System.Speech.Synthesis" /> espace de noms et moteurs de synthèse vocale système sous-jacents.  A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implémentation : 1.  Interruptions ou modifier des aspects d’entrant <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objets 2.  Génère les événements nécessaires à l’aide de la référence de site à un <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 3 de l’instance.  Génère la synthèse vocale réelle.  Génération de discours est généralement effectuée en appelant <c>Speak</c> sur l’un de la reconnaissance vocale fournis par le système d’exploitation de moteurs de rendu.  Si un des moteurs de rendu disponibles vocale n’est pas utilisé, un objet héritant <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> doit créer son propre moteur de rendu de reconnaissance vocale.  L’accès à la <c>Speak</c> méthode sur obtenus en utilisant le Registre et la réflexion.  Lorsque vous héritez de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, vous devez substituer les membres suivants : <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, et <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6582f-156">
              <para>Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.  A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:  1.  Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects  2.  Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance  3.  Generates the actual synthesized speech.  Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.  If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.  Access to the <c>Speak</c> method on obtained using the registry and reflection. .  When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>