<Type Name="SpeechEventInfo" FullName="System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23773b95b76d936a14ad51700a4768d1371b3119" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55352386" /></Metadata><TypeSignature Language="C#" Value="public struct SpeechEventInfo : IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpeechEventInfo extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpeechEventInfo&#xA;Implements IEquatable(Of SpeechEventInfo)" />
  <TypeSignature Language="C++ CLI" Value="public value class SpeechEventInfo : IEquatable&lt;System::Speech::Synthesis::TtsEngine::SpeechEventInfo&gt;" />
  <TypeSignature Language="F#" Value="type SpeechEventInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ece22-101">Utilisé pour spécifier le type d’événement et ses arguments (le cas échéant) à générer dans le cadre de la restitution de la conversion de texte par synthèse vocale par un moteur de synthèse vocal personnalisé.</span><span class="sxs-lookup"><span data-stu-id="ece22-101">Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece22-102">Un moteur de synthèse vocale personnalisée demande la génération d’événements sous la plateforme de reconnaissance vocale en fournissant un approprié <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> l’instance à <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> membre de la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> objet de site du moteur passé aux implémentations de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="ece22-102">A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece22-103">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisée héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="ece22-103">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="ece22-104">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-104">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="ece22-105">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances à passer à la `Speak` méthode sur un moteur de synthèse sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="ece22-105">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="ece22-106">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retourné par la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="ece22-106">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="ece22-107">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="ece22-107">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="ece22-108">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement au lecteur une jauge de progression du synthétiseur est créée.</span><span class="sxs-lookup"><span data-stu-id="ece22-108">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="ece22-109">Un moteur de rendu de reconnaissance vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="ece22-109">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 eventId, int16 parameterType, int32 param1, native int param2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As Short, parameterType As Short, param1 As Integer, param2 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechEventInfo(short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo : int16 * int16 * int * nativeint -&gt; System.Speech.Synthesis.TtsEngine.SpeechEventInfo" Usage="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo (eventId, parameterType, param1, param2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int16" />
        <Parameter Name="parameterType" Type="System.Int16" />
        <Parameter Name="param1" Type="System.Int32" />
        <Parameter Name="param2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="ece22-110">Instance de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> indiquant le tri de l'événement de plateforme de reconnaissance vocale que l'objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> doit gérer.</span><span class="sxs-lookup"><span data-stu-id="ece22-110">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> indicating the sort of Speech platform event the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to handle.</span></span></param>
        <param name="parameterType"><span data-ttu-id="ece22-111">Instance d'<see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> indiquant comment la référence <see langword="System.IntPtr" /> de <paramref name="param2" /> doit être interprétée, et, implicitement, l'utilisation de <paramref name="param1" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-111">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> indicating how the <see langword="System.IntPtr" /> reference of <paramref name="param2" /> is to be interpreted, and, by implication, the use of <paramref name="param1" />.</span></span></param>
        <param name="param1"><span data-ttu-id="ece22-112">Valeur entière à passer à la plateforme de reconnaissance vocale lorsque l'événement demandé par l'instance <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à construire est généré.</span><span class="sxs-lookup"><span data-stu-id="ece22-112">An integer value to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
<span data-ttu-id="ece22-113">La signification exacte de cet entier est implicitement déterminée par la valeur <paramref name="parameterType" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-113">The exact meaning of this integer is implicitly determined by the value of <paramref name="parameterType" />.</span></span></param>
        <param name="param2"><span data-ttu-id="ece22-114">Instance <see langword="System.IntPtr" /> référençant un objet.</span><span class="sxs-lookup"><span data-stu-id="ece22-114">A <see langword="System.IntPtr" /> instance referencing an object.</span></span> <span data-ttu-id="ece22-115">à passer à la plateforme de reconnaissance vocale lorsque l'événement demandé par l'instance <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à construire est généré.</span><span class="sxs-lookup"><span data-stu-id="ece22-115">to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
<span data-ttu-id="ece22-116">Le type qui doit être référencé est défini explicitement par la valeur <paramref name="parameterType" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-116">The type which must be referenced is explicitly defined by the value <paramref name="parameterType" />.</span></span> <span data-ttu-id="ece22-117">Valeur <see langword="System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-117">The value <see langword="System.IntPtr.Zero" />.</span></span></param>
        <summary><span data-ttu-id="ece22-118">Construit une <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />appropriée.</span><span class="sxs-lookup"><span data-stu-id="ece22-118">Constucts an appropriate <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece22-119">Utilisé pour des valeurs autorisées `parameterType`, `param1`, et `param2` et leur signification est déterminée par le type d’événement demandé, tel que spécifié par le membre de <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> utilisé pour `eventId`.</span><span class="sxs-lookup"><span data-stu-id="ece22-119">Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.</span></span>  
  
 <span data-ttu-id="ece22-120">Pour plus d’informations sur les valeurs appropriées pour `parameterType`, `param1`, et `param2`, consultez la documentation pour <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-120">For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span></span>  
  
 <span data-ttu-id="ece22-121">Le type des événements qui peuvent être gérées par l’infrastructure de plateforme de reconnaissance vocale peut être obtenu via la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur l’implémentation de site du moteur synthétiseur de <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span><span class="sxs-lookup"><span data-stu-id="ece22-121">The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece22-122">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisée héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="ece22-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="ece22-123">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="ece22-124">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances à passer à la `Speak` méthode sur un moteur de synthèse sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="ece22-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="ece22-125">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retourné par la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="ece22-125">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="ece22-126">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="ece22-126">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="ece22-127">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement au lecteur une jauge de progression du synthétiseur est créée.</span><span class="sxs-lookup"><span data-stu-id="ece22-127">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="ece22-128">Un moteur de rendu de reconnaissance vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="ece22-128">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ece22-129">Détermine si une instance de <c>SpeechEventInfo</c> est égale à un autre objet.</span><span class="sxs-lookup"><span data-stu-id="ece22-129">Determines whether a <c>SpeechEventInfo</c> instance is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="speechEventInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ece22-130">Objet à évaluer.</span><span class="sxs-lookup"><span data-stu-id="ece22-130">The object to evaluate.</span></span></param>
        <summary><span data-ttu-id="ece22-131">Détermine si un objet spécifié est une instance de <c>SpeechEventInfo</c> et est égal à l’instance actuelle de <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="ece22-131">Determines whether a specified object is an instance of <c>SpeechEventInfo</c> and equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns><span data-ttu-id="ece22-132"><see langword="true" /> si <paramref name="obj" /> est égal à l’objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-132"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::SpeechEventInfo other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="speechEventInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ece22-133">Objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à évaluer.</span><span class="sxs-lookup"><span data-stu-id="ece22-133">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to evaluate.</span></span></param>
        <summary><span data-ttu-id="ece22-134">Détermine si un objet <c>SpeechEventInfo</c> spécifié est égal à l’instance actuelle de <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="ece22-134">Determines whether a specified <c>SpeechEventInfo</c> object is equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns><span data-ttu-id="ece22-135"><see langword="true" /> si <paramref name="other" /> est égal à l’objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-135"><see langword="true" /> if <paramref name="other" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public short EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 EventId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short EventId { short get(); };" />
      <MemberSignature Language="F#" Value="member this.EventId : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece22-136">Obtient et définit l'événement de plateforme de reconnaissance vocale demandé en utilisant une instance de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-136">Gets and set the Speech platform event which an instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="ece22-137">Retourne un membre <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> en tant que <see langword="short" />, indiquant le type d'événement que l'objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> doit générer.</span><span class="sxs-lookup"><span data-stu-id="ece22-137">Returns a member of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> as a <see langword="short" />, indicating the event type the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ece22-138">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisée héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="ece22-138">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="ece22-139">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-139">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="ece22-140">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances à passer à la `Speak` méthode sur un moteur de synthèse sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="ece22-140">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="ece22-141">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retourné par la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="ece22-141">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="ece22-142">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="ece22-142">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="ece22-143">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement au lecteur une jauge de progression du synthétiseur est créée.</span><span class="sxs-lookup"><span data-stu-id="ece22-143">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="ece22-144">Les paramètres sur <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, y compris <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> sont utilisées pour enregistrer l’événement généré par le biais du `LogSpeechEvent` (méthode).</span><span class="sxs-lookup"><span data-stu-id="ece22-144">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="ece22-145">Un moteur de rendu de reconnaissance vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="ece22-145">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="speechEventInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ece22-146">Fournit un code de hachage pour un objet <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="ece22-146">Provides a hash code for a <c>SpeechEventInfo</c> object.</span></span></summary>
        <returns><span data-ttu-id="ece22-147">Code de hachage d'un objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-147">A hash code for a <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="event1 = event2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="ece22-148">Objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à comparer à <paramref name="event2" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-148">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event2" />.</span></span></param>
        <param name="event2"><span data-ttu-id="ece22-149">Objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à comparer à <paramref name="event1" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-149">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event1" />.</span></span></param>
        <summary><span data-ttu-id="ece22-150">Détermine si deux instances de <c>SpeechEventInfo</c> sont égales.</span><span class="sxs-lookup"><span data-stu-id="ece22-150">Determines whether two instances of <c>SpeechEventInfo</c> are equal.</span></span></summary>
        <returns><span data-ttu-id="ece22-151"><see langword="true" /> si <paramref name="event1" /> est identique à <paramref name="event2" />, sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-151"><see langword="true" /> if <paramref name="event1" /> is the same as <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ece22-152">La méthode équivalente pour cet opérateur est <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ece22-152">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality (event1, event2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="ece22-153">Objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à comparer à <paramref name="event2" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-153">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event2" />.</span></span></param>
        <param name="event2"><span data-ttu-id="ece22-154">Objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> à comparer à <paramref name="event1" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-154">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event1" />.</span></span></param>
        <summary><span data-ttu-id="ece22-155">Détermine si deux instances de <c>SpeechEventInfo</c> ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="ece22-155">Determines whether two instances of <c>SpeechEventInfo</c> are not equal.</span></span></summary>
        <returns><span data-ttu-id="ece22-156"><see langword="true" /> si <paramref name="event1" /> est différent de <paramref name="event2" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-156"><see langword="true" /> if <paramref name="event1" /> is different from <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ece22-157">La méthode équivalente pour cet opérateur est <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ece22-157">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param1">
      <MemberSignature Language="C#" Value="public int Param1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Param1" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param1 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Param1 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Param1 : int" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece22-158">Obtient et définit la valeur de <see langword="integer" /> (<paramref name="param1" /> dans le constructeur) à passer à la plateforme de reconnaissance vocale pour générer un événement demandé en utilisant l'instance actuelle de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-158">Gets and set the <see langword="integer" /> value (<paramref name="param1" /> in the constructor) to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="ece22-159">Retourne l'<see langword="integer" /> à passer à la plateforme de reconnaissance vocale lorsque l'événement spécifié par l'instance actuelle de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> est généré.</span><span class="sxs-lookup"><span data-stu-id="ece22-159">Returns the <see langword="integer" /> to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece22-160">La configuration requise et la signification de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> propriété du <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> déterminée de manière unique par les valeurs de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> et <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> propriétés la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span><span class="sxs-lookup"><span data-stu-id="ece22-160">The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="ece22-161">Pour plus d’informations sur la façon de les utiliser <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, consultez la documentation pour <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="ece22-161">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece22-162">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisée héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="ece22-162">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="ece22-163">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-163">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="ece22-164">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances à passer à la `Speak` méthode sur un moteur de synthèse sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="ece22-164">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="ece22-165">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retourné par la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="ece22-165">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="ece22-166">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="ece22-166">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="ece22-167">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement au lecteur une jauge de progression du synthétiseur est créée.</span><span class="sxs-lookup"><span data-stu-id="ece22-167">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="ece22-168">Les paramètres sur <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, y compris <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> sont utilisées pour enregistrer l’événement généré par le biais du `LogSpeechEvent` (méthode).</span><span class="sxs-lookup"><span data-stu-id="ece22-168">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="ece22-169">Un moteur de rendu de reconnaissance vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="ece22-169">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param2">
      <MemberSignature Language="C#" Value="public IntPtr Param2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Param2" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param2 As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Param2 { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Param2 : nativeint" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece22-170">Obtient et définit l'instance de <see langword="System.IntPtr" /> (<paramref name="param2" /> dans le constructeur) qui référence l'objet à passer à la plateforme de reconnaissance vocale pour générer un événement demandé en utilisant l'instance actuelle de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ece22-170">Gets and set the <see langword="System.IntPtr" /> instance (<paramref name="param2" /> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="ece22-171">Retourne le <see langword="System.IntPtr" /> qui référence l'objet à passer à la plateforme vocale lorsque l'événement spécifié par l'instance actuelle de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> est généré.</span><span class="sxs-lookup"><span data-stu-id="ece22-171">Returns the <see langword="System.IntPtr" /> referencing the object to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece22-172">La configuration requise sur le `System.IntPtr` de référence de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> propriété de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> déterminée de manière unique par les valeurs de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> et <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> propriétés la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span><span class="sxs-lookup"><span data-stu-id="ece22-172">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="ece22-173">Pour plus d’informations sur la façon de les utiliser <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, consultez la documentation pour <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="ece22-173">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece22-174">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisée héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="ece22-174">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="ece22-175">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-175">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="ece22-176">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances à passer à la `Speak` méthode sur un moteur de synthèse sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="ece22-176">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="ece22-177">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retourné par la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="ece22-177">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="ece22-178">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="ece22-178">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="ece22-179">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement au lecteur une jauge de progression du synthétiseur est créée.</span><span class="sxs-lookup"><span data-stu-id="ece22-179">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="ece22-180">Les paramètres sur <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, y compris <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> sont utilisées pour enregistrer l’événement généré par le biais du `LogSpeechEvent` (méthode).</span><span class="sxs-lookup"><span data-stu-id="ece22-180">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="ece22-181">Un moteur de rendu de reconnaissance vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="ece22-181">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public short ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short ParameterType { short get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece22-182">Retourne le type de données de l'objet pointé vers <see langword="IntPtr" /> retourné par le paramètre <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> sur l'objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ece22-182">Returns the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter on the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="ece22-183">Valeur <see langword="short" /> correspondant à un membre de l'énumération <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> et indiquant le type de données de l'objet vers lequel pointe <see langword="IntPtr" /> retourné par le paramètre <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> et utilisé comme deuxième argument du constructeur de l'objet <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ece22-183">A <see langword="short" /> value corresponding to a member of the <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> enumeration and indicating the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter and used as the second argument for the constructor of the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece22-184">La configuration requise sur le `System.IntPtr` de référence de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> propriété de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> déterminée de manière unique par les valeurs de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> et <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> propriétés la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span><span class="sxs-lookup"><span data-stu-id="ece22-184">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="ece22-185">Pour plus d’informations sur la façon de les utiliser <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, consultez la documentation pour <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="ece22-185">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece22-186">L’exemple ci-dessous fait partie d’une implémentation de synthèse vocale personnalisée héritant de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>et à l’aide de l’utilisation de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, et <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="ece22-186">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="ece22-187">L’implémentation de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="ece22-187">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="ece22-188">Reçoit un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances et crée un tableau de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances à passer à la `Speak` méthode sur un moteur de synthèse sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="ece22-188">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="ece22-189">Si le <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valeur d’énumération par trouvé à partir de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.FragmentState> retourné par la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propriété de chaque <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance est <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, l’implémentation</span><span class="sxs-lookup"><span data-stu-id="ece22-189">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="ece22-190">Traduit Americanism à Britishisms dans le texte à énoncer.</span><span class="sxs-lookup"><span data-stu-id="ece22-190">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="ece22-191">Si le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propriété sur le <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> fournis à la prise en charge de l’implémentation des interfaces le <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> type d’événement, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance est utilisée pour créer un événement au lecteur une jauge de progression du synthétiseur est créée.</span><span class="sxs-lookup"><span data-stu-id="ece22-191">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="ece22-192">Les paramètres sur <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, y compris <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> sont utilisées pour enregistrer l’événement généré par le biais du `LogSpeechEvent` (méthode).</span><span class="sxs-lookup"><span data-stu-id="ece22-192">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="ece22-193">Un moteur de rendu de reconnaissance vocale est ensuite appelé avec le texte modifié <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tableau.</span><span class="sxs-lookup"><span data-stu-id="ece22-193">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>