<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4a42e4105c7182a6a8bee7f31dbc651bf24c007" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <TypeSignature Language="VB.NET" Value="Public Class SayAs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SayAs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contient des informations sur le type de contenu (tel que les devises, la date ou l'adresse) ou la construction de langage qui déterminent le texte doit être prononcé.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SayAs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <c>SayAs</c>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés de la <xref:System.Speech.Synthesis.TtsEngine.SayAs> classe sont utilisés pour obtenir ou définir les valeurs des attributs de la `say-as` élément dans le balisage SSML. Le <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> propriété utilise un <xref:System.Speech.Synthesis.TtsEngine.SayAs> instance pour informer le <xref:System.Speech.Synthesis.SpeechSynthesizer> comment parler le texte contenu dans le <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> propriété d’un <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de l’attribut <c>detail</c> pour un élément <c>say-as</c> dans le langage de balisage SSML d’une invite.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> propriété obtient ou définit la valeur de la <xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A> propriété dans un <xref:System.Speech.Synthesis.TtsEngine.SayAs> instance.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de l’attribut <c>format</c> pour un élément <c>say-as</c> dans le langage de balisage SSML d’une invite.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> propriété obtient ou définit la valeur de la <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> propriété dans un <xref:System.Speech.Synthesis.TtsEngine.SayAs> instance.  
  
 Par exemple, une invite de commandes peut contenir la phrase « l’heure est `<say-as interpret-as="time"> 05:00 </say-as>`».  Dans cet exemple, `05:00` peut être prononcé « cinq heures » ou « cinq AM » ou « oh cinq cents ». Le <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> autorise une valeur de propriété du `interpret-as` attribut être étendu pour spécifier le format de temps de parler. Si la valeur de la `interpret-as` attribut est « temps : 24 heure », le <xref:System.Speech.Synthesis.SpeechSynthesizer> parle « oh cinq cents ». Si la valeur de la `interpret-as` attribut est « heure de temps : 12 », le <xref:System.Speech.Synthesis.SpeechSynthesizer> parle « cinq A M ».  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpretAs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterpretAs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de l’attribut <c>interpret-as</c> pour un élément <c>say-as</c> dans le langage de balisage SSML d’une invite.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> propriété obtient ou définit la valeur de la <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> propriété dans un <xref:System.Speech.Synthesis.TtsEngine.SayAs> instance.  
  
 Le <xref:System.Speech.Synthesis.SpeechSynthesizer> utilise le type de contenu indiqué par le <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> propriété pour déterminer comment afficher le texte spécifié.  
  
 Par exemple, le nom Edgar pourrait être prononcé en tant que nom : « Mon nom est Edgar ». Ou elle pourrait être énoncé avec des lettres, comme spécifié par le `interpret-as` attribut cette phrase : « Mon nom est `<say-as interpret-as="spell-out"> Edgar </say-as>`. » Dans ce cas, le <xref:System.Speech.Synthesis.SpeechSynthesizer> parle Edgar « R A G E D ».  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>