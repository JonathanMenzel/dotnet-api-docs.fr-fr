<Type Name="MouseGesture" FullName="System.Windows.Input.MouseGesture">
  <TypeSignature Language="C#" Value="public class MouseGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseGesture : System::Windows::Input::InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e67bd-101">Définit un mouvement d'entrée de souris qui peut être utilisé pour appeler une commande.</span><span class="sxs-lookup"><span data-stu-id="e67bd-101">Defines a mouse input gesture that can be used to invoke a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67bd-102">Contrairement à un <xref:System.Windows.Input.KeyGesture>, un <xref:System.Windows.Input.MouseAction> pas nécessairement être associés à <xref:System.Windows.Input.ModifierKeys> valide <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-102">Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> to be a valid <xref:System.Windows.Input.MouseGesture>.</span></span>  
  
 <span data-ttu-id="e67bd-103">A <xref:System.Windows.Input.MouseGesture> peuvent être liés à un <xref:System.Windows.Input.RoutedCommand> (ou autres <xref:System.Windows.Input.ICommand> implémentations) via un <xref:System.Windows.Input.MouseBinding> afin que la commande est appelée lorsque le <xref:System.Windows.Input.MouseGesture> se produit.</span><span class="sxs-lookup"><span data-stu-id="e67bd-103">A <xref:System.Windows.Input.MouseGesture> can be bound to a <xref:System.Windows.Input.RoutedCommand> (or other <xref:System.Windows.Input.ICommand> implementations) through a <xref:System.Windows.Input.MouseBinding> so that the command is invoked when the <xref:System.Windows.Input.MouseGesture> occurs.</span></span>  
  
 <span data-ttu-id="e67bd-104">Pour <xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] utilisations d’attributs, la propriété qui est généralement définie dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] est <xref:System.Windows.Input.MouseBinding.Gesture%2A>, dans les cas où le mouvement peut représenter une action de la souris et une ou plusieurs touches de modification.</span><span class="sxs-lookup"><span data-stu-id="e67bd-104">For <xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.MouseBinding.Gesture%2A>, in cases where the gesture can represent both a mouse action and one or more modifier key.</span></span> <span data-ttu-id="e67bd-105">Vous pouvez également définir le <xref:System.Windows.Input.MouseBinding.Gesture%2A> propriété seulement une action de la souris.</span><span class="sxs-lookup"><span data-stu-id="e67bd-105">You can also set the <xref:System.Windows.Input.MouseBinding.Gesture%2A> property to be just a mouse action.</span></span> <span data-ttu-id="e67bd-106">En règle générale, il est recommandé d’utiliser uniquement la <xref:System.Windows.Input.KeyBinding.Gesture%2A> d’attribut de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], plutôt que de définir <xref:System.Windows.Input.MouseBinding.MouseAction%2A>, même si vous ne spécifiez pas de modificateurs.</span><span class="sxs-lookup"><span data-stu-id="e67bd-106">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than setting <xref:System.Windows.Input.MouseBinding.MouseAction%2A>, even if you do not specify modifiers.</span></span> <span data-ttu-id="e67bd-107">Cela permet d’éviter toute ambiguïté, fournit la syntaxe la plus simplifiée et la représentation la plus simple pour la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="e67bd-107">This will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="e67bd-108"><xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] utilisations d’éléments objet sont possibles, mais rare, car vous pouvez définir normalement la <xref:System.Windows.Input.MouseBinding.Gesture%2A> propriété du <xref:System.Windows.Input.MouseBinding> inline sans l’utilisation de la syntaxe d’élément de propriété.</span><span class="sxs-lookup"><span data-stu-id="e67bd-108"><xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] object element usages are possible but uncommon, because you can ordinarily set the <xref:System.Windows.Input.MouseBinding.Gesture%2A> property of <xref:System.Windows.Input.MouseBinding> inline without the use of property element syntax.</span></span>  
  
<a name="xamlAttributeUsage_MouseGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e67bd-109">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="e67bd-109">XAML Attribute Usage</span></span>  
  
```  
<object property="mouseAction"/>  
- or -  
<object property="oneOrMoreModifierKeys+mouseAction"/>  
```  
  
<a name="xamlValues_MouseGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e67bd-110">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="e67bd-110">XAML Values</span></span>  
 `mouseAction`  
 <xref:System.Windows.Input.MouseAction>  
  
 <span data-ttu-id="e67bd-111">Action de souris unique.</span><span class="sxs-lookup"><span data-stu-id="e67bd-111">A single mouse action.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="e67bd-112">Une ou plusieurs touches de modification, définies par le <xref:System.Windows.Input.ModifierKeys> énumération.</span><span class="sxs-lookup"><span data-stu-id="e67bd-112">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration.</span></span> <span data-ttu-id="e67bd-113">Si plusieurs clés de modificateur est fourni, chaque est délimitée par un caractère « + ».</span><span class="sxs-lookup"><span data-stu-id="e67bd-113">If more than one modifier key is provided, each modifier key is delimited with a "+" character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67bd-114">L’exemple suivant montre comment pour créer un <xref:System.Windows.Input.MouseGesture> et y associer un <xref:System.Windows.Input.RoutedCommand> via un <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-114">The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.</span></span>  <span data-ttu-id="e67bd-115">Lorsque vous cliquez sur la roulette de la souris alors que le <xref:System.Windows.Input.ModifierKeys.Control> touche est enfoncée, le <xref:System.Windows.Input.ApplicationCommands.Open%2A> est appelé.</span><span class="sxs-lookup"><span data-stu-id="e67bd-115">When the mouse wheel is clicked while the <xref:System.Windows.Input.ModifierKeys.Control> key is pressed, the <xref:System.Windows.Input.ApplicationCommands.Open%2A> is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#mousebindingmousegesturexaml)]  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67bd-116">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.MouseGesture" />.</span><span class="sxs-lookup"><span data-stu-id="e67bd-116">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e67bd-117">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.MouseGesture" />.</span><span class="sxs-lookup"><span data-stu-id="e67bd-117">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
      </Parameters>
      <Docs>
        <param name="mouseAction"><span data-ttu-id="e67bd-118">Action associée à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-118">The action associated with this gesture.</span></span></param>
        <summary><span data-ttu-id="e67bd-119">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.MouseGesture" /> à l'aide du <see cref="T:System.Windows.Input.MouseAction" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="e67bd-119">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class using the specified <see cref="T:System.Windows.Input.MouseAction" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e67bd-120"><paramref name="mouseAction" /> n’est pas une valeur de <see cref="T:System.Windows.Input.MouseAction" /> valide.</span><span class="sxs-lookup"><span data-stu-id="e67bd-120"><paramref name="mouseAction" /> is not a valid <see cref="T:System.Windows.Input.MouseAction" /> value.</span></span></exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="mouseAction"><span data-ttu-id="e67bd-121">Action associée à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-121">The action associated with this gesture.</span></span></param>
        <param name="modifiers"><span data-ttu-id="e67bd-122">Modificateurs associés à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-122">The modifiers associated with this gesture.</span></span></param>
        <summary><span data-ttu-id="e67bd-123">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.MouseGesture" /> avec les <see cref="T:System.Windows.Input.MouseAction" /> et <see cref="T:System.Windows.Input.ModifierKeys" /> spécifiés.</span><span class="sxs-lookup"><span data-stu-id="e67bd-123">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class using the specified <see cref="T:System.Windows.Input.MouseAction" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e67bd-124"><paramref name="mouseAction" /> n'est pas une valeur <see cref="T:System.Windows.Input.MouseAction" /> valide.</span><span class="sxs-lookup"><span data-stu-id="e67bd-124"><paramref name="mouseAction" /> is not a valid <see cref="T:System.Windows.Input.MouseAction" /> value</span></span>  
  
 <span data-ttu-id="e67bd-125">- ou -</span><span class="sxs-lookup"><span data-stu-id="e67bd-125">-or-</span></span>  
  
 <span data-ttu-id="e67bd-126"><paramref name="modifiers" /> n’est pas une valeur de <see cref="T:System.Windows.Input.ModifierKeys" /> valide.</span><span class="sxs-lookup"><span data-stu-id="e67bd-126"><paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value.</span></span></exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement"><span data-ttu-id="e67bd-127">Cible.</span><span class="sxs-lookup"><span data-stu-id="e67bd-127">The target.</span></span></param>
        <param name="inputEventArgs"><span data-ttu-id="e67bd-128">Données d'événement d'entrée à comparer à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-128">The input event data to compare with this gesture.</span></span></param>
        <summary><span data-ttu-id="e67bd-129">Détermine si le <see cref="T:System.Windows.Input.MouseGesture" /> correspond à l'entrée associée à l'objet <see cref="T:System.Windows.Input.InputEventArgs" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="e67bd-129">Determines whether <see cref="T:System.Windows.Input.MouseGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="e67bd-130"><see langword="true" /> si les données d'événement correspondent à ce <see cref="T:System.Windows.Input.MouseGesture" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e67bd-130"><see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.MouseGesture" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e67bd-131">L’exemple suivant montre comment tester si un <xref:System.Windows.Input.MouseGesture> correspond à l’entrée associée à une instance d’un <xref:System.Windows.Input.InputEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-131">The following example shows how to test whether a <xref:System.Windows.Input.MouseGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="e67bd-132">A <xref:System.Windows.UIElement.MouseDown> Gestionnaire d’événements compare les données d’événement avec le <xref:System.Windows.Input.MouseGesture> à l’aide de la <xref:System.Windows.Input.MouseGesture.Matches%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e67bd-132">A <xref:System.Windows.UIElement.MouseDown> event handler compares the event data with the <xref:System.Windows.Input.MouseGesture> by using the <xref:System.Windows.Input.MouseGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlermousegesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlermousegesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e67bd-133">Obtient ou définit les touches de modification associées à ce <see cref="T:System.Windows.Input.MouseGesture" />.</span><span class="sxs-lookup"><span data-stu-id="e67bd-133">Gets or sets the modifier keys associated with this <see cref="T:System.Windows.Input.MouseGesture" />.</span></span></summary>
        <value><span data-ttu-id="e67bd-134">Touches de modification associées à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-134">The modifier keys associated with this gesture.</span></span> <span data-ttu-id="e67bd-135">La valeur par défaut est <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span><span class="sxs-lookup"><span data-stu-id="e67bd-135">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67bd-136">Contrairement à un <xref:System.Windows.Input.KeyGesture>, un <xref:System.Windows.Input.MouseAction> pas nécessairement être associés à <xref:System.Windows.Input.ModifierKeys> pour être valide <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-136">Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> in order to be a valid <xref:System.Windows.Input.MouseGesture>.</span></span>  
  
 <span data-ttu-id="e67bd-137"><xref:System.Windows.Input.ModifierKeys> est un peu énumération de champ, il est donc possible pour plusieurs touches de modification être enfoncées en même temps.</span><span class="sxs-lookup"><span data-stu-id="e67bd-137"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span> <span data-ttu-id="e67bd-138">Utilisez des opérations de bits pour déterminer le jeu exact de touches de modification enfoncées.</span><span class="sxs-lookup"><span data-stu-id="e67bd-138">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e67bd-139">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="e67bd-139">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e67bd-140">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="e67bd-140">XAML Values</span></span>  
 <span data-ttu-id="e67bd-141">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="e67bd-141">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="e67bd-142">Une ou plusieurs touches de modification, définies par le <xref:System.Windows.Input.ModifierKeys> énumération, délimitée par un caractère « + ».</span><span class="sxs-lookup"><span data-stu-id="e67bd-142">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67bd-143">L’exemple suivant montre comment pour créer un <xref:System.Windows.Input.MouseGesture> et y associer un <xref:System.Windows.Input.RoutedCommand> via un <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-143">The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="MouseAction">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseAction MouseAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseAction MouseAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.MouseAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseAction As MouseAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseAction MouseAction { System::Windows::Input::MouseAction get(); void set(System::Windows::Input::MouseAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e67bd-144">Obtient ou définit le <see cref="T:System.Windows.Input.MouseAction" /> associé à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-144">Gets or sets the <see cref="T:System.Windows.Input.MouseAction" /> associated with this gesture.</span></span></summary>
        <value><span data-ttu-id="e67bd-145">Action de souris associée à ce mouvement.</span><span class="sxs-lookup"><span data-stu-id="e67bd-145">The mouse action associated with this gesture.</span></span> <span data-ttu-id="e67bd-146">La valeur par défaut est <see cref="F:System.Windows.Input.MouseAction.None" />.</span><span class="sxs-lookup"><span data-stu-id="e67bd-146">The default value is <see cref="F:System.Windows.Input.MouseAction.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67bd-147">Contrairement à un <xref:System.Windows.Input.KeyGesture>, un <xref:System.Windows.Input.MouseAction> pas nécessairement être associés à <xref:System.Windows.Input.ModifierKeys> pour être valide <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-147">Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> in order to be a valid <xref:System.Windows.Input.MouseGesture>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67bd-148">L’exemple suivant montre comment pour créer un <xref:System.Windows.Input.MouseGesture> et y associer un <xref:System.Windows.Input.RoutedCommand> via un <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="e67bd-148">The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>