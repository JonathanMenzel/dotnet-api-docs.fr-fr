<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICommand.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ea5eff6a81bd27b0ab5ad70e628f1d59b7ee7f56.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea5eff6a81bd27b0ab5ad70e628f1d59b7ee7f56</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ICommand">
          <source>Defines a command.</source>
          <target state="translated">Définit une commande.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.RoutedUICommand&gt;</ph> are two implementations of the <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface in <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Input.RoutedUICommand&gt;</ph> deux implémentations de la <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph> dans l’interface <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>ICommand in Windows Runtime apps</source>
          <target state="translated">ICommand dans Windows Runtime applications</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface est le contrat de code pour les commandes qui sont écrits dans les applications .NET pour Windows Runtime.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML <ph id="ph1">`Button`</ph> and in particular an <ph id="ph2">`AppBarButton`</ph>.</source>
          <target state="translated">Ces commandes fournissent le comportement d’exécution des commandes pour les éléments d’interface utilisateur comme un XAML Windows Runtime <ph id="ph1">`Button`</ph> et en particulier un <ph id="ph2">`AppBarButton`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</source>
          <target state="translated">Si vous définissez des commandes pour les applications Windows Runtime, vous utilisez essentiellement les mêmes techniques que vous utiliseriez pour définir des commandes pour une application .NET.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>Implement the command by defining a class that implements <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> and specifically implement the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand.Execute%2A&gt;</ph> method.</source>
          <target state="translated">Implémenter la commande en définissant une classe qui implémente <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> et implémentez spécifiquement le <ph id="ph2">&lt;xref:System.Windows.Input.ICommand.Execute%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>XAML for Windows Runtime does not support x<ph id="ph1">`:Static`</ph>, so don't attempt to use the <ph id="ph2">`x:Static`</ph> markup extension if the command is used from Windows Runtime XAML.</source>
          <target state="translated">XAML pour le Windows Runtime ne prend pas en charge x<ph id="ph1">`:Static`</ph>, donc vous n’essayez pas d’utiliser le <ph id="ph2">`x:Static`</ph> extension de balisage si la commande est utilisée à partir de XAML Windows Runtime.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</source>
          <target state="translated">En outre, le Windows Runtime n’a pas de toutes les bibliothèques de la commande prédéfinie, donc la syntaxe XAML indiquée ici ne s’applique pas réellement dans le cas où vous êtes implémentant l’interface et la définition de la commande pour l’utilisation de Windows Runtime.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>XAML Attribute Usage</source>
          <target state="translated">Utilisation d'attributs XAML</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName<ept id="p2">*</ept>"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName<ept id="p2">*</ept>"/&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName.predefinedCommandName<ept id="p2">*</ept>"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName.predefinedCommandName<ept id="p2">*</ept>"/&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="{ <bpt id="p2">*</bpt>customClassName.customCommandName<ept id="p2">*</ept>}"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="{ <bpt id="p2">*</bpt>customClassName.customCommandName<ept id="p2">*</ept>}"/&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>XAML Values</source>
          <target state="translated">Valeurs XAML</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>predefinedClassName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>predefinedClassName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>One of the predefined command classes.</source>
          <target state="translated">Une des classes de commande prédéfinies.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>predefinedCommandName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>predefinedCommandName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>One of the predefined commands.</source>
          <target state="translated">Une des commandes prédéfinies.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>customClassName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>customClassName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>A custom class that contains the custom command.</source>
          <target state="translated">Une classe personnalisée qui contient la commande personnalisée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>Custom classes generally require an <ph id="ph1">`xlmns`</ph> prefix mapping; see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.</source>
          <target state="translated">Classes personnalisées requièrent généralement un <ph id="ph1">`xlmns`</ph> préfixe de mappage, consultez <bpt id="p1">[</bpt>espaces de noms XAML et mappage Namespace pour XAML WPF<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>customCommandName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>customCommandName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>A custom command.</source>
          <target state="translated">Une commande personnalisée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>Data used by the command.</source>
          <target state="translated">Données utilisées par la commande.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>If the command does not require data to be passed, this object can be set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si la commande n’exige pas que des données soient passées, cet objet peut avoir la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>Defines the method that determines whether the command can execute in its current state.</source>
          <target state="translated">Définit la méthode qui détermine si la commande peut s'exécuter dans son état actuel.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this command can be executed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si cette commande peut être exécutée ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>Typically, a command source calls the <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph> method when the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph> event is raised.</source>
          <target state="translated">En règle générale, une source de commande appelle la <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph> méthode lorsque le <ph id="ph2">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph> événement est déclenché.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <source>Occurs when changes occur that affect whether or not the command should execute.</source>
          <target state="translated">Se produit lorsque des modifications influent sur l'exécution de la commande.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <source>Normally, a command source calls <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph> on the command when this event occurs.</source>
          <target state="translated">Normalement, une source de commande appelle <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph> sur la commande lorsque cet événement se produit.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <source>Normally, if the command cannot execute, the command source disables itself.</source>
          <target state="translated">En règle générale, si la commande ne peut pas s’exécuter, la source de commande désactive.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <source>Data used by the command.</source>
          <target state="translated">Données utilisées par la commande.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <source>If the command does not require data to be passed, this object can be set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si la commande n’exige pas que des données soient passées, cet objet peut avoir la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <source>Defines the method to be called when the command is invoked.</source>
          <target state="translated">Définit la méthode à appeler lorsque la commande est invoquée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>