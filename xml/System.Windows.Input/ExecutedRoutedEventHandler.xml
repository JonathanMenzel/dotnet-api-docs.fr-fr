<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53db9f986636f3d10b370f1e9e248937fbe4827b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="0487c-101">Objet où le gestionnaire d’événements est attaché.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0487c-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="0487c-102">Données d'événement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0487c-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="0487c-103">Représente la méthode qui gère les événements routés <see cref="E:System.Windows.Input.CommandBinding.Executed" /> et <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, ainsi que les événements attachés associés.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0487c-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0487c-104">Ce délégué contient la logique d’implémentation pour un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="0487c-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="0487c-105">Séparer la logique d’implémentation de la commande permet la commande à appeler à partir de types et de différentes sources et la centralisation de la logique de commande.</span><span class="sxs-lookup"><span data-stu-id="0487c-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="0487c-106">Ce délégué est également utilisé pour <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> et <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, qui sont des événements attachés sur la <xref:System.Windows.Input.CommandManager> classe qui implémente une grande partie de l’infrastructure d’exécution de commandes.</span><span class="sxs-lookup"><span data-stu-id="0487c-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="0487c-107">Mais gèrent des gestionnaires plus pratiques le <xref:System.Windows.Input.CommandBinding.Executed> événements provenant d’un <xref:System.Windows.Input.CommandBinding>, plutôt que de travailler au <xref:System.Windows.Input.CommandManager> au niveau du.</span><span class="sxs-lookup"><span data-stu-id="0487c-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="0487c-108">Dans <xref:System.Windows.Input.ExecutedRoutedEventArgs>, les propriétés suivantes sont généralement un intérêt lorsque vous écrivez un gestionnaire d’événements pour un événement routé qui résulte d’une commande exécutée :</span><span class="sxs-lookup"><span data-stu-id="0487c-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="0487c-109"><xref:System.Windows.RoutedEventArgs.Source%2A> signale la cible où la commande a été exécutée.</span><span class="sxs-lookup"><span data-stu-id="0487c-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="0487c-110">Une fois la commande exécutée, vous pouvez également considérer le <xref:System.Windows.RoutedEventArgs.Source%2A> plus générale dans routés termes d’événement, comme l’objet qui a déclenché un événement routé.</span><span class="sxs-lookup"><span data-stu-id="0487c-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="0487c-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> signale la commande exécutée.</span><span class="sxs-lookup"><span data-stu-id="0487c-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="0487c-112">Cette propriété est utile si vous utilisez des liaisons de commande et si vous écrivez des gestionnaires qui peuvent gérer plusieurs commandes.</span><span class="sxs-lookup"><span data-stu-id="0487c-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="0487c-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> signale tous les paramètres de commande spécifiques qui ont été passés à la commande en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="0487c-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="0487c-114">Pas toutes les commandes utilisent ou attendent des paramètres spécifiques à la commande.</span><span class="sxs-lookup"><span data-stu-id="0487c-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="0487c-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> Indique si l’événement routé qui a généré à partir de la commande exécutée a déjà été contrôlé par un autre élément le long de l’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="0487c-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="0487c-116">Pour les gestionnaires d’événements routés, il est recommandé d’avoir des gestionnaires qui font un travail explicite lors de la gestion de l’événement pour définir <xref:System.Windows.RoutedEventArgs.Handled%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="0487c-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="0487c-117">Cela empêche les gestionnaires classiques pour l’événement de la gestion de l’événement encore plus loin sur l’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="0487c-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="0487c-118">Pour plus d’informations sur la gestion des événements routés, consultez [le marquage des événements routés comme Handled et de gestion de la classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="0487c-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="0487c-119">Ce délégué représente également des gestionnaires pour <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> et <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, qui sont des événements attachés sur la <xref:System.Windows.Input.CommandManager> classe qui implémente une grande partie de l’infrastructure d’exécution de commandes.</span><span class="sxs-lookup"><span data-stu-id="0487c-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="0487c-120">Mais gèrent des gestionnaires plus pratiques le <xref:System.Windows.Input.CommandBinding.Executed> événements provenant d’un <xref:System.Windows.Input.CommandBinding>, plutôt que de travailler au <xref:System.Windows.Input.CommandManager> au niveau du.</span><span class="sxs-lookup"><span data-stu-id="0487c-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="0487c-121">Pour plus d’informations sur l’exécution des commandes, consultez [Vue d’ensemble des commandes](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="0487c-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0487c-122">Cet exemple crée un <xref:System.Windows.Input.ExecutedRoutedEventHandler> qui définit une propriété visuelle sur la cible lors de la commande est exécutée.</span><span class="sxs-lookup"><span data-stu-id="0487c-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="0487c-123">L’exemple inclut également le <xref:System.Windows.Input.CanExecuteRoutedEventHandler> pour la même commande.</span><span class="sxs-lookup"><span data-stu-id="0487c-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>