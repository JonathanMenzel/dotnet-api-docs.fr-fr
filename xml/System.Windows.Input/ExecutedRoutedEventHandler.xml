<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExecutedRoutedEventHandler.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55e7060feb6bd9cc789b91cd51b75c1f71d708b5f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e7060feb6bd9cc789b91cd51b75c1f71d708b5f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The object where the event handler is attached.</source>
          <target state="translated">Objet où le gestionnaire d’événements est attaché.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /&gt;</ph> routed events, as well as related attached events.</source>
          <target state="translated">Représente la méthode qui gère les événements routés <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> et <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /&gt;</ph>, ainsi que les événements attachés associés.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate contains the implementation logic for a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Ce délégué contient la logique d’implémentation pour un <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</source>
          <target state="translated">Séparer la logique d’implémentation de la commande permet la commande à appeler à partir de types et de différentes sources et la centralisation de la logique de commande.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate is also used for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>, which are attached events on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class that implements much of the commanding infrastructure.</source>
          <target state="translated">Ce délégué est également utilisé pour <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>, qui sont des événements attachés sur la <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> classe qui implémente une grande partie de l’infrastructure d’exécution de commandes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">Mais gèrent des gestionnaires plus pratiques le <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> événements provenant d’un <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, plutôt que de travailler au <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> au niveau du.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Within <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</source>
          <target state="translated">Dans <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph>, les propriétés suivantes sont généralement un intérêt lorsque vous écrivez un gestionnaire d’événements pour un événement routé qui résulte d’une commande exécutée :</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> reports the target where the command was executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> signale la cible où la commande a été exécutée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Once the command is executed, you can also think of the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> more generally in routed event terms, as the object that raised a routed event.</source>
          <target state="translated">Une fois la commande exécutée, vous pouvez également considérer le <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> plus générale dans routés termes d’événement, comme l’objet qui a déclenché un événement routé.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> reports the command that executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> signale la commande exécutée.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</source>
          <target state="translated">Cette propriété est utile si vous utilisez des liaisons de commande et si vous écrivez des gestionnaires qui peuvent gérer plusieurs commandes.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> reports any command-specific parameters that were passed by the executing command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> signale tous les paramètres de commande spécifiques qui ont été passés à la commande en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Not all commands use or expect command-specific parameters.</source>
          <target state="translated">Pas toutes les commandes utilisent ou attendent des paramètres spécifiques à la commande.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> Indique si l’événement routé qui a généré à partir de la commande exécutée a déjà été contrôlé par un autre élément le long de l’itinéraire.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour les gestionnaires d’événements routés, il est recommandé d’avoir des gestionnaires qui font un travail explicite lors de la gestion de l’événement pour définir <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> à <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This prevents typical handlers for the event from handling the event again further along the route.</source>
          <target state="translated">Cela empêche les gestionnaires classiques pour l’événement de la gestion de l’événement encore plus loin sur l’itinéraire.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For more information on handling routed events, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements routés, consultez <bpt id="p1">[</bpt>le marquage des événements routés comme Handled et de gestion de la classe<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate also represents handlers for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType&gt;</ph>, which are attached events on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class that implements much of the commanding infrastructure.</source>
          <target state="translated">Ce délégué représente également des gestionnaires pour <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType&gt;</ph>, qui sont des événements attachés sur la <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> classe qui implémente une grande partie de l’infrastructure d’exécution de commandes.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">Mais gèrent des gestionnaires plus pratiques le <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> événements provenant d’un <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, plutôt que de travailler au <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> au niveau du.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For more information on commanding, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’exécution des commandes, consultez <bpt id="p1">[</bpt>Vue d’ensemble des commandes<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This example creates an <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> that sets a visual property on the target when the command is executed.</source>
          <target state="translated">Cet exemple crée un <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> qui définit une propriété visuelle sur la cible lors de la commande est exécutée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The example also includes the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> for the same command.</source>
          <target state="translated">L’exemple inclut également le <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> pour la même commande.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>