<Type Name="KeyGestureConverter" FullName="System.Windows.Input.KeyGestureConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4cd469c3a6095e2509b280a88d3050ad322b520" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39892344" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyGestureConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGestureConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGestureConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGestureConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGestureConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type KeyGestureConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8025b-101">Convertit un objet <see cref="T:System.Windows.Input.KeyGesture" /> en et depuis d'autres types.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8025b-101">Converts a <see cref="T:System.Windows.Input.KeyGesture" /> object to and from other types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8025b-102">Le <xref:System.Windows.Input.KeyGestureConverter> classe convertit uniquement une instance <xref:System.Windows.Input.KeyGesture> vers et depuis un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="8025b-102">The <xref:System.Windows.Input.KeyGestureConverter> class only converts an instance <xref:System.Windows.Input.KeyGesture> to and from a <xref:System.String>.</span></span>  
  
 <span data-ttu-id="8025b-103">Le <xref:System.Windows.Input.KeyGestureConverter> convertit vers et depuis un <xref:System.String> à l’aide du caractère « + » comme séparateur entre les touches de modification et la clé.</span><span class="sxs-lookup"><span data-stu-id="8025b-103">The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the "+" character as the delimiter between the modifier keys and the key.</span></span>  <span data-ttu-id="8025b-104">Par exemple, la chaîne `Control+A` serait convertie en un <xref:System.Windows.Input.KeyGesture> avec un <xref:System.Windows.Input.KeyGesture.Modifiers%2A> propriété égale à <xref:System.Windows.Input.ModifierKeys.Control> et <xref:System.Windows.Input.KeyGesture.Key%2A> propriété égale à <xref:System.Windows.Input.Key.A>.</span><span class="sxs-lookup"><span data-stu-id="8025b-104">For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGestureConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGestureConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8025b-105">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-105">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="keyGestureConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="8025b-106">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-106">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="8025b-107">Type évalué pour la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-107">The type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8025b-108">Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Windows.Input.KeyGesture" /> à l'aide du contexte indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-108">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.KeyGesture" />, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8025b-109">
            <see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-109">
              <see langword="true" /> if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="keyGestureConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="8025b-110">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-110">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="8025b-111">Type évalué pour la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-111">The type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8025b-112">Détermine si une instance de <see cref="T:System.Windows.Input.KeyGesture" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-112">Determines whether an instance of <see cref="T:System.Windows.Input.KeyGesture" /> can be converted to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8025b-113">
            <see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-113">
              <see langword="true" /> if <paramref name="destinationType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="keyGestureConverter.ConvertFrom (context, culture, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="8025b-114">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-114">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8025b-115">Informations propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-115">Culture specific information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="8025b-116">Objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-116">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8025b-117">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Input.KeyGesture" />, à l'aide du contexte indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-117">Attempts to convert the specified object to a <see cref="T:System.Windows.Input.KeyGesture" />, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8025b-118">Objet converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-118">The converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8025b-119">Le <xref:System.Windows.Input.KeyGestureConverter> convertit vers et depuis un <xref:System.String> à l’aide de la clé « + » comme séparateur entre les touches de modification et la clé.</span><span class="sxs-lookup"><span data-stu-id="8025b-119">The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter between the modifier keys and the key.</span></span>  <span data-ttu-id="8025b-120">Par exemple, la chaîne `Control+A` serait convertie en un <xref:System.Windows.Input.KeyGesture> avec un <xref:System.Windows.Input.KeyGesture.Modifiers%2A> propriété égale à <xref:System.Windows.Input.ModifierKeys.Control> et <xref:System.Windows.Input.KeyGesture.Key%2A> propriété égale à <xref:System.Windows.Input.Key.A>.</span><span class="sxs-lookup"><span data-stu-id="8025b-120">For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8025b-121">
            <paramref name="source" /> ne peut pas être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-121">
              <paramref name="source" /> cannot be converted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="keyGestureConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="8025b-122">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-122">A format context that provides information about the environment from which this converter is being invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="8025b-123">Informations propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-123">Culture specific information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8025b-124">Objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-124">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="8025b-125">Type dans lequel convertir l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-125">The type to convert the object to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8025b-126">Tente de convertir <see cref="T:System.Windows.Input.KeyGesture" /> vers le type spécifié, à l'aide du contexte indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-126">Attempts to convert a <see cref="T:System.Windows.Input.KeyGesture" /> to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8025b-127">L'objet converti, ou une chaîne vide si <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-127">The converted object, or an empty string if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8025b-128">`destinationType` doit être <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="8025b-128">`destinationType` must be <xref:System.String>.</span></span>  
  
 <span data-ttu-id="8025b-129">Le <xref:System.Windows.Input.KeyGestureConverter> convertit vers et depuis un <xref:System.String> à l’aide de la clé « + » comme séparateur entre les touches de modification et la clé.</span><span class="sxs-lookup"><span data-stu-id="8025b-129">The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter between the modifier keys and the key.</span></span> <span data-ttu-id="8025b-130">Par exemple, un <xref:System.Windows.Input.KeyGesture> avec un <xref:System.Windows.Input.KeyGesture.Modifiers%2A> propriété égale à <xref:System.Windows.Input.ModifierKeys.Control> et <xref:System.Windows.Input.KeyGesture.Key%2A> propriété égale à <xref:System.Windows.Input.Key.A> est convertie en chaîne `Control+A`.</span><span class="sxs-lookup"><span data-stu-id="8025b-130">For example, a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A> would be converted into the string `Control+A`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8025b-131">
            <paramref name="destinationType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-131">
              <paramref name="destinationType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8025b-132">
            <paramref name="value" /> ne peut pas être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8025b-132">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>