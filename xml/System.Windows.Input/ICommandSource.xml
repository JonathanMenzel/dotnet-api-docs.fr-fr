<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2cc671612548463db8b444d52a8d84986b73927" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37505169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9c611-101">Définit un objet qui sait comment appeler une commande.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c611-101">Defines an object that knows how to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c611-102">La source de commande définit comment une commande est appelée par l’objet particulier.</span><span class="sxs-lookup"><span data-stu-id="9c611-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="9c611-103">Par exemple, si un <xref:System.Windows.Controls.Button> est associé à une commande, la commande est appelée lorsque le <xref:System.Windows.Controls.Button> vous cliquez sur.</span><span class="sxs-lookup"><span data-stu-id="9c611-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="9c611-104">Une source de commande sera normalement désactivée si la commande que lui est associée ne peut pas s’exécuter sur la cible de commande actuelle.</span><span class="sxs-lookup"><span data-stu-id="9c611-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="9c611-105">Par exemple, un <xref:System.Windows.Controls.MenuItem> associé à la <xref:System.Windows.Input.ApplicationCommands.Paste%2A> commande sera grise lorsque le <xref:System.Windows.Input.ApplicationCommands.Paste%2A> commande ne peut pas s’exécuter sur la cible de commande actuelle.</span><span class="sxs-lookup"><span data-stu-id="9c611-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="9c611-106">Normalement, une source de commande écoute le <xref:System.Windows.Input.ICommand.CanExecuteChanged> événement sur la commande.</span><span class="sxs-lookup"><span data-stu-id="9c611-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="9c611-107">Cela indique la source de commande lorsque le changement des conditions sur la cible de commande, tels que la perte de focus clavier.</span><span class="sxs-lookup"><span data-stu-id="9c611-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="9c611-108">La source de commande peut ensuite interroger la commande à l’aide de la <xref:System.Windows.Input.ICommand.CanExecute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="9c611-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="9c611-109">Certaines des classes dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] qui implémentent <xref:System.Windows.Input.ICommandSource> sont : <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, et <xref:System.Windows.Documents.Hyperlink>.</span><span class="sxs-lookup"><span data-stu-id="9c611-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="9c611-110">Dans Windows Presentation Foundation commandes système, le <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriété sur un <xref:System.Windows.Input.ICommandSource> s’applique uniquement lorsque le <xref:System.Windows.Input.ICommand> est un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9c611-110">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="9c611-111">Si le <xref:System.Windows.Input.InputBinding.CommandTarget%2A> est définie sur une <xref:System.Windows.Input.ICommandSource> et la commande correspondante n’est pas un <xref:System.Windows.Input.RoutedCommand>, la cible de commande est ignorée.</span><span class="sxs-lookup"><span data-stu-id="9c611-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c611-112">Obtient la commande qui est exécutée quand la source de la commande est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c611-112">Gets the command that will be executed when the command source is invoked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c611-113">Commande qui est exécutée quand la source de la commande est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c611-113">The command that will be executed when the command source is invoked.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c611-114">Représente une valeur de données définie par l’utilisateur qui peut être passée à la commande lors de son exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c611-114">Represents a user defined data value that can be passed to the command when it is executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c611-115">Données spécifiques à la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c611-115">The command specific data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c611-116">Normalement, le <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> est utilisé pour passer des informations spécifiques à la commande lorsqu’elle est exécutée.</span><span class="sxs-lookup"><span data-stu-id="9c611-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="9c611-117">Le type de données est défini par la commande.</span><span class="sxs-lookup"><span data-stu-id="9c611-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c611-118">Objet sur lequel la commande est exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c611-118">The object that the command is being executed on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c611-119">Objet sur lequel la commande est exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c611-119">The object that the command is being executed on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c611-120">Dans Windows Presentation Foundation commandes système, le <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriété sur un <xref:System.Windows.Input.ICommandSource> s’applique uniquement lorsque le <xref:System.Windows.Input.ICommand> est un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9c611-120">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="9c611-121">Si le <xref:System.Windows.Input.InputBinding.CommandTarget%2A> est définie sur une <xref:System.Windows.Input.ICommandSource> et la commande correspondante n’est pas un <xref:System.Windows.Input.RoutedCommand>, la cible de commande est ignorée.</span><span class="sxs-lookup"><span data-stu-id="9c611-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="9c611-122">Lorsqu’il est utilisé avec un <xref:System.Windows.Input.RoutedCommand>, la cible de commande est l’objet sur lequel le <xref:System.Windows.Input.CommandManager.Executed> et <xref:System.Windows.Input.CommandManager.CanExecute> sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="9c611-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="9c611-123">Si le <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> propriété n’est pas définie, l’élément ayant le focus clavier est utilisé comme cible.</span><span class="sxs-lookup"><span data-stu-id="9c611-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>