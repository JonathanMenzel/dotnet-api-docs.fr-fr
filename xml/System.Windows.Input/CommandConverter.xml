<Type Name="CommandConverter" FullName="System.Windows.Input.CommandConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c56cf8d688a9e8b036b2f49cda8b9d16a0a8c06e" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53459589" /></Metadata><TypeSignature Language="C#" Value="public sealed class CommandConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type CommandConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6072f-101">Convertit un objet <see cref="T:System.Windows.Input.ICommand" /> vers et depuis d'autres types.</span><span class="sxs-lookup"><span data-stu-id="6072f-101">Converts an <see cref="T:System.Windows.Input.ICommand" /> object to and from other types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6072f-102">La classe <xref:System.Windows.Input.CommandConverter> convertit uniquement une instance de <xref:System.Windows.Input.ICommand> vers et à partir de <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="6072f-102">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span>  
 
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6072f-103">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.CommandConverter" />.</span><span class="sxs-lookup"><span data-stu-id="6072f-103">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="commandConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="6072f-104">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="6072f-104">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="6072f-105">Type évalué pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="6072f-105">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="6072f-106">Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Windows.Input.ICommand" /> à l'aide du contexte indiqué.</span><span class="sxs-lookup"><span data-stu-id="6072f-106">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="6072f-107"><see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" />, sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6072f-107"><see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="commandConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="6072f-108">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="6072f-108">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="6072f-109">Type évalué pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="6072f-109">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="6072f-110">Détermine si une instance de <see cref="T:System.Windows.Input.ICommand" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</span><span class="sxs-lookup"><span data-stu-id="6072f-110">Determines whether an instance of <see cref="T:System.Windows.Input.ICommand" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="6072f-111"><see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" />, sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6072f-111"><see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="commandConverter.ConvertFrom (context, culture, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="6072f-112">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="6072f-112">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6072f-113">Informations propres à la culture.</span><span class="sxs-lookup"><span data-stu-id="6072f-113">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="6072f-114">Objet à convertir.</span><span class="sxs-lookup"><span data-stu-id="6072f-114">The object to convert.</span></span></param>
        <summary><span data-ttu-id="6072f-115">Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Input.ICommand" />, à l'aide du contexte indiqué.</span><span class="sxs-lookup"><span data-stu-id="6072f-115">Attempts to convert the specified object to an <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="6072f-116">L'objet converti, ou <see langword="null" /> si <paramref name="source" /> est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="6072f-116">The converted object, or <see langword="null" /> if <paramref name="source" /> is an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6072f-117">La classe <xref:System.Windows.Input.CommandConverter> convertit uniquement une instance de <xref:System.Windows.Input.ICommand> vers et à partir de <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="6072f-117">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span> <span data-ttu-id="6072f-118">En outre, la commande doit être une commande existante, ou doit être affectée à une propriété statique publique ou un champ statique public.</span><span class="sxs-lookup"><span data-stu-id="6072f-118">Also, the command must be an existing command, or must be assigned to a public static property or public static field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6072f-119"><paramref name="source" /> ne peut pas être converti.</span><span class="sxs-lookup"><span data-stu-id="6072f-119"><paramref name="source" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="commandConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="6072f-120">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="6072f-120">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6072f-121">Informations propres à la culture.</span><span class="sxs-lookup"><span data-stu-id="6072f-121">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="6072f-122">Objet à convertir.</span><span class="sxs-lookup"><span data-stu-id="6072f-122">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="6072f-123">Type dans lequel convertir l'objet.</span><span class="sxs-lookup"><span data-stu-id="6072f-123">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="6072f-124">Tente de convertir une <see cref="T:System.Windows.Input.ICommand" /> vers le type spécifié, à l'aide du contexte indiqué.</span><span class="sxs-lookup"><span data-stu-id="6072f-124">Attempts to convert an <see cref="T:System.Windows.Input.ICommand" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="6072f-125">L'objet converti, ou une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="6072f-125">The converted object, or an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6072f-126">La classe <xref:System.Windows.Input.CommandConverter> convertit uniquement une instance de <xref:System.Windows.Input.ICommand> vers et à partir de <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="6072f-126">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span> <span data-ttu-id="6072f-127">Seules les commandes existantes (non personnalisées) peuvent être retournées.</span><span class="sxs-lookup"><span data-stu-id="6072f-127">Only existing (noncustom) commands can be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6072f-128"><paramref name="destinationType" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6072f-128"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6072f-129"><paramref name="value" /> ne peut pas être converti.</span><span class="sxs-lookup"><span data-stu-id="6072f-129"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>