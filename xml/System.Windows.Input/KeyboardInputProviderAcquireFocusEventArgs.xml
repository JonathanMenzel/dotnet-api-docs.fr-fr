<Type Name="KeyboardInputProviderAcquireFocusEventArgs" FullName="System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bfd7216a52e1a8107259ba2e53c48fd161efd06" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyboardInputProviderAcquireFocusEventArgs : System.Windows.Input.KeyboardEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyboardInputProviderAcquireFocusEventArgs extends System.Windows.Input.KeyboardEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyboardInputProviderAcquireFocusEventArgs&#xA;Inherits KeyboardEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyboardInputProviderAcquireFocusEventArgs : System::Windows::Input::KeyboardEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.KeyboardEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b7bb4-101">Fournit des données pour l'événement <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7bb4-101">Provides data for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7bb4-102">La <xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs> classe est utilisée pour notifier des éléments avant et après l’acquisition du focus clavier via un fournisseur d’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="b7bb4-102">The <xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs> class is used to notify elements before and after keyboard focus is acquired through a keyboard input provider.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyboardInputProviderAcquireFocusEventArgs (System.Windows.Input.KeyboardDevice keyboard, int timestamp, bool focusAcquired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.KeyboardDevice keyboard, int32 timestamp, bool focusAcquired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyboard As KeyboardDevice, timestamp As Integer, focusAcquired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyboardInputProviderAcquireFocusEventArgs(System::Windows::Input::KeyboardDevice ^ keyboard, int timestamp, bool focusAcquired);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyboard" Type="System.Windows.Input.KeyboardDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="focusAcquired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyboard">
          <span data-ttu-id="b7bb4-103">Périphérique clavier logique associé à cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-103">The logical keyboard device associated with this event.</span>
          </span>
        </param>
        <param name="timestamp">
          <span data-ttu-id="b7bb4-104">Heure à laquelle l'entrée s'est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-104">The time when the input occurred.</span>
          </span>
        </param>
        <param name="focusAcquired">
          <span data-ttu-id="b7bb4-105">
            <see langword="true" /> pour indiquer que le focus d'interopérabilité a été acquis ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-105">
              <see langword="true" /> to indicate that interoperation focus was acquired; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7bb4-106">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-106">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusAcquired">
      <MemberSignature Language="C#" Value="public bool FocusAcquired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FocusAcquired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs.FocusAcquired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusAcquired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FocusAcquired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7bb4-107">Obtient une valeur qui indique si le focus d'interopérabilité a été acquis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-107">Gets a value that indicates whether interoperation focus was acquired.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7bb4-108">
            <see langword="true" /> si le focus d'interopérabilité a été acquis ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-108">
              <see langword="true" /> if interoperation focus was acquired; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardInputProviderAcquireFocusEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="b7bb4-109">Gestionnaire générique à appeler selon une méthode spécifique au type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-109">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="b7bb4-110">Cible sur laquelle le gestionnaire doit être appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-110">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7bb4-111">Appelle le gestionnaire spécifique au type sur la cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7bb4-111">Calls the type-specific handler on the target.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>