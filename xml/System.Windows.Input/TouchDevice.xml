<Type Name="TouchDevice" FullName="System.Windows.Input.TouchDevice">
  <TypeSignature Language="C#" Value="public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TouchDevice extends System.Windows.Input.InputDevice implements class System.Windows.Input.IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TouchDevice&#xA;Inherits InputDevice&#xA;Implements IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchDevice abstract : System::Windows::Input::InputDevice, System::Windows::Input::IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.IManipulator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="54df4-101">Représente une entrée tactile unique produite par un doigt sur un écran tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-101">Represents a single touch input produced by a finger on a touchscreen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-102">En général accéder à un <xref:System.Windows.Input.TouchDevice> à l’aide de la <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="54df4-102">You typically access a <xref:System.Windows.Input.TouchDevice> by using the <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="54df4-103">A <xref:System.Windows.Input.TouchDevice> représente un clic sur un écran.</span><span class="sxs-lookup"><span data-stu-id="54df4-103">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="54df4-104">Si plusieurs fonctions tactiles sont présentes, utilisez la <xref:System.Windows.Input.TouchDevice.Id%2A> propriété pour faire la distinction entre eux.</span><span class="sxs-lookup"><span data-stu-id="54df4-104">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54df4-105">Cette classe contient une demande d’héritage au niveau de la classe qui s’applique à tous les membres.</span><span class="sxs-lookup"><span data-stu-id="54df4-105">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="54df4-106">A <xref:System.Security.SecurityException> est levée lorsque la classe dérivée n’a pas d’autorisations de confiance totale.</span><span class="sxs-lookup"><span data-stu-id="54df4-106">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="54df4-107">Pour plus d’informations sur les demandes de sécurité, consultez [les demandes de liaison](~/docs/framework/misc/link-demands.md) et [des demandes d’héritage](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="54df4-107">For more information about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54df4-108">L’exemple suivant permet de créer des modèles simples sur un <xref:System.Windows.Controls.Canvas> en faisant glisser deux doigts sur un écran tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-108">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers on a touchscreen.</span></span> <span data-ttu-id="54df4-109">Chaque contact tactile est représenté par un <xref:System.Windows.Input.TouchDevice> dans le <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="54df4-109">Each touch is represented by a <xref:System.Windows.Input.TouchDevice> in the <xref:System.Windows.Input.TouchEventArgs>.</span></span> <span data-ttu-id="54df4-110">Le modèle est créé en dessinant une ligne entre les points tactiles fournis par les fonctions tactiles.</span><span class="sxs-lookup"><span data-stu-id="54df4-110">The pattern is created by drawing a line between the touch points that are provided by the touches.</span></span> <span data-ttu-id="54df4-111">Cet exemple requiert un écran tactile compatible avec Windows.</span><span class="sxs-lookup"><span data-stu-id="54df4-111">This example requires a Windows Touch–compatible screen.</span></span>  
  
 <span data-ttu-id="54df4-112">Le balisage suivant crée l’interface utilisateur, qui se compose d’un <xref:System.Windows.Controls.Canvas> qui est centré dans une grille et joint les gestionnaires d’événements pour les événements tactiles.</span><span class="sxs-lookup"><span data-stu-id="54df4-112">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a grid, and attaches the event handlers for the touch events.</span></span>  
  
 [!code-xaml[TouchEventsSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="54df4-113">Le code suivant gère les événements tactiles.</span><span class="sxs-lookup"><span data-stu-id="54df4-113">The following code handles the touch events.</span></span> <span data-ttu-id="54df4-114">Lorsqu’une touche est enfoncée le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice> est capturé dans la <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="54df4-114">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="54df4-115">Lorsque la fonction tactile est levée, le <xref:System.Windows.Input.TouchDevice> est libérée.</span><span class="sxs-lookup"><span data-stu-id="54df4-115">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="54df4-116">Lorsqu’une fonction tactile se déplace le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée.</span><span class="sxs-lookup"><span data-stu-id="54df4-116">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="54df4-117">Si le déplacement provient de la première fonction tactile, son emplacement est enregistré.</span><span class="sxs-lookup"><span data-stu-id="54df4-117">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="54df4-118">Si le déplacement provient de la seconde fonction tactile, une ligne est tracée à partir de la position de la première fonction tactile à la position de la seconde fonction tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-118">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchEventsSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchEventsSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54df4-119">pour dériver de cette classe.</span><span class="sxs-lookup"><span data-stu-id="54df4-119">for deriving from this class.</span></span> <span data-ttu-id="54df4-120">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-120">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="54df4-121">Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="54df4-121">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TouchDevice (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (deviceId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TouchDevice(int deviceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId"><span data-ttu-id="54df4-122">Identificateur unique pour le périphérique tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-122">A unique identifier for the touch device.</span></span></param>
        <summary><span data-ttu-id="54df4-123">Appelée à partir des constructeurs des classes dérivées pour initialiser la classe <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-123">Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="54df4-124">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="54df4-124">requires full trust for the immediate caller.</span></span> <span data-ttu-id="54df4-125">Cette classe ne peut pas être utilisée par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="54df4-125">This class cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-126">Ajoute le <see cref="T:System.Windows.Input.TouchDevice" /> au système de messagerie d'entrée.</span><span class="sxs-lookup"><span data-stu-id="54df4-126">Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-127">Les classes qui héritent de <xref:System.Windows.Input.TouchDevice> doivent appeler cette méthode pour activer le périphérique en cours.</span><span class="sxs-lookup"><span data-stu-id="54df4-127">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to activate the current device.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54df4-128">Le périphérique est déjà activé.</span><span class="sxs-lookup"><span data-stu-id="54df4-128">The device is already activated.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-129">Se produit lorsque <see cref="T:System.Windows.Input.TouchDevice" /> est ajouté au système de messagerie d’entrée.</span><span class="sxs-lookup"><span data-stu-id="54df4-129">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Activate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-130">Obtient la <see cref="T:System.Windows.PresentationSource" /> qui signale l'entrée pour ce périphérique.</span><span class="sxs-lookup"><span data-stu-id="54df4-130">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <value><span data-ttu-id="54df4-131">La source qui signale l'entrée pour ce périphérique.</span><span class="sxs-lookup"><span data-stu-id="54df4-131">The source that is reporting input for this device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="54df4-132">Capture une pression tactile pour l'élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="54df4-132">Captures a touch to the specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54df4-133">Élément qui capture l'entrée tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-133">The element that captures the touch input.</span></span></param>
        <summary><span data-ttu-id="54df4-134">Capture une pression tactile pour l'élément spécifié à l'aide du mode de capture <see cref="F:System.Windows.Input.CaptureMode.Element" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-134">Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</span></span></summary>
        <returns>
          <span data-ttu-id="54df4-135"><see langword="true" /> si l'élément a pu capturer la pression tactile ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-135"><see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-136">A <xref:System.Windows.Input.TouchDevice> ne peuvent pas être capturés à un élément si elle est déjà capturé à un autre élément.</span><span class="sxs-lookup"><span data-stu-id="54df4-136">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54df4-137">L’exemple suivant gère le <xref:System.Windows.UIElement.TouchDown> les événements qui se produisent sur un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="54df4-137">The following example handles the <xref:System.Windows.UIElement.TouchDown> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="54df4-138">Lorsqu’une touche est enfoncée le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice> est capturé dans la <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="54df4-138">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 <span data-ttu-id="54df4-139">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Windows.Input.TouchDevice> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="54df4-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchEventsSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54df4-140"><paramref name="element" /> n'est pas un <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> ni un <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-140"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54df4-141">Élément qui capture la pression tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-141">The element that captures the touch.</span></span></param>
        <param name="captureMode"><span data-ttu-id="54df4-142">Stratégie de capture à utiliser.</span><span class="sxs-lookup"><span data-stu-id="54df4-142">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="54df4-143">Capture une pression tactile pour l'élément spécifié à l'aide du <see cref="T:System.Windows.Input.CaptureMode" /> défini.</span><span class="sxs-lookup"><span data-stu-id="54df4-143">Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns>
          <span data-ttu-id="54df4-144"><see langword="true" /> si l'élément a pu capturer la pression tactile ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-144"><see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-145">A <xref:System.Windows.Input.TouchDevice> ne peuvent pas être capturés à un élément si elle est déjà capturé à un autre élément.</span><span class="sxs-lookup"><span data-stu-id="54df4-145">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54df4-146"><paramref name="element" /> n'est pas un <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> ni un <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-146"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-147">Obtient l'élément qui a capturé le <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-147">Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="54df4-148">Élément qui a capturé le <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-148">The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="54df4-149">L’exemple suivant gère le <xref:System.Windows.UIElement.TouchUp> les événements qui se produisent sur un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="54df4-149">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="54df4-150">Il vérifie le <xref:System.Windows.Input.TouchDevice.Captured%2A> propriété pour vérifier que le périphérique qui a déclenché l’événement est capturé dans la <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="54df4-150">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="54df4-151">S’il s’agit, le <xref:System.Windows.Input.TouchDevice> est libérée.</span><span class="sxs-lookup"><span data-stu-id="54df4-151">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="54df4-152">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Windows.Input.TouchDevice> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="54df4-152">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CaptureMode CaptureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.CaptureMode CaptureMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureMode As CaptureMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CaptureMode CaptureMode { System::Windows::Input::CaptureMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CaptureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-153">Obtient la stratégie de capture de <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-153">Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="54df4-154">Stratégie de capture de <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-154">The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Deactivate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-155">Supprime le <see cref="T:System.Windows.Input.TouchDevice" /> du système de messagerie d'entrée.</span><span class="sxs-lookup"><span data-stu-id="54df4-155">Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-156">Les classes qui héritent de <xref:System.Windows.Input.TouchDevice> doivent appeler cette méthode pour désactiver le périphérique en cours.</span><span class="sxs-lookup"><span data-stu-id="54df4-156">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to deactivate the current device.</span></span>  
  
 <span data-ttu-id="54df4-157">A <xref:System.Windows.UIElement.TouchLeave> événement est déclenché sans correspondants <xref:System.Windows.UIElement.TouchUp> événement.</span><span class="sxs-lookup"><span data-stu-id="54df4-157">A <xref:System.Windows.UIElement.TouchLeave> event is raised without the corresponding <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54df4-158">Le périphérique n'est pas activé.</span><span class="sxs-lookup"><span data-stu-id="54df4-158">The device is not activated.</span></span></exception>
        <altmember cref="E:System.Windows.ContentElement.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement3D.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement.TouchLeave" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-159">Se produit lorsque le <see cref="T:System.Windows.Input.TouchDevice" /> est supprimé du système de messagerie d'entrée.</span><span class="sxs-lookup"><span data-stu-id="54df4-159">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-160">Obtient l'élément sur lequel est directement situé le point de contact tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-160">Gets the element that the touch contact point is directly over.</span></span></summary>
        <value><span data-ttu-id="54df4-161">Élément sur lequel est directement situé le point de contact tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-161">The element that the touch contact point is directly over.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="54df4-162">Élément qui définit l'espace de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="54df4-162">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="54df4-163">En cas de substitution dans une classe dérivée, retourne tous les points tactiles collectés entre les événements tactiles les plus récents et précédents.</span><span class="sxs-lookup"><span data-stu-id="54df4-163">When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</span></span></summary>
        <returns><span data-ttu-id="54df4-164">Tous les points tactiles collectés entre les événements tactiles les plus récents et précédents.</span><span class="sxs-lookup"><span data-stu-id="54df4-164">All touch points that were collected between the most recent and previous touch events.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="54df4-165">Élément qui définit l'espace de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="54df4-165">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="54df4-166">Retourne la position actuelle du périphérique tactile relatif à l'élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="54df4-166">Returns the current position of the touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="54df4-167">Position actuelle du périphérique tactile relatif à l'élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="54df4-167">The current position of the touch device relative to the specified element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-168">Obtient l'identificateur unique du <see cref="T:System.Windows.Input.TouchDevice" />, tel qu'il est fourni par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="54df4-168">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</span></span></summary>
        <value><span data-ttu-id="54df4-169">Identificateur unique de <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-169">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-170">A <xref:System.Windows.Input.TouchDevice> représente un clic sur un écran.</span><span class="sxs-lookup"><span data-stu-id="54df4-170">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="54df4-171">Si plusieurs fonctions tactiles sont présentes, utilisez la <xref:System.Windows.Input.TouchDevice.Id%2A> propriété pour faire la distinction entre eux.</span><span class="sxs-lookup"><span data-stu-id="54df4-171">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54df4-172">L’exemple suivant gère le <xref:System.Windows.UIElement.TouchMove> les événements qui se produisent sur un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="54df4-172">The following example handles the <xref:System.Windows.UIElement.TouchMove> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="54df4-173">Lorsqu’une fonction tactile se déplace le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée.</span><span class="sxs-lookup"><span data-stu-id="54df4-173">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="54df4-174">Si le déplacement provient de la première fonction tactile, son emplacement est enregistré.</span><span class="sxs-lookup"><span data-stu-id="54df4-174">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="54df4-175">Si le déplacement provient de la seconde fonction tactile, une ligne est tracée à partir de la position de la première fonction tactile à la position de la seconde fonction tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-175">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="54df4-176">Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Input.TouchDevice> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="54df4-176">This example is part of a larger example available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchEventsSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-177">Obtient une valeur qui indique si le périphérique est actif.</span><span class="sxs-lookup"><span data-stu-id="54df4-177">Gets a value that indicates whether the device is active.</span></span></summary>
        <value>
          <span data-ttu-id="54df4-178"><see langword="true" /> si le périphérique est actif ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-178"><see langword="true" /> if the device is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCapture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCapture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54df4-179">Élément qui capture l'entrée tactile.</span><span class="sxs-lookup"><span data-stu-id="54df4-179">The element that captures the touch input.</span></span></param>
        <param name="captureMode"><span data-ttu-id="54df4-180">Stratégie de capture.</span><span class="sxs-lookup"><span data-stu-id="54df4-180">The capture policy.</span></span></param>
        <summary><span data-ttu-id="54df4-181">Appelée lorsqu'une pression tactile est capturée pour un élément.</span><span class="sxs-lookup"><span data-stu-id="54df4-181">Called when a touch is captured to an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-182">Le <xref:System.Windows.Input.TouchDevice.OnCapture%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="54df4-182">The <xref:System.Windows.Input.TouchDevice.OnCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="54df4-183">Elle peut être substituée dans une classe dérivée pour effectuer toutes les actions qui sont requises lors de l’entrée tactile est capturée.</span><span class="sxs-lookup"><span data-stu-id="54df4-183">It can be overridden in a derived class to perform any actions that are required when the touch input is captured.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationEnded">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationEnded(bool cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="54df4-184"><see langword="true" /> pour annuler l'action ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-184"><see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="54df4-185">Appelée lorsqu'une manipulation est terminée.</span><span class="sxs-lookup"><span data-stu-id="54df4-185">Called when a manipulation has ended.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-186">Appelée lorsqu'une manipulation est démarrée.</span><span class="sxs-lookup"><span data-stu-id="54df4-186">Called when a manipulation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-187">Le <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="54df4-187">The <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="54df4-188">Elle peut être substituée dans une classe dérivée pour effectuer toutes les actions qui sont requises lors de la manipulation tactile est démarrée.</span><span class="sxs-lookup"><span data-stu-id="54df4-188">It can be overridden in a derived class to perform any actions that are required when touch manipulation is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationStarted" />
      </Docs>
    </Member>
    <Member MemberName="ReportDown">
      <MemberSignature Language="C#" Value="protected bool ReportDown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportDown" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportDown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-189">Signale qu'une pression tactile a été exercée sur un élément.</span><span class="sxs-lookup"><span data-stu-id="54df4-189">Reports that a touch is pressed on an element.</span></span></summary>
        <returns>
          <span data-ttu-id="54df4-190"><see langword="true" /> si l'événement <see cref="E:System.Windows.UIElement.TouchDown" /> a été géré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-190"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-191">Les classes qui héritent de <xref:System.Windows.Input.TouchDevice> doit appeler cette méthode pour déclencher le <xref:System.Windows.UIElement.TouchDown> événement.</span><span class="sxs-lookup"><span data-stu-id="54df4-191">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="54df4-192">A <xref:System.Windows.UIElement.TouchEnter> événement est déclenché avant la <xref:System.Windows.UIElement.TouchDown> événement.</span><span class="sxs-lookup"><span data-stu-id="54df4-192">A <xref:System.Windows.UIElement.TouchEnter> event is raised before the <xref:System.Windows.UIElement.TouchDown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchDown" />
        <altmember cref="E:System.Windows.UIElement3D.TouchDown" />
        <altmember cref="E:System.Windows.UIElement.TouchDown" />
      </Docs>
    </Member>
    <Member MemberName="ReportMove">
      <MemberSignature Language="C#" Value="protected bool ReportMove ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportMove" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportMove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportMove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-193">Signale qu'une pression tactile a parcouru un élément.</span><span class="sxs-lookup"><span data-stu-id="54df4-193">Reports that a touch is moving across an element.</span></span></summary>
        <returns>
          <span data-ttu-id="54df4-194"><see langword="true" /> si l'événement <see cref="E:System.Windows.UIElement.TouchMove" /> a été géré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-194"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-195">Les classes qui héritent de <xref:System.Windows.Input.TouchDevice> doit appeler cette méthode pour déclencher le <xref:System.Windows.UIElement.TouchMove> événement.</span><span class="sxs-lookup"><span data-stu-id="54df4-195">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchMove> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchMove" />
        <altmember cref="E:System.Windows.UIElement3D.TouchMove" />
        <altmember cref="E:System.Windows.UIElement.TouchMove" />
      </Docs>
    </Member>
    <Member MemberName="ReportUp">
      <MemberSignature Language="C#" Value="protected bool ReportUp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportUp" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportUp () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-196">Signale qu'une pression tactile n'est plus exercée sur un élément.</span><span class="sxs-lookup"><span data-stu-id="54df4-196">Reports that a touch was lifted from an element.</span></span></summary>
        <returns>
          <span data-ttu-id="54df4-197"><see langword="true" /> si l'événement <see cref="E:System.Windows.UIElement.TouchUp" /> a été géré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-197"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-198">Les classes qui héritent de <xref:System.Windows.Input.TouchDevice> doit appeler cette méthode pour déclencher le <xref:System.Windows.UIElement.TouchUp> événement.</span><span class="sxs-lookup"><span data-stu-id="54df4-198">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="54df4-199">A <xref:System.Windows.UIElement.TouchLeave> événement est déclenché après la <xref:System.Windows.UIElement.TouchUp> événement.</span><span class="sxs-lookup"><span data-stu-id="54df4-199">A <xref:System.Windows.UIElement.TouchLeave> event is raised after the <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchUp" />
        <altmember cref="E:System.Windows.UIElement3D.TouchUp" />
        <altmember cref="E:System.Windows.UIElement.TouchUp" />
      </Docs>
    </Member>
    <Member MemberName="SetActiveSource">
      <MemberSignature Language="C#" Value="protected void SetActiveSource (System.Windows.PresentationSource activeSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetActiveSource(class System.Windows.PresentationSource activeSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetActiveSource (activeSource As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetActiveSource(System::Windows::PresentationSource ^ activeSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="activeSource"><span data-ttu-id="54df4-200">Source qui signale l'entrée pour ce périphérique.</span><span class="sxs-lookup"><span data-stu-id="54df4-200">The source that reports input for this device.</span></span></param>
        <summary><span data-ttu-id="54df4-201">Définit <see cref="T:System.Windows.PresentationSource" /> qui signale l'entrée pour ce périphérique.</span><span class="sxs-lookup"><span data-stu-id="54df4-201">Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54df4-202">Force le <see cref="T:System.Windows.Input.TouchDevice" /> à synchroniser l'interface utilisateur avec les points tactiles sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="54df4-202">Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-203">Synchronisation de l’interface utilisateur avec les positions de fonctions tactiles sous-jacentes peut provoquer <xref:System.Windows.UIElement.TouchMove> événements à déclencher.</span><span class="sxs-lookup"><span data-stu-id="54df4-203">Synchronizing the user interface with the underlying touch positions might cause <xref:System.Windows.UIElement.TouchMove> events to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.GetPosition">
      <MemberSignature Language="C#" Value="System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Point System.Windows.Input.IManipulator.GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Function GetPosition (relativeTo As IInputElement) As Point Implements IManipulator.GetPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Point System.Windows.Input.IManipulator.GetPosition(System::Windows::IInputElement ^ relativeTo) = System::Windows::Input::IManipulator::GetPosition;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="54df4-204">Élément à utiliser comme cadre de référence pour calculer la position de <see cref="T:System.Windows.Input.IManipulator" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-204">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span></span></param>
        <summary><span data-ttu-id="54df4-205">Retourne la position de l'objet <see cref="T:System.Windows.Input.IManipulator" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-205">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span></span></summary>
        <returns><span data-ttu-id="54df4-206">Position de l'objet <see cref="T:System.Windows.Input.IManipulator" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-206">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-207">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="54df4-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="54df4-208">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Input.TouchDevice> est castée en interface <xref:System.Windows.Input.IManipulator>.</span><span class="sxs-lookup"><span data-stu-id="54df4-208">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.Id">
      <MemberSignature Language="C#" Value="int System.Windows.Input.IManipulator.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As Integer Implements IManipulator.Id" />
      <MemberSignature Language="C++ CLI" Value="property int System.Windows.Input.IManipulator.Id { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-209">Obtient l'identificateur unique du <see cref="T:System.Windows.Input.TouchDevice" />, tel qu'il est fourni par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="54df4-209">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</span></span></summary>
        <value><span data-ttu-id="54df4-210">Identificateur unique de <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-210">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-211">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="54df4-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="54df4-212">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Input.TouchDevice> est castée en interface <xref:System.Windows.Input.IManipulator>.</span><span class="sxs-lookup"><span data-stu-id="54df4-212">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.ManipulationEnded">
      <MemberSignature Language="C#" Value="void IManipulator.ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub ManipulationEnded (cancel As Boolean) Implements IManipulator.ManipulationEnded" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) = System::Windows::Input::IManipulator::ManipulationEnded;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="54df4-213"><see langword="true" /> pour annuler l'action ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-213"><see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="54df4-214">Se produit lorsqu'une manipulation est terminée.</span><span class="sxs-lookup"><span data-stu-id="54df4-214">Occurs when a manipulation has ended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54df4-215">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="54df4-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="54df4-216">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Input.TouchDevice> est castée en interface <xref:System.Windows.Input.IManipulator>.</span><span class="sxs-lookup"><span data-stu-id="54df4-216">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-217">Obtient l'élément qui reçoit l'entrée de <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-217">Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="54df4-218">Élément qui reçoit l'entrée de <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="54df4-218">The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.IManipulator.Updated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54df4-219">Se produit lorsqu'un message tactile est envoyé.</span><span class="sxs-lookup"><span data-stu-id="54df4-219">Occurs when a touch message is sent.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>