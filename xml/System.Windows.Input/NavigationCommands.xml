<Type Name="NavigationCommands" FullName="System.Windows.Input.NavigationCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="582f2f8c465f5132fd72691ee7cc559270b6769c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660823" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class NavigationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NavigationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.NavigationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class NavigationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationCommands abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un ensemble standard de commandes liées à la navigation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Input.NavigationCommands> classe expose un ensemble standard de commandes de navigation, y compris la navigation de navigateur et le document.  
  
 Pour plus d’informations sur les commandes et leur exécution, consultez [vue d’ensemble de l’exécution des commandes](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <Member MemberName="BrowseBack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseBack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseBack As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseBack { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Browse Back" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> ALT + GAUCHE  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Précédent  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention de revenir à la page précédente dans le journal.  
  
 <xref:System.Windows.Controls.Frame> et <xref:System.Windows.Navigation.NavigationWindow> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A>, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’enregistreur de l’application.  
  
<a name="xamlAttributeUsage_BrowseBack"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.BrowseBack"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A> conjointement avec un <xref:System.Windows.Controls.Frame>. Le <xref:System.Windows.Controls.Frame> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A> commande en naviguant le <xref:System.Windows.Controls.Frame> sauvegarder, s’il existe des entrées de journal sur la pile back.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Browse Forward" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> ALT + DROITE  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Avant  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’accéder à la page suivante dans le journal.  
  
 <xref:System.Windows.Controls.Frame> et <xref:System.Windows.Navigation.NavigationWindow> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’enregistreur de l’application.  
  
<a name="xamlAttributeUsage_BrowseForward"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.BrowseForward"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> conjointement avec un <xref:System.Windows.Controls.Frame>. Le <xref:System.Windows.Controls.Frame> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> commande en accédant le <xref:System.Windows.Controls.Frame> transférer, s’il existe des entrées de journal sur la pile forward.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseHome" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseHome" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseHome As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseHome { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Browse Home" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> ALT + ORIGINE  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Accueil  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention au début.  
  
 Il n’existe pas d’implémentation pour répondre à la <xref:System.Windows.Input.NavigationCommands.BrowseHome%2A> commande sur n’importe quel donné [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Par conséquent, vous devez fournir une implémentation appropriée, qui est indiquée dans l’exemple.  
  
<a name="xamlAttributeUsage_BrowseHome"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.BrowseHome"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment implémenter le code qui répond à la <xref:System.Windows.Input.NavigationCommands.BrowseHome%2A> commande conjointement avec un <xref:System.Windows.Controls.Frame>.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup4)]  
  
 [!code-csharp[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml.cs#browsehomecodebehind)]
 [!code-vb[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationCommandsSnippets/visualbasic/browsehome.xaml.vb#browsehomecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseStop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseStop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseStop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseStop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseStop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Browse Stop" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> ALT + ÉCHAP  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Stop  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’arrêter le chargement du navigateur.  
  
 <xref:System.Windows.Controls.Frame> et <xref:System.Windows.Navigation.NavigationWindow> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’enregistreur de l’application.  
  
<a name="xamlAttributeUsage_BrowseStop"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.BrowseStop"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> conjointement avec un <xref:System.Windows.Controls.Frame>. Le <xref:System.Windows.Controls.Frame> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> commande en arrêtant actuel <xref:System.Windows.Controls.Frame> navigation.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseZoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseZoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.DecreaseZoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseZoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseZoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Decrease Zoom" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Réduire le Zoom  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention de réduire le zoom.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’application enregistreur.  
  
<a name="xamlAttributeUsage_DecreaseZoom"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.DecreaseZoom"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> commande en diminuant le pourcentage de zoom.  
  
 [!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup4)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Favorites">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Favorites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Favorites" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Favorites" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Favorites As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Favorites { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Favorites" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> CTRL + I  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Favorites  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention de gérer et accéder aux Favoris.  
  
 Il n’existe pas d’implémentation pour répondre à la <xref:System.Windows.Input.NavigationCommands.Favorites%2A> commande sur n’importe quel donné [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Par conséquent, vous devez fournir une implémentation appropriée, qui est indiquée dans l’exemple.  
  
<a name="xamlAttributeUsage_Favorites"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.Favorites"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment implémenter le code qui répond à la <xref:System.Windows.Input.NavigationCommands.Favorites%2A> commande conjointement avec un <xref:System.Windows.Controls.Frame>.  
  
 [!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup4)]  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="FirstPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand FirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand FirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.FirstPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FirstPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ FirstPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="First Page" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Première Page  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’accéder à la première page.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’application enregistreur.  
  
<a name="xamlAttributeUsage_FirstPage"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.FirstPage"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> commande en accédant à la première page.  
  
 [!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="GoToPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand GoToPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand GoToPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.GoToPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GoToPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ GoToPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Go To Page" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Atteindre la Page  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention de modifier le zoom.  
  
 <xref:System.Windows.Controls.DocumentViewer> et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’enregistreur de l’application.  
  
<a name="xamlAttributeUsage_GoToPage"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.GoToPage"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> commande conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> commande en accédant à la page spécifiée par la valeur de texte d’un <xref:System.Windows.Controls.TextBox> contrôle.  
  
 [!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseZoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseZoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.IncreaseZoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseZoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseZoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Increase Zoom" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Augmenter le Zoom  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’augmenter le zoom.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’application enregistreur.  
  
<a name="xamlAttributeUsage_IncreaseZoom"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.IncreaseZoom"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> commande en diminuant le pourcentage de zoom.  
  
 [!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup4)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="LastPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand LastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand LastPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.LastPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LastPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ LastPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Last Page" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Dernière Page  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’accéder à la dernière page.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.LastPage%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’application enregistreur.  
  
<a name="xamlAttributeUsage_LastPage"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.LastPage"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.LastPage%2A> conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.LastPage%2A> commande en accédant à la dernière page.  
  
 [!code-xaml[NavigationCommandsSnippets#LastPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NavigateJournal">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NavigateJournal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NavigateJournal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.NavigateJournal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NavigateJournal As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NavigateJournal { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Navigate Journal" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Journal de navigation  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention de naviguer dans le journal.  
  
 <xref:System.Windows.Controls.Frame> et <xref:System.Windows.Navigation.NavigationWindow> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’enregistreur de l’application.  
  
<a name="xamlAttributeUsage_NavigateJournal"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.NavigateJournal"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> conjointement avec un <xref:System.Windows.Controls.Frame>. Le <xref:System.Windows.Controls.Frame> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> commande en accédant à l’entrée de journal spécifiée sur la pile avant ou arrière de la <xref:System.Windows.Controls.Frame>. Les entrées de journal sont fournies par le <xref:System.Windows.Navigation.JournalEntryUnifiedViewConverter> au niveau supérieur `Navigate Journal` <xref:System.Windows.Controls.MenuItem>. Chaque entrée de journal est liée à un enfant <xref:System.Windows.Controls.MenuItem> qui utilise le <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> commande.  
  
 [!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NextPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NextPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NextPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.NextPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NextPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NextPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Next Page" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Page suivante  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’accéder à la page suivante.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.NextPage%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’application enregistreur.  
  
<a name="xamlAttributeUsage_NextPage"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.NextPage"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.NextPage%2A> conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.NextPage%2A> commande en accédant à la page suivante.  
  
 [!code-xaml[NavigationCommandsSnippets#NextPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PreviousPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Previous Page" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Page précédente  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’accéder à la page précédente.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, et <xref:System.Windows.Controls.FlowDocumentPageViewer> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’application enregistreur.  
  
<a name="xamlAttributeUsage_PreviousPage"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.PreviousPage"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>. Le <xref:System.Windows.Controls.FlowDocumentPageViewer> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> commande en accédant à la page précédente.  
  
 [!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Refresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Refresh" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Refresh As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Refresh { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Refresh" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> F5  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Actualisation  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’actualiser la page actuelle.  
  
 <xref:System.Windows.Controls.Frame> et <xref:System.Windows.Navigation.NavigationWindow> implémenter la prise en charge pour répondre à la <xref:System.Windows.Input.NavigationCommands.Refresh%2A> de la commande, bien que vous n’êtes pas obligé de l’utiliser ; dans de nombreux cas, l’implémentation en réponse à cette commande est la responsabilité de l’enregistreur de l’application.  
  
<a name="xamlAttributeUsage_Refresh"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.Refresh"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Input.NavigationCommands.Refresh%2A> conjointement avec un <xref:System.Windows.Controls.Frame>. Le <xref:System.Windows.Controls.Frame> fournit une implémentation qui répond à la <xref:System.Windows.Input.NavigationCommands.Refresh%2A> commande en rechargeant actuel <xref:System.Windows.Controls.Frame> contenu.  
  
 [!code-xaml[NavigationCommandsSnippets#RefreshMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Search { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Search" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Search" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Search As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Search { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Search" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> F3  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> recherche  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention d’effectuer une recherche.  
  
 Il n’existe pas d’implémentation pour répondre à la <xref:System.Windows.Input.NavigationCommands.Search%2A> commande sur n’importe quel donné [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Par conséquent, vous devez fournir une implémentation appropriée, qui est indiquée dans l’exemple.  
  
<a name="xamlAttributeUsage_Search"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.Search"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment implémenter le code qui répond à la <xref:System.Windows.Input.NavigationCommands.Search%2A> commande conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>.  
  
 [!code-xaml[NavigationCommandsSnippets#SearchMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup4)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup5)]  
  
 [!code-csharp[NavigationCommandsSnippets#SearchCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml.cs#searchcodebehind)]
 [!code-vb[NavigationCommandsSnippets#SearchCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationCommandsSnippets/visualbasic/search.xaml.vb#searchcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Zoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Zoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Zoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur qui représente la commande <see langword="Zoom" />.</summary>
        <value>Commande d'[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] routée.  
  
 <list type="table"><listheader><term> Valeurs par défaut  
  
 </term><description></description></listheader><item><term> Combinaison de touches  
  
 </term><description> N/A  
  
 </description></item><item><term> Texte d’interface utilisateur  
  
 </term><description> Zoom  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette commande indique l’intention de définir le niveau de zoom.  
  
 Il n’existe pas d’implémentation pour répondre à la <xref:System.Windows.Input.NavigationCommands.Zoom%2A> commande sur n’importe quel donné [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] classe. Par conséquent, vous devez fournir une implémentation appropriée, qui est indiquée dans l’exemple.  
  
<a name="xamlAttributeUsage_Zoom"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="NavigationCommands.Zoom"/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment implémenter le code qui répond à la <xref:System.Windows.Input.NavigationCommands.Zoom%2A> commande conjointement avec un <xref:System.Windows.Controls.FlowDocumentPageViewer>.  
  
 [!code-xaml[NavigationCommandsSnippets#ZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup4)]  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>