<Type Name="TraversalRequest" FullName="System.Windows.Input.TraversalRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3ae7c849b875b5a43e5d38b830ff097dbb8c435" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraversalRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TraversalRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TraversalRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class TraversalRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraversalRequest" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une demande de déplacement du focus vers un autre contrôle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée comme paramètre d’entrée pour le <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType> (méthode). Le <xref:System.Windows.UIElement.MoveFocus%2A> méthode a une substitution de niveau infrastructure WPF qui fournit une implémentation plus pratique (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType>), ainsi qu’une implémentation parallèle sur <xref:System.Windows.ContentElement> et <xref:System.Windows.FrameworkContentElement>. Vous allez généralement définir des propriétés sur <xref:System.Windows.Input.TraversalRequest> afin de personnaliser le comportement de mise au point lorsque vous demandez que le focus est déplacé vers un autre élément.  
  
 Cette classe est également utilisée en tant que paramètres d’entrée pour les méthodes suivantes :  
  
-   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>et les implémentations de cette méthode qui sont utilisées pour l’interopérabilité (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).  
  
-   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Input.TraversalRequest> de l’instance comme entrée pour un <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> appeler.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.FocusNavigationDirection focusNavigationDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraversalRequest(System::Windows::Input::FocusNavigationDirection focusNavigationDirection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="focusNavigationDirection" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="focusNavigationDirection">Direction prévue du parcours du focus, en tant que valeur de l'énumération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Input.TraversalRequest> de l’instance comme entrée pour un <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> appeler.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      </Docs>
    </Member>
    <Member MemberName="FocusNavigationDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.FocusNavigationDirection FocusNavigationDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusNavigationDirection As FocusNavigationDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::FocusNavigationDirection FocusNavigationDirection { System::Windows::Input::FocusNavigationDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.FocusNavigationDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la direction du parcours.</summary>
        <value>Une des valeurs de l'énumération de la direction du parcours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est en lecture seule, car le <xref:System.Windows.Input.FocusNavigationDirection> est un paramètre d’entrée obligatoire de la <xref:System.Windows.Input.TraversalRequest> constructeur de classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapped">
      <MemberSignature Language="C#" Value="public bool Wrapped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrapped" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberSignature Language="VB.NET" Value="Public Property Wrapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Wrapped { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le parcours du focus a atteint la fin des éléments enfants qui peuvent avoir le focus.</summary>
        <value>
          <see langword="true" /> si ce parcours a atteint la fin des éléments enfants qui peuvent avoir le focus ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les éléments peut être actif sont ceux où la <xref:System.Windows.UIElement.Focusable%2A> propriété est `true`.  
  
 Ce paramètre est principalement destiné à communiquer si le parcours à l’aide des taquets de tabulation doit encapsuler lors de l’appel de méthodes <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>, ou.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. Si vous transmettez le focus à un objet qui implémente <xref:System.Windows.Interop.IKeyboardInputSink>, puis en spécifiant la valeur true pour <xref:System.Windows.Input.TraversalRequest.Wrapped%2A> qui entraîne `true` valeur est passée à la <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>