<Type Name="Manipulation" FullName="System.Windows.Input.Manipulation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f07bb5752630a36407d040058e85d17ced774d88" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48632222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Manipulation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Manipulation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulation" />
  <TypeSignature Language="VB.NET" Value="Public Class Manipulation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Manipulation abstract sealed" />
  <TypeSignature Language="F#" Value="type Manipulation = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d8cfd-101">Contient des méthodes pour obtenir et mettre à jour les informations relatives à une manipulation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8cfd-101">Contains methods to get and update information about a manipulation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cfd-102">Une manipulation se produit lorsque l’entrée tactile est interprétée comme une action physique qui est appliquée à un objet.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-102">A manipulation occurs when touch is interpreted as a physical action that is applied to an object.</span></span> <span data-ttu-id="d8cfd-103">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], les événements de manipulation interprètent l’entrée comme une manipulation de translation, d’expansion ou de rotation.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-103">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation.</span></span> <span data-ttu-id="d8cfd-104">Vous interagissez généralement avec les manipulations via les événements de manipulation sont définis sur le <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-104">You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="d8cfd-105">Toutefois, la <xref:System.Windows.Input.Manipulation> classe définit des méthodes statiques que vous pouvez utiliser pour interagir avec les manipulations.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-105">However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.</span></span>  
  
 <span data-ttu-id="d8cfd-106">Pour plus d’informations sur les manipulations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d8cfd-106">For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span> <span data-ttu-id="d8cfd-107">Pour obtenir un exemple d’une application qui répond à des manipulations, consultez [procédure pas à pas : création de votre première Application Touch](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="d8cfd-107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddManipulator">
      <MemberSignature Language="C#" Value="public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberSignature Language="F#" Value="static member AddManipulator : System.Windows.UIElement * System.Windows.Input.IManipulator -&gt; unit" Usage="System.Windows.Input.Manipulation.AddManipulator (element, manipulator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-108">L'élément à associer au manipulateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-108">The element to associate the manipulator with.</span>
          </span>
        </param>
        <param name="manipulator">
          <span data-ttu-id="d8cfd-109">Objet qui fournit la position de l'entrée qui crée une manipulation ou y est ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-109">The object that provides the position of the input that creates or is added to a manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-110">Associe un objet <see cref="T:System.Windows.Input.IManipulator" /> à l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-110">Associates a <see cref="T:System.Windows.Input.IManipulator" /> object with the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cfd-111">Si `element` a déjà une manipulation associée, `manipulator` est ajouté à la manipulation existante.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-111">If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation.</span></span> <span data-ttu-id="d8cfd-112">Sinon, une nouvelle manipulation est créée.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-112">Otherwise, a new manipulation is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8cfd-113">
            <paramref name="element" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-113">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d8cfd-114">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-114">-or-</span>
          </span>
          <span data-ttu-id="d8cfd-115">
            <paramref name="manipulator" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-115">
              <paramref name="manipulator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d8cfd-116">La propriété <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> sur l'élément a la valeur <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-116">The <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> property on element is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public static void CompleteManipulation (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteManipulation(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompleteManipulation (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompleteManipulation(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member CompleteManipulation : System.Windows.UIElement -&gt; unit" Usage="System.Windows.Input.Manipulation.CompleteManipulation element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-117">Élément sur lequel compléter la manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-117">The element on which to complete manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-118">Complète la manipulation active sur l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-118">Completes the active manipulation on the specified element.</span>
          </span>
          <span data-ttu-id="d8cfd-119">En cas d'appel, l'entrée de manipulation n'est plus suivie et l'inertie sur les éléments spécifiés s'arrête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-119">When called, manipulation input is no longer tracked and inertia on the specified element stops.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cfd-120">Lorsque le <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> méthode est appelée, le <xref:System.Windows.UIElement.ManipulationCompleted> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d8cfd-120">When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetManipulationContainer(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationContainer (element As UIElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetManipulationContainer(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetManipulationContainer : System.Windows.UIElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Manipulation.GetManipulationContainer element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-121">Élément sur lequel une manipulation est active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-121">The element on which there is an active manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-122">Obtient le conteneur qui définit les coordonnées pour la manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-122">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8cfd-123">Conteneur qui définit l'espace de coordonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-123">The container that defines the coordinate space.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ManipulationModes GetManipulationMode(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationMode (element As UIElement) As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationModes GetManipulationMode(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetManipulationMode : System.Windows.UIElement -&gt; System.Windows.Input.ManipulationModes" Usage="System.Windows.Input.Manipulation.GetManipulationMode element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-124">Élément pour lequel obtenir le mode de manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-124">The element for which to get the manipulation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-125">Obtient <see cref="T:System.Windows.Input.ManipulationModes" /> pour l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-125">Gets the <see cref="T:System.Windows.Input.ManipulationModes" /> for the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8cfd-126">Une des valeurs de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-126">One of the enumeration values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationPivot">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.ManipulationPivot GetManipulationPivot(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationPivot (element As UIElement) As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationPivot ^ GetManipulationPivot(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetManipulationPivot : System.Windows.UIElement -&gt; System.Windows.Input.ManipulationPivot" Usage="System.Windows.Input.Manipulation.GetManipulationPivot element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-127">Élément sur lequel une manipulation est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-127">The element on which there is a manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-128">Retourne un objet qui décrit comment une rotation s'effectue avec un point d'entrée utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-128">Returns an object that describes how a rotation occurs with one point of user input.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8cfd-129">Objet qui décrit comment une rotation s'effectue avec un point d'entrée utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-129">An object that describes how a rotation occurs with one point of user input.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationActive">
      <MemberSignature Language="C#" Value="public static bool IsManipulationActive (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsManipulationActive(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsManipulationActive (element As UIElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsManipulationActive(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member IsManipulationActive : System.Windows.UIElement -&gt; bool" Usage="System.Windows.Input.Manipulation.IsManipulationActive element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-130">Élément à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-130">The element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-131">Obtient une valeur qui indique si une manipulation est associée à l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-131">Gets a value that indicates whether a manipulation is associated with the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8cfd-132">
            <see langword="true" /> si une manipulation est associée à l'élément spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-132">
              <see langword="true" /> if a manipulation is associated with the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveManipulator">
      <MemberSignature Language="C#" Value="public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberSignature Language="F#" Value="static member RemoveManipulator : System.Windows.UIElement * System.Windows.Input.IManipulator -&gt; unit" Usage="System.Windows.Input.Manipulation.RemoveManipulator (element, manipulator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-133">Élément à supprimer du manipulateur associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-133">The element to remove the associated manipulator from.</span>
          </span>
        </param>
        <param name="manipulator">
          <span data-ttu-id="d8cfd-134">Objet qui fournit la position de l'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-134">The object that provides the position of the input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-135">Supprime l'association entre l'objet <see cref="T:System.Windows.Input.IManipulator" /> spécifié et l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-135">Removes the association between the specified <see cref="T:System.Windows.Input.IManipulator" /> object and the element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationContainer">
      <MemberSignature Language="C#" Value="public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationContainer(class System.Windows.UIElement element, class System.Windows.IInputElement container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationContainer (element As UIElement, container As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationContainer(System::Windows::UIElement ^ element, System::Windows::IInputElement ^ container);" />
      <MemberSignature Language="F#" Value="static member SetManipulationContainer : System.Windows.UIElement * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationContainer (element, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="container" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-136">Élément auquel la manipulation est associée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-136">The element with which the manipulation is associated.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="d8cfd-137">Conteneur qui définit l'espace de coordonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-137">The container that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-138">Définit l'élément qui définit les coordonnées pour la manipulation de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-138">Sets the element that defines the coordinates for the manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationMode">
      <MemberSignature Language="C#" Value="public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationMode(class System.Windows.UIElement element, valuetype System.Windows.Input.ManipulationModes mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationMode (element As UIElement, mode As ManipulationModes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationMode(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationModes mode);" />
      <MemberSignature Language="F#" Value="static member SetManipulationMode : System.Windows.UIElement * System.Windows.Input.ManipulationModes -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationMode (element, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="mode" Type="System.Windows.Input.ManipulationModes" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-139">Élément sur lequel définir le mode de manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-139">The element on which to set the manipulation mode.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="d8cfd-140">Nouveau mode de manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-140">The new manipulation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-141">Définit le mode de manipulation pour l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-141">Sets the mode of manipulation for the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationParameter(class System.Windows.UIElement element, class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationParameter (element As UIElement, parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationParameter(System::Windows::UIElement ^ element, System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberSignature Language="F#" Value="static member SetManipulationParameter : System.Windows.UIElement * System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationParameter (element, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-142">Élément pour lequel un paramètre est ajouté à la manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-142">The element that has the manipulation that the parameter is added to.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="d8cfd-143">Paramètre à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-143">The parameter to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-144">Ajoute des paramètres à la manipulation de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-144">Adds parameters to the manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationPivot">
      <MemberSignature Language="C#" Value="public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationPivot(class System.Windows.UIElement element, class System.Windows.Input.ManipulationPivot pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationPivot (element As UIElement, pivot As ManipulationPivot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationPivot(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationPivot ^ pivot);" />
      <MemberSignature Language="F#" Value="static member SetManipulationPivot : System.Windows.UIElement * System.Windows.Input.ManipulationPivot -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationPivot (element, pivot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="pivot" Type="System.Windows.Input.ManipulationPivot" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-145">Élément qui a une manipulation active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-145">The element that has an active manipulation.</span>
          </span>
        </param>
        <param name="pivot">
          <span data-ttu-id="d8cfd-146">Objet qui décrit le pivot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-146">An object that describes the pivot.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-147">Définit le pivot de la manipulation de point unique de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-147">Sets the pivot of the single-point manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public static void StartInertia (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartInertia(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartInertia (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartInertia(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member StartInertia : System.Windows.UIElement -&gt; unit" Usage="System.Windows.Input.Manipulation.StartInertia element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d8cfd-148">Élément sur lequel commencer l'inertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-148">The element on which to begin inertia.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8cfd-149">Arrête la manipulation et commence l'inertie sur l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8cfd-149">Stops the manipulation and begins inertia on the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>