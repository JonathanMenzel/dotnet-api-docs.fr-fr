<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="356f7e803b1125d98ffef23c64cacd4661cc78a7" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48689127" /></Metadata><TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c97fc-101">Représente le périphérique clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-101">Represents the keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-102">Le <xref:System.Windows.Input.Keyboard> classe fournit des événements associés au clavier, méthodes et propriétés qui fournissent des informations concernant l’état du clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="c97fc-103">Chacun des événements qui <xref:System.Windows.Input.Keyboard> définit comme un événement attaché est a également été ré-exposé par les classes d’élément de base <xref:System.Windows.UIElement> et <xref:System.Windows.ContentElement> en tant qu’un nouvel événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="c97fc-104">En règle générale, il est plus pratique gérer les événements de clavier pour une application sur <xref:System.Windows.UIElement> et <xref:System.Windows.ContentElement>, au lieu d’utiliser le <xref:System.Windows.Input.Keyboard> événements.</span><span class="sxs-lookup"><span data-stu-id="c97fc-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="c97fc-105">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-106">Dans l’ordre d’un élément recevoir l’entrée de clavier, l’élément doit pouvoir être actif.</span><span class="sxs-lookup"><span data-stu-id="c97fc-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="c97fc-107">La plupart des <xref:System.Windows.UIElement> objets dérivés sont pouvant prendre le focus par défaut.</span><span class="sxs-lookup"><span data-stu-id="c97fc-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="c97fc-108">Sinon, pour rendre un élément actif, définissez la <xref:System.Windows.UIElement.Focusable%2A> propriété sur l’élément de base `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="c97fc-109">Pour plus d’informations sur les éléments de base, consultez [vue d’ensemble des éléments de Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-110"><xref:System.Windows.Controls.Panel> classes, telles que <xref:System.Windows.Controls.StackPanel> et <xref:System.Windows.Controls.Canvas>, définissez la valeur par défaut de <xref:System.Windows.UIElement.Focusable%2A> à `false`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="c97fc-111">Par conséquent, pour ces objets à obtenir le focus clavier, <xref:System.Windows.UIElement.Focusable%2A> doit être définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="c97fc-112">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-113">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-114">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-115">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-116">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-117">Les membres statiques de la <xref:System.Windows.Input.Keyboard> délégué de classe vers le serveur principal <xref:System.Windows.Input.KeyboardDevice> du thread appelant, donc ils ne sont pas nécessairement thread-safe.</span><span class="sxs-lookup"><span data-stu-id="c97fc-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-118">L’exemple suivant montre comment utiliser le <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> méthode pour déterminer si une touche est basculée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="c97fc-119">Si le <xref:System.Windows.Input.Key> transmis à <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> est activé ou désactivé, l’arrière-plan d’un bouton est modifié.</span><span class="sxs-lookup"><span data-stu-id="c97fc-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-120"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-121">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-121">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-122">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-123">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-124"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-125">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-125">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-126">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-127">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-128"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-129">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-129">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-130">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-131">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-132"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-133">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-133">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-134">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-135">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-136"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-137">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-137">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-138">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-139">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-140"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-141">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-141">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-142">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-143">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-144"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-145">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-145">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-146">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-147">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-148"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-149">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-149">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-150">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-151">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-152"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-153">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-153">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-154">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-155">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-156"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-157">Gestionnaire d’événements à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c97fc-157">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c97fc-158">Ajoute un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-159">Cette méthode fournit des accesseurs de propriété jointe pour l’accès de code et [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] traitement de l’attribut de la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c97fc-160">Efface le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-160">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-161">Si le focus se trouve dans une fenêtre Win32, WPF appelle le <xref:System.Windows.Input.Keyboard.ClearFocus%2A> méthode sur la restauration de focus lorsqu’un menu est fermé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="c97fc-162">Lorsque vous quittez le mode de menu, le focus Win32 est retourné au HWND enfant hébergé, et aucun élément n’a le focus WPF.</span><span class="sxs-lookup"><span data-stu-id="c97fc-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-163">Obtient ou définit le comportement de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] lors de la restauration du focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="c97fc-164">Valeur d'énumération qui spécifie le comportement de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] lors de la restauration du focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="c97fc-165">Valeur par défaut dans <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-166">Élément sur lequel définir le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-166">The element on which to set keyboard focus.</span></span></param>
        <summary><span data-ttu-id="c97fc-167">Définit le focus clavier sur l'élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="c97fc-167">Sets keyboard focus on the specified element.</span></span></summary>
        <returns><span data-ttu-id="c97fc-168">Élément ayant le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-168">The element with keyboard focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-169">Pour un élément recevoir l’entrée de clavier, l’élément doit pouvoir être actif.</span><span class="sxs-lookup"><span data-stu-id="c97fc-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="c97fc-170">Pour rendre un élément actif, donnez le <xref:System.Windows.UIElement.Focusable%2A> propriété sur l’élément de base `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="c97fc-171">Pour plus d’informations sur les éléments de base, consultez [vue d’ensemble des éléments de Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="c97fc-172"><xref:System.Windows.Controls.Panel> classes, telles que <xref:System.Windows.Controls.StackPanel> et <xref:System.Windows.Controls.Canvas>, définissez la valeur par défaut de <xref:System.Windows.UIElement.Focusable%2A> à `false`; par conséquent, pour ces objets à obtenir le focus clavier, <xref:System.Windows.UIElement.Focusable%2A> doit être définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="c97fc-173">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-174">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-175">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-176">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-177">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-178">Un élément ayant le focus clavier a également le focus logique pour la portée de focus que l’élément appartient.</span><span class="sxs-lookup"><span data-stu-id="c97fc-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="c97fc-179">Un élément avec le focus logique peut ou ne peut pas avoir le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-180">L’exemple suivant montre un <xref:System.Windows.FrameworkElement.Loaded> Gestionnaire d’événements qui définit le focus clavier sur un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-181">Obtient l'élément qui a le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-181">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="c97fc-182">Élément ayant le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-182">The focused element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-183">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-184">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-185">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-186">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-187">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-188">Un élément ayant le focus clavier a également le focus logique pour la portée de focus que l’élément appartient.</span><span class="sxs-lookup"><span data-stu-id="c97fc-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="c97fc-189">Un élément avec le focus logique peut ou ne peut pas avoir le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-190">L’exemple suivant obtient l’élément ayant le focus clavier et le caste vers un <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="c97fc-191">Si l’élément ayant le focus clavier est un <xref:System.Windows.Controls.Control>, l’arrière-plan de l’élément est modifié.</span><span class="sxs-lookup"><span data-stu-id="c97fc-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c97fc-192">Clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-192">The specified key.</span></span></param>
        <summary><span data-ttu-id="c97fc-193">Obtient l'ensemble des états de touche pour la touche spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-193">Gets the set of key states for the specified key.</span></span></summary>
        <returns><span data-ttu-id="c97fc-194">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Input.KeyStates" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-195"><xref:System.Windows.Input.KeyStates> est un peu champ énumération ; Par conséquent, il est possible pour une clé peut avoir plusieurs États.</span><span class="sxs-lookup"><span data-stu-id="c97fc-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="c97fc-196">Par exemple, une clé peut être dans un état appuyé ainsi que dans l’état basculé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="c97fc-197">Utilisez les opérations de comparaison de bits pour déterminer l’état exact ou la clé se trouve dans les États.</span><span class="sxs-lookup"><span data-stu-id="c97fc-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="c97fc-198">Le <xref:System.Windows.Input.Keyboard> classe fournit plusieurs méthodes statiques qui peuvent également être utilisé pour obtenir des informations d’état de la clé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="c97fc-199">Les méthodes sont : <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, et <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-200">L’exemple suivant montre comment utiliser le <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> méthode pour déterminer si le <xref:System.Windows.Input.Key.Return> clé se trouve dans le <xref:System.Windows.Input.KeyStates.Down> état.</span><span class="sxs-lookup"><span data-stu-id="c97fc-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="c97fc-201">Opération AND est utilisée pour comparer la <xref:System.Windows.Input.KeyStates> retourné à partir de <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> et <xref:System.Windows.Input.Key.Down> état.</span><span class="sxs-lookup"><span data-stu-id="c97fc-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="c97fc-202">Si la touche est enfoncée, l’arrière-plan d’un <xref:System.Windows.Controls.Button> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-203">Se produit quand un élément reçoit le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-203">Occurs when an element receives keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-204">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-205">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-205">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-206">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-207">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-208">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-209">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-210">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-211">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-212">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-213">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-214">Si le <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> événement ou la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> est géré, le focus clavier ne change pas.</span><span class="sxs-lookup"><span data-stu-id="c97fc-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-215">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-216">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="c97fc-217">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-217">Routing strategy</span></span>|<span data-ttu-id="c97fc-218">Propagation</span><span class="sxs-lookup"><span data-stu-id="c97fc-218">Bubbling</span></span>|  
|<span data-ttu-id="c97fc-219">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c97fc-220">L’événement de tunneling correspondant est <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-221">L’exemple suivant crée un <xref:System.Windows.Controls.TextBox> et attache les gestionnaires d’événements pour le <xref:System.Windows.UIElement.GotKeyboardFocus> événement et le <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="c97fc-222">Lorsque le <xref:System.Windows.Controls.TextBox> Obtient le focus clavier, la couleur d’arrière-plan est modifiée et le texte de la <xref:System.Windows.Controls.TextBox> est désactivée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="c97fc-223">Lorsque le <xref:System.Windows.Controls.TextBlock> perd le focus clavier, la couleur d’arrière-plan est modifiée et une méthode est appelée, qui réinitialise les variables utilisées dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="c97fc-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-224">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-225">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-226">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-227">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c97fc-228">Clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-228">The specified key.</span></span></param>
        <summary><span data-ttu-id="c97fc-229">Détermine si la touche spécifiée est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-229">Determines whether the specified key is pressed.</span></span></summary>
        <returns><span data-ttu-id="c97fc-230"><see langword="true" /> si <paramref name="key" /> est enfoncé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-230"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-231">Le <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> méthode peut être utilisée pour déterminer l’ensemble des États d’une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-232">L’exemple suivant montre comment utiliser le <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> méthode pour déterminer l’état d’une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="c97fc-233">Le <xref:System.Windows.Input.Key.Return> clé est passée à la <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c97fc-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="c97fc-234">Si la méthode retourne `true`, l’arrière-plan d’un <xref:System.Windows.Controls.Button> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c97fc-235">Clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-235">The specified key.</span></span></param>
        <summary><span data-ttu-id="c97fc-236">Détermine si la touche spécifiée est basculée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-236">Determines whether the specified key is toggled.</span></span></summary>
        <returns><span data-ttu-id="c97fc-237"><see langword="true" /> si <paramref name="key" /> est basculé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-237"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-238">Le <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> méthode peut être utilisée pour déterminer l’ensemble des États d’une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-239">L’exemple suivant montre comment utiliser le <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> méthode pour déterminer l’état d’une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="c97fc-240">Le <xref:System.Windows.Input.Key.Return> clé est passée à la <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c97fc-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="c97fc-241">Si la méthode retourne `true`, puis l’arrière-plan d’un <xref:System.Windows.Controls.Button> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c97fc-242">Clé à vérifier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-242">The key to check.</span></span></param>
        <summary><span data-ttu-id="c97fc-243">Détermine si la touche spécifiée est relâchée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-243">Determines whether the specified key is released.</span></span></summary>
        <returns><span data-ttu-id="c97fc-244"><see langword="true" /> si <paramref name="key" /> est relâché ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-244"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-245">Le <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> méthode peut être utilisée pour déterminer l’ensemble des États d’une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-246">L’exemple suivant montre comment utiliser le <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> méthode pour déterminer l’état d’une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="c97fc-247">Le <xref:System.Windows.Input.Key.Return> clé est passée à la <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c97fc-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="c97fc-248">Si la méthode retourne `true`, puis l’arrière-plan d’un <xref:System.Windows.Controls.Button> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-249">Se produit lorsque le fournisseur d'entrées au clavier acquiert le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-249">Occurs when the keyboard input provider acquires focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-250">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-251">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-251">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-252">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-253">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-254">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-255">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-256">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="c97fc-257">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-257">Routing strategy</span></span>|<span data-ttu-id="c97fc-258">Propagation</span><span class="sxs-lookup"><span data-stu-id="c97fc-258">Bubbling</span></span>|  
|<span data-ttu-id="c97fc-259">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="c97fc-260">L’événement de tunneling correspondant est <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-261">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-262">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-263">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-264">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-265">Se produit quand l’utilisateur appuie sur une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-265">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-266">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-267">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-267">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-268">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-269">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-270">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-271">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-272">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="c97fc-273">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-273">Routing strategy</span></span>|<span data-ttu-id="c97fc-274">Propagation</span><span class="sxs-lookup"><span data-stu-id="c97fc-274">Bubbling</span></span>|  
|<span data-ttu-id="c97fc-275">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c97fc-276">L’événement de tunneling correspondant est <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-277">L’exemple suivant crée <xref:System.Windows.Controls.TextBox> qui attache un gestionnaire d’événements pour le <xref:System.Windows.UIElement.KeyDown> événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="c97fc-278">Lorsque le <xref:System.Windows.Input.Key.Return> est enfoncée, l’événement gestionnaire affiche le texte dans le <xref:System.Windows.Controls.TextBox> dans un <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-279">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-280">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-281">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-282">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-283">Se produit quand l’utilisateur relâche une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-283">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-284">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-285">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-285">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-286">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-287">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-288">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-289">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-290">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="c97fc-291">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-291">Routing strategy</span></span>|<span data-ttu-id="c97fc-292">Propagation</span><span class="sxs-lookup"><span data-stu-id="c97fc-292">Bubbling</span></span>|  
|<span data-ttu-id="c97fc-293">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c97fc-294">L’événement de tunneling correspondant est <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-295">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-296">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-297">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-298">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-299">Se produit quand un élément perd le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-299">Occurs when an element loses keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-300">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-301">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-301">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-302">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-303">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-304">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-305">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-306">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-307">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-308">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-309">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-310">Si le <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> événement ou la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> est géré, le focus clavier ne change pas.</span><span class="sxs-lookup"><span data-stu-id="c97fc-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-311">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-312">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="c97fc-313">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-313">Routing strategy</span></span>|<span data-ttu-id="c97fc-314">Propagation</span><span class="sxs-lookup"><span data-stu-id="c97fc-314">Bubbling</span></span>|  
|<span data-ttu-id="c97fc-315">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c97fc-316">L’événement de tunneling correspondant est <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-317">L’exemple suivant crée un <xref:System.Windows.Controls.TextBox> et attache les gestionnaires d’événements pour le <xref:System.Windows.UIElement.GotKeyboardFocus> événement et le <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="c97fc-318">Lorsque le <xref:System.Windows.Controls.TextBox> Obtient le focus clavier, la couleur d’arrière-plan est modifiée et le texte de la <xref:System.Windows.Controls.TextBox> est désactivée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="c97fc-319">Lorsque le <xref:System.Windows.Controls.TextBlock> perd le focus clavier, la couleur d’arrière-plan est modifiée et une méthode est appelée et réinitialise les variables utilisées dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="c97fc-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-320">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-321">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-322">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-323">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-324">Obtient l'ensemble de <see cref="T:System.Windows.Input.ModifierKeys" /> qui est actuellement enfoncé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span></span></summary>
        <value><span data-ttu-id="c97fc-325">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Input.ModifierKeys" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-326"><xref:System.Windows.Input.ModifierKeys> est un peu énumération de champ, il est donc possible de plusieurs touches de modification à enfoncer en même temps.</span><span class="sxs-lookup"><span data-stu-id="c97fc-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="c97fc-327">Utilisez des opérations de bits pour déterminer l’ensemble exact de touches de modification enfoncées.</span><span class="sxs-lookup"><span data-stu-id="c97fc-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c97fc-328">L’exemple suivant utilise un peu de comparaison pour déterminer si le <xref:System.Windows.Input.ModifierKeys.Control> touche est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="c97fc-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-329">Se produit quand un élément est sur le point d’acquérir le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-329">Occurs when an element is in the process of acquiring keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-330">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-331">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-331">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-332">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-333">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-334">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-335">Si le <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> événement ou la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> est géré, le focus clavier ne change pas.</span><span class="sxs-lookup"><span data-stu-id="c97fc-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="c97fc-336">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-337">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-338">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-339">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-340">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-341">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-342">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="c97fc-343">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-343">Routing strategy</span></span>|<span data-ttu-id="c97fc-344">Le tunneling</span><span class="sxs-lookup"><span data-stu-id="c97fc-344">Tunneling</span></span>|  
|<span data-ttu-id="c97fc-345">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c97fc-346">L’événement de propagation correspondante est <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-347">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-348">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-349">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-350">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-351">Se produit lorsque le fournisseur d'entrées au clavier est en cours d'acquisition du focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-352">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-353">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-353">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-354">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-355">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-356">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-357">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-358">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="c97fc-359">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-359">Routing strategy</span></span>|<span data-ttu-id="c97fc-360">Le tunneling</span><span class="sxs-lookup"><span data-stu-id="c97fc-360">Tunneling</span></span>|  
|<span data-ttu-id="c97fc-361">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="c97fc-362">L’événement de propagation correspondante est <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-363">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-364">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-365">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-366">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-367">Se produit quand l’utilisateur appuie sur une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-367">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-368">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-369">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-369">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-370">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-371">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-372">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-373">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-374">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="c97fc-375">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-375">Routing strategy</span></span>|<span data-ttu-id="c97fc-376">Le tunneling</span><span class="sxs-lookup"><span data-stu-id="c97fc-376">Tunneling</span></span>|  
|<span data-ttu-id="c97fc-377">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c97fc-378">L’événement de propagation correspondante est <xref:System.Windows.Input.Keyboard.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-379">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-380">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-381">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-382">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-383">Se produit quand l’utilisateur relâche une touche du clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-383">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-384">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-385">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-385">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-386">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-387">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-388">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-389">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-390">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="c97fc-391">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-391">Routing strategy</span></span>|<span data-ttu-id="c97fc-392">Le tunneling</span><span class="sxs-lookup"><span data-stu-id="c97fc-392">Tunneling</span></span>|  
|<span data-ttu-id="c97fc-393">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="c97fc-394">L’événement de propagation correspondante est <xref:System.Windows.Input.Keyboard.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-395">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-396">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-397">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-398">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c97fc-399">Se produit quand un élément est en train de perdre le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-399">Occurs when an element is in the process of losing keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-400">Il s’agit d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="c97fc-401">implémente les événements attachés en tant qu’événements routés.</span><span class="sxs-lookup"><span data-stu-id="c97fc-401">implements attached events as routed events.</span></span> <span data-ttu-id="c97fc-402">Événements attachés sont fondamentalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept de langage pour faire référence à des événements qui peuvent être gérés sur des objets qui ne définissent pas cet événement, ce qui [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] étend en permettant également l’événement à parcourir un itinéraire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="c97fc-403">Événements attachés n’ont pas de syntaxe de gestion directe dans le code ; Pour attacher des gestionnaires pour un événement routé dans le code, vous utilisez un ajouter désigné \* méthode de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="c97fc-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="c97fc-404">Pour plus d’informations, consultez [vue d’ensemble des événements attachés](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="c97fc-405">Si le <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> événement ou la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> est géré, le focus clavier ne change pas.</span><span class="sxs-lookup"><span data-stu-id="c97fc-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="c97fc-406">Le focus clavier fait référence à l’objet qui reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="c97fc-407">L’élément ayant le focus clavier a <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="c97fc-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c97fc-408">Il peut y avoir qu’un seul élément ayant le focus clavier sur l’intégralité du bureau.</span><span class="sxs-lookup"><span data-stu-id="c97fc-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="c97fc-409">Le focus logique fait référence à l’objet dans une portée de focus qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="c97fc-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="c97fc-410">Pour plus d’informations sur le focus, le focus clavier et le focus logique, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md) et [vue d’ensemble du Focus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c97fc-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c97fc-411">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="c97fc-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c97fc-412">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="c97fc-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="c97fc-413">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="c97fc-413">Routing strategy</span></span>|<span data-ttu-id="c97fc-414">Le tunneling</span><span class="sxs-lookup"><span data-stu-id="c97fc-414">Tunneling</span></span>|  
|<span data-ttu-id="c97fc-415">délégué</span><span class="sxs-lookup"><span data-stu-id="c97fc-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="c97fc-416">L’événement de propagation correspondante est <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="c97fc-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-417">Identifie l’événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-418">Identificateurs d’événements routés sont créés lorsque les événements routés sont inscrits, et le résultat est stocké en tant que champ sur la classe qui inscrit l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="c97fc-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="c97fc-419">Ces identificateurs contiennent un nom identifiant le type de propriétaire, type de gestionnaire, stratégie de routage et une méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="c97fc-420">Vous utilisez souvent ces identificateurs comme paramètres aux méthodes de système d’événements, pour identifier un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="c97fc-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c97fc-421">Obtient le périphérique d'entrée au clavier principal.</span><span class="sxs-lookup"><span data-stu-id="c97fc-421">Gets the primary keyboard input device.</span></span></summary>
        <value><span data-ttu-id="c97fc-422">Périphérique.</span><span class="sxs-lookup"><span data-stu-id="c97fc-422">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-423">Cette propriété prend en charge l'infrastructure [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] et n'est pas destinée à être directement utilisée à partir de votre code.</span><span class="sxs-lookup"><span data-stu-id="c97fc-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-424"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-425">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-425">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-426">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-427">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-428"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-429">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-429">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-430">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-431">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-432"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-433">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-433">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-434">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-435">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-436"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-437">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-437">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-438">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-439">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-440"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-441">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-441">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-442">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-443">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-444"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-445">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-445">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-446">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-447">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-448"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-449">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-449">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-450">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-451">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-452"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-453">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-453">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-454">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-455">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-456"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-457">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-457">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-458">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-459">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c97fc-460"><see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> qui écoute cet événement.</span><span class="sxs-lookup"><span data-stu-id="c97fc-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c97fc-461">Gestionnaire d’événements à supprimer.</span><span class="sxs-lookup"><span data-stu-id="c97fc-461">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c97fc-462">Supprime un gestionnaire pour l'événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c97fc-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c97fc-463">Cette méthode fournit des accesseurs de propriété jointe pour l’accès du code à la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> événement attaché.</span><span class="sxs-lookup"><span data-stu-id="c97fc-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>