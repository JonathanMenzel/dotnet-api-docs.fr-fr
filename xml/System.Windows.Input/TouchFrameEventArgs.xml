<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30f87b6247b094010302d8c5f86db873bb00fa53" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52226726" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Windows.Input.Touch.FrameReported" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Input.Touch.FrameReported> événement est inclus dans [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] pour prendre en charge la compatibilité avec Silverlight. Si vous n’êtes pas obligé de garantir la compatibilité avec Silverlight, utilisez les événements tactiles, tels que <xref:System.Windows.UIElement.TouchDown> et <xref:System.Windows.UIElement.TouchMove>, dans <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, ou <xref:System.Windows.ContentElement>.  
  
 Utilisez le <xref:System.Windows.Input.TouchFrameEventArgs> pour obtenir le <xref:System.Windows.Input.TouchPoint> les valeurs qui correspondent à l’événement tactile. À partir de la <xref:System.Windows.Input.TouchPoint>, vous pouvez obtenir le <xref:System.Windows.Input.TouchPoint.Position%2A> des fonctions tactiles et déterminer si le <xref:System.Windows.Input.TouchAction> a été un <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, ou <xref:System.Windows.Input.TouchAction.Up> action. Vous pouvez également utiliser le <xref:System.Windows.Input.TouchPoint> pour obtenir le <xref:System.Windows.Input.TouchDevice>. À partir de la <xref:System.Windows.Input.TouchDevice>, vous pouvez déterminer l’appareil <xref:System.Windows.Input.TouchDevice.Id%2A> et obtenir des informations sur l’élément qui est touché.  
  
   
  
## Examples  
 L’exemple suivant gère la <xref:System.Windows.Input.Touch.FrameReported> événement et accède aux données de contact dans le <xref:System.Windows.Input.TouchFrameEventArgs>. Lorsque une pression tactile est activée le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice> est capturé dans le <xref:System.Windows.Controls.Canvas>. Lorsque la pression tactile est levée, le <xref:System.Windows.Input.TouchDevice> est libéré. Lorsqu’une pression tactile se déplace entre le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée. Si le déplacement provient de la première fonction tactile, son emplacement est enregistré. Si le déplacement provient de la seconde fonction tactile, une ligne est dessinée à partir de la position du premier contact tactile à la position de la seconde fonction tactile.  
  
 Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Windows.Input.Touch> vue d’ensemble de la classe.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Élément qui définit l'espace de coordonnées. Pour utiliser des coordonnées absolues WPF, attribuez à <paramref name="relativeTo" /> la valeur <see langword="null" />.</param>
        <summary>Retourne le point tactile actuel du périphérique tactile principal par rapport à l'élément spécifié.</summary>
        <returns>Position actuelle du <see cref="T:System.Windows.Input.TouchDevice" /> principal par rapport à l'élément spécifié ; ou <see langword="null" /> si le <see cref="T:System.Windows.Input.TouchDevice" /> principal n'est pas actif.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un ensemble d’actif des appareils, le premier appareil à être tactiles <xref:System.Windows.Input.TouchDevice.Activated> est le périphérique tactile principal. Par exemple, si deux doigts touchent l’écran, le premier doigt est représenté par le périphérique tactile principal. Si le premier doigt est levé alors que le deuxième doigt est toujours vers le bas, le périphérique tactile principal devient `null`.  
  
   
  
## Examples  
 Le code suivant traite les points tactiles qui sont récupérés à partir de la <xref:System.Windows.Input.TouchFrameEventArgs>. Lorsque une pression tactile est activée le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice> est capturé dans le <xref:System.Windows.Controls.Canvas>. Lorsque la pression tactile est levée, le <xref:System.Windows.Input.TouchDevice> est libéré. Lorsqu’une pression tactile se déplace entre le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée. Si le <xref:System.Windows.Input.TouchDevice.Id%2A> correspond à la <xref:System.Windows.Input.TouchDevice.Id%2A> du point tactile principal, qui indique le premier contact tactile, son emplacement est enregistré. Si le déplacement provient de la seconde fonction tactile, une ligne est dessinée à partir de la position du premier contact tactile à la position de la seconde fonction tactile.  
  
 Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Windows.Input.Touch> vue d’ensemble de la classe.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Élément qui définit l'espace de coordonnées. Pour utiliser des coordonnées absolues WPF, attribuez à <paramref name="relativeTo" /> la valeur <see langword="null" />.</param>
        <summary>Retourne une collection qui contient le point tactile actuel de chaque périphérique tactile actif par rapport à l'élément spécifié.</summary>
        <returns>Collection qui contient le <see cref="T:System.Windows.Input.TouchPoint" /> actuel de chaque <see cref="T:System.Windows.Input.TouchDevice" /> actif.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant traite les points tactiles récupérées à partir de la <xref:System.Windows.Input.TouchFrameEventArgs>. Lorsqu’une pression tactile est effectuée sur le canevas, le <xref:System.Windows.Input.TouchDevice> est capturé dans la zone de dessin. Lorsque la pression tactile est déclenchée, le <xref:System.Windows.Input.TouchDevice> est libéré. Lorsqu’une pression tactile se déplace sur le canevas, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée. Si le <xref:System.Windows.Input.TouchDevice.Id%2A> correspond à la <xref:System.Windows.Input.TouchDevice.Id%2A> du point tactile principal, qui indique le premier contact tactile, son emplacement est enregistré. Si le déplacement provient de la seconde fonction tactile, une ligne est dessinée à partir de la position du premier contact tactile à la position de la seconde fonction tactile.  
  
 Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Windows.Input.Touch> vue d’ensemble de la classe.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ce membre n'est pas implémenté.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est fournie pour la compatibilité de Silverlight. En raison des différences d’implémentation de périphérique, il n’est pas implémenté dans WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'horodatage pour cet événement.</summary>
        <value>Horodatage pour cet événement.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>