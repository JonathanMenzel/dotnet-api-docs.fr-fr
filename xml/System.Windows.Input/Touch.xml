<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c303be5b4a301d0fee4df08c2d9b374d0081a934" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un service au niveau de l'application qui traite l'entrée tactile multipoint du système d'exploitation et déclenche l'événement <see cref="E:System.Windows.Input.Touch.FrameReported" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Input.Touch.FrameReported> événement est inclus dans [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] pour prendre en charge la compatibilité avec Silverlight. Si vous n’êtes pas obligé de garantir la compatibilité avec Silverlight, utilisez les événements tactiles, tels que <xref:System.Windows.UIElement.TouchDown> et <xref:System.Windows.UIElement.TouchMove>, dans <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, ou <xref:System.Windows.ContentElement>.  
  
 Le <xref:System.Windows.Input.Touch.FrameReported> événement n’utilise pas le même modèle d’événement que d’autres événements d’entrée WPF, tels que <xref:System.Windows.UIElement.TouchDown> et <xref:System.Windows.UIElement.TouchMove>. Au lieu d’être exposé comme un événement spécifique à l’élément qui traverse potentiellement l’arborescence d’objets d’une interface utilisateur, le <xref:System.Windows.Input.Touch.FrameReported> événement est un événement unique qui est géré au niveau de l’application. Par conséquent, vous ne pouvez pas utiliser le `sender` paramètre du Gestionnaire d’événements pour déterminer quel élément est affecté.  
  
 Utilisez le <xref:System.Windows.Input.TouchFrameEventArgs> pour obtenir le <xref:System.Windows.Input.TouchPoint> les valeurs qui sont pertinents pour l’événement tactile. À partir de la <xref:System.Windows.Input.TouchPoint>, vous pouvez obtenir le <xref:System.Windows.Input.TouchPoint.Position%2A> des fonctions tactiles et déterminer si le <xref:System.Windows.Input.TouchAction> a été un <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, ou <xref:System.Windows.Input.TouchAction.Up> action. Vous pouvez également utiliser le <xref:System.Windows.Input.TouchPoint> pour obtenir le <xref:System.Windows.Input.TouchDevice>. À partir de la <xref:System.Windows.Input.TouchDevice>, vous pouvez déterminer le périphérique <xref:System.Windows.Input.TouchDevice.Id%2A> et obtenir des informations sur l’élément qui est affecté.  
  
   
  
## Examples  
 L’exemple suivant permet de créer des modèles simples sur un <xref:System.Windows.Controls.Canvas> en faisant glisser deux doigts sur un écran tactile. Chaque contact tactile est représenté par un <xref:System.Windows.Input.TouchDevice>. Le modèle est créé en dessinant une ligne entre les points tactiles fournis par les fonctions tactiles. Cet exemple requiert un écran tactile compatible avec Windows.  
  
 Le balisage suivant crée l’interface utilisateur, qui se compose d’un <xref:System.Windows.Controls.Canvas> qui est centré dans un <xref:System.Windows.Controls.Grid>.  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 Le code suivant gère le <xref:System.Windows.Input.Touch.FrameReported> événement. Lorsqu’une fonction tactile appuie le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice> est capturé dans la <xref:System.Windows.Controls.Canvas>. Lorsque la fonction tactile est levée, le <xref:System.Windows.Input.TouchDevice> est libérée. Quand une touche se trouve sur le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée. Si le déplacement provient de la première fonction tactile, son emplacement est enregistré. Si le déplacement provient de la seconde fonction tactile, une ligne est tracée à partir de la position de la première fonction tactile à la position de la seconde fonction tactile.  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un message tactile est envoyé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cadre est dans une série de messages tactiles multipoint ou points tactiles. Vous pouvez répondre aux fonctions tactiles en gérant la <xref:System.Windows.Input.Touch.FrameReported> événement et accéder aux détails de la <xref:System.Windows.Input.TouchPoint> à partir de la <xref:System.Windows.Input.TouchFrameEventArgs> les données d’événement.  
  
 Le <xref:System.Windows.Input.Touch.FrameReported> événement n’utilise pas le même modèle d’événement en tant qu’autre [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] tels que les événements, d’entrée <xref:System.Windows.UIElement.TouchDown> et <xref:System.Windows.UIElement.TouchMove>. Au lieu d’être exposé comme un événement spécifique à l’élément qui traverse potentiellement l’arborescence d’objets d’une interface utilisateur, le <xref:System.Windows.Input.Touch.FrameReported> événement est un événement unique qui est géré au niveau de l’application. Par conséquent, vous ne pouvez pas utiliser le `sender` paramètre du Gestionnaire d’événements pour déterminer quel élément est affecté.  
  
   
  
## Examples  
 L’exemple suivant gère le <xref:System.Windows.Input.Touch.FrameReported> événement. Lorsqu’une fonction tactile appuie le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice> est capturé dans la <xref:System.Windows.Controls.Canvas>. Lorsque la fonction tactile est levée, le <xref:System.Windows.Input.TouchDevice> est libérée. Quand une touche se trouve sur le <xref:System.Windows.Controls.Canvas>, le <xref:System.Windows.Input.TouchDevice.Id%2A> est activée. Si le déplacement provient de la première fonction tactile, son emplacement est enregistré. Si le déplacement provient de la seconde fonction tactile, une ligne est tracée à partir de la position de la première fonction tactile à la position de la seconde fonction tactile.  
  
 Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Windows.Input.Touch> vue d’ensemble de la classe.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>