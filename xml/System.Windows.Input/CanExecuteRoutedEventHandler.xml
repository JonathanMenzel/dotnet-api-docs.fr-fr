<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CanExecuteRoutedEventHandler.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac540314ee81839ebd0b1ef25f5f831b2e68f2b0ad5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40314ee81839ebd0b1ef25f5f831b2e68f2b0ad5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The command target that is invoking the handler.</source>
          <target state="translated">Cible de la commande qui appelle le gestionnaire.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> event.</source>
          <target state="translated">Représente la méthode qui gérera l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> determines if the command associated with the event source is able to execute on the command target.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> détermine si la commande associée à la source d’événements est en mesure d’exécuter sur la cible de commande.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>If the command has a command source that specifies a target, then the target information can be obtained through <ph id="ph1">`sender`</ph>.</source>
          <target state="translated">Si la commande a une source de commande qui spécifie une cible, puis les informations de la cible peuvent être obtenues via <ph id="ph1">`sender`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</ph> is not set, the element with keyboard focus is the target, and can also be obtained through <ph id="ph2">`sender`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</ph> n’est pas défini, l’élément avec le focus clavier est la cible et peut également être obtenu via <ph id="ph2">`sender`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>If it is determined that the command can execute on the target, then the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType&gt;</ph> property should be set to <ph id="ph2">`true`</ph>; otherwise, set it to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">S’il est déterminé que la commande peut s’exécuter sur la cible, puis le <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType&gt;</ph> propriété doit être définie sur <ph id="ph2">`true`</ph>; sinon, affectez-lui la valeur <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>You do not need to rely on event data to determine the command, source, and target.</source>
          <target state="translated">Vous n’avez pas besoin de s’appuyer sur les données d’événement pour déterminer la commande, la source et la cible.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</source>
          <target state="translated">Vous pouvez limiter l’utilisation du Gestionnaire aux appels de commande possibles connus, bien que cela est plus difficile d’y parvenir si votre structure de commandes repose en grande partie sur le routage des commandes pour exécuter la même commande sur des cibles potentielles consécutives dans un événement itinéraire.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> that sets <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">L’exemple suivant montre un <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> qui définit <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> à <ph id="ph3">`true`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>