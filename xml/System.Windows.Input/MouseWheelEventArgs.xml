<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bf7fa23eb7098539b41a21329f53a18f6e895cb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37504269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseWheelEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fbc46-101">Fournit des données pour différents événements qui signalent des modifications à la valeur delta de la roulette d'une souris.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbc46-101">Provides data for various events that report changes to the mouse wheel delta value of a mouse device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbc46-102"><xref:System.Windows.Input.MouseWheelEventArgs> est utilisé avec les événements suivants :</span><span class="sxs-lookup"><span data-stu-id="fbc46-102"><xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:</span></span>  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="fbc46-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (événement attaché)</span><span class="sxs-lookup"><span data-stu-id="fbc46-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="fbc46-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (événement attaché)</span><span class="sxs-lookup"><span data-stu-id="fbc46-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
 <span data-ttu-id="fbc46-105">Le <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> propriété est positive si la roulette de la souris est déplacée vers le haut ou vers l’avant (en s’éloignant de l’utilisateur) ou négative si la roulette de la souris est déplacée vers le bas ou vers l’arrière (vers l’utilisateur).</span><span class="sxs-lookup"><span data-stu-id="fbc46-105">The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).</span></span>  
  
 <span data-ttu-id="fbc46-106">Cet événement est déclenché même pour les déplacements de roulette de souris petit.</span><span class="sxs-lookup"><span data-stu-id="fbc46-106">This event is raised even for small mouse wheel movements.</span></span> <span data-ttu-id="fbc46-107">Pour certains scénarios, il est judicieux d’implémenter des gestionnaires qui limitent les deltas de roulette de souris petite en vérifiant si le delta dépasse un certain seuil.</span><span class="sxs-lookup"><span data-stu-id="fbc46-107">For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold.</span></span> <span data-ttu-id="fbc46-108">Sinon, vous pouvez appeler votre gestionnaire pour les cas où le delta de roulette de la souris a été si petit que toute interface utilisateur qui est lié au déplacement de roulette de la souris n’est pas mise à jour.</span><span class="sxs-lookup"><span data-stu-id="fbc46-108">Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update.</span></span> <span data-ttu-id="fbc46-109">Exactement comment vous implémenter le comportement de seuil dans un gestionnaire et ce que ce seuil doit être est entièrement spécifique à l’implémentation.</span><span class="sxs-lookup"><span data-stu-id="fbc46-109">Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbc46-110">L’exemple suivant déplace un <xref:System.Windows.Controls.TextBox> supérieur si la roulette de souris <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> est un nombre positif et déplace le <xref:System.Windows.Controls.TextBox> déroulante si la roulette de souris <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> est un nombre négatif.</span><span class="sxs-lookup"><span data-stu-id="fbc46-110">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="fbc46-111">Le <xref:System.Windows.Controls.TextBox> est attaché à un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="fbc46-111">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseWheelEventArgs : System.Windows.Input.MouseDevice * int * int -&gt; System.Windows.Input.MouseWheelEventArgs" Usage="new System.Windows.Input.MouseWheelEventArgs (mouse, timestamp, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">
          <span data-ttu-id="fbc46-112">Souris associée à cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-112">The mouse device associated with this event.</span>
          </span>
        </param>
        <param name="timestamp">
          <span data-ttu-id="fbc46-113">Heure à laquelle l'entrée s'est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-113">The time when the input occurred.</span>
          </span>
        </param>
        <param name="delta">
          <span data-ttu-id="fbc46-114">Montant que la roulette a modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-114">The amount the wheel has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbc46-115">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.MouseWheelEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-115">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbc46-116">Obtient une valeur qui indique le montant que la roulette de la souris a modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-116">Gets a value that indicates the amount that the mouse wheel has changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbc46-117">Montant que la roulette a modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-117">The amount the wheel has changed.</span>
          </span>
          <span data-ttu-id="fbc46-118">Cette valeur est positive si la roulette de la souris est pivotée vers le haut (éloignée de l'utilisateur) ou négative si la roulette de la souris est pivotée vers le bas (poussée en direction de l'utilisateur).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-118">This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbc46-119">Les plages supérieures et inférieures effectives de cette valeur est potentiellement proviennent d’implémentations de périphérique ou d’autres appelants qui a déclenché l’événement et sont donc pas définis.</span><span class="sxs-lookup"><span data-stu-id="fbc46-119">The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbc46-120">L’exemple suivant déplace un <xref:System.Windows.Controls.TextBox> supérieur si la roulette de souris <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> est un nombre positif et déplace le <xref:System.Windows.Controls.TextBox> déroulante si la roulette de souris <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> est un nombre négatif.</span><span class="sxs-lookup"><span data-stu-id="fbc46-120">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="fbc46-121">Le <xref:System.Windows.Controls.TextBox> est attaché à un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="fbc46-121">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseWheelEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="fbc46-122">Gestionnaire générique à appeler selon une méthode spécifique au type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-122">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="fbc46-123">Cible sur laquelle le gestionnaire doit être appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-123">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbc46-124">Appelle des gestionnaires d'événements selon une méthode spécifique à un type, ce qui peut améliorer l'efficacité du système d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbc46-124">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbc46-125">Cette implémentation effectue un cast du gestionnaire générique en un <xref:System.Windows.Input.MouseWheelEventHandler> , puis l’appelle.</span><span class="sxs-lookup"><span data-stu-id="fbc46-125">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it.</span></span> <span data-ttu-id="fbc46-126">Pour plus d’informations sur ce modèle d’implémentation et les raisons pour qu’il, consultez <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> et [vue d’ensemble des événements routés](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fbc46-126">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>