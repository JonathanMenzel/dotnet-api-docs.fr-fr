<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a720edaac5c7f719dc1045717fc47b33c2a6893" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36506899" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="46ec1-101">Lie un <see cref="T:System.Windows.Input.KeyGesture" /> à un <see cref="T:System.Windows.Input.RoutedCommand" /> (ou à une autre implémentation de <see cref="T:System.Windows.Input.ICommand" />).</span>
      <span class="sxs-lookup">
        <span data-stu-id="46ec1-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46ec1-102">A <xref:System.Windows.Input.KeyBinding> associe un <xref:System.Windows.Input.KeyGesture> avec un <xref:System.Windows.Input.ICommand>, comme un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="46ec1-103"><xref:System.Windows.Input.RoutedCommand> est l’implémentation principale de la <xref:System.Windows.Input.ICommand> interface pour la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] d’exécution des commandes système.</span><span class="sxs-lookup"><span data-stu-id="46ec1-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="46ec1-104">En général, lorsque le <xref:System.Windows.Input.KeyGesture> est exécutée la commande est appelée, bien que le comportement de commande plus dépend des facteurs propres aux commandes tels que le <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> valeur.</span><span class="sxs-lookup"><span data-stu-id="46ec1-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="46ec1-105">Pour plus d’informations sur l’exécution des commandes, consultez le [vue d’ensemble de l’exécution des commandes](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="46ec1-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="46ec1-106">À l’exception des touches de fonction et les touches du pavé numérique, valide <xref:System.Windows.Input.KeyGesture> doit contenir exactement un <xref:System.Windows.Input.Key> et un ou plusieurs <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="46ec1-107">Touches de fonction et les touches du pavé numérique ne nécessitent pas une touche de modification pour être valide <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-108">Il est possible de spécifier un non valide <xref:System.Windows.Input.KeyGesture> et un <xref:System.Windows.Input.KeyBinding> non valide associé mouvement, que ce soit via [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ou du code.</span><span class="sxs-lookup"><span data-stu-id="46ec1-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="46ec1-109">Par exemple, aucune validation n’est qui empêche la création et la liaison un <xref:System.Windows.Input.KeyGesture> qui contient uniquement une clé trouvé, ou uniquement des modificateurs mais aucune clé.</span><span class="sxs-lookup"><span data-stu-id="46ec1-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="46ec1-110">Ces un <xref:System.Windows.Input.KeyBinding> jamais tentera d’appeler la commande associée.</span><span class="sxs-lookup"><span data-stu-id="46ec1-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="46ec1-111">Lorsque vous définissez un <xref:System.Windows.Input.KeyBinding> dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] il existe deux façons de spécifier le <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-112">La première méthode pour établir une <xref:System.Windows.Input.KeyBinding> dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste à définir le <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribut de la <xref:System.Windows.Input.KeyBinding> élément, ce qui permet à une syntaxe de spécifier des clés et des modificateurs comme une chaîne unique, par exemple, « CTRL + P ».</span><span class="sxs-lookup"><span data-stu-id="46ec1-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="46ec1-113">La deuxième méthode consiste à définir le <xref:System.Windows.Input.KeyBinding.Key%2A> attribut et la <xref:System.Windows.Input.KeyBinding.Modifiers%2A> les attributs de la <xref:System.Windows.Input.KeyBinding> élément.</span><span class="sxs-lookup"><span data-stu-id="46ec1-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="46ec1-114">Les deux méthodes de définition du <xref:System.Windows.Input.KeyGesture> sont équivalentes et modifient le même objet sous-jacent, mais il y aura un conflit si les deux sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="46ec1-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="46ec1-115">Dans le cas lorsque le <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>et le <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributs sont définis, l’attribut qui est défini dernier sera utilisé pour le <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-116">Il peut exister des situations où, par exemple un <xref:System.Windows.Input.KeyBinding.Key%2A> ensemble dernier remplace le composant clé d’un mouvement précédent mais que les modificateurs du mouvement identiques.</span><span class="sxs-lookup"><span data-stu-id="46ec1-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="46ec1-117">En règle générale, il est recommandé d’utiliser uniquement la <xref:System.Windows.Input.KeyBinding.Gesture%2A> d’attribut de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; Cela permet d’éviter toute ambiguïté, fournit la syntaxe la plus simplifiée et la représentation la plus simple pour la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="46ec1-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="46ec1-118">A <xref:System.Windows.Input.KeyBinding> peut être défini sur un objet spécifique ou au niveau de la classe en enregistrant un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> sur la <xref:System.Windows.Input.CommandManager> classe.</span><span class="sxs-lookup"><span data-stu-id="46ec1-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="46ec1-119">La façon la plus courante pour définir un <xref:System.Windows.Input.KeyBinding> se trouve dans le modèle de contrôle, en définissant le <xref:System.Windows.UIElement.InputBindings%2A> propriété dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] en déclarant un ou plusieurs <xref:System.Windows.Input.MouseBinding> ou <xref:System.Windows.Input.KeyBinding> éléments.</span><span class="sxs-lookup"><span data-stu-id="46ec1-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46ec1-120">L’exemple suivant crée un <xref:System.Windows.Input.KeyBinding> et l’ajoute à la <xref:System.Windows.Input.InputBindingCollection> de la fenêtre racine.</span><span class="sxs-lookup"><span data-stu-id="46ec1-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-121">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-122">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="46ec1-123">Commande à associer à <c>gesture</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-123">The command to associate with <c>gesture</c>.</span>
          </span>
        </param>
        <param name="gesture">
          <span data-ttu-id="46ec1-124">Combinaison de touches à associer à <c>command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-124">The key combination to associate with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46ec1-125">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyBinding" /> avec les <see cref="T:System.Windows.Input.ICommand" /> et <see cref="T:System.Windows.Input.KeyGesture" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="46ec1-126">
            <paramref name="command" /> ou <paramref name="gesture" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-126">
              <paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="46ec1-127">Commande à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-127">The command to invoke.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="46ec1-128">Touche à associer à <c>command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-128">The key to be associated with <c>command</c>.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="46ec1-129">Modificateurs à associer à <c>command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-129">The modifiers to be associated with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46ec1-130">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyBinding" /> à l'aide de l'interface <see cref="T:System.Windows.Input.ICommand" /> spécifiée ainsi que du <see cref="T:System.Windows.Input.Key" /> et des <see cref="T:System.Windows.Input.ModifierKeys" /> spécifiés qui seront convertis en <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-131">Crée une instance d'un <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46ec1-132">Nouvel objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-132">The new object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-133">Obtient ou définit le mouvement associé à ce <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46ec1-134">Combinaison de touches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-134">The key sequence.</span>
          </span>
          <span data-ttu-id="46ec1-135">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-135">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46ec1-136">À l’exception des touches de fonction et les touches du pavé numérique, un <xref:System.Windows.Input.KeyGesture> doit contenir un <xref:System.Windows.Input.Key> et un ou plusieurs <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46ec1-137">L’exemple suivant montre comment lier un <xref:System.Windows.Input.KeyGesture> à un <xref:System.Windows.Input.RoutedCommand> à l’aide un <xref:System.Windows.Input.KeyBinding> (les exemples de balisage et le code spécifient des touches différentes mais sont équivalents).</span><span class="sxs-lookup"><span data-stu-id="46ec1-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="46ec1-138">La valeur affectée à <paramref name="gesture" /> n'est pas un <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-139">Obtient ou définit le <see cref="T:System.Windows.Input.Key" /> du <see cref="T:System.Windows.Input.KeyGesture" /> associé à ce <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46ec1-140">Partie principale du <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="46ec1-141">La valeur par défaut est <see cref="F:System.Windows.Input.Key.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46ec1-142">À l’exception des touches de fonction et les touches du pavé numérique, un <xref:System.Windows.Input.KeyGesture> doit contenir un <xref:System.Windows.Input.Key> et un ou plusieurs <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="46ec1-143">Lorsque vous définissez un <xref:System.Windows.Input.KeyBinding> dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] il existe deux façons de spécifier le <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-144">La première méthode pour établir une <xref:System.Windows.Input.KeyBinding> dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste à définir le <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribut de la <xref:System.Windows.Input.KeyBinding> élément, ce qui permet à une syntaxe de spécifier des clés et des modificateurs comme une chaîne unique, par exemple, « CTRL + P ».</span><span class="sxs-lookup"><span data-stu-id="46ec1-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="46ec1-145">La deuxième méthode consiste à définir le <xref:System.Windows.Input.KeyBinding.Key%2A> attribut et la <xref:System.Windows.Input.KeyBinding.Modifiers%2A> les attributs de la <xref:System.Windows.Input.KeyBinding> élément.</span><span class="sxs-lookup"><span data-stu-id="46ec1-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="46ec1-146">Les deux méthodes de définition du <xref:System.Windows.Input.KeyGesture> sont équivalentes et modifient le même objet sous-jacent, mais il y aura un conflit si les deux sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="46ec1-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="46ec1-147">Dans le cas lorsque le <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>et le <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributs sont définis, l’attribut qui est défini dernier sera utilisé pour le <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-148">Il peut exister des situations où, par exemple un <xref:System.Windows.Input.KeyBinding.Key%2A> ensemble dernier remplace le composant clé d’un mouvement précédent mais que les modificateurs du mouvement identiques.</span><span class="sxs-lookup"><span data-stu-id="46ec1-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="46ec1-149">En règle générale, il est recommandé d’utiliser uniquement la <xref:System.Windows.Input.KeyBinding.Gesture%2A> d’attribut de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; Cela permet d’éviter toute ambiguïté, fournit la syntaxe la plus simplifiée et la représentation la plus simple pour la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="46ec1-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-150">Identifie la propriété de dépendance <see cref="P:System.Windows.Input.KeyBinding.Key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-151">Obtient ou définit le <see cref="T:System.Windows.Input.ModifierKeys" /> du <see cref="T:System.Windows.Input.KeyGesture" /> associé à ce <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46ec1-152">Touches de modification du <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="46ec1-153">La valeur par défaut est <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46ec1-154">À l’exception des touches de fonction et les touches du pavé numérique, un <xref:System.Windows.Input.KeyGesture> doit contenir un <xref:System.Windows.Input.Key> et un ou plusieurs <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="46ec1-155">Lorsque vous définissez un <xref:System.Windows.Input.KeyBinding> dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] il existe deux façons de spécifier le <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-156">La première méthode pour établir une <xref:System.Windows.Input.KeyBinding> dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste à définir le <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribut de la <xref:System.Windows.Input.KeyBinding> élément, ce qui permet à une syntaxe de spécifier des clés et des modificateurs comme une chaîne unique, par exemple, « CTRL + P ».</span><span class="sxs-lookup"><span data-stu-id="46ec1-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="46ec1-157">La deuxième méthode consiste à définir le <xref:System.Windows.Input.KeyBinding.Key%2A> attribut et la <xref:System.Windows.Input.KeyBinding.Modifiers%2A> les attributs de la <xref:System.Windows.Input.KeyBinding> élément.</span><span class="sxs-lookup"><span data-stu-id="46ec1-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="46ec1-158">Les deux méthodes de définition du <xref:System.Windows.Input.KeyGesture> sont équivalentes et modifient le même objet sous-jacent, mais il y aura un conflit si les deux sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="46ec1-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="46ec1-159">Dans le cas lorsque le <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>et le <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributs sont définis, l’attribut qui est défini dernier sera utilisé pour le <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="46ec1-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="46ec1-160">Il peut exister des situations où, par exemple un <xref:System.Windows.Input.KeyBinding.Key%2A> ensemble dernier remplace le composant clé d’un mouvement précédent mais que les modificateurs du mouvement identiques.</span><span class="sxs-lookup"><span data-stu-id="46ec1-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="46ec1-161">En règle générale, il est recommandé d’utiliser uniquement la <xref:System.Windows.Input.KeyBinding.Gesture%2A> d’attribut de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; Cela permet d’éviter toute ambiguïté, fournit la syntaxe la plus simplifiée et la représentation la plus simple pour la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="46ec1-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="46ec1-162">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="46ec1-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="46ec1-163">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="46ec1-163">XAML Values</span></span>  
 <span data-ttu-id="46ec1-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="46ec1-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="46ec1-165">Une ou plusieurs touches de modification, définies par le <xref:System.Windows.Input.ModifierKeys> énumération, délimitée par un caractère « + ».</span><span class="sxs-lookup"><span data-stu-id="46ec1-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46ec1-166">Identifie la propriété de dépendance <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46ec1-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>