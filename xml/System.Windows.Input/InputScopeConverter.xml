<Type Name="InputScopeConverter" FullName="System.Windows.Input.InputScopeConverter">
  <TypeSignature Language="C#" Value="public class InputScopeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputScopeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputScopeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class InputScopeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputScopeConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1970b-101">Convertit un <see cref="T:System.Windows.Input.InputScope" /> en et depuis d'autres types.</span><span class="sxs-lookup"><span data-stu-id="1970b-101">Converts a <see cref="T:System.Windows.Input.InputScope" /> to and from other types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputScopeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputScopeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1970b-102">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.InputScopeConverter" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-102">Initializes a new instance of the <see cref="T:System.Windows.Input.InputScopeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1970b-103">Un objet qui décrit tout contexte de descripteur de type.</span><span class="sxs-lookup"><span data-stu-id="1970b-103">An object that describes any type descriptor context.</span></span>  <span data-ttu-id="1970b-104">Cet objet doit implémenter l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-104">This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</span></span>  <span data-ttu-id="1970b-105">Ce paramètre peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-105">This parameter may be <see langword="null" />.</span></span></param>
        <param name="sourceType"><span data-ttu-id="1970b-106">Un <see cref="T:System.Type" /> à vérifier pour la compatibilité de conversion.</span><span class="sxs-lookup"><span data-stu-id="1970b-106">A <see cref="T:System.Type" /> to check for conversion compatibility.</span></span></param>
        <summary><span data-ttu-id="1970b-107">Détermine si un objet <see cref="T:System.Windows.Input.InputScope" />peut être converti à partir d'un objet d'un type spécifié.</span><span class="sxs-lookup"><span data-stu-id="1970b-107">Determines whether an <see cref="T:System.Windows.Input.InputScope" /> object can be converted from an object of a specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="1970b-108"><see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-108"><see langword="true" /> if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1970b-109">Un objet qui décrit tout contexte de descripteur de type.</span><span class="sxs-lookup"><span data-stu-id="1970b-109">An object that describes any type descriptor context.</span></span>  <span data-ttu-id="1970b-110">Cet objet doit implémenter l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-110">This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</span></span>  <span data-ttu-id="1970b-111">Ce paramètre peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-111">This parameter may be <see langword="null" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="1970b-112">Un <see cref="T:System.Type" /> à vérifier pour la compatibilité de conversion.</span><span class="sxs-lookup"><span data-stu-id="1970b-112">A <see cref="T:System.Type" /> to check for conversion compatibility.</span></span></param>
        <summary><span data-ttu-id="1970b-113">Détermine si un objet <see cref="T:System.Windows.Input.InputScope" />peut être converti en un objet d'un type spécifié.</span><span class="sxs-lookup"><span data-stu-id="1970b-113">Determines whether an <see cref="T:System.Windows.Input.InputScope" /> object can be converted to an object of a specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="1970b-114"><see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-114"><see langword="true" /> if <paramref name="destinationType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1970b-115">Un objet qui décrit tout contexte de descripteur de type.</span><span class="sxs-lookup"><span data-stu-id="1970b-115">An object that describes any type descriptor context.</span></span>  <span data-ttu-id="1970b-116">Cet objet doit implémenter l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-116">This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</span></span>  <span data-ttu-id="1970b-117">Ce paramètre peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-117">This parameter may be <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="1970b-118">Un objet <see cref="T:System.Globalization.CultureInfo" /> qui contient tout contexte culturel pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="1970b-118">A <see cref="T:System.Globalization.CultureInfo" /> object containing any cultural context for the conversion.</span></span>  <span data-ttu-id="1970b-119">Ce paramètre peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-119">This parameter may be <see langword="null" />.</span></span></param>
        <param name="source"><span data-ttu-id="1970b-120">Un objet source à convertir.</span><span class="sxs-lookup"><span data-stu-id="1970b-120">A source object to convert from.</span></span>  <span data-ttu-id="1970b-121">Cet objet doit être une chaîne.</span><span class="sxs-lookup"><span data-stu-id="1970b-121">This object must be a string.</span></span></param>
        <summary><span data-ttu-id="1970b-122">Convertit un objet source (string) en un objet <see cref="T:System.Windows.Input.InputScope" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-122">Converts a source object (string) into an <see cref="T:System.Windows.Input.InputScope" /> object.</span></span></summary>
        <returns><span data-ttu-id="1970b-123">Un objet <see cref="T:System.Windows.Input.InputScope" /> converti à partir de l'objet source spécifié.</span><span class="sxs-lookup"><span data-stu-id="1970b-123">An <see cref="T:System.Windows.Input.InputScope" /> object converted from the specified source object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1970b-124">Un objet qui décrit tout contexte de descripteur de type.</span><span class="sxs-lookup"><span data-stu-id="1970b-124">An object that describes any type descriptor context.</span></span>  <span data-ttu-id="1970b-125">Cet objet doit implémenter l'interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-125">This object must implement the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface.</span></span>  <span data-ttu-id="1970b-126">Ce paramètre peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-126">This parameter may be <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="1970b-127">Un objet <see cref="T:System.Globalization.CultureInfo" /> qui contient tout contexte culturel pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="1970b-127">A <see cref="T:System.Globalization.CultureInfo" /> object containing any cultural context for the conversion.</span></span>  <span data-ttu-id="1970b-128">Ce paramètre peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-128">This parameter may be <see langword="null" />.</span></span></param>
        <param name="value"><span data-ttu-id="1970b-129">Un objet à convertir.</span><span class="sxs-lookup"><span data-stu-id="1970b-129">An object to convert from.</span></span>  <span data-ttu-id="1970b-130">Cet objet doit être de type <see cref="T:System.Windows.Input.InputScope" />.</span><span class="sxs-lookup"><span data-stu-id="1970b-130">This object must be of type <see cref="T:System.Windows.Input.InputScope" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="1970b-131">Un type de destination pour convertir le type.</span><span class="sxs-lookup"><span data-stu-id="1970b-131">A destination type to convert type.</span></span>  <span data-ttu-id="1970b-132">Ce type doit être string.</span><span class="sxs-lookup"><span data-stu-id="1970b-132">This type must be string.</span></span></param>
        <summary><span data-ttu-id="1970b-133">Convertit <see cref="T:System.Windows.Input.InputScope" /> un objet en un type d'objet spécifié (string).</span><span class="sxs-lookup"><span data-stu-id="1970b-133">Converts an <see cref="T:System.Windows.Input.InputScope" /> object into a specified object type (string).</span></span></summary>
        <returns><span data-ttu-id="1970b-134">Un nouvel objet du type spécifié (string) converti à partir de l'objet <see cref="T:System.Windows.Input.InputScope" /> donné.</span><span class="sxs-lookup"><span data-stu-id="1970b-134">A new object of the specified type (string) converted from the given <see cref="T:System.Windows.Input.InputScope" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1970b-135">`destinationType` doit être <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="1970b-135">`destinationType` must be <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>