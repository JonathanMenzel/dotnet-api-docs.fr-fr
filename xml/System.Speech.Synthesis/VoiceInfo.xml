<Type Name="VoiceInfo" FullName="System.Speech.Synthesis.VoiceInfo">
  <TypeSignature Language="C#" Value="public class VoiceInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit VoiceInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.VoiceInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class VoiceInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class VoiceInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{(_name != null ? "'" + _name + "' " : "") +  (_culture != null ? " '" + _culture.ToString () + "' " : "") + (_gender != VoiceGender.NotSet ? " '" + _gender.ToString () + "' " : "") + (_age != VoiceAge.NotSet ? " '" + _age.ToString () + "' " : "") + (_variant &gt; 0 ? " " + _variant.ToString () : "")}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c393-101">Représente un moteur de synthèse vocale installé.</span><span class="sxs-lookup"><span data-stu-id="5c393-101">Represents an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c393-102">Une voix est un moteur de synthèse vocale installée, qui est également appelé un moteur de synthèse vocale ou un moteur de synthèse.</span><span class="sxs-lookup"><span data-stu-id="5c393-102">A voice is an installed speech synthesis engine, which is also referred to as a text-to-speech engine or a TTS engine.</span></span> <span data-ttu-id="5c393-103">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet utilise une voix pour générer le discours à partir du texte.</span><span class="sxs-lookup"><span data-stu-id="5c393-103">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object uses a voice to generate speech from text.</span></span> <span data-ttu-id="5c393-104">Les propriétés de la <xref:System.Speech.Synthesis.VoiceInfo> objet identifier une voix et décrivent ses caractéristiques.</span><span class="sxs-lookup"><span data-stu-id="5c393-104">The properties of the <xref:System.Speech.Synthesis.VoiceInfo> object identify a voice and describe its characteristics.</span></span> <span data-ttu-id="5c393-105">La caractéristique la plus de définition de la voix est son <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>, qui définit la langue unique qui parlent une voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-105">The most defining characteristic of a voice is its <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>, which defines the single language that a voice can speak.</span></span>  
  
 <span data-ttu-id="5c393-106">Le <xref:System.Speech.Synthesis.SpeechSynthesizer.Voice%2A> propriété retourne un <xref:System.Speech.Synthesis.VoiceInfo> objet qui contient des informations sur la voix actuelle en cours d’utilisation par le <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="5c393-106">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Voice%2A> property returns a <xref:System.Speech.Synthesis.VoiceInfo> object that contains information about the current voice in use by the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="5c393-107">Vous pouvez également utiliser un <xref:System.Speech.Synthesis.VoiceInfo> objet pour obtenir des informations sur une des voix qui sont installés sur le système, tel que retourné par le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5c393-107">You can also use a <xref:System.Speech.Synthesis.VoiceInfo> object to get information about any of the voices that are installed on the system, as returned by the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices> method.</span></span> <span data-ttu-id="5c393-108">Pour plus d'informations, voir <xref:System.Speech.Synthesis.InstalledVoice>.</span><span class="sxs-lookup"><span data-stu-id="5c393-108">See <xref:System.Speech.Synthesis.InstalledVoice> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c393-109">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et des sorties vers la console une liste des voix installées (moteurs de synthèse vocale) et montre les informations qui sont disponibles pour chaque voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-109">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
  </Docs>
  <Members>
    <Member MemberName="AdditionalInfo">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; AdditionalInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; AdditionalInfo" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalInfo As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ AdditionalInfo { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-110">Obtient des informations supplémentaires sur la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-110">Gets additional information about the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-111">Retourne une collection de paires nom/valeur qui décrit et identifie la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-111">Returns a collection of name/value pairs that describe and identify the voice.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Age">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceAge Age { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.VoiceAge Age" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Age" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Age As VoiceAge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceAge Age { System::Speech::Synthesis::VoiceAge get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-112">Obtient l'âge de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-112">Gets the age of the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-113">Retourne l'âge de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-113">Returns the age of the voice.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c393-114">Le <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriété obtient un membre de la <xref:System.Speech.Synthesis.VoiceAge> énumération qui indique la durée de vie de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-114">The <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> property gets a member of the <xref:System.Speech.Synthesis.VoiceAge> enumeration that indicates the age of the voice.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-115">Obtient la culture de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-115">Gets the culture of the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-116">Retourne un objet <see cref="T:System.Globalization.CultureInfo" /> qui fournit des informations sur une culture spécifique, telle que les noms de la culture, le système d'écriture, le calendrier utilisé, et comment mettre en forme des dates et des chaînes de tri.</span><span class="sxs-lookup"><span data-stu-id="5c393-116">Returns a <see cref="T:System.Globalization.CultureInfo" /> object that provides information about a specific culture, such as the names of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c393-117">La <xref:System.Globalization.CultureInfo> classe spécifie un nom unique pour chaque culture.</span><span class="sxs-lookup"><span data-stu-id="5c393-117">The <xref:System.Globalization.CultureInfo> class specifies a unique name for each culture.</span></span> <span data-ttu-id="5c393-118">Le nom est une combinaison d’un code de culture à deux lettres minuscules ISO 639 associé à une langue et un code de sous-culture à deux lettres majuscules ISO 3166 associé à un pays ou une région.</span><span class="sxs-lookup"><span data-stu-id="5c393-118">The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code associated with a country or region.</span></span> <span data-ttu-id="5c393-119">Culture exemples de noms « es-US » pour l’espagnol parlé aux États-Unis, ou « fr-CA » pour le Français parlé au Canada.</span><span class="sxs-lookup"><span data-stu-id="5c393-119">Examples of culture names include "es-US" for Spanish as spoken in the US, or "fr-CA" for French as spoken in Canada.</span></span> <span data-ttu-id="5c393-120">Vous pouvez spécifier une culture neutre en utilisant uniquement le code de langue de lettres minuscules à deux chiffres.</span><span class="sxs-lookup"><span data-stu-id="5c393-120">You can specify a neutral culture by using only the two-digit lowercase language code.</span></span> <span data-ttu-id="5c393-121">Par exemple, « fr » spécifie la culture neutre pour le Français et « de » spécifie la culture neutre pour l’allemand.</span><span class="sxs-lookup"><span data-stu-id="5c393-121">For example, "fr" specifies the neutral culture for French, and "de" specifies the neutral culture for German.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-122">Obtient la description de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-122">Gets the description of the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-123">Retourne la description de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-123">Returns the description of the voice.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5c393-124"><see cref="T:System.Speech.Synthesis.VoiceInfo" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="5c393-124">The specified <see cref="T:System.Speech.Synthesis.VoiceInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="5c393-125">Compare les champs de la voix avec l'objet <see cref="T:System.Speech.Synthesis.VoiceInfo" /> spécifié pour déterminer s'ils contiennent les mêmes valeurs.</span><span class="sxs-lookup"><span data-stu-id="5c393-125">Compares the fields of the voice with the specified <see cref="T:System.Speech.Synthesis.VoiceInfo" /> object to determine whether they contain the same values.</span></span></summary>
        <returns><span data-ttu-id="5c393-126">Retourne <see langword="True" /> si les champs des deux objets <see cref="T:System.Speech.Synthesis.VoiceInfo" /> sont égaux ; sinon retourne la valeur <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="5c393-126">Returns <see langword="True" /> if the fields of the two <see cref="T:System.Speech.Synthesis.VoiceInfo" /> objects are equal; otherwise returns <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c393-127">Le <xref:System.Speech.Synthesis.VoiceInfo.Equals%2A> méthode prend un <xref:System.Object> type en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="5c393-127">The <xref:System.Speech.Synthesis.VoiceInfo.Equals%2A> method takes a <xref:System.Object> type as its parameter.</span></span> <span data-ttu-id="5c393-128">Si cet objet n’est pas de la <xref:System.Speech.Synthesis.VoiceInfo> de type, la méthode retourne `False`.</span><span class="sxs-lookup"><span data-stu-id="5c393-128">If that object is not of the <xref:System.Speech.Synthesis.VoiceInfo> type, the method returns `False`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gender">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceGender Gender { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.VoiceGender Gender" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Gender" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Gender As VoiceGender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceGender Gender { System::Speech::Synthesis::VoiceGender get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceGender</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-129">Obtient le genre de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-129">Gets the gender of the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-130">Retourne le type de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-130">Returns the gender of the voice.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c393-131">Le <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> propriété obtient un membre de la <xref:System.Speech.Synthesis.VoiceGender> énumération qui indique le genre de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-131">The <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property gets a member of the <xref:System.Speech.Synthesis.VoiceGender> enumeration that indicates the gender of the voice.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.VoiceInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c393-132">Fournit un code de hachage pour un objet <c>VoiceInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="5c393-132">Provides a hash code for a <c>VoiceInfo</c> object.</span></span></summary>
        <returns><span data-ttu-id="5c393-133">Code de hachage pour l’objet <see cref="T:System.Speech.Synthesis.VoiceInfo" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="5c393-133">A hash code for the current <see cref="T:System.Speech.Synthesis.VoiceInfo" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-134">Obtient l'ID de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-134">Gets the ID of the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-135">Retourne l'identificateur de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-135">Returns the identifier for the voice.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-136">Obtient le nom de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-136">Gets the name of the voice.</span></span></summary>
        <value><span data-ttu-id="5c393-137">Retourne le nom de la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-137">Returns the name of the voice.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedAudioFormats">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.AudioFormat.SpeechAudioFormatInfo&gt; SupportedAudioFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.AudioFormat.SpeechAudioFormatInfo&gt; SupportedAudioFormats" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedAudioFormats As ReadOnlyCollection(Of SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::AudioFormat::SpeechAudioFormatInfo ^&gt; ^ SupportedAudioFormats { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::AudioFormat::SpeechAudioFormatInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.AudioFormat.SpeechAudioFormatInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c393-138">Obtient la collection de formats audio que la voix prend en charge.</span><span class="sxs-lookup"><span data-stu-id="5c393-138">Gets the collection of audio formats that the voice supports.</span></span></summary>
        <value><span data-ttu-id="5c393-139">Retourne une collection des formats audio pris en charge par la voix.</span><span class="sxs-lookup"><span data-stu-id="5c393-139">Returns a collection of the audio formats that the voice supports.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Docs>
    </Member>
  </Members>
</Type>