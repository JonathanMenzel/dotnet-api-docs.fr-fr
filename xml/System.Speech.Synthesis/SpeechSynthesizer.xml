<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4329c11770d18ef355913e673d7aab098f71b2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ef70c-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef70c-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-102">Lorsque vous créez un nouveau <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet, il utilise la voix de système par défaut.</span><span class="sxs-lookup"><span data-stu-id="ef70c-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="ef70c-103">Pour configurer le <xref:System.Speech.Synthesis.SpeechSynthesizer> pour utiliser une des voix de synthèse (TTS) vocale installée, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="ef70c-104">Pour obtenir des informations sur les voix est installées, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> (méthode) et la <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="ef70c-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="ef70c-105">Cette classe fournit également un contrôle sur les aspects suivants de la synthèse vocale :</span><span class="sxs-lookup"><span data-stu-id="ef70c-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="ef70c-106">Pour configurer la sortie pour le <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="ef70c-107">Pour générer le discours, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="ef70c-108">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut produire de reconnaissance vocale à partir du texte, un <xref:System.Speech.Synthesis.Prompt> ou <xref:System.Speech.Synthesis.PromptBuilder> objet, ou à partir de [vocale synthèse SSML (Markup Language) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="ef70c-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="ef70c-109">Pour suspendre et reprendre la synthèse vocale, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="ef70c-110">Pour ajouter ou supprimer les lexiques, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="ef70c-111">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut utiliser les lexiques d’un ou plusieurs pour guider la prononciation des mots.</span><span class="sxs-lookup"><span data-stu-id="ef70c-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="ef70c-112">Pour modifier la remise de la sortie vocale, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="ef70c-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="ef70c-113">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche des événements lorsqu’il rencontre des invites de certaines fonctionnalités : (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="ef70c-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="ef70c-114">Il déclenche également des événements signalent au démarrage (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) et de fin (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) de parler d’opérations et sur la modification de la voix (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="ef70c-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef70c-115">Appelez toujours <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="ef70c-116">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Speech.Synthesis.SpeechSynthesizer> de l'objet <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-117">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et parle d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="ef70c-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-119">Lorsque vous initialisez un nouveau <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, il utilise la voix de système par défaut.</span><span class="sxs-lookup"><span data-stu-id="ef70c-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="ef70c-120">Pour configurer le <xref:System.Speech.Synthesis.SpeechSynthesizer> pour utiliser une des voix de synthèse (TTS) vocale installée, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="ef70c-121">Pour obtenir des informations sur les voix est installées, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> (méthode) et la <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="ef70c-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="ef70c-122">The location of the lexicon information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-122">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="ef70c-123">The media type of the lexicon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-123">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="ef70c-124">Media type values are not case sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-124">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-126">Un lexique prononciation est une collection de mots ou expressions ainsi que leur prononciation, qui comprennent des lettres et des caractères à partir d’un alphabet phonétique pris en charge.</span><span class="sxs-lookup"><span data-stu-id="ef70c-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="ef70c-127">Vous pouvez utiliser un lexique pour spécifier la prononciation personnalisée pour le vocabulaire spécialisé dans votre application.</span><span class="sxs-lookup"><span data-stu-id="ef70c-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="ef70c-128">Prononciation spécifiées dans un fichier de lexique externes est prioritaires sur la prononciation du lexique interne du synthétiseur vocal ou le dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="ef70c-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="ef70c-129">Toutefois, prononciation spécifiées inline dans les invites créés avec les le <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, ou <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> méthodes sont prioritaires sur prononciation spécifiées dans n’importe quel lexique.</span><span class="sxs-lookup"><span data-stu-id="ef70c-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="ef70c-130">Inline prononciation s’appliquent uniquement à une seule occurrence d’un mot.</span><span class="sxs-lookup"><span data-stu-id="ef70c-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="ef70c-131">Consultez [lexiques et phonétique Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="ef70c-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="ef70c-132">Vous pouvez ajouter plusieurs lexiques à un <xref:System.Speech.Synthesis.SpeechSynthesizer> objet. Deux valeurs sont actuellement pris en charge pour le `mediaType` paramètre :</span><span class="sxs-lookup"><span data-stu-id="ef70c-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="ef70c-133">La valeur `application/pls+xml` indique que le lexique est conforme à la [prononciation lexique spécification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="ef70c-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="ef70c-134">Il s’agit du format par défaut à utiliser.</span><span class="sxs-lookup"><span data-stu-id="ef70c-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="ef70c-135">La valeur `application/vdn.ms-sapi-lex` indique que le format de lexique est lexique non compressé, ce qui est un format propriétaire de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="ef70c-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="ef70c-136">Il s’agit d’un format hérité et nous vous recommandons d’utiliser le format PLS décrit ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="ef70c-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-137">L’exemple suivant montre l’effet de l’ajout et suppression d’un lexique qui contient une prononciation personnalisée pour le mot « blue ».</span><span class="sxs-lookup"><span data-stu-id="ef70c-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="ef70c-138">Le lexique définit la prononciation des « blue » à son comme « bleep ».</span><span class="sxs-lookup"><span data-stu-id="ef70c-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="ef70c-139">Pendant le chargement, le lexique le synthétiseur vocal utilise la prononciation définie dans le lexique.</span><span class="sxs-lookup"><span data-stu-id="ef70c-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="ef70c-140">Voici le contenu du fichier de lexique Blue.pls :</span><span class="sxs-lookup"><span data-stu-id="ef70c-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-142">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement lors du traitement de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="ef70c-143">Pour plus d’informations sur les données associées à l’événement, consultez <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="ef70c-144">Vous pouvez ajouter des signets à l’aide de la <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-145">L’exemple suivant crée une invite de commandes inclut deux signets et envoie la sortie vers un fichier WAV pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="ef70c-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="ef70c-146">Le gestionnaire pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> événement écrit le nom du signet et sa position dans le flux audio lorsque l’événement a été déclenché à la console.</span><span class="sxs-lookup"><span data-stu-id="ef70c-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef70c-150">Returns the prompt object that is currently being spoken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-150">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-152">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix, (moteurs de synthèse vocale) qu’elle trouve dans le Registre remplit certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-153">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-154">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-155">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef70c-157">Returns a read-only collection of the voices currently installed on the system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-157">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-158">Une voix est un moteur de synthèse vocale (synthèse vocale ou TTS) est installé sur le système.</span><span class="sxs-lookup"><span data-stu-id="ef70c-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-159">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et des sorties vers la console une liste des voix installées (moteurs de synthèse vocale) et montre les informations qui sont disponibles pour chaque voix.</span><span class="sxs-lookup"><span data-stu-id="ef70c-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="ef70c-160">The locale that the voice must support.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-160">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef70c-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-163">Si aucune valeur de la prise en charge de voix installée les paramètres régionaux spécifiés, cette méthode retourne une collection vide.</span><span class="sxs-lookup"><span data-stu-id="ef70c-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="ef70c-164">Microsoft Windows et l’API System.Speech acceptent tous les codes de pays de langage valides.</span><span class="sxs-lookup"><span data-stu-id="ef70c-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="ef70c-165">Pour effectuer la synthèse vocale à l’aide de la langue spécifiée dans la propriété de la Culture, un moteur de synthèse vocale qui prend en charge de ce code de pays de langue doit être installé.</span><span class="sxs-lookup"><span data-stu-id="ef70c-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="ef70c-166">Les moteurs de synthèse vocale fourni avec Microsoft Windows 7 fonctionnent avec les codes de langue-pays suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="ef70c-167">en-US.</span><span class="sxs-lookup"><span data-stu-id="ef70c-167">en-US.</span></span> <span data-ttu-id="ef70c-168">Anglais (États-Unis)</span><span class="sxs-lookup"><span data-stu-id="ef70c-168">English (United States)</span></span>  
  
-   <span data-ttu-id="ef70c-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="ef70c-169">zh-CN.</span></span> <span data-ttu-id="ef70c-170">Chinois (Chine)</span><span class="sxs-lookup"><span data-stu-id="ef70c-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="ef70c-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="ef70c-171">zh-TW.</span></span> <span data-ttu-id="ef70c-172">Chinois (Taïwan)</span><span class="sxs-lookup"><span data-stu-id="ef70c-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="ef70c-173">Codes de langue à deux lettres tels que « fr » sont également autorisées.</span><span class="sxs-lookup"><span data-stu-id="ef70c-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-174">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et des sorties vers la console une liste des voix installées qui prennent en charge les paramètres régionaux en-US.</span><span class="sxs-lookup"><span data-stu-id="ef70c-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-176">Raised when a phoneme is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-176">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-177">Un phonème est un composant de base de la langue, en général une lettre d’un caractère alphabétique (ou la combinaison de deux lettres) qui représente un ou plusieurs sons distinctes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="ef70c-178">Par exemple, la lettre « c » est un phonème peut sembler comme « s » dans « ciment » ou comme « k » dans « catch ».</span><span class="sxs-lookup"><span data-stu-id="ef70c-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="ef70c-179">Un mot écrit est un assemblage de phonèmes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="ef70c-180">La modification d’un mot d’un phonème modifie son orthographe.</span><span class="sxs-lookup"><span data-stu-id="ef70c-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="ef70c-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance génère un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> événement pour chaque partie d’un mot qui constitue un phonème.</span><span class="sxs-lookup"><span data-stu-id="ef70c-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="ef70c-182">Par exemple, pour le mot « thème » génère trois <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> événements ; un pour le son « th », un pour le son de « e » et un pour le son « m » (me).</span><span class="sxs-lookup"><span data-stu-id="ef70c-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="ef70c-183">Pour un exemple et les données associées à l’événement d’informations, consultez <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef70c-185">Retourne la vitesse d’énonciation de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet, à partir de -10 à 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef70c-186">L’exemple suivant lit une chaîne avec la vitesse d’énonciation la valeur -2.</span><span class="sxs-lookup"><span data-stu-id="ef70c-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="ef70c-187">The location of the lexicon document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-187">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-189">Pour obtenir un exemple, consultez <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ef70c-191">The name of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-191">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-192">Selects a specific voice by name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-192">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-193">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> pour obtenir les noms de classe installé voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="ef70c-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="ef70c-194">Pour sélectionner une voix, passer tout le contenu de la <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> propriété comme argument pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="ef70c-195">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée contenant `name` dans de la voix <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ef70c-196">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> effectue une comparaison respectant la casse, de la sous-chaîne pour déterminer si la voix correspond à la `name`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="ef70c-197">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il se trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-198">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-199">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-200">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="ef70c-201">Pour sélectionner une voix par sexe, âge ou paramètres régionaux, utilisez une de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-202">Selects a voice with specific characteristics.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-202">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-203">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> pour obtenir les noms de classe installé voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="ef70c-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="ef70c-204">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée qui correspond à des caractéristiques indiquées.</span><span class="sxs-lookup"><span data-stu-id="ef70c-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="ef70c-205">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il se trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-206">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-207">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-208">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="ef70c-209">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode)</span><span class="sxs-lookup"><span data-stu-id="ef70c-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="ef70c-210">The gender of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-210">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-211">Selects a voice with a specific gender.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-211">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-212">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> pour obtenir les noms de classe installé voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="ef70c-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="ef70c-213">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée dont <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> correspond à la propriété du `gender` paramètre.</span><span class="sxs-lookup"><span data-stu-id="ef70c-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="ef70c-214">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il se trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-215">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-216">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-217">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="ef70c-218">Pour sélectionner une voix selon d’autres caractéristiques, consultez les autres <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="ef70c-219">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="ef70c-220">The gender of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-220">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="ef70c-221">The age of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-221">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-222">Selects a voice with a specific gender and age.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-222">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-223">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> pour obtenir les noms de classe installé voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="ef70c-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="ef70c-224">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée dont <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> et <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriétés correspondance la `gender` et `age` paramètres.</span><span class="sxs-lookup"><span data-stu-id="ef70c-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="ef70c-225">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il se trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-226">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-227">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-228">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="ef70c-229">Pour sélectionner une voix selon d’autres caractéristiques, consultez les autres <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="ef70c-230">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="ef70c-231">The gender of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-231">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="ef70c-232">The age of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-232">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="ef70c-233">The position of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-233">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-235">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> pour obtenir les noms de classe installé voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="ef70c-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="ef70c-236">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> recherche installé voix dont l’objet <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> et <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriétés correspondance la `gender` et `age` paramètres.</span><span class="sxs-lookup"><span data-stu-id="ef70c-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="ef70c-237">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> le nombre de correspondances, il trouve et retourne la voix lorsque le nombre est égal à le `voiceAlternate` paramètre.</span><span class="sxs-lookup"><span data-stu-id="ef70c-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="ef70c-238">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il se trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-239">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-240">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-241">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="ef70c-242">Pour sélectionner une voix selon d’autres caractéristiques, consultez les autres <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> surcharges.</span><span class="sxs-lookup"><span data-stu-id="ef70c-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="ef70c-243">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="ef70c-244">The gender of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-244">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="ef70c-245">The age of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-245">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="ef70c-246">The position of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-246">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ef70c-247">The locale of the voice to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-247">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-249">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> recherche voix dont l’objet <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, et <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> propriétés correspondance la `gender`, `age`, et `culture` paramètres.</span><span class="sxs-lookup"><span data-stu-id="ef70c-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="ef70c-250">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> le nombre de correspondances, il trouve et retourne la voix lorsque le nombre est égal à le `voiceAlternate` paramètre.</span><span class="sxs-lookup"><span data-stu-id="ef70c-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="ef70c-251">Microsoft Windows et l’API System.Speech acceptent tous les codes de pays de langage valides.</span><span class="sxs-lookup"><span data-stu-id="ef70c-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="ef70c-252">Pour effectuer la synthèse vocale à l’aide de la langue spécifiée dans le `culture` paramètre, un moteur de synthèse vocale prenant en charge que le code de pays de la langue doit être installé.</span><span class="sxs-lookup"><span data-stu-id="ef70c-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="ef70c-253">Les moteurs de synthèse vocale fourni avec Microsoft Windows 7 fonctionnent avec les codes de langue-pays suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="ef70c-254">en-US.</span><span class="sxs-lookup"><span data-stu-id="ef70c-254">en-US.</span></span> <span data-ttu-id="ef70c-255">Anglais (États-Unis)</span><span class="sxs-lookup"><span data-stu-id="ef70c-255">English (United States)</span></span>  
  
-   <span data-ttu-id="ef70c-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="ef70c-256">zh-CN.</span></span> <span data-ttu-id="ef70c-257">Chinois (Chine)</span><span class="sxs-lookup"><span data-stu-id="ef70c-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="ef70c-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="ef70c-258">zh-TW.</span></span> <span data-ttu-id="ef70c-259">Chinois (Taïwan)</span><span class="sxs-lookup"><span data-stu-id="ef70c-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="ef70c-260">Codes de langue à deux lettres tels que « fr » sont également autorisées.</span><span class="sxs-lookup"><span data-stu-id="ef70c-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="ef70c-261">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il se trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="ef70c-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="ef70c-262">Pour toutes les voix qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit ses <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="ef70c-263">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="ef70c-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="ef70c-264">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ef70c-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="ef70c-265">Pour sélectionner une voix selon d’autres caractéristiques, consultez les autres <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> surcharges.</span><span class="sxs-lookup"><span data-stu-id="ef70c-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="ef70c-266">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="ef70c-267">The stream to which to append synthesis output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-267">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="ef70c-268">The format to use for the synthesis output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-268">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-270">Appelez <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>de référence dans le flux.</span><span class="sxs-lookup"><span data-stu-id="ef70c-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="ef70c-271">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-273">Vous pouvez utiliser la **son** fenêtre dans les fenêtres **le panneau de configuration** pour configurer le périphérique audio par défaut pour l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="ef70c-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="ef70c-274">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-275">L’exemple suivant utilise le synthétiseur de parler d’une expression pour la sortie audio par défaut.</span><span class="sxs-lookup"><span data-stu-id="ef70c-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-277">Utilisez cette méthode pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer> de référence à un fichier ou un flux.</span><span class="sxs-lookup"><span data-stu-id="ef70c-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="ef70c-278">Pour obtenir un exemple, consultez <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="ef70c-279">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-281">Pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>référence de le dans le fichier, vous devez reconfigurer le <xref:System.Speech.Synthesis.SpeechSynthesizer>de sortie, par exemple, en appelant <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="ef70c-282">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ef70c-283">The path to the file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-283">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-285">Pour configurer la sortie et spécifiez le format audio, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-286">L’exemple suivant utilise une instance de <xref:System.Media.SoundPlayer> pour lire une invite de commandes a été sortie vers un fichier .wav.</span><span class="sxs-lookup"><span data-stu-id="ef70c-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="ef70c-287">Étant donné que la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> appel est asynchrone, le <xref:System.Media.SoundPlayer> instance est créée (et le <xref:System.Media.SoundPlayer.Play%2A> méthode appelée) dans le Gestionnaire de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="ef70c-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ef70c-288">The path to the file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-288">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="ef70c-289">The audio format information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-289">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef70c-291">L’exemple suivant spécifie le format de la sortie de la synthèse vocale et les envoie à un fichier WAV.</span><span class="sxs-lookup"><span data-stu-id="ef70c-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="ef70c-292">The stream to which to append synthesis output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-292">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-294">Pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>de référence dans le flux, reconfigure le synthétiseur de sortie, par exemple, en appelant <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="ef70c-295">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-296">L’exemple suivant génère une expression dans un flux WAV.</span><span class="sxs-lookup"><span data-stu-id="ef70c-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-298">Le <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthodes génèrent vocale de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="ef70c-299">Les méthodes ne retournent pas jusqu'à ce que le contenu de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance a été complètement dit.</span><span class="sxs-lookup"><span data-stu-id="ef70c-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="ef70c-300">Il s’agit de la façon la plus simple pour générer le discours.</span><span class="sxs-lookup"><span data-stu-id="ef70c-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="ef70c-301">Toutefois, si votre application doit effectuer les tâches tout en parlant, par exemple texte en surbrillance, l’animation de peinture, contrôles d’écran ou autres tâches, utilisent le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> méthodes ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthode pour générer le discours en mode asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="ef70c-302">Lors d’un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="ef70c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="ef70c-304">Déclenché lorsque l’état énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="ef70c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="ef70c-306">Déclenché lorsque le synthétiseur commence la génération de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="ef70c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="ef70c-308">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de reconnaissance vocale dans une langue.</span><span class="sxs-lookup"><span data-stu-id="ef70c-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="ef70c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="ef70c-310">Déclenché chaque fois que le synthétiseur termine un mot est élevé.</span><span class="sxs-lookup"><span data-stu-id="ef70c-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="ef70c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="ef70c-312">Déclenché chaque fois que la restitution vocale nécessite une modification de la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="ef70c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="ef70c-314">Déclenché quand le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="ef70c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="ef70c-316">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="ef70c-317">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> ne déclenche pas la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement lors du traitement de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="ef70c-318">The content to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-318">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-320">Pour parler de manière asynchrone le contenu d’un <xref:System.Speech.Synthesis.Prompt> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-321">L’exemple suivant crée un <xref:System.Speech.Synthesis.Prompt> objet à partir d’une chaîne et passe l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="ef70c-322">The content to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-322">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-324">Pour parler de manière asynchrone le contenu d’un <xref:System.Speech.Synthesis.PromptBuilder> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-325">L’exemple suivant crée un <xref:System.Speech.Synthesis.PromptBuilder> objet à partir d’une chaîne et passe l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="ef70c-326">The text to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-326">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-327">Synchronously speaks the contents of a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-327">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-328">De façon synchrone prononciation une chaîne qui contient le balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="ef70c-329">De façon asynchrone prononciation le contenu d’une chaîne, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-330">Comme indiqué dans l’exemple suivant, la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthode fournit le moyen le plus simple pour générer le discours de sortie de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-332">Le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> méthodes génèrent vocale de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="ef70c-333">Les méthodes retournent immédiatement sans attendre que le contenu de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> objet à la fin de parler.</span><span class="sxs-lookup"><span data-stu-id="ef70c-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="ef70c-334">Utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> si votre application doit effectuer les tâches tout en parlant, par exemple mettre en surbrillance de texte, peindre l’animation, les contrôles de moniteur ou d’autres tâches.</span><span class="sxs-lookup"><span data-stu-id="ef70c-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="ef70c-335">Lors d’un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="ef70c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="ef70c-337">Déclenché lorsque l’état énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="ef70c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="ef70c-339">Déclenché lorsque le synthétiseur commence la génération de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="ef70c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="ef70c-341">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de reconnaissance vocale dans une langue.</span><span class="sxs-lookup"><span data-stu-id="ef70c-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="ef70c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="ef70c-343">Déclenché chaque fois que le synthétiseur termine un mot est élevé.</span><span class="sxs-lookup"><span data-stu-id="ef70c-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="ef70c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="ef70c-345">Déclenché chaque fois que la restitution vocale nécessite une modification de la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="ef70c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="ef70c-347">Déclenché quand le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="ef70c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="ef70c-349">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="ef70c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="ef70c-351">Déclenché lorsque le synthétiseur termine un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="ef70c-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="ef70c-352">Si votre application n’a pas besoin effectuer les tâches tout en parlant, vous pouvez utiliser la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthodes ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> méthode pour générer le discours synchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="ef70c-353">The content to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-353">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-355">Vous pouvez annuler la parlant asynchrone d’une invite de commandes avec la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="ef70c-356">Pour parler de manière synchrone le contenu d’un <xref:System.Speech.Synthesis.Prompt> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-357">L’exemple suivant crée un <xref:System.Speech.Synthesis.Prompt> objet à partir d’une chaîne et passe l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="ef70c-358">The content to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-358">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef70c-360">Returns the object that contains the content to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-360">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-361">Pour parler de manière synchrone le contenu d’un <xref:System.Speech.Synthesis.PromptBuilder> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-362">L’exemple suivant crée un <xref:System.Speech.Synthesis.PromptBuilder> objet à partir d’une chaîne et passe l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="ef70c-363">The text to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-363">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-364">Asynchronously speaks the contents of a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-364">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef70c-365">Returns the object that contains the content to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-365">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-366">De façon asynchrone prononciation une chaîne qui contient le balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="ef70c-367">De façon synchrone prononciation le contenu d’une chaîne, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="ef70c-368">Vous pouvez annuler la parlant asynchrone d’une invite de commandes avec la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-369">Comme indiqué dans l’exemple suivant, la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> méthode fournit le moyen le plus simple pour générer le discours de sortie de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="ef70c-370">The content for which to cancel a speak operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-370">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-372">Vous pouvez également utiliser cette méthode d’annulation asynchrone parler d’opération pour les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="ef70c-373">Le contenu d’un <xref:System.String> spécifié par un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="ef70c-374">Le contenu d’un <xref:System.Speech.Synthesis.PromptBuilder> spécifié par un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="ef70c-375">Le contenu d’un <xref:System.String> contenant SSML spécifié par un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="ef70c-376">Lorsque vous appelez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech crée un <xref:System.Speech.Synthesis.Prompt> de l’objet et lui attribue le contenu du paramètre de la méthode et retourne le <xref:System.Speech.Synthesis.Prompt> objet.</span><span class="sxs-lookup"><span data-stu-id="ef70c-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="ef70c-377">Si vous conservez une copie de retourné <xref:System.Speech.Synthesis.Prompt>, vous pouvez passer dans <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> Annuler parlée contenu spécifié dans un <xref:System.String> ou un <xref:System.Speech.Synthesis.PromptBuilder> objet.</span><span class="sxs-lookup"><span data-stu-id="ef70c-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef70c-379">L’exemple suivant montre une utilisation de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> pour annuler le parlant asynchrone d’une invite de commandes, afin qu’une nouvelle invite peut énoncer.</span><span class="sxs-lookup"><span data-stu-id="ef70c-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="ef70c-380">Notez que la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement déclenche lorsqu’un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> opération est annulée.</span><span class="sxs-lookup"><span data-stu-id="ef70c-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-382">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement à l’issue d’un de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="ef70c-383">Le <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> classe ne possède aucune propriété et ne retourne pas de données à partir de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="ef70c-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="ef70c-384">Il est fourni pour permettre aux auteurs d’applications écrire des gestionnaires d’événements pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="ef70c-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-386">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement pour chaque nouveau mot il parle dans une invite de commandes à l’aide de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="ef70c-387">Pour obtenir un exemple et plus d’informations sur les données associées à l’événement, consultez <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="ef70c-388">The SSML string to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-388">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-390">Le contenu de la `textToSpeak` paramètre doit inclure un `speak` élément et doit être conforme à la [vocale synthèse SSML (Markup Language) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="ef70c-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="ef70c-391">Pour plus d’informations, consultez [référence de langage de balisage de synthèse vocale](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="ef70c-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="ef70c-392">De façon asynchrone prononciation une chaîne qui contient le balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="ef70c-393">Vous pouvez utiliser <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> pour lancer le parlant synchrone d’une chaîne qui ne contient-elle pas de balisage SSML.</span><span class="sxs-lookup"><span data-stu-id="ef70c-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="ef70c-394">Lors d’un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="ef70c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="ef70c-396">Déclenché lorsque l’état énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="ef70c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="ef70c-398">Déclenché lorsque le synthétiseur commence la génération de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="ef70c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="ef70c-400">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de reconnaissance vocale dans une langue.</span><span class="sxs-lookup"><span data-stu-id="ef70c-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="ef70c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="ef70c-402">Déclenché chaque fois que le synthétiseur termine un mot est élevé.</span><span class="sxs-lookup"><span data-stu-id="ef70c-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="ef70c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="ef70c-404">Déclenché chaque fois que la restitution vocale nécessite une modification de la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="ef70c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="ef70c-406">Déclenché quand le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="ef70c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="ef70c-408">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="ef70c-409">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> ne déclenche pas la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement lors du traitement de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-410">L’exemple suivant affiche la date 1/29/2009 sous la forme une date, mois, jour, ordre de l’année.</span><span class="sxs-lookup"><span data-stu-id="ef70c-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="ef70c-411">The SMML markup to speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-411">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef70c-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-413">Le contenu de la `textToSpeak` paramètre doit inclure un `speak` élément et doit être conforme à la [vocale synthèse SSML (Markup Language) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="ef70c-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="ef70c-414">Pour plus d’informations, consultez [référence de langage de balisage de synthèse vocale](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="ef70c-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="ef70c-415">De façon synchrone prononciation une chaîne qui contient le balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="ef70c-416">Vous pouvez utiliser <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> pour lancer le parlant asynchrone d’une chaîne qui ne contient-elle pas de balisage SSML.</span><span class="sxs-lookup"><span data-stu-id="ef70c-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="ef70c-417">Lors d’un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="ef70c-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="ef70c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="ef70c-419">Déclenché lorsque l’état énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="ef70c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="ef70c-421">Déclenché lorsque le synthétiseur commence la génération de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="ef70c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="ef70c-423">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de reconnaissance vocale dans une langue.</span><span class="sxs-lookup"><span data-stu-id="ef70c-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="ef70c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="ef70c-425">Déclenché chaque fois que le synthétiseur termine un mot est élevé.</span><span class="sxs-lookup"><span data-stu-id="ef70c-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="ef70c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="ef70c-427">Déclenché chaque fois que la restitution vocale nécessite une modification de la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="ef70c-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="ef70c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="ef70c-429">Déclenché quand le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="ef70c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="ef70c-431">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="ef70c-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="ef70c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="ef70c-433">Déclenché lorsque le synthétiseur termine le traitement une <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="ef70c-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="ef70c-434">Si vous devez pas effectuer les tâches tout en parlant dos de votre application, vous pouvez utiliser la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> méthode pour générer le discours synchrone.</span><span class="sxs-lookup"><span data-stu-id="ef70c-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-436">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement lorsqu’il commence le traitement d’une invite de commandes à l’aide de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="ef70c-437">Le <xref:System.Speech.Synthesis.SpeakStartedEventArgs> classe ne possède aucune propriété et ne retourne pas de données à partir de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> événement.</span><span class="sxs-lookup"><span data-stu-id="ef70c-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="ef70c-438">Il est fourni pour permettre aux auteurs d’applications écrire des gestionnaires d’événements pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> événement.</span><span class="sxs-lookup"><span data-stu-id="ef70c-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef70c-440">Retourne l’état actuel de parler de le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-441">Pour obtenir le nouvel état de la <xref:System.Speech.Synthesis.SpeechSynthesizer> après ces modifications, utilisez la <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> propriété de la <xref:System.Speech.Synthesis.StateChangedEventArgs> classe.</span><span class="sxs-lookup"><span data-stu-id="ef70c-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-442">L’exemple suivant illustre l’état de la <xref:System.Speech.Synthesis.SpeechSynthesizer> avant, pendant et après la lecture d’une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-444">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement lorsque sa parlant <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> modifications.</span><span class="sxs-lookup"><span data-stu-id="ef70c-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="ef70c-445">Pour obtenir un exemple et plus d’informations sur les données associées à l’événement, consultez <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="ef70c-446">Pour suspendre et reprendre la synthèse vocale, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-447">Raised when a viseme is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-447">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-448">Un viseme est la position de base de la bouche et face prononciation un phonème.</span><span class="sxs-lookup"><span data-stu-id="ef70c-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="ef70c-449">Visemes sont des représentations visuelles des phonèmes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="ef70c-450">System.Speech prend en charge 21 visemes anglais (États-Unis), chacun d’eux correspond à un ou plusieurs des phonèmes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="ef70c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> les événements sont déclenchés lorsqu’un nouveau phonème atteint a un autre viseme correspondant que phonème précédent atteint.</span><span class="sxs-lookup"><span data-stu-id="ef70c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="ef70c-452">Étant donné que certains visemes représentent plusieurs phonème, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> événement n’est pas généré si le phonème suivant atteint correspond à la même viseme comme phonème précédent.</span><span class="sxs-lookup"><span data-stu-id="ef70c-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="ef70c-453">Par exemple, pour les mots « cette zone », un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> événement est déclenché pour le « s » dans « this » et « z » dans « zone ».</span><span class="sxs-lookup"><span data-stu-id="ef70c-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="ef70c-454">Toutefois, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> événement n’est pas déclenché pour le « z » dans « zone », car il correspond à la même viseme comme le « s » dans « this ».</span><span class="sxs-lookup"><span data-stu-id="ef70c-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="ef70c-455">Voici une liste des groupes de phonème qui correspondent à un viseme en anglais américain et les phonèmes SAPI 21.</span><span class="sxs-lookup"><span data-stu-id="ef70c-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="ef70c-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="ef70c-456">Viseme</span></span>|<span data-ttu-id="ef70c-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="ef70c-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="ef70c-458">0</span><span class="sxs-lookup"><span data-stu-id="ef70c-458">0</span></span>|<span data-ttu-id="ef70c-459">latence</span><span class="sxs-lookup"><span data-stu-id="ef70c-459">silence</span></span>|  
|<span data-ttu-id="ef70c-460">1</span><span class="sxs-lookup"><span data-stu-id="ef70c-460">1</span></span>|<span data-ttu-id="ef70c-461">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="ef70c-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="ef70c-462">2</span><span class="sxs-lookup"><span data-stu-id="ef70c-462">2</span></span>|<span data-ttu-id="ef70c-463">aa</span><span class="sxs-lookup"><span data-stu-id="ef70c-463">aa</span></span>|  
|<span data-ttu-id="ef70c-464">3</span><span class="sxs-lookup"><span data-stu-id="ef70c-464">3</span></span>|<span data-ttu-id="ef70c-465">ao</span><span class="sxs-lookup"><span data-stu-id="ef70c-465">ao</span></span>|  
|<span data-ttu-id="ef70c-466">4</span><span class="sxs-lookup"><span data-stu-id="ef70c-466">4</span></span>|<span data-ttu-id="ef70c-467">sous-clé, GE, tiens donc</span><span class="sxs-lookup"><span data-stu-id="ef70c-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="ef70c-468">5</span><span class="sxs-lookup"><span data-stu-id="ef70c-468">5</span></span>|<span data-ttu-id="ef70c-469">SQL Server</span><span class="sxs-lookup"><span data-stu-id="ef70c-469">er</span></span>|  
|<span data-ttu-id="ef70c-470">6</span><span class="sxs-lookup"><span data-stu-id="ef70c-470">6</span></span>|<span data-ttu-id="ef70c-471">y, iy, incluent, ix</span><span class="sxs-lookup"><span data-stu-id="ef70c-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="ef70c-472">7</span><span class="sxs-lookup"><span data-stu-id="ef70c-472">7</span></span>|<span data-ttu-id="ef70c-473">w, uw</span><span class="sxs-lookup"><span data-stu-id="ef70c-473">w, uw</span></span>|  
|<span data-ttu-id="ef70c-474">8</span><span class="sxs-lookup"><span data-stu-id="ef70c-474">8</span></span>|<span data-ttu-id="ef70c-475">Comment puis-je</span><span class="sxs-lookup"><span data-stu-id="ef70c-475">ow</span></span>|  
|<span data-ttu-id="ef70c-476">9</span><span class="sxs-lookup"><span data-stu-id="ef70c-476">9</span></span>|<span data-ttu-id="ef70c-477">AW</span><span class="sxs-lookup"><span data-stu-id="ef70c-477">aw</span></span>|  
|<span data-ttu-id="ef70c-478">10</span><span class="sxs-lookup"><span data-stu-id="ef70c-478">10</span></span>|<span data-ttu-id="ef70c-479">Oy</span><span class="sxs-lookup"><span data-stu-id="ef70c-479">oy</span></span>|  
|<span data-ttu-id="ef70c-480">11</span><span class="sxs-lookup"><span data-stu-id="ef70c-480">11</span></span>|<span data-ttu-id="ef70c-481">aY</span><span class="sxs-lookup"><span data-stu-id="ef70c-481">ay</span></span>|  
|<span data-ttu-id="ef70c-482">12</span><span class="sxs-lookup"><span data-stu-id="ef70c-482">12</span></span>|<span data-ttu-id="ef70c-483">h</span><span class="sxs-lookup"><span data-stu-id="ef70c-483">h</span></span>|  
|<span data-ttu-id="ef70c-484">13</span><span class="sxs-lookup"><span data-stu-id="ef70c-484">13</span></span>|<span data-ttu-id="ef70c-485">b</span><span class="sxs-lookup"><span data-stu-id="ef70c-485">r</span></span>|  
|<span data-ttu-id="ef70c-486">14</span><span class="sxs-lookup"><span data-stu-id="ef70c-486">14</span></span>|<span data-ttu-id="ef70c-487">l</span><span class="sxs-lookup"><span data-stu-id="ef70c-487">l</span></span>|  
|<span data-ttu-id="ef70c-488">15</span><span class="sxs-lookup"><span data-stu-id="ef70c-488">15</span></span>|<span data-ttu-id="ef70c-489">s, z</span><span class="sxs-lookup"><span data-stu-id="ef70c-489">s, z</span></span>|  
|<span data-ttu-id="ef70c-490">16</span><span class="sxs-lookup"><span data-stu-id="ef70c-490">16</span></span>|<span data-ttu-id="ef70c-491">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="ef70c-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="ef70c-492">17</span><span class="sxs-lookup"><span data-stu-id="ef70c-492">17</span></span>|<span data-ttu-id="ef70c-493">th, Diffie-Hellman</span><span class="sxs-lookup"><span data-stu-id="ef70c-493">th, dh</span></span>|  
|<span data-ttu-id="ef70c-494">18</span><span class="sxs-lookup"><span data-stu-id="ef70c-494">18</span></span>|<span data-ttu-id="ef70c-495">f, v</span><span class="sxs-lookup"><span data-stu-id="ef70c-495">f, v</span></span>|  
|<span data-ttu-id="ef70c-496">19</span><span class="sxs-lookup"><span data-stu-id="ef70c-496">19</span></span>|<span data-ttu-id="ef70c-497">d, t, n</span><span class="sxs-lookup"><span data-stu-id="ef70c-497">d, t, n</span></span>|  
|<span data-ttu-id="ef70c-498">20</span><span class="sxs-lookup"><span data-stu-id="ef70c-498">20</span></span>|<span data-ttu-id="ef70c-499">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="ef70c-499">k, g, ng</span></span>|  
|<span data-ttu-id="ef70c-500">21</span><span class="sxs-lookup"><span data-stu-id="ef70c-500">21</span></span>|<span data-ttu-id="ef70c-501">p, b, m</span><span class="sxs-lookup"><span data-stu-id="ef70c-501">p, b, m</span></span>|  
  
 <span data-ttu-id="ef70c-502">Pour plus d’informations sur les données associées à la `VisemeReached` événements, consultez <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef70c-504">Retourne des informations sur la voix actuelle de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-505">Lorsque vous initialisez un nouveau <xref:System.Speech.Synthesis.SpeechSynthesizer>, il utilise la voix de système par défaut.</span><span class="sxs-lookup"><span data-stu-id="ef70c-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="ef70c-506">Pour configurer le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet à utiliser une des voix de synthèse vocale installée, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ef70c-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="ef70c-507">Pour obtenir des informations sur les voix est installées, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> (méthode) et la <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="ef70c-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef70c-508">L’exemple suivant initialise une instance de <xref:System.Speech.Synthesis.SpeechSynthesizer> et obtient des informations sur la voix actuelle.</span><span class="sxs-lookup"><span data-stu-id="ef70c-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef70c-510">Pour un exemple et les données associées à l’événement d’informations, consultez <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ef70c-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="ef70c-511">Vous pouvez modifier la voix qui le <xref:System.Speech.Synthesis.SpeechSynthesizer> utilise avec les le <xref:System.Speech.Synthesis.PromptBuilder>de <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> méthodes ou les <xref:System.Speech.Synthesis.SpeechSynthesizer>de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ef70c-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef70c-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef70c-513">Renvoie le volume de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, comprise entre 0 et 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef70c-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef70c-514">L’exemple suivant définit le volume de la <xref:System.Speech.Synthesis.SpeechSynthesizer>de sortie de données audio pour la voix de synthèse et le fichier WAV.</span><span class="sxs-lookup"><span data-stu-id="ef70c-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>