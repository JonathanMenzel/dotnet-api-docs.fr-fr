<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa7a1b77c07a0b844ce1cc641e4d15bbdf1dcd54" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46591027" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ab5af-101">Définit un ensemble de règles pour autoriser un utilisateur en fonction d'un ensemble de revendications donné.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab5af-101">Defines a set of rules for authorizing a user, given a set of claims.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5af-102">Implémentez l'interface <xref:System.IdentityModel.Policy.IAuthorizationPolicy> pour ajouter ou mapper un ensemble de revendications à un autre.</span><span class="sxs-lookup"><span data-stu-id="ab5af-102">Implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface to add or map one set of claims to another.</span></span> <span data-ttu-id="ab5af-103">Une stratégie d'autorisation examine un ensemble de revendications et ajoute des revendications supplémentaires en fonction de l'ensemble actuel.</span><span class="sxs-lookup"><span data-stu-id="ab5af-103">An authorization policy examines a set of claims and adds additional claims based on the current set.</span></span> <span data-ttu-id="ab5af-104">Par exemple, une stratégie d'autorisation peut évaluer une revendication qui contient la date de naissance, ajouter une revendication qui déclare que l'utilisateur a plus de 21 ans et ajouter une revendication Over21 (PlusDe21Ans) au <xref:System.IdentityModel.Policy.EvaluationContext>.</span><span class="sxs-lookup"><span data-stu-id="ab5af-104">For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the <xref:System.IdentityModel.Policy.EvaluationContext>.</span></span>  
  
 <span data-ttu-id="ab5af-105">Les classes qui implémentent l'interface <xref:System.IdentityModel.Policy.IAuthorizationPolicy> n'accordent pas d'autorisation aux utilisateurs, mais elles permettent à la classe <xref:System.ServiceModel.ServiceAuthorizationManager> de le faire.</span><span class="sxs-lookup"><span data-stu-id="ab5af-105">Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so.</span></span> <span data-ttu-id="ab5af-106">Le <xref:System.ServiceModel.ServiceAuthorizationManager> appelle la méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> pour chaque stratégie d'autorisation activée.</span><span class="sxs-lookup"><span data-stu-id="ab5af-106">The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect.</span></span> <span data-ttu-id="ab5af-107">La méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> détermine si les revendications supplémentaires doivent être ajoutées pour l'utilisateur en fonction du contexte actuel.</span><span class="sxs-lookup"><span data-stu-id="ab5af-107">The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user, based on the current context.</span></span> <span data-ttu-id="ab5af-108">La méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> d'une stratégie d'autorisation peut être appelée plusieurs fois, étant donné que les revendications sont ajoutées au <xref:System.IdentityModel.Policy.EvaluationContext> par d'autres stratégies d'autorisation.</span><span class="sxs-lookup"><span data-stu-id="ab5af-108">An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> by other authorization policies.</span></span> <span data-ttu-id="ab5af-109">Lorsque toutes les stratégies d'autorisation activées sont effectuées, la classe <xref:System.ServiceModel.ServiceAuthorizationManager> accorde des autorisations en fonction de l'ensemble final de revendications.</span><span class="sxs-lookup"><span data-stu-id="ab5af-109">When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims.</span></span> <span data-ttu-id="ab5af-110">La classe <xref:System.ServiceModel.ServiceAuthorizationManager> crée ensuite un <xref:System.IdentityModel.Policy.AuthorizationContext> qui contient un ensemble immuable de revendications qui reflète ces autorisations.</span><span class="sxs-lookup"><span data-stu-id="ab5af-110">The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0">
      <span data-ttu-id="ab5af-111">Exemple de la stratégie d’autorisation</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab5af-111">Authorization Policy Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext *  -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" />
        <Parameter Name="state" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="evaluationContext">
          <span data-ttu-id="ab5af-112">
            <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> qui contient l'ensemble de revendications que la stratégie d'autorisation évalue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5af-112">An <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> that contains the claim set that the authorization policy evaluates.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ab5af-113">
            <see cref="T:System.Object" />, passé par référence, qui représente l'état personnalisé pour cette stratégie d'autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5af-113">A <see cref="T:System.Object" />, passed by reference that represents the custom state for this authorization policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5af-114">Évalue si un utilisateur répond aux exigences pour cette stratégie d’autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5af-114">Evaluates whether a user meets the requirements for this authorization policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5af-115">
            <see langword="false" /> si la méthode <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> pour cette stratégie d'autorisation doit être appelée si des revendications supplémentaires sont ajoutées par d'autres stratégies d'autorisation à <paramref name="evaluationContext" /> ; sinon, <see langword="true" /> pour déclarer qu'aucune évaluation supplémentaire n'est requise par cette stratégie d'autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5af-115">
              <see langword="false" /> if the <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> method for this authorization policy must be called if additional claims are added by other authorization policies to <paramref name="evaluationContext" />; otherwise, <see langword="true" /> to state no additional evaluation is required by this authorization policy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ab5af-116">Les implémenteurs de l'interface <xref:System.IdentityModel.Policy.IAuthorizationPolicy> doivent s'attendre à ce que la méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> soit appelée plusieurs fois par différents threads.</span><span class="sxs-lookup"><span data-stu-id="ab5af-116">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface should expect the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method to be called multiple times by different threads.</span></span>  
  
 <span data-ttu-id="ab5af-117">Les implémenteurs de l'interface <xref:System.IdentityModel.Policy.IAuthorizationPolicy> peuvent utiliser le paramètre `state` pour suivre l'état entre des appels à la méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab5af-117">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface can use the `state` parameter to track state between calls to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method.</span></span> <span data-ttu-id="ab5af-118">Si un objet d'état est défini à l'intérieur d'un appel donné à la méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>, la même instance d'objet est passée à chaque appel suivant à la méthode <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> dans le processus d'évaluation actuel.</span><span class="sxs-lookup"><span data-stu-id="ab5af-118">If a state object is set inside a given call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method, the same object instance is passed to each and every subsequent call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method in the current evaluation process.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab5af-119">Obtient un ensemble de revendications qui représente l'émetteur de la stratégie d'autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5af-119">Gets a claim set that represents the issuer of the authorization policy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab5af-120">
            <see cref="T:System.IdentityModel.Claims.ClaimSet" /> qui représente l'émetteur de la stratégie d'autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5af-120">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the authorization policy.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>